public class cs.utils.security.SignUtil extends java.lang.Object
{

    public void <init>()
    {
        cs.utils.security.SignUtil r0;

        r0 := @this: cs.utils.security.SignUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getSignature(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable r3;
        byte[] $r6;
        java.security.MessageDigest $r5;
        java.io.IOException $r8;
        short $s3;
        java.security.GeneralSecurityException $r9;
        byte $b2;
        int i0, $i1;
        java.lang.StringBuilder r4, $r7;
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r7 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6);

     label2:
        $r7 = new java.lang.StringBuilder;

        r4 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

     label3:
        $i1 = lengthof $r6;

        if i0 < $i1 goto label5;

        $r0 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        r3 := @caughtexception;

        $r8 = new java.io.IOException;

        $r9 = (java.security.GeneralSecurityException) r3;

        $r0 = virtualinvoke $r9.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r8;

     label5:
        $b2 = $r6[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label6;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label6:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        i0 = i0 + 1;

        goto label3;

        catch java.security.GeneralSecurityException from label1 to label2 with label4;
    }

    public static java.lang.String getSignature(java.util.Map, android.content.Context) throws java.io.IOException
    {
        android.content.Context $r1;
        java.util.Map r0;
        java.lang.String $r2, $r3, $r4;

        r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: android.content.Context;

        $r2 = staticinvoke <cs.utils.security.SignUtil: java.lang.String transe(java.util.Map)>(r0);

        $r3 = staticinvoke <cs.network.configs.Config: java.lang.String getAppPassword(android.content.Context)>($r1);

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getSignType()>();

        $r2 = staticinvoke <cs.utils.security.SignUtil: java.lang.String getSignature(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return $r2;
    }

    private static java.lang.String getWithKeyValue(java.lang.String, java.lang.Object, java.lang.String)
    {
        java.lang.Object[] r7;
        cs.utils.security.SignUtil$1 $r5;
        java.util.TreeSet r4;
        int $i0, $i1;
        java.lang.String $r0, $r2, $r11;
        boolean z0, $z1;
        java.util.Iterator $r9;
        java.util.List r6;
        java.lang.Object $r1, r8;
        java.lang.StringBuilder r3, $r10;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.String;

        r4 = new java.util.TreeSet;

        $r5 = new cs.utils.security.SignUtil$1;

        specialinvoke $r5.<cs.utils.security.SignUtil$1: void <init>()>();

        specialinvoke r4.<java.util.TreeSet: void <init>(java.util.Comparator)>($r5);

        z0 = 0;

        $z1 = $r1 instanceof java.util.List;

        if $z1 == 0 goto label1;

        z0 = 1;

        r6 = (java.util.List) $r1;

        virtualinvoke r4.<java.util.TreeSet: boolean addAll(java.util.Collection)>(r6);

     label1:
        $z1 = $r1 instanceof java.lang.Object[];

        if $z1 == 0 goto label3;

        z0 = 1;

        r7 = (java.lang.Object[]) $r1;

        $i0 = lengthof r7;

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label4;

     label3:
        if z0 != 0 goto label5;

        r3 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        r3 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        r8 = r7[$i1];

        virtualinvoke r4.<java.util.TreeSet: boolean add(java.lang.Object)>(r8);

        $i1 = $i1 + 1;

        goto label2;

     label5:
        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r4.<java.util.TreeSet: java.util.Iterator iterator()>();

     label6:
        z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if z0 != 0 goto label8;

        $i0 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label7;

        $i0 = virtualinvoke r3.<java.lang.StringBuilder: int length()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>($i0);

     label7:
        $r0 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label8:
        $r1 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = new java.lang.StringBuilder;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r11 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label6;
    }

    public static java.lang.String toMD5(java.lang.String)
    {
        java.lang.Throwable r2;
        byte[] $r4;
        java.security.MessageDigest $r3;
        java.lang.StringBuffer r1, $r5;
        java.security.NoSuchAlgorithmException $r6;
        int i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r5 = new java.lang.StringBuffer;

        r1 = $r5;

     label03:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

     label04:
        i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if i0 < $i1 goto label08;

     label06:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return $r0;

     label08:
        $i1 = $r4[i0];

        if $i1 >= 0 goto label09;

        $i1 = $i1 + 256;

     label09:
        if $i1 >= 16 goto label11;

     label10:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label11:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label12:
        i0 = i0 + 1;

        goto label05;

     label13:
        r2 := @caughtexception;

        $r6 = (java.security.NoSuchAlgorithmException) r2;

        virtualinvoke $r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label13;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label13;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label13;
        catch java.security.NoSuchAlgorithmException from label10 to label12 with label13;
    }

    public static java.lang.String transe(java.util.Map)
    {
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.TreeMap r3;
        java.util.Map r0;
        int $i0, $i1;
        java.lang.StringBuilder r2;
        java.lang.Object $r6;
        java.lang.String r1, r7;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r3 = new java.util.TreeMap;

        specialinvoke r3.<java.util.TreeMap: void <init>(java.util.Map)>(r0);

        r1 = "&";

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r3.<java.util.TreeMap: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label2;

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>($i0);

     label2:
        r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return r1;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r6 = virtualinvoke r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r7);

        r7 = staticinvoke <cs.utils.security.SignUtil: java.lang.String getWithKeyValue(java.lang.String,java.lang.Object,java.lang.String)>(r7, $r6, "&");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label1;
    }
}
