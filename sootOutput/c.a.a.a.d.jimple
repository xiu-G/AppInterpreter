final class c.a.a.a.d extends java.lang.Object implements c.a.a.a.g
{
    final java.util.concurrent.CountDownLatch a;
    final int b;
    final c.a.a.a.b c;

    void <init>(c.a.a.a.b, int)
    {
        java.util.concurrent.CountDownLatch $r2;
        c.a.a.a.b $r1;
        c.a.a.a.d r0;
        int $i0;

        r0 := @this: c.a.a.a.d;

        $r1 := @parameter0: c.a.a.a.b;

        $i0 := @parameter1: int;

        r0.<c.a.a.a.d: c.a.a.a.b c> = $r1;

        r0.<c.a.a.a.d: int b> = $i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CountDownLatch;

        $i0 = r0.<c.a.a.a.d: int b>;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>($i0);

        r0.<c.a.a.a.d: java.util.concurrent.CountDownLatch a> = $r2;

        return;
    }

    public final void a()
    {
        c.a.a.a.g $r4;
        java.util.concurrent.CountDownLatch $r1;
        byte $b1;
        c.a.a.a.b $r2;
        c.a.a.a.d r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        long $l0;

        r0 := @this: c.a.a.a.d;

        $r1 = r0.<c.a.a.a.d: java.util.concurrent.CountDownLatch a>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r1 = r0.<c.a.a.a.d: java.util.concurrent.CountDownLatch a>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.CountDownLatch: long getCount()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = r0.<c.a.a.a.d: c.a.a.a.b c>;

        $r3 = staticinvoke <c.a.a.a.b: java.util.concurrent.atomic.AtomicBoolean a(c.a.a.a.b)>($r2);

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r2 = r0.<c.a.a.a.d: c.a.a.a.b c>;

        $r4 = staticinvoke <c.a.a.a.b: c.a.a.a.g b(c.a.a.a.b)>($r2);

        interfaceinvoke $r4.<c.a.a.a.g: void a()>();

     label1:
        return;
    }

    public final void a(java.lang.Exception)
    {
        c.a.a.a.g $r2;
        c.a.a.a.b $r3;
        c.a.a.a.d r0;
        java.lang.Exception $r1;

        r0 := @this: c.a.a.a.d;

        $r1 := @parameter0: java.lang.Exception;

        $r3 = r0.<c.a.a.a.d: c.a.a.a.b c>;

        $r2 = staticinvoke <c.a.a.a.b: c.a.a.a.g b(c.a.a.a.b)>($r3);

        interfaceinvoke $r2.<c.a.a.a.g: void a(java.lang.Exception)>($r1);

        return;
    }
}
