public class giil.ido.db.DB extends java.lang.Object
{

    public void <init>()
    {
        giil.ido.db.DB r0;

        r0 := @this: giil.ido.db.DB;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean createTable()
    {
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.Exception $r1;
        boolean $z0;

        $z0 = staticinvoke <giil.ido.db.DB: boolean dbConn()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r0 = <giil.ido.G: android.database.sqlite.SQLiteDatabase DB>;

     label02:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbOthers(other_id integer primary key autoincrement, task_ids varchar, gubun integer default 0, workDate varchar, workTime varchar, value varchar)");

     label03:
        $r0 = <giil.ido.G: android.database.sqlite.SQLiteDatabase DB>;

     label04:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbTasks(task_id integer primary key autoincrement, naeyong varchar, startDate varchar, endDate varchar default \'9999-99-99\', completeDate varchar default \'9999-99-99\', state integer default 0, important integer default 2, replay varchar default \'00\', gubun integer default 0, pass varchar default \'\', google varchar )");

     label05:
        $r0 = <giil.ido.G: android.database.sqlite.SQLiteDatabase DB>;

     label06:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbTasks_etc(task_id integer primary key, nfd0 integer default 0, nfd1 integer default 0, nfd2 integer default 0, dfd0 double default 0, dfd1 double default 0, dfd2 double default 0, sfd0 varchar, sfd1 varchar, sfd2 varchar, sfd3 varchar, sfd4 varchar )");

     label07:
        $r0 = <giil.ido.G: android.database.sqlite.SQLiteDatabase DB>;

     label08:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbChk(chk integer default 0 )");

     label09:
        return 1;

     label10:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static void createTableHistory(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <giil.ido.db.DB: boolean dbConnHistory(java.lang.String)>($r0);

        $r1 = <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbTasks(task_id integer primary key, naeyong varchar, startDate varchar, endDate varchar default \'9999-99-99\', completeDate varchar default \'9999-99-99\', state integer default 0, important integer default 2, replay varchar default \'00\', gubun integer default 0, pass varchar default \'\', google varchar )");

        $r1 = <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table IF NOT EXISTS tbTasks_etc(task_id integer primary key, nfd0 integer default 0, nfd1 integer default 0, nfd2 integer default 0, dfd0 double default 0, dfd1 double default 0, dfd2 double default 0, sfd0 varchar, sfd1 varchar, sfd2 varchar, sfd3 varchar, sfd4 varchar )");

        return;
    }

    public static boolean dbConn()
    {
        java.io.File $r2, $r4;
        java.lang.Exception $r6, $r7, $r8, $r9;
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.StringBuilder $r3;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 = "giil";

        $r1 = <giil.ido.G: java.lang.String device>;

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("RVA");

     label02:
        if $z0 != 0 goto label07;

        $r1 = <giil.ido.G: java.lang.String device>;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("SMA");

     label04:
        if $z0 != 0 goto label07;

        $r1 = <giil.ido.G: java.lang.String device>;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("SMS");

     label06:
        if $z0 == 0 goto label08;

     label07:
        r0 = "tw_user_app";

     label08:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

     label09:
        $r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

     label10:
        $r1 = <java.io.File: java.lang.String separator>;

     label11:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

     label12:
        <giil.ido.G: java.io.File appRoot> = $r2;

        $r2 = <giil.ido.G: java.io.File appRoot>;

     label13:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label14:
        if $z0 != 0 goto label16;

        $r2 = <giil.ido.G: java.io.File appRoot>;

     label15:
        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label16:
        $r3 = new java.lang.StringBuilder;

        $r2 = <giil.ido.G: java.io.File appRoot>;

     label17:
        r0 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

     label18:
        r0 = <java.io.File: java.lang.String separator>;

     label19:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ido.db");

        r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        <giil.ido.G: java.lang.String dbfile> = r0;

        r0 = <giil.ido.G: java.lang.String dbfile>;

     label21:
        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r0, null, 0);

     label22:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase DB> = $r5;

     label23:
        return 1;

     label24:
        $r6 := @caughtexception;

        r0 = <giil.ido.G: java.lang.String dbfile>;

     label25:
        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>(r0, null);

     label26:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase DB> = $r5;

        goto label23;

     label27:
        $r7 := @caughtexception;

        <giil.ido.G: java.lang.String dbfile> = "ido";

        r0 = <giil.ido.G: java.lang.String dbfile>;

     label28:
        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r0, null, 0);

     label29:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase DB> = $r5;

        goto label23;

     label30:
        $r8 := @caughtexception;

        r0 = <giil.ido.G: java.lang.String dbfile>;

     label31:
        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>(r0, null);

     label32:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase DB> = $r5;

        goto label23;

     label33:
        $r9 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label27;
        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Exception from label05 to label06 with label27;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Exception from label13 to label14 with label27;
        catch java.lang.Exception from label15 to label16 with label27;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Exception from label19 to label20 with label27;
        catch java.lang.Exception from label21 to label22 with label24;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.Exception from label31 to label32 with label33;
    }

    public static boolean dbConnHistory(java.lang.String)
    {
        java.io.File r3, $r5;
        java.lang.Exception $r7, $r8, $r9, $r10;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r0, r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = "giil";

        $r2 = <giil.ido.G: java.lang.String device>;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("RVA");

     label02:
        if $z0 != 0 goto label07;

        $r2 = <giil.ido.G: java.lang.String device>;

     label03:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SMA");

     label04:
        if $z0 != 0 goto label07;

        $r2 = <giil.ido.G: java.lang.String device>;

     label05:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SMS");

     label06:
        if $z0 == 0 goto label08;

     label07:
        r1 = "tw_user_app";

     label08:
        r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label09:
        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

     label10:
        $r2 = <java.io.File: java.lang.String separator>;

     label11:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label12:
        if $z0 != 0 goto label14;

     label13:
        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label14:
        r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label15:
        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

     label16:
        $r2 = <java.io.File: java.lang.String separator>;

     label17:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label18:
        r1 = <java.io.File: java.lang.String separator>;

     label19:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ido");

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label20:
        if $z0 != 0 goto label22;

     label21:
        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

     label22:
        $r4 = new java.lang.StringBuilder;

     label23:
        r1 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

     label24:
        r1 = <java.io.File: java.lang.String separator>;

     label25:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".db");

        r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label26:
        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, null, 0);

     label27:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB> = $r6;

     label28:
        return 1;

     label29:
        $r7 := @caughtexception;

     label30:
        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>(r1, null);

     label31:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB> = $r6;

        goto label28;

     label32:
        $r8 := @caughtexception;

     label33:
        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r0, null, 0);

     label34:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB> = $r6;

        goto label28;

     label35:
        $r9 := @caughtexception;

     label36:
        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r0, null);

     label37:
        <giil.ido.G: android.database.sqlite.SQLiteDatabase HDB> = $r6;

        goto label28;

     label38:
        $r10 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label32;
        catch java.lang.Exception from label03 to label04 with label32;
        catch java.lang.Exception from label05 to label06 with label32;
        catch java.lang.Exception from label09 to label10 with label32;
        catch java.lang.Exception from label11 to label12 with label32;
        catch java.lang.Exception from label13 to label14 with label32;
        catch java.lang.Exception from label15 to label16 with label32;
        catch java.lang.Exception from label17 to label18 with label32;
        catch java.lang.Exception from label19 to label20 with label32;
        catch java.lang.Exception from label21 to label22 with label32;
        catch java.lang.Exception from label23 to label24 with label32;
        catch java.lang.Exception from label25 to label26 with label32;
        catch java.lang.Exception from label26 to label27 with label29;
        catch java.lang.Exception from label30 to label31 with label32;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.Exception from label36 to label37 with label38;
    }
}
