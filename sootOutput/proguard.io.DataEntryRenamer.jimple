public class proguard.io.DataEntryRenamer extends java.lang.Object implements proguard.io.DataEntryReader
{
    private final proguard.io.DataEntryReader missingDataEntryReader;
    private final java.util.Map nameMap;
    private final proguard.io.DataEntryReader renamedDataEntryReader;

    public void <init>(java.util.Map, proguard.io.DataEntryReader)
    {
        proguard.io.DataEntryRenamer r0;
        proguard.io.DataEntryReader $r2;
        java.util.Map $r1;

        r0 := @this: proguard.io.DataEntryRenamer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: proguard.io.DataEntryReader;

        specialinvoke r0.<proguard.io.DataEntryRenamer: void <init>(java.util.Map,proguard.io.DataEntryReader,proguard.io.DataEntryReader)>($r1, $r2, null);

        return;
    }

    public void <init>(java.util.Map, proguard.io.DataEntryReader, proguard.io.DataEntryReader)
    {
        java.util.Map $r1;
        proguard.io.DataEntryRenamer r0;
        proguard.io.DataEntryReader $r2, $r3;

        r0 := @this: proguard.io.DataEntryRenamer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: proguard.io.DataEntryReader;

        $r3 := @parameter2: proguard.io.DataEntryReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.io.DataEntryRenamer: java.util.Map nameMap> = $r1;

        r0.<proguard.io.DataEntryRenamer: proguard.io.DataEntryReader renamedDataEntryReader> = $r2;

        r0.<proguard.io.DataEntryRenamer: proguard.io.DataEntryReader missingDataEntryReader> = $r3;

        return;
    }

    public void read(proguard.io.DataEntry) throws java.io.IOException
    {
        proguard.io.DataEntryRenamer r0;
        proguard.io.RenamedDataEntry $r8;
        java.lang.StringBuffer $r4;
        java.util.Map $r5;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r2, $r3;
        proguard.io.DataEntry $r1;
        proguard.io.DataEntryReader $r7;
        boolean $z0;

        r0 := @this: proguard.io.DataEntryRenamer;

        $r1 := @parameter0: proguard.io.DataEntry;

        $r2 = interfaceinvoke $r1.<proguard.io.DataEntry: java.lang.String getName()>();

        $r3 = $r2;

        $z0 = interfaceinvoke $r1.<proguard.io.DataEntry: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r5 = r0.<proguard.io.DataEntryRenamer: java.util.Map nameMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r2 = (java.lang.String) $r6;

        if $r2 == null goto label3;

        $z0 = interfaceinvoke $r1.<proguard.io.DataEntry: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r7 = r0.<proguard.io.DataEntryRenamer: proguard.io.DataEntryReader renamedDataEntryReader>;

        $r8 = new proguard.io.RenamedDataEntry;

        specialinvoke $r8.<proguard.io.RenamedDataEntry: void <init>(proguard.io.DataEntry,java.lang.String)>($r1, $r2);

        interfaceinvoke $r7.<proguard.io.DataEntryReader: void read(proguard.io.DataEntry)>($r8);

        return;

     label3:
        $r7 = r0.<proguard.io.DataEntryRenamer: proguard.io.DataEntryReader missingDataEntryReader>;

        if $r7 == null goto label4;

        $r7 = r0.<proguard.io.DataEntryRenamer: proguard.io.DataEntryReader missingDataEntryReader>;

        interfaceinvoke $r7.<proguard.io.DataEntryReader: void read(proguard.io.DataEntry)>($r1);

     label4:
        return;
    }
}
