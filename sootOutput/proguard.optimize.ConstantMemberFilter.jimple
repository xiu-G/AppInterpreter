public class proguard.optimize.ConstantMemberFilter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private final proguard.classfile.visitor.MemberVisitor constantMemberVisitor;

    public void <init>(proguard.classfile.visitor.MemberVisitor)
    {
        proguard.classfile.visitor.MemberVisitor $r1;
        proguard.optimize.ConstantMemberFilter r0;

        r0 := @this: proguard.optimize.ConstantMemberFilter;

        $r1 := @parameter0: proguard.classfile.visitor.MemberVisitor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.optimize.ConstantMemberFilter: proguard.classfile.visitor.MemberVisitor constantMemberVisitor> = $r1;

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.ConstantMemberFilter r0;
        proguard.classfile.ProgramClass $r1;
        proguard.evaluation.value.Value $r3;
        boolean $z0;

        r0 := @this: proguard.optimize.ConstantMemberFilter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = staticinvoke <proguard.optimize.evaluation.StoringInvocationUnit: proguard.evaluation.value.Value getFieldValue(proguard.classfile.Field)>($r2);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<proguard.evaluation.value.Value: boolean isParticular()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<proguard.optimize.ConstantMemberFilter: proguard.classfile.visitor.MemberVisitor constantMemberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField)>($r1, $r2);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.ProgramMethod $r2;
        proguard.classfile.visitor.MemberVisitor $r4;
        proguard.optimize.ConstantMemberFilter r0;
        proguard.classfile.ProgramClass $r1;
        proguard.evaluation.value.Value $r3;
        boolean $z0;

        r0 := @this: proguard.optimize.ConstantMemberFilter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = staticinvoke <proguard.optimize.evaluation.StoringInvocationUnit: proguard.evaluation.value.Value getMethodReturnValue(proguard.classfile.Method)>($r2);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<proguard.evaluation.value.Value: boolean isParticular()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<proguard.optimize.ConstantMemberFilter: proguard.classfile.visitor.MemberVisitor constantMemberVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.MemberVisitor: void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod)>($r1, $r2);

     label1:
        return;
    }
}
