public class cn.hi321.browser.camera.CaptureActivity extends android.app.Activity implements android.view.SurfaceHolder$Callback
{
    private static final float BEEP_VOLUME;
    private static final long VIBRATE_DURATION;
    private final android.media.MediaPlayer$OnCompletionListener beepListener;
    private java.lang.String characterSet;
    private java.util.Vector decodeFormats;
    private cn.hi321.browser.decoding.CaptureActivityHandler handler;
    private boolean hasSurface;
    private cn.hi321.browser.decoding.InactivityTimer inactivityTimer;
    private android.widget.ImageView mGoHome;
    private android.widget.TextView mTitle;
    private android.media.MediaPlayer mediaPlayer;
    private boolean playBeep;
    private boolean vibrate;
    private cn.hi321.browser.view.ViewfinderView viewfinderView;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    public void <init>()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.camera.CaptureActivity$1 $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = new cn.hi321.browser.camera.CaptureActivity$1;

        specialinvoke $r1.<cn.hi321.browser.camera.CaptureActivity$1: void <init>(cn.hi321.browser.camera.CaptureActivity)>(r0);

        r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer$OnCompletionListener beepListener> = $r1;

        return;
    }

    private void initBeepSound()
    {
        java.lang.Throwable r1;
        android.content.res.AssetFileDescriptor $r5;
        android.media.MediaPlayer $r2;
        long $l0, $l1;
        java.io.FileDescriptor $r6;
        cn.hi321.browser.camera.CaptureActivity r0;
        android.media.MediaPlayer$OnCompletionListener $r3;
        boolean $z0;
        android.content.res.Resources $r4;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $z0 = r0.<cn.hi321.browser.camera.CaptureActivity: boolean playBeep>;

        if $z0 == 0 goto label8;

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

        if $r2 != null goto label8;

        virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void setVolumeControlStream(int)>(3);

        $r2 = new android.media.MediaPlayer;

        specialinvoke $r2.<android.media.MediaPlayer: void <init>()>();

        r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer> = $r2;

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void setAudioStreamType(int)>(3);

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

        $r3 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer$OnCompletionListener beepListener>;

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>($r3);

        $r4 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(2131034113);

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

     label1:
        $r6 = virtualinvoke $r5.<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $l0 = virtualinvoke $r5.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l1 = virtualinvoke $r5.<android.content.res.AssetFileDescriptor: long getLength()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r6, $l0, $l1);

        virtualinvoke $r5.<android.content.res.AssetFileDescriptor: void close()>();

     label2:
        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

     label3:
        virtualinvoke $r2.<android.media.MediaPlayer: void setVolume(float,float)>(0.1F, 0.1F);

     label4:
        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

     label5:
        virtualinvoke $r2.<android.media.MediaPlayer: void prepare()>();

     label6:
        return;

     label7:
        r1 := @caughtexception;

        r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer> = null;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private void initCamera(android.view.SurfaceHolder)
    {
        java.lang.Throwable r3;
        java.lang.RuntimeException r2;
        cn.hi321.browser.decoding.CaptureActivityHandler $r7;
        java.util.Vector $r4;
        cn.hi321.browser.camera.CaptureActivity r0;
        java.lang.String $r5;
        android.view.SurfaceHolder $r1;
        cn.hi321.browser.camera.CameraManager $r6;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: android.view.SurfaceHolder;

     label1:
        $r6 = staticinvoke <cn.hi321.browser.camera.CameraManager: cn.hi321.browser.camera.CameraManager get()>();

        virtualinvoke $r6.<cn.hi321.browser.camera.CameraManager: void openDriver(android.view.SurfaceHolder)>($r1);

     label2:
        $r7 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler>;

        if $r7 != null goto label5;

        $r7 = new cn.hi321.browser.decoding.CaptureActivityHandler;

        $r4 = r0.<cn.hi321.browser.camera.CaptureActivity: java.util.Vector decodeFormats>;

        $r5 = r0.<cn.hi321.browser.camera.CaptureActivity: java.lang.String characterSet>;

        specialinvoke $r7.<cn.hi321.browser.decoding.CaptureActivityHandler: void <init>(cn.hi321.browser.camera.CaptureActivity,java.util.Vector,java.lang.String)>(r0, $r4, $r5);

        r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler> = $r7;

        return;

     label3:
        r3 := @caughtexception;

        return;

     label4:
        r2 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    private void initControl()
    {
        android.widget.TextView $r3;
        cn.hi321.browser.camera.CaptureActivity$2 $r5;
        cn.hi321.browser.view.ViewfinderView $r2;
        cn.hi321.browser.camera.CaptureActivity r0;
        android.widget.ImageView $r4;
        android.view.View $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.view.View findViewById(int)>(2131296461);

        $r2 = (cn.hi321.browser.view.ViewfinderView) $r1;

        r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.view.ViewfinderView viewfinderView> = $r2;

        $r1 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.view.View findViewById(int)>(2131296330);

        $r3 = (android.widget.TextView) $r1;

        r0.<cn.hi321.browser.camera.CaptureActivity: android.widget.TextView mTitle> = $r3;

        $r3 = r0.<cn.hi321.browser.camera.CaptureActivity: android.widget.TextView mTitle>;

        virtualinvoke $r3.<android.widget.TextView: void setText(int)>(2131099736);

        $r1 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.view.View findViewById(int)>(2131296329);

        $r4 = (android.widget.ImageView) $r1;

        r0.<cn.hi321.browser.camera.CaptureActivity: android.widget.ImageView mGoHome> = $r4;

        $r4 = r0.<cn.hi321.browser.camera.CaptureActivity: android.widget.ImageView mGoHome>;

        $r5 = new cn.hi321.browser.camera.CaptureActivity$2;

        specialinvoke $r5.<cn.hi321.browser.camera.CaptureActivity$2: void <init>(cn.hi321.browser.camera.CaptureActivity)>(r0);

        virtualinvoke $r4.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>($r5);

        return;
    }

    private void playBeepSoundAndVibrate()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        java.lang.Object $r1;
        android.media.MediaPlayer $r2;
        android.os.Vibrator r3;
        boolean $z0;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $z0 = r0.<cn.hi321.browser.camera.CaptureActivity: boolean playBeep>;

        if $z0 == 0 goto label1;

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: android.media.MediaPlayer mediaPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void start()>();

     label1:
        $z0 = r0.<cn.hi321.browser.camera.CaptureActivity: boolean vibrate>;

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        r3 = (android.os.Vibrator) $r1;

        virtualinvoke r3.<android.os.Vibrator: void vibrate(long)>(200L);

     label2:
        return;
    }

    public void drawViewfinder()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.view.ViewfinderView $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.view.ViewfinderView viewfinderView>;

        virtualinvoke $r1.<cn.hi321.browser.view.ViewfinderView: void drawViewfinder()>();

        return;
    }

    public android.os.Handler getHandler()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.decoding.CaptureActivityHandler r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        r1 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler>;

        return r1;
    }

    public cn.hi321.browser.view.ViewfinderView getViewfinderView()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.view.ViewfinderView r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        r1 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.view.ViewfinderView viewfinderView>;

        return r1;
    }

    public void handleDecode(com.google.zxing.Result, android.graphics.Bitmap)
    {
        com.google.zxing.Result $r1;
        android.os.Bundle r3, $r8;
        android.content.Intent r4, $r7;
        android.graphics.Bitmap $r2;
        cn.hi321.browser.camera.CaptureActivity r0;
        java.lang.String $r5;
        cn.hi321.browser.decoding.InactivityTimer $r6;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: com.google.zxing.Result;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r6 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.InactivityTimer inactivityTimer>;

        virtualinvoke $r6.<cn.hi321.browser.decoding.InactivityTimer: void onActivity()>();

        specialinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void playBeepSoundAndVibrate()>();

        $r5 = virtualinvoke $r1.<com.google.zxing.Result: java.lang.String getText()>();

        $r7 = new android.content.Intent;

        r4 = $r7;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        $r8 = new android.os.Bundle;

        r3 = $r8;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("result", $r5);

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r3);

        virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void setResult(int,android.content.Intent)>(-1, r4);

        virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void finish()>();

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.app.Application $r2;
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.decoding.InactivityTimer $r3;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: boolean requestWindowFeature(int)>(1);

        virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void setContentView(int)>(2130903078);

        $r2 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.app.Application getApplication()>();

        staticinvoke <cn.hi321.browser.camera.CameraManager: void init(android.content.Context)>($r2);

        specialinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void initControl()>();

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean hasSurface> = 0;

        $r3 = new cn.hi321.browser.decoding.InactivityTimer;

        specialinvoke $r3.<cn.hi321.browser.decoding.InactivityTimer: void <init>(android.app.Activity)>(r0);

        r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.InactivityTimer inactivityTimer> = $r3;

        return;
    }

    public void onDestroy()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.decoding.InactivityTimer $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.InactivityTimer inactivityTimer>;

        virtualinvoke $r1.<cn.hi321.browser.decoding.InactivityTimer: void shutdown()>();

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    protected void onPause()
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        cn.hi321.browser.camera.CameraManager $r1;
        cn.hi321.browser.decoding.CaptureActivityHandler $r2;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler>;

        virtualinvoke $r2.<cn.hi321.browser.decoding.CaptureActivityHandler: void quitSynchronously()>();

        r0.<cn.hi321.browser.camera.CaptureActivity: cn.hi321.browser.decoding.CaptureActivityHandler handler> = null;

     label1:
        $r1 = staticinvoke <cn.hi321.browser.camera.CameraManager: cn.hi321.browser.camera.CameraManager get()>();

        virtualinvoke $r1.<cn.hi321.browser.camera.CameraManager: void closeDriver()>();

        staticinvoke <com.umeng.analytics.MobclickAgent: void onPause(android.content.Context)>(r0);

        return;
    }

    protected void onResume()
    {
        android.view.SurfaceView r2;
        android.media.AudioManager r5;
        cn.hi321.browser.camera.CaptureActivity r0;
        int $i0;
        android.view.View $r1;
        java.lang.Object $r4;
        android.view.SurfaceHolder $r3;
        boolean $z0;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r1 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: android.view.View findViewById(int)>(2131296460);

        r2 = (android.view.SurfaceView) $r1;

        $r3 = virtualinvoke r2.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $z0 = r0.<cn.hi321.browser.camera.CaptureActivity: boolean hasSurface>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void initCamera(android.view.SurfaceHolder)>($r3);

     label1:
        r0.<cn.hi321.browser.camera.CaptureActivity: java.util.Vector decodeFormats> = null;

        r0.<cn.hi321.browser.camera.CaptureActivity: java.lang.String characterSet> = null;

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean playBeep> = 1;

        $r4 = virtualinvoke r0.<cn.hi321.browser.camera.CaptureActivity: java.lang.Object getSystemService(java.lang.String)>("audio");

        r5 = (android.media.AudioManager) $r4;

        $i0 = virtualinvoke r5.<android.media.AudioManager: int getRingerMode()>();

        if $i0 == 2 goto label2;

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean playBeep> = 0;

     label2:
        specialinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void initBeepSound()>();

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean vibrate> = 1;

        return;

     label3:
        interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);

        interfaceinvoke $r3.<android.view.SurfaceHolder: void setType(int)>(3);

        goto label1;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        int $i0, $i1, $i2;
        android.view.SurfaceHolder $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        android.view.SurfaceHolder $r1;
        boolean $z0;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<cn.hi321.browser.camera.CaptureActivity: boolean hasSurface>;

        if $z0 != 0 goto label1;

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean hasSurface> = 1;

        specialinvoke r0.<cn.hi321.browser.camera.CaptureActivity: void initCamera(android.view.SurfaceHolder)>($r1);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        cn.hi321.browser.camera.CaptureActivity r0;
        android.view.SurfaceHolder $r1;

        r0 := @this: cn.hi321.browser.camera.CaptureActivity;

        $r1 := @parameter0: android.view.SurfaceHolder;

        r0.<cn.hi321.browser.camera.CaptureActivity: boolean hasSurface> = 0;

        return;
    }

    public android.content.Intent getIntent()
    {
        cn.hi321.browser.camera.CaptureActivity this;
        android.content.Intent $r0;

        this := @this: cn.hi321.browser.camera.CaptureActivity;

        $r0 = this.<cn.hi321.browser.camera.CaptureActivity: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        cn.hi321.browser.camera.CaptureActivity this;
        android.content.Intent parameter0;

        this := @this: cn.hi321.browser.camera.CaptureActivity;

        parameter0 := @parameter0: android.content.Intent;

        this.<cn.hi321.browser.camera.CaptureActivity: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        cn.hi321.browser.camera.CaptureActivity this;
        int parameter0;
        android.content.Intent parameter1;

        this := @this: cn.hi321.browser.camera.CaptureActivity;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<cn.hi321.browser.camera.CaptureActivity: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }

    public static void <clinit>()
    {
        <cn.hi321.browser.camera.CaptureActivity: long VIBRATE_DURATION> = 200L;

        <cn.hi321.browser.camera.CaptureActivity: float BEEP_VOLUME> = 0.1F;

        return;
    }
}
