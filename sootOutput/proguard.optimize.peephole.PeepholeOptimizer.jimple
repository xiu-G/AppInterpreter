public class proguard.optimize.peephole.PeepholeOptimizer extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private final proguard.optimize.peephole.BranchTargetFinder branchTargetFinder;
    private final proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor;
    private final proguard.classfile.instruction.visitor.InstructionVisitor instructionVisitor;

    public void <init>(proguard.classfile.editor.CodeAttributeEditor, proguard.classfile.instruction.visitor.InstructionVisitor)
    {
        proguard.classfile.editor.CodeAttributeEditor $r1;
        proguard.optimize.peephole.PeepholeOptimizer r0;
        proguard.classfile.instruction.visitor.InstructionVisitor $r2;

        r0 := @this: proguard.optimize.peephole.PeepholeOptimizer;

        $r1 := @parameter0: proguard.classfile.editor.CodeAttributeEditor;

        $r2 := @parameter1: proguard.classfile.instruction.visitor.InstructionVisitor;

        specialinvoke r0.<proguard.optimize.peephole.PeepholeOptimizer: void <init>(proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor)>(null, $r1, $r2);

        return;
    }

    public void <init>(proguard.optimize.peephole.BranchTargetFinder, proguard.classfile.editor.CodeAttributeEditor, proguard.classfile.instruction.visitor.InstructionVisitor)
    {
        proguard.optimize.peephole.PeepholeOptimizer r0;
        proguard.classfile.editor.CodeAttributeEditor $r2;
        proguard.optimize.peephole.BranchTargetFinder $r1;
        proguard.classfile.instruction.visitor.InstructionVisitor $r3;

        r0 := @this: proguard.optimize.peephole.PeepholeOptimizer;

        $r1 := @parameter0: proguard.optimize.peephole.BranchTargetFinder;

        $r2 := @parameter1: proguard.classfile.editor.CodeAttributeEditor;

        $r3 := @parameter2: proguard.classfile.instruction.visitor.InstructionVisitor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.optimize.peephole.BranchTargetFinder branchTargetFinder> = $r1;

        r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor> = $r2;

        r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.classfile.instruction.visitor.InstructionVisitor instructionVisitor> = $r3;

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.optimize.peephole.PeepholeOptimizer r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.optimize.peephole.PeepholeOptimizer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.editor.CodeAttributeEditor $r5;
        proguard.optimize.peephole.BranchTargetFinder $r4;
        proguard.classfile.instruction.visitor.InstructionVisitor $r6;
        proguard.optimize.peephole.PeepholeOptimizer r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.optimize.peephole.PeepholeOptimizer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 = r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.optimize.peephole.BranchTargetFinder branchTargetFinder>;

        if $r4 == null goto label1;

        $r4 = r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.optimize.peephole.BranchTargetFinder branchTargetFinder>;

        virtualinvoke $r4.<proguard.optimize.peephole.BranchTargetFinder: void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

     label1:
        $r5 = r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor>;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength>;

        virtualinvoke $r5.<proguard.classfile.editor.CodeAttributeEditor: void reset(int)>($i0);

        $r6 = r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.classfile.instruction.visitor.InstructionVisitor instructionVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.CodeAttribute: void instructionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.instruction.visitor.InstructionVisitor)>($r1, $r2, $r6);

        $r5 = r0.<proguard.optimize.peephole.PeepholeOptimizer: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor>;

        virtualinvoke $r5.<proguard.classfile.editor.CodeAttributeEditor: void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

        return;
    }
}
