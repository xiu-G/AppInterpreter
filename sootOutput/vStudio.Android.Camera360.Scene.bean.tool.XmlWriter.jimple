public class vStudio.Android.Camera360.Scene.bean.tool.XmlWriter extends java.lang.Object
{

    public void <init>()
    {
        vStudio.Android.Camera360.Scene.bean.tool.XmlWriter r0;

        r0 := @this: vStudio.Android.Camera360.Scene.bean.tool.XmlWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String createSortInfoXmlString(java.lang.String)
    {
        java.lang.Throwable $r8, $r9, $r10;
        java.io.StringWriter r1;
        org.xmlpull.v1.XmlSerializer $r5, $r7;
        java.util.Locale $r2, $r3;
        java.lang.Boolean $r6;
        java.lang.String $r0, r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = <java.util.Locale: java.util.Locale CHINA>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        $r3 = <java.util.Locale: java.util.Locale CHINESE>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        $r3 = <java.util.Locale: java.util.Locale PRC>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        $r3 = <java.util.Locale: java.util.Locale SIMPLIFIED_CHINESE>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

     label01:
        r4 = "zh";

     label02:
        $r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

        r1 = new java.io.StringWriter;

        specialinvoke r1.<java.io.StringWriter: void <init>()>();

     label03:
        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r1);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("utf-8", $r6);

        $r7 = interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "sort-name");

        $r7 = interfaceinvoke $r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", r4);

        $r7 = interfaceinvoke $r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r0);

        $r7 = interfaceinvoke $r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", r4);

        interfaceinvoke $r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "sort-name");

        interfaceinvoke $r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label04:
        $r0 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        return $r0;

     label05:
        $r3 = <java.util.Locale: java.util.Locale TAIWAN>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label06;

        $r3 = <java.util.Locale: java.util.Locale TRADITIONAL_CHINESE>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label07;

     label06:
        r4 = "zh-tw";

        goto label02;

     label07:
        $r3 = <java.util.Locale: java.util.Locale KOREA>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label08;

        $r3 = <java.util.Locale: java.util.Locale KOREAN>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label09;

     label08:
        r4 = "ko";

        goto label02;

     label09:
        $r3 = <java.util.Locale: java.util.Locale GERMAN>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label10;

        $r3 = <java.util.Locale: java.util.Locale GERMANY>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label11;

     label10:
        r4 = "de";

        goto label02;

     label11:
        $r3 = <java.util.Locale: java.util.Locale FRANCE>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label12;

        $r3 = <java.util.Locale: java.util.Locale FRENCH>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label13;

     label12:
        r4 = "fr";

        goto label02;

     label13:
        $r3 = <java.util.Locale: java.util.Locale JAPAN>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label14;

        $r3 = <java.util.Locale: java.util.Locale JAPANESE>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label15;

     label14:
        r4 = "ja";

        goto label02;

     label15:
        $r3 = <java.util.Locale: java.util.Locale ITALIAN>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label16;

        $r3 = <java.util.Locale: java.util.Locale ITALY>;

        $z0 = virtualinvoke $r2.<java.util.Locale: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label17;

     label16:
        r4 = "it";

        goto label02;

     label17:
        r4 = "en";

        goto label02;

     label18:
        $r8 := @caughtexception;

        goto label04;

     label19:
        $r9 := @caughtexception;

        goto label04;

     label20:
        $r10 := @caughtexception;

        goto label04;

        catch java.lang.IllegalArgumentException from label03 to label04 with label20;
        catch java.lang.IllegalStateException from label03 to label04 with label19;
        catch java.io.IOException from label03 to label04 with label18;
    }

    public static void writeSortInfo(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r5, $r6;
        java.io.FileOutputStream r3;
        java.io.OutputStreamWriter r4;
        java.lang.String $r0, $r1;
        java.io.File r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r1 = staticinvoke <vStudio.Android.Camera360.Scene.bean.tool.XmlWriter: java.lang.String createSortInfoXmlString(java.lang.String)>($r1);

        r2 = new java.io.File;

     label1:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r0);

     label2:
        r3 = new java.io.FileOutputStream;

     label3:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

     label4:
        r4 = new java.io.OutputStreamWriter;

     label5:
        specialinvoke r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r3);

        virtualinvoke r4.<java.io.OutputStreamWriter: void write(java.lang.String)>($r1);

        virtualinvoke r4.<java.io.OutputStreamWriter: void close()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label6:
        return;

     label7:
        $r5 := @caughtexception;

        return;

     label8:
        $r6 := @caughtexception;

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label8;
        catch java.io.FileNotFoundException from label3 to label4 with label8;
        catch java.io.FileNotFoundException from label5 to label6 with label8;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
