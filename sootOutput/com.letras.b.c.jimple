public final class com.letras.b.c extends android.database.sqlite.SQLiteOpenHelper
{
    private static java.lang.String b;
    private android.database.sqlite.SQLiteDatabase a;
    private java.lang.String[] c;
    private java.lang.String d;

    static void <clinit>()
    {
        <com.letras.b.c: java.lang.String b> = "bbdd.db";

        return;
    }

    public void <init>(android.content.Context)
    {
        java.lang.Throwable $r10;
        android.content.Context $r1;
        byte[] $r2;
        java.io.FileOutputStream $r6, $r12;
        java.io.IOException $r13;
        java.io.File $r8;
        android.database.sqlite.SQLiteDatabase $r9;
        com.letras.b.c r0;
        android.content.res.AssetManager $r3;
        int $i0;
        java.lang.StringBuilder $r7, $r11;
        java.lang.String $r4;
        java.io.InputStream $r5;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "bbdd", null, 1);

        $r2 = newarray (byte)[1024];

     label01:
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r4 = <com.letras.b.c: java.lang.String b>;

     label03:
        $r5 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r4);

     label04:
        $r12 = new java.io.FileOutputStream;

        $r6 = $r12;

        $r11 = new java.lang.StringBuilder;

        $r7 = $r11;

     label05:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label06:
        $r4 = <com.letras.b.c: java.lang.String b>;

     label07:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.lang.String)>($r4);

     label08:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r2);

     label09:
        if $i0 > 0 goto label12;

     label10:
        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        virtualinvoke $r6.<java.io.OutputStream: void flush()>();

        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r4 = <com.letras.b.c: java.lang.String b>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r9 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r4, null, 16);

        r0.<com.letras.b.c: android.database.sqlite.SQLiteDatabase a> = $r9;

        return;

     label12:
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label13:
        goto label08;

     label14:
        $r10 := @caughtexception;

        $r13 = (java.io.IOException) $r10;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label11;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        java.lang.String $r2;
        com.letras.b.c r0;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.letras.b.c: void <init>(android.content.Context)>($r1);

        r0.<com.letras.b.c: java.lang.String d> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String[])
    {
        android.content.Context $r1;
        java.lang.String[] $r2;
        com.letras.b.c r0;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "bbdd", null, 1);

        r0.<com.letras.b.c: java.lang.String[] c> = $r2;

        return;
    }

    public final void a()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.letras.b.c r0;

        r0 := @this: com.letras.b.c;

        $r1 = r0.<com.letras.b.c: android.database.sqlite.SQLiteDatabase a>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;
    }

    public final boolean a(com.letras.b.e, java.lang.String)
    {
        com.letras.b.e $r1;
        java.lang.String[] $r3;
        android.database.sqlite.SQLiteDatabase $r6;
        com.letras.b.c r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;
        android.database.Cursor $r7;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: com.letras.b.e;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("FIXED_GAME");

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r1.<com.letras.b.e: java.lang.String k()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", ".");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%", ".*");

        virtualinvoke $r1.<com.letras.b.e: void a(java.lang.String)>($r2);

        $i0 = 0;

        $z0 = 0;

        $z1 = 0;

     label1:
        if $z1 != 0 goto label9;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $i1 = lengthof $r3;

        if $i0 < $i1 goto label2;

        return $z0;

     label2:
        $r2 = virtualinvoke $r1.<com.letras.b.e: java.lang.String k()>();

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r4 = $r3[$i0];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label3;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $r4 = virtualinvoke $r1.<com.letras.b.e: java.lang.String k()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>($r4);

        if $z1 == 0 goto label3;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("WORD_FOUND");

        if $z1 != 0 goto label3;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r1.<com.letras.b.e: int i()>();

        if $i1 < $i2 goto label3;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r1.<com.letras.b.e: int j()>();

        if $i1 > $i2 goto label3;

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        virtualinvoke $r1.<com.letras.b.e: void a(java.lang.String)>($r2);

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        virtualinvoke $r1.<com.letras.b.e: void g(int)>($i1);

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r2 = $r3[$i0];

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        virtualinvoke $r1.<com.letras.b.e: void h(int)>($i1);

        $r3 = r0.<com.letras.b.c: java.lang.String[] c>;

        $r3[$i0] = "WORD_FOUND";

        $z0 = 1;

        $z1 = 1;

        goto label1;

     label3:
        $i0 = $i0 + 1;

        $z1 = 0;

        goto label1;

     label4:
        $r4 = r0.<com.letras.b.c: java.lang.String d>;

        if $r4 == null goto label7;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(" AND CATEGORY LIKE \'");

        $r4 = r0.<com.letras.b.c: java.lang.String d>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT WORD FROM ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE WORD LIKE \'");

        $r2 = virtualinvoke $r1.<com.letras.b.e: java.lang.String k()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' AND LENGTH(WORD) BETWEEN ");

        $i0 = virtualinvoke $r1.<com.letras.b.e: int i()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $i0 = virtualinvoke $r1.<com.letras.b.e: int j()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY RANDOM() LIMIT 1;");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<com.letras.b.c: android.database.sqlite.SQLiteDatabase a>;

        $r7 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r2, null);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label8;

        interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        $r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke $r1.<com.letras.b.e: void a(java.lang.String)>($r2);

        $r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        virtualinvoke $r1.<com.letras.b.e: void g(int)>($i0);

        $r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        virtualinvoke $r1.<com.letras.b.e: void h(int)>($i0);

        $z0 = 1;

     label6:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        return $z0;

     label7:
        $r4 = " AND CATEGORY IS NULL";

        goto label5;

     label8:
        $z0 = 0;

        goto label6;

     label9:
        return $z0;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.letras.b.c r0;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        return;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.letras.b.c r0;
        int $i0, $i1;

        r0 := @this: com.letras.b.c;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        return;
    }
}
