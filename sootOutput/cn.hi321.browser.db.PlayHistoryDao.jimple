public class cn.hi321.browser.db.PlayHistoryDao extends java.lang.Object
{
    private static cn.hi321.browser.db.SQLiteHelper helper;
    private static cn.hi321.browser.db.PlayHistoryDao mInstance;
    private android.database.sqlite.SQLiteDatabase findByHashidDb;
    private android.database.sqlite.SQLiteDatabase insertDb;
    private android.database.sqlite.SQLiteDatabase mUpdateByHashidDb;

    static void <clinit>()
    {
        <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.PlayHistoryDao mInstance> = null;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.hi321.browser.db.SQLiteHelper $r2;
        cn.hi321.browser.db.PlayHistoryDao r0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb> = null;

        r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb> = null;

        r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb> = null;

        $r2 = staticinvoke <cn.hi321.browser.db.SQLiteHelper: cn.hi321.browser.db.SQLiteHelper getInstance(android.content.Context)>($r1);

        <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper> = $r2;

        return;
    }

    public static cn.hi321.browser.db.PlayHistoryDao getInstance(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        cn.hi321.browser.db.PlayHistoryDao $r1;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcn/hi321/browser/db/PlayHistoryDao;";

     label1:
        $r1 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.PlayHistoryDao mInstance>;

        if $r1 != null goto label2;

        $r1 = new cn.hi321.browser.db.PlayHistoryDao;

        specialinvoke $r1.<cn.hi321.browser.db.PlayHistoryDao: void <init>(android.content.Context)>($r0);

        <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.PlayHistoryDao mInstance> = $r1;

     label2:
        $r1 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.PlayHistoryDao mInstance>;

     label3:
        exitmonitor class "Lcn/hi321/browser/db/PlayHistoryDao;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcn/hi321/browser/db/PlayHistoryDao;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public void autoDelete(int)
    {
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        cn.hi321.browser.model.PlayHistoryInfo r3;
        java.lang.String $r4;
        cn.hi321.browser.db.PlayHistoryDao r0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<cn.hi321.browser.db.PlayHistoryDao: int findTota()>();

        if $i1 < $i0 goto label3;

        $r1 = virtualinvoke r0.<cn.hi321.browser.db.PlayHistoryDao: java.util.List findByOrder(java.lang.String)>("desc");

     label1:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

        return;

     label2:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (cn.hi321.browser.model.PlayHistoryInfo) $r2;

        $r4 = virtualinvoke r3.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMid()>();

        virtualinvoke r0.<cn.hi321.browser.db.PlayHistoryDao: void delete(java.lang.String)>($r4);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void closeDb()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cn.hi321.browser.db.PlayHistoryDao r0;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb>;

        if $r1 == null goto label1;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase mUpdateByHashidDb>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb>;

        if $r1 == null goto label2;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase findByHashidDb>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label2:
        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb>;

        if $r1 == null goto label3;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label3;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<cn.hi321.browser.db.PlayHistoryDao: android.database.sqlite.SQLiteDatabase insertDb>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label3:
        return;
    }

    public void delete(java.lang.String)
    {
        java.lang.Throwable $r9, $r10;
        cn.hi321.browser.db.SQLiteHelper $r6;
        java.lang.Object[] $r8;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r2;
        android.database.sqlite.SQLiteDatabase r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

        r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("deleteMid=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void i(java.lang.String,java.lang.String)>("PlayHistoryDao  delete()", $r5);

     label02:
        $r6 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label03:
        $r7 = virtualinvoke $r6.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label04:
        r3 = $r7;

        $r8 = newarray (java.lang.Object)[1];

     label05:
        $r8[0] = $r1;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("delete from playhistoryinfos where _mid=?", $r8);

     label06:
        if $r7 == null goto label08;

     label07:
        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label08;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label08;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>();

     label08:
        exitmonitor r0;

        return;

     label09:
        r2 := @caughtexception;

     label10:
        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label11:
        if r3 == null goto label08;

     label12:
        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label08;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label08;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label13:
        goto label08;

     label14:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label15:
        $r10 := @caughtexception;

        if r3 == null goto label17;

     label16:
        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label17;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label17;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label17:
        throw $r10;

     label18:
        nop;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Throwable from label02 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label16 to label18 with label14;
    }

    public void deleteAllData()
    {
        java.lang.Throwable $r5;
        android.database.sqlite.SQLiteDatabase $r2, r3;
        cn.hi321.browser.db.SQLiteHelper $r4;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r1;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        r3 = null;

     label01:
        $r4 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r2 = virtualinvoke $r4.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r3 = $r2;

     label04:
        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("delete from playhistoryinfos");

     label05:
        if $r2 == null goto label11;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;

     label06:
        r1 := @caughtexception;

     label07:
        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

     label08:
        if r3 == null goto label11;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;

     label09:
        $r5 := @caughtexception;

        if r3 == null goto label10;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        throw $r5;

     label11:
        return;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void deleteHashId(java.lang.String)
    {
        java.lang.Throwable $r9;
        cn.hi321.browser.db.SQLiteHelper $r6;
        java.lang.Object[] $r8;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r2;
        android.database.sqlite.SQLiteDatabase r3, $r7;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        r3 = null;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("hashId=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void i(java.lang.String,java.lang.String)>("PlayHistoryDao  deleteHashId()", $r5);

     label01:
        $r6 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r7 = virtualinvoke $r6.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r3 = $r7;

     label04:
        $r8 = newarray (java.lang.Object)[1];

     label05:
        $r8[0] = $r1;

     label06:
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("delete from playhistoryinfos where _hashid=?", $r8);

     label07:
        if $r7 == null goto label13;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label13;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        return;

     label08:
        r2 := @caughtexception;

     label09:
        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label10:
        if r3 == null goto label13;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label13;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        return;

     label11:
        $r9 := @caughtexception;

        if r3 == null goto label12;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label12;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

     label12:
        throw $r9;

     label13:
        return;

        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Exception from label05 to label07 with label08;
        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public cn.hi321.browser.model.PlayHistoryInfo findByHashid(java.lang.String)
    {
        java.lang.Throwable $r23, $r24;
        cn.hi321.browser.db.SQLiteHelper $r7;
        java.lang.String[] $r9, $r10;
        long $l0;
        cn.hi321.browser.db.PlayHistoryDao r0;
        android.database.sqlite.SQLiteDatabase r3, $r8;
        java.lang.Long $r18, $r19;
        int $i1;
        java.lang.String $r1, $r6, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22;
        android.database.Cursor r4, $r11;
        boolean $z0;
        cn.hi321.browser.model.PlayHistoryInfo $r12;
        java.lang.Exception r2;
        java.lang.StringBuilder $r5;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

        r3 = null;

        r4 = null;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("findMid=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void i(java.lang.String,java.lang.String)>("PlayHistoryDao findByHashid()", $r6);

     label02:
        $r7 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label03:
        $r8 = virtualinvoke $r7.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label04:
        r3 = $r8;

        $r9 = newarray (java.lang.String)[14];

     label05:
        $r9[0] = "_mid";

        $r9[1] = "_mediatype";

        $r9[2] = "_medianame";

        $r9[3] = "_hashid";

        $r9[4] = "_taskname";

        $r9[5] = "_fsp";

        $r9[6] = "_playedtimestring";

        $r9[7] = "_playedtime";

        $r9[8] = "_position";

        $r9[9] = "_movieposition";

        $r9[10] = "_movieplayedtime";

        $r9[11] = "_size ";

        $r9[12] = "_percent";

        $r9[13] = "_purl";

     label06:
        $r10 = newarray (java.lang.String)[1];

     label07:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        $r10[0] = $r1;

        $r11 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("playhistoryinfos", $r9, "_mid=?", $r10, null, null, null);

     label08:
        r4 = $r11;

     label09:
        $z0 = interfaceinvoke $r11.<android.database.Cursor: boolean moveToNext()>();

     label10:
        if $z0 == 0 goto label26;

        $r12 = new cn.hi321.browser.model.PlayHistoryInfo;

     label11:
        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r6 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r13 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(2);

        $r14 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r15 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(4);

        $r16 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(5);

        $r17 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(6);

        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(7);

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(8);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getInt(int)>(9);

        $l0 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>(10);

        $r20 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(11);

        $r21 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(12);

        $r22 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(13);

        specialinvoke $r12.<cn.hi321.browser.model.PlayHistoryInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,int,long,java.lang.String,java.lang.String,java.lang.String)>($r1, $r6, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $i1, $l0, $r20, $r21, $r22);

     label12:
        if $r11 == null goto label14;

     label13:
        interfaceinvoke $r11.<android.database.Cursor: void close()>();

     label14:
        if $r8 == null goto label15;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label15;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label15;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void close()>();

     label15:
        exitmonitor r0;

        return $r12;

     label16:
        r2 := @caughtexception;

     label17:
        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label18:
        if r4 == null goto label20;

     label19:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label20:
        if r3 == null goto label21;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label21;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label21;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label21:
        $r12 = null;

        goto label15;

     label22:
        $r23 := @caughtexception;

        if r4 == null goto label23;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label23:
        if r3 == null goto label24;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label24;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label24;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label24:
        throw $r23;

     label25:
        $r24 := @caughtexception;

        exitmonitor r0;

        throw $r24;

     label26:
        if $r11 == null goto label28;

     label27:
        interfaceinvoke $r11.<android.database.Cursor: void close()>();

     label28:
        if $r8 == null goto label29;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label29;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label29;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void close()>();

     label29:
        $r12 = null;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Throwable from label02 to label12 with label22;
        catch java.lang.Throwable from label13 to label15 with label25;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label19 to label25 with label25;
        catch java.lang.Throwable from label27 to label29 with label25;
    }

    public java.util.List findByOrder(java.lang.String)
    {
        java.lang.Throwable $r13, $r14;
        cn.hi321.browser.db.SQLiteHelper $r7;
        java.lang.String[] $r10;
        long $l2;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.util.ArrayList r5, r6;
        android.database.sqlite.SQLiteDatabase r3, $r8;
        int i0, $i1;
        java.lang.String $r1, $r9;
        android.database.Cursor r4, $r11;
        boolean $z0;
        cn.hi321.browser.model.PlayHistoryInfo r2;
        java.lang.Exception r12;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

        r3 = null;

        r4 = null;

        r5 = null;

     label01:
        r6 = new java.util.ArrayList;

     label02:
        specialinvoke r6.<java.util.ArrayList: void <init>()>();

     label03:
        $r7 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label04:
        $r8 = virtualinvoke $r7.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label05:
        r3 = $r8;

        if $r1 == null goto label20;

        $r9 = "desc";

     label06:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label07:
        if $z0 == 0 goto label19;

        $r1 = "select _mid,_mediatype,_medianame,_hashid,_taskname,_fsp,_playedtimestring,_playedtime,_position,_movieposition,_movieplayedtime ,_size,_percent,_purl from playhistoryinfos order by _playedtime desc";

     label08:
        $r10 = newarray (java.lang.String)[0];

     label09:
        $r11 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r10);

     label10:
        r4 = $r11;

        if $r11 == null goto label15;

     label11:
        interfaceinvoke $r11.<android.database.Cursor: boolean moveToFirst()>();

     label12:
        i0 = 0;

     label13:
        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getCount()>();

     label14:
        if i0 < $i1 goto label21;

     label15:
        if $r11 == null goto label17;

     label16:
        interfaceinvoke $r11.<android.database.Cursor: void close()>();

     label17:
        if $r8 == null goto label18;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label18;

        $z0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label18;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void close()>();

     label18:
        exitmonitor r0;

        return r6;

     label19:
        $r1 = "select _mid,_mediatype,_medianame,_hashid,_taskname,_fsp,_playedtimestring,_playedtime,_position,_movieposition,_movieplayedtime,_size ,_percent ,_purl  from playhistoryinfos order by _playedtime";

        goto label08;

     label20:
        $r1 = "select _mid,_mediatype,_medianame,_hashid,_taskname,_fsp,_playedtimestring,_playedtime,_position,_movieposition,_movieplayedtime,_size ,_percent ,_purl  from playhistoryinfos order by _playedtime";

        goto label08;

     label21:
        r2 = new cn.hi321.browser.model.PlayHistoryInfo;

     label22:
        specialinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void <init>()>();

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_mid");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setMid(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_mediatype");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setMediatype(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_medianame");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setMedianame(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_hashid");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setHashid(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_taskname");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setTaskname(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_fsp");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setFsp(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_playedtimestring");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setLanguage(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_playedtime");

        $l2 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setPlayedtime(long)>($l2);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_position");

        $l2 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setPosition(long)>($l2);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_movieposition");

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getInt(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setMovie_position(int)>($i1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_movieplayedtime");

        $l2 = interfaceinvoke $r11.<android.database.Cursor: long getLong(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setMovie_playedtime(long)>($l2);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_size");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setSize(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_percent");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setPercent(java.lang.String)>($r1);

        $i1 = interfaceinvoke $r11.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_purl");

        $r1 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>($i1);

        virtualinvoke r2.<cn.hi321.browser.model.PlayHistoryInfo: void setPurl(java.lang.String)>($r1);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        interfaceinvoke $r11.<android.database.Cursor: boolean moveToNext()>();

     label23:
        i0 = i0 + 1;

        goto label13;

     label24:
        r12 := @caughtexception;

     label25:
        virtualinvoke r12.<java.lang.Exception: void printStackTrace()>();

     label26:
        if r4 == null goto label28;

     label27:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label28:
        if r3 == null goto label29;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label29;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label29;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label29:
        r6 = r5;

        goto label18;

     label30:
        $r13 := @caughtexception;

     label31:
        if r4 == null goto label32;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label32:
        if r3 == null goto label33;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label33;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label33;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label33:
        throw $r13;

     label34:
        $r14 := @caughtexception;

     label35:
        exitmonitor r0;

        throw $r14;

     label36:
        $r13 := @caughtexception;

        goto label31;

     label37:
        r12 := @caughtexception;

        r5 = r6;

        goto label25;

     label38:
        $r14 := @caughtexception;

        goto label35;

        catch java.lang.Exception from label02 to label03 with label24;
        catch java.lang.Throwable from label01 to label03 with label30;
        catch java.lang.Exception from label04 to label05 with label37;
        catch java.lang.Exception from label06 to label07 with label37;
        catch java.lang.Exception from label09 to label10 with label37;
        catch java.lang.Exception from label11 to label12 with label37;
        catch java.lang.Exception from label13 to label14 with label37;
        catch java.lang.Throwable from label03 to label14 with label36;
        catch java.lang.Throwable from label16 to label18 with label38;
        catch java.lang.Exception from label22 to label23 with label37;
        catch java.lang.Throwable from label19 to label23 with label36;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label27 to label34 with label34;
    }

    public int findTota()
    {
        java.lang.Throwable $r7;
        cn.hi321.browser.db.SQLiteHelper $r4;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r1;
        android.database.sqlite.SQLiteDatabase r2, $r5;
        int i0;
        android.database.Cursor r3, $r6;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        r2 = null;

        r3 = null;

        i0 = 0;

     label01:
        $r4 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r5 = virtualinvoke $r4.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r2 = $r5;

     label04:
        $r6 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select count(*) as c from playhistoryinfos", null);

     label05:
        r3 = $r6;

     label06:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z0 == 0 goto label09;

     label08:
        i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>(0);

     label09:
        if $r6 == null goto label10;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        if $r5 == null goto label11;

        $z0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label11;

        $z0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label11;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label11:
        return i0;

     label12:
        r1 := @caughtexception;

     label13:
        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

     label14:
        if r3 == null goto label15;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label15:
        if r2 == null goto label16;

        $z0 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label16;

        $z0 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label16;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label16:
        return 0;

     label17:
        $r7 := @caughtexception;

        if r3 == null goto label18;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label18:
        if r2 == null goto label19;

        $z0 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label19;

        $z0 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label19;

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label19:
        throw $r7;

        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
    }

    public void insert(cn.hi321.browser.model.PlayHistoryInfo)
    {
        java.lang.Throwable $r10, $r11;
        cn.hi321.browser.db.SQLiteHelper $r4;
        java.lang.Object[] $r6;
        long $l0;
        cn.hi321.browser.model.PlayHistoryInfo $r1;
        java.lang.Integer $r9;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r2;
        android.database.sqlite.SQLiteDatabase r3, $r5;
        java.lang.Long $r8;
        int $i1;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: cn.hi321.browser.model.PlayHistoryInfo;

        entermonitor r0;

        r3 = null;

     label01:
        $r4 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r5 = virtualinvoke $r4.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r3 = $r5;

     label04:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        $r6 = newarray (java.lang.Object)[14];

     label06:
        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMid()>();

        $r6[0] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMediatype()>();

        $r6[1] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMedianame()>();

        $r6[2] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getHashid()>();

        $r6[3] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getTaskname()>();

        $r6[4] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getFsp()>();

        $r6[5] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getLanguage()>();

        $r6[6] = $r7;

        $l0 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: long getPlayedtime()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[7] = $r8;

        $l0 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: long getPosition()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[8] = $r8;

        $i1 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: int getMovie_position()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6[9] = $r9;

        $l0 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: long getMovie_playedtime()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[10] = $r8;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getSize()>();

        $r6[11] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getPercent()>();

        $r6[12] = $r7;

        $r7 = virtualinvoke $r1.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getPurl()>();

        $r6[13] = $r7;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>("replace into playhistoryinfos(_mid,_mediatype,_medianame,_hashid,_taskname,_fsp,_playedtimestring,_playedtime,_position,_movieposition,_movieplayedtime,_size,_percent,_purl) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)", $r6);

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label07:
        if $r5 == null goto label09;

     label08:
        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label09:
        if $r5 == null goto label10;

        $z0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label10;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label10:
        exitmonitor r0;

        return;

     label11:
        r2 := @caughtexception;

        if r3 == null goto label13;

     label12:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label13:
        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

     label14:
        if r3 == null goto label16;

     label15:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label16:
        if r3 == null goto label10;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label10;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label10;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label17:
        goto label10;

     label18:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

     label19:
        $r11 := @caughtexception;

        if r3 == null goto label21;

     label20:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label21:
        if r3 == null goto label22;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label22;

        $z0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label22;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void close()>();

     label22:
        throw $r11;

     label23:
        nop;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Throwable from label01 to label07 with label19;
        catch java.lang.Throwable from label08 to label10 with label18;
        catch java.lang.Throwable from label12 to label14 with label19;
        catch java.lang.Throwable from label15 to label17 with label18;
        catch java.lang.Throwable from label20 to label23 with label18;
    }

    public void updateByHashid(java.lang.String, cn.hi321.browser.model.PlayHistoryInfo)
    {
        java.lang.Throwable $r12, $r13;
        cn.hi321.browser.db.SQLiteHelper $r6;
        long $l0;
        java.lang.String[] $r11;
        java.lang.Integer $r10;
        cn.hi321.browser.db.PlayHistoryDao r0;
        android.database.sqlite.SQLiteDatabase r5, $r7;
        java.lang.Long $r9;
        int $i1;
        java.lang.String $r1, $r8;
        boolean $z0;
        cn.hi321.browser.model.PlayHistoryInfo $r2;
        java.lang.Exception r4;
        android.content.ContentValues r3;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: cn.hi321.browser.model.PlayHistoryInfo;

        entermonitor r0;

        r5 = null;

     label01:
        $r6 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r7 = virtualinvoke $r6.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r5 = $r7;

     label04:
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        r3 = new android.content.ContentValues;

     label06:
        specialinvoke r3.<android.content.ContentValues: void <init>()>();

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMedianame()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_medianame", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getMediatype()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_mediatype", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getHashid()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_hashid", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getTaskname()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_taskname", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getFsp()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_fsp", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getLanguage()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_playedtimestring", $r8);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_playedtime", $r9);

        $l0 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: long getPosition()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_position", $r9);

        $i1 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: int getMovie_position()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_movieposition", $r10);

        $l0 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: long getMovie_playedtime()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_movieplayedtime", $r9);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getSize()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_size", $r8);

        $r8 = virtualinvoke $r2.<cn.hi321.browser.model.PlayHistoryInfo: java.lang.String getPurl()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_purl", $r8);

     label07:
        $r11 = newarray (java.lang.String)[1];

     label08:
        $r11[0] = $r1;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("playhistoryinfos", r3, "_mid=?", $r11);

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label09:
        if $r7 == null goto label11;

     label10:
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label11:
        if $r7 == null goto label12;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label12;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>();

     label12:
        exitmonitor r0;

        return;

     label13:
        r4 := @caughtexception;

        if r5 == null goto label15;

     label14:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label15:
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

     label16:
        if r5 == null goto label18;

     label17:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label18:
        if r5 == null goto label12;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label12;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label12;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label19:
        goto label12;

     label20:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

     label21:
        $r13 := @caughtexception;

        if r5 == null goto label23;

     label22:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label23:
        if r5 == null goto label24;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label24;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label24;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label24:
        throw $r13;

     label25:
        nop;

        catch java.lang.Exception from label02 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Throwable from label01 to label09 with label21;
        catch java.lang.Throwable from label10 to label12 with label20;
        catch java.lang.Throwable from label14 to label16 with label21;
        catch java.lang.Throwable from label17 to label19 with label20;
        catch java.lang.Throwable from label22 to label25 with label20;
    }

    public void updateByHashid(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r10, $r11;
        cn.hi321.browser.db.SQLiteHelper $r6;
        java.lang.String[] $r9;
        cn.hi321.browser.db.PlayHistoryDao r0;
        java.lang.Exception r4;
        android.database.sqlite.SQLiteDatabase r5, $r7;
        java.lang.String $r1, $r2, $r8;
        android.content.ContentValues r3;
        boolean $z0;

        r0 := @this: cn.hi321.browser.db.PlayHistoryDao;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor r0;

        r5 = null;

     label01:
        $r6 = <cn.hi321.browser.db.PlayHistoryDao: cn.hi321.browser.db.SQLiteHelper helper>;

     label02:
        $r7 = virtualinvoke $r6.<cn.hi321.browser.db.SQLiteHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label03:
        r5 = $r7;

     label04:
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label05:
        r3 = new android.content.ContentValues;

     label06:
        specialinvoke r3.<android.content.ContentValues: void <init>()>();

     label07:
        $r8 = "";

     label08:
        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label09:
        if $z0 != 0 goto label11;

     label10:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_percent", "1");

     label11:
        $r9 = newarray (java.lang.String)[1];

     label12:
        $r9[0] = $r1;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("playhistoryinfos", r3, "_mid=?", $r9);

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label13:
        if $r7 == null goto label15;

     label14:
        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        if $r7 == null goto label15;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label15;

        $z0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label15;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>();

     label15:
        exitmonitor r0;

        return;

     label16:
        r4 := @caughtexception;

        if r5 == null goto label18;

     label17:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label18:
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

     label19:
        if r5 == null goto label15;

     label20:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        if r5 == null goto label15;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label15;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label15;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label21:
        goto label15;

     label22:
        $r10 := @caughtexception;

        exitmonitor r0;

        throw $r10;

     label23:
        $r11 := @caughtexception;

        if r5 == null goto label25;

     label24:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        if r5 == null goto label25;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>();

        if $z0 != 0 goto label25;

        $z0 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label25;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label25:
        throw $r11;

     label26:
        nop;

        catch java.lang.Exception from label02 to label03 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Throwable from label01 to label13 with label23;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label17 to label19 with label23;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label26 with label22;
    }
}
