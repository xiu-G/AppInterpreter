public class com.aishukeclassmfkb.netimg.ImageLoaderBean extends java.lang.Object
{
    android.content.Context ctx;
    java.util.concurrent.ExecutorService executorService;
    com.aishukeclassmfkb.netimg.FileCache fileCache;
    private java.util.Map imageViews;
    private boolean imageviewfitimage;
    com.aishukeclassmfkb.netimg.MemoryCache memoryCache;
    private int timeOutConnection;
    private int timeOutSocket;

    public void <init>(android.content.Context)
    {
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        com.aishukeclassmfkb.netimg.FileCache $r5;
        android.content.Context $r1;
        com.aishukeclassmfkb.netimg.MemoryCache $r2;
        java.util.Map $r4;
        java.util.WeakHashMap $r3;
        java.util.concurrent.ExecutorService $r6;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.aishukeclassmfkb.netimg.MemoryCache;

        specialinvoke $r2.<com.aishukeclassmfkb.netimg.MemoryCache: void <init>()>();

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.MemoryCache memoryCache> = $r2;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutConnection> = 15000;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutSocket> = 30000;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.Map imageViews> = $r4;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: boolean imageviewfitimage> = 0;

        $r5 = new com.aishukeclassmfkb.netimg.FileCache;

        specialinvoke $r5.<com.aishukeclassmfkb.netimg.FileCache: void <init>(android.content.Context)>($r1);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.FileCache fileCache> = $r5;

        $r6 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.concurrent.ExecutorService executorService> = $r6;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.content.Context ctx> = $r1;

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        android.content.Context $r1;
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        com.aishukeclassmfkb.netimg.FileCache $r5;
        com.aishukeclassmfkb.netimg.MemoryCache $r2;
        java.util.Map $r4;
        java.util.WeakHashMap $r3;
        java.util.concurrent.ExecutorService $r6;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.aishukeclassmfkb.netimg.MemoryCache;

        specialinvoke $r2.<com.aishukeclassmfkb.netimg.MemoryCache: void <init>()>();

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.MemoryCache memoryCache> = $r2;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutConnection> = 15000;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutSocket> = 30000;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.Map imageViews> = $r4;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: boolean imageviewfitimage> = 0;

        $r5 = new com.aishukeclassmfkb.netimg.FileCache;

        specialinvoke $r5.<com.aishukeclassmfkb.netimg.FileCache: void <init>(android.content.Context)>($r1);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.FileCache fileCache> = $r5;

        $r6 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.concurrent.ExecutorService executorService> = $r6;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.content.Context ctx> = $r1;

        r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: boolean imageviewfitimage> = $z0;

        return;
    }

    static android.graphics.Bitmap access$000(com.aishukeclassmfkb.netimg.ImageLoaderBean, java.lang.String)
    {
        com.aishukeclassmfkb.netimg.ImageLoaderBean $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.graphics.Bitmap getBitmap(java.lang.String)>($r1);

        return $r2;
    }

    private android.graphics.Bitmap decodeFile(java.io.File)
    {
        java.lang.Throwable $r5;
        java.io.FileInputStream $r4;
        java.io.File $r1;
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        android.graphics.Bitmap $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.BitmapFactory$Options $r3;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: java.io.File;

        $i0 = 1;

        $r3 = new android.graphics.BitmapFactory$Options;

     label01:
        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

     label02:
        $r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $r4 = new java.io.FileInputStream;

     label03:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r4, null, $r3);

     label04:
        $i1 = $r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = $r3.<android.graphics.BitmapFactory$Options: int outHeight>;

     label05:
        $i3 = $i1 / 2;

        if $i3 < 70 goto label06;

        $i3 = $i2 / 2;

        if $i3 >= 70 goto label11;

     label06:
        $r3 = new android.graphics.BitmapFactory$Options;

     label07:
        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

     label08:
        $r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        $r4 = new java.io.FileInputStream;

     label09:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r4, null, $r3);

     label10:
        return $r2;

     label11:
        $i1 = $i1 / 2;

        $i2 = $i2 / 2;

        $i0 = $i0 * 2;

        goto label05;

     label12:
        $r5 := @caughtexception;

        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label12;
        catch java.io.FileNotFoundException from label03 to label04 with label12;
        catch java.io.FileNotFoundException from label07 to label08 with label12;
        catch java.io.FileNotFoundException from label09 to label10 with label12;
    }

    private android.graphics.Bitmap getBitmap(java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient $r11;
        com.aishukeclassmfkb.netimg.NetworkState $r5;
        android.content.Context $r10;
        org.apache.http.params.BasicHttpParams $r9;
        org.apache.http.StatusLine $r15;
        org.apache.http.Header $r17;
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        com.aishukeclassmfkb.netimg.FileCache $r2;
        int $i0;
        java.lang.String $r1, $r7;
        boolean $z0;
        org.apache.http.HttpEntity $r16;
        java.io.FileOutputStream $r19;
        java.io.File $r3;
        java.lang.Exception $r20, $r21, $r22;
        org.apache.http.client.methods.HttpGet $r8;
        android.graphics.Bitmap $r4;
        org.apache.http.params.HttpParams $r13;
        org.apache.http.HttpResponse $r14;
        java.lang.StringBuilder $r6;
        org.apache.http.HttpHost $r12;
        java.io.InputStream $r18;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.FileCache fileCache>;

        $r3 = virtualinvoke $r2.<com.aishukeclassmfkb.netimg.FileCache: java.io.File getFile(java.lang.String)>($r1);

        $r4 = specialinvoke r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.graphics.Bitmap decodeFile(java.io.File)>($r3);

        if $r4 == null goto label01;

        return $r4;

     label01:
        $r5 = new com.aishukeclassmfkb.netimg.NetworkState;

     label02:
        specialinvoke $r5.<com.aishukeclassmfkb.netimg.NetworkState: void <init>()>();

     label03:
        $r6 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImageLoaderBean URL:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void i(java.lang.String)>($r7);

     label05:
        $r8 = new org.apache.http.client.methods.HttpGet;

     label06:
        specialinvoke $r8.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

     label07:
        $r9 = new org.apache.http.params.BasicHttpParams;

     label08:
        specialinvoke $r9.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r10 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.content.Context ctx>;

        $z0 = virtualinvoke $r5.<com.aishukeclassmfkb.netimg.NetworkState: boolean wapConnected(android.content.Context)>($r10);

     label09:
        if $z0 == 0 goto label27;

     label10:
        $i0 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutConnection>;

     label11:
        $i0 = $i0 * 2;

     label12:
        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r9, $i0);

        $i0 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutSocket>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r9, $i0);

     label13:
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

     label14:
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r9);

        $r10 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.content.Context ctx>;

        $r12 = virtualinvoke $r5.<com.aishukeclassmfkb.netimg.NetworkState: org.apache.http.HttpHost getWapProxy(android.content.Context)>($r10);

        $r13 = virtualinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r13.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", $r12);

     label15:
        $r14 = virtualinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r8);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

     label16:
        if $i0 != 200 goto label23;

     label17:
        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r17 = interfaceinvoke $r16.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        $r1 = interfaceinvoke $r17.<org.apache.http.Header: java.lang.String getValue()>();

     label18:
        $r6 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image Type:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>($r1);

        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r18 = interfaceinvoke $r16.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label20:
        $r19 = new java.io.FileOutputStream;

     label21:
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        staticinvoke <com.aishukeclassmfkb.netimg.Utils: void CopyStream(java.io.InputStream,java.io.OutputStream)>($r18, $r19);

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

        $r4 = specialinvoke r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.graphics.Bitmap decodeFile(java.io.File)>($r3);

     label22:
        return $r4;

     label23:
        $r18 = null;

        goto label20;

     label24:
        $r20 := @caughtexception;

     label25:
        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label26:
        $r18 = null;

        goto label20;

     label27:
        $i0 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutConnection>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r9, $i0);

        $i0 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: int timeOutSocket>;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r9, $i0);

     label28:
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

     label29:
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r9);

     label30:
        $r14 = virtualinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r8);

        $r15 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

     label31:
        if $i0 != 200 goto label36;

     label32:
        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r17 = interfaceinvoke $r16.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        $r1 = interfaceinvoke $r17.<org.apache.http.Header: java.lang.String getValue()>();

     label33:
        $r6 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image Type:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>($r1);

        $r16 = interfaceinvoke $r14.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r18 = interfaceinvoke $r16.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label35:
        goto label20;

     label36:
        $r18 = null;

        goto label20;

     label37:
        $r21 := @caughtexception;

     label38:
        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label39:
        goto label26;

     label40:
        $r22 := @caughtexception;

        virtualinvoke $r22.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label02 to label03 with label40;
        catch java.lang.Exception from label04 to label05 with label40;
        catch java.lang.Exception from label06 to label07 with label40;
        catch java.lang.Exception from label08 to label09 with label40;
        catch java.lang.Exception from label10 to label11 with label40;
        catch java.lang.Exception from label12 to label13 with label40;
        catch java.lang.Exception from label14 to label15 with label40;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label24;
        catch java.lang.Exception from label19 to label20 with label24;
        catch java.lang.Exception from label21 to label22 with label40;
        catch java.lang.Exception from label25 to label26 with label40;
        catch java.lang.Exception from label27 to label28 with label40;
        catch java.lang.Exception from label29 to label30 with label40;
        catch java.lang.Exception from label30 to label31 with label37;
        catch java.lang.Exception from label32 to label33 with label37;
        catch java.lang.Exception from label34 to label35 with label37;
        catch java.lang.Exception from label38 to label39 with label40;
    }

    private void queuePhoto(java.lang.String, android.widget.ImageView)
    {
        android.content.Context $r6;
        android.widget.ImageView $r2;
        com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad $r3;
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r4;
        com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotosLoader $r5;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 = new com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad;

        specialinvoke $r3.<com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad: void <init>(com.aishukeclassmfkb.netimg.ImageLoaderBean,java.lang.String,android.widget.ImageView)>(r0, $r1, $r2);

        $r4 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.concurrent.ExecutorService executorService>;

        $r5 = new com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotosLoader;

        $r6 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: android.content.Context ctx>;

        $z0 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: boolean imageviewfitimage>;

        specialinvoke $r5.<com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotosLoader: void <init>(com.aishukeclassmfkb.netimg.ImageLoaderBean,android.content.Context,com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad,boolean)>(r0, $r6, $r3, $z0);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }

    public void DisplayImage(java.lang.String, android.widget.ImageView, java.lang.String)
    {
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        com.aishukeclassmfkb.netimg.MemoryCache $r6;
        android.graphics.Bitmap $r4;
        java.util.Map $r5;
        android.widget.ImageView $r2;
        java.lang.String $r1, $r3;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 := @parameter2: java.lang.String;

        $r5 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.Map imageViews>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        $r6 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.MemoryCache memoryCache>;

        $r4 = virtualinvoke $r6.<com.aishukeclassmfkb.netimg.MemoryCache: android.graphics.Bitmap get(java.lang.String)>($r1);

        if $r4 == null goto label1;

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r4);

        return;

     label1:
        specialinvoke r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: void queuePhoto(java.lang.String,android.widget.ImageView)>($r1, $r2);

        virtualinvoke $r2.<android.widget.ImageView: void setImageResource(int)>(2130837606);

        return;
    }

    public void clearCache()
    {
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        com.aishukeclassmfkb.netimg.FileCache $r2;
        com.aishukeclassmfkb.netimg.MemoryCache $r1;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.MemoryCache memoryCache>;

        virtualinvoke $r1.<com.aishukeclassmfkb.netimg.MemoryCache: void clear()>();

        $r2 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: com.aishukeclassmfkb.netimg.FileCache fileCache>;

        virtualinvoke $r2.<com.aishukeclassmfkb.netimg.FileCache: void clear()>();

        return;
    }

    boolean imageViewReused(com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad)
    {
        android.widget.ImageView $r3;
        com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad $r1;
        com.aishukeclassmfkb.netimg.ImageLoaderBean r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.netimg.ImageLoaderBean;

        $r1 := @parameter0: com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad;

        $r2 = r0.<com.aishukeclassmfkb.netimg.ImageLoaderBean: java.util.Map imageViews>;

        $r3 = $r1.<com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad: android.widget.ImageView imageView>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.String) $r4;

        if $r5 == null goto label1;

        $r6 = $r1.<com.aishukeclassmfkb.netimg.ImageLoaderBean$PhotoToLoad: java.lang.String url>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
