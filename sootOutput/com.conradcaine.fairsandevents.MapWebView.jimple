public class com.conradcaine.fairsandevents.MapWebView extends android.webkit.WebView
{

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void invalidate()
    {
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        specialinvoke r0.<android.webkit.WebView: void invalidate()>();

        return;
    }

    public void invokeZoomPicker()
    {
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        specialinvoke r0.<android.webkit.WebView: void invokeZoomPicker()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.graphics.Canvas $r1;
        com.conradcaine.fairsandevents.MapWebView r0;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.webkit.WebView: void onDraw(android.graphics.Canvas)>($r1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        com.conradcaine.fairsandevents.MapWebView r0;
        boolean $z0, $z1;

        r0 := @this: com.conradcaine.fairsandevents.MapWebView;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        $z1 = virtualinvoke r0.<com.conradcaine.fairsandevents.MapWebView: boolean isClickable()>();

        if $z1 == 0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<com.conradcaine.fairsandevents.MapWebView: void loadUrl(java.lang.String)>("javascript: updatePoints();");

     label1:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 1 goto label2;

        virtualinvoke r0.<com.conradcaine.fairsandevents.MapWebView: void loadUrl(java.lang.String)>("javascript: updatePoints();");

     label2:
        return $z0;
    }
}
