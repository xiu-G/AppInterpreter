class twitter4j.ExecuteThread extends java.lang.Thread
{
    private boolean alive;
    twitter4j.Dispatcher q;

    void <init>(java.lang.String, twitter4j.Dispatcher, int)
    {
        java.lang.StringBuffer $r3;
        twitter4j.Dispatcher $r2;
        int $i0;
        twitter4j.ExecuteThread r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.ExecuteThread;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.Dispatcher;

        $i0 := @parameter2: int;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>($r1);

        r0.<twitter4j.ExecuteThread: boolean alive> = 1;

        r0.<twitter4j.ExecuteThread: twitter4j.Dispatcher q> = $r2;

        return;
    }

    public void run()
    {
        twitter4j.Dispatcher $r3;
        twitter4j.ExecuteThread r0;
        java.lang.Runnable $r2;
        java.lang.Exception r1;
        boolean $z0;

        r0 := @this: twitter4j.ExecuteThread;

     label1:
        $z0 = r0.<twitter4j.ExecuteThread: boolean alive>;

        if $z0 == 0 goto label5;

        $r3 = r0.<twitter4j.ExecuteThread: twitter4j.Dispatcher q>;

        $r2 = virtualinvoke $r3.<twitter4j.Dispatcher: java.lang.Runnable poll()>();

        if $r2 == null goto label1;

     label2:
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label3:
        goto label1;

     label4:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        goto label1;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void shutdown()
    {
        twitter4j.ExecuteThread r0;

        r0 := @this: twitter4j.ExecuteThread;

        r0.<twitter4j.ExecuteThread: boolean alive> = 0;

        return;
    }
}
