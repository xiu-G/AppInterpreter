public class com.test.httputil.HttpUtilService extends android.app.Service
{
    public static final java.lang.String HTTPURLGET_URL;
    private static final java.lang.String HTTPUTILSETTING;
    public static final java.lang.String PERIOD_URL;
    private static final int REQ_TYPE_NURL;
    private static final int REQ_TYPE_NURL_URL;
    private static final int REQ_TYPE_URL;
    public static final java.lang.String TAG;
    java.lang.String cfrom;
    java.util.Vector downurlList;
    java.util.Vector fnurlList;
    java.util.Vector hrefList;
    private long logTime;
    java.util.Timer logTimer;
    private long periodTime;
    java.lang.String qidstr;
    java.lang.String serverTime;
    java.util.Timer timer;
    private long updatePeriodTime;
    java.util.Timer updatePeriodTimer;
    java.util.Vector urlList;
    android.os.PowerManager$WakeLock wl;
    public android.content.Intent ipcIntent;
    public android.os.IBinder ipcBinder_0;

    public void <init>()
    {
        java.util.Vector $r1;
        java.lang.String $r2;
        com.test.httputil.HttpUtilService r0;

        r0 := @this: com.test.httputil.HttpUtilService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: long periodTime> = 1000L;

        r0.<com.test.httputil.HttpUtilService: java.util.Timer timer> = null;

        r0.<com.test.httputil.HttpUtilService: long updatePeriodTime> = 5000L;

        r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer> = null;

        r0.<com.test.httputil.HttpUtilService: long logTime> = 5000L;

        r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer> = null;

        r0.<com.test.httputil.HttpUtilService: java.lang.String cfrom> = "";

        r0.<com.test.httputil.HttpUtilService: android.os.PowerManager$WakeLock wl> = null;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList> = $r1;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Vector downurlList> = $r1;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Vector hrefList> = $r1;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList> = $r1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr> = $r2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.lang.String serverTime> = $r2;

        return;
    }

    static void access$0(com.test.httputil.HttpUtilService) throws java.lang.Exception
    {
        com.test.httputil.HttpUtilService $r0;

        $r0 := @parameter0: com.test.httputil.HttpUtilService;

        specialinvoke $r0.<com.test.httputil.HttpUtilService: void updateTimer()>();

        return;
    }

    static void access$1(com.test.httputil.HttpUtilService) throws java.lang.Exception
    {
        com.test.httputil.HttpUtilService $r0;

        $r0 := @parameter0: com.test.httputil.HttpUtilService;

        specialinvoke $r0.<com.test.httputil.HttpUtilService: void getHttpUrl()>();

        return;
    }

    private void findUrlListByStr(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.Vector $r9;
        java.util.regex.Matcher $r16;
        org.jsoup.nodes.Element $r13;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        com.test.httputil.HttpUtilService r0;
        boolean $z0;
        java.util.Iterator $r12;
        java.lang.Exception r8;
        org.jsoup.nodes.Document $r10;
        java.lang.StringBuilder $r14;
        java.lang.Object $r17;
        org.jsoup.select.Elements $r11;
        java.util.regex.Pattern $r15;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 := @parameter6: java.lang.String;

        if $r1 == null goto label44;

        if $r5 != null goto label01;

        return;

     label01:
        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        virtualinvoke $r9.<java.util.Vector: void clear()>();

        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector downurlList>;

        virtualinvoke $r9.<java.util.Vector: void clear()>();

        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList>;

        virtualinvoke $r9.<java.util.Vector: void clear()>();

        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector hrefList>;

        virtualinvoke $r9.<java.util.Vector: void clear()>();

        r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr> = "";

        r0.<com.test.httputil.HttpUtilService: java.lang.String serverTime> = "";

     label02:
        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

        $r10 = staticinvoke <org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>($r5, $r1);

        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>($r7);

     label03:
        $r1 = "";

     label04:
        $r12 = virtualinvoke $r11.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 != 0 goto label24;

     label07:
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label09:
        if $z0 != 0 goto label34;

     label10:
        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>($r2);

        $r13 = virtualinvoke $r11.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        $r1 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr> = $r1;

     label11:
        $r14 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("qid str is :");

        $r1 = r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

        $r11 = virtualinvoke $r10.<org.jsoup.nodes.Document: org.jsoup.select.Elements select(java.lang.String)>($r4);

        $r12 = virtualinvoke $r11.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label14:
        if $z0 != 0 goto label40;

     label15:
        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke $r16.<java.util.regex.Matcher: boolean find()>();

     label16:
        if $z0 == 0 goto label18;

     label17:
        $r1 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0.<com.test.httputil.HttpUtilService: java.lang.String serverTime> = $r1;

     label18:
        $r14 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("get serverTime:");

        $r1 = r0.<com.test.httputil.HttpUtilService: java.lang.String serverTime>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

     label20:
        $r14 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("get qidstr:");

        $r1 = r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

     label22:
        return;

     label23:
        r8 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("findUrlListByStr error:");

        $r1 = virtualinvoke r8.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

        return;

     label24:
        $r17 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.jsoup.nodes.Element) $r17;

        $r7 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

     label25:
        if $r1 == $r7 goto label05;

        $r1 = $r7;

     label26:
        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r7);

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("baidu.php\\?url=(.*?)\\.");

        $r16 = virtualinvoke $r15.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z0 = virtualinvoke $r16.<java.util.regex.Matcher: boolean find()>();

     label27:
        if $z0 == 0 goto label31;

     label28:
        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList>;

        $r7 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r7);

     label29:
        $r14 = new java.lang.StringBuilder;

     label30:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("fnurl :");

        $r7 = virtualinvoke $r16.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r7);

     label31:
        $r14 = new java.lang.StringBuilder;

     label32:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("aad :");

        $r7 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r7);

     label33:
        goto label05;

     label34:
        $r17 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.jsoup.nodes.Element) $r17;

        $r6 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

     label35:
        if $r1 == $r6 goto label08;

        $r1 = $r6;

     label36:
        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector downurlList>;

        $r6 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r6);

     label37:
        $r14 = new java.lang.StringBuilder;

     label38:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("dad :");

        $r6 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r6);

     label39:
        goto label08;

     label40:
        $r17 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (org.jsoup.nodes.Element) $r17;

        $r9 = r0.<com.test.httputil.HttpUtilService: java.util.Vector hrefList>;

        $r1 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r1);

     label41:
        $r14 = new java.lang.StringBuilder;

     label42:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("normal url");

        $r1 = virtualinvoke $r13.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>("abs:href");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r1);

     label43:
        goto label13;

     label44:
        return;

        catch java.lang.Exception from label02 to label03 with label23;
        catch java.lang.Exception from label04 to label06 with label23;
        catch java.lang.Exception from label07 to label09 with label23;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Exception from label12 to label14 with label23;
        catch java.lang.Exception from label15 to label16 with label23;
        catch java.lang.Exception from label17 to label18 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label24 to label25 with label23;
        catch java.lang.Exception from label26 to label27 with label23;
        catch java.lang.Exception from label28 to label29 with label23;
        catch java.lang.Exception from label30 to label31 with label23;
        catch java.lang.Exception from label32 to label33 with label23;
        catch java.lang.Exception from label34 to label35 with label23;
        catch java.lang.Exception from label36 to label37 with label23;
        catch java.lang.Exception from label38 to label39 with label23;
        catch java.lang.Exception from label40 to label41 with label23;
        catch java.lang.Exception from label42 to label43 with label23;
    }

    private void getHttpUrl() throws java.lang.Exception
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r48;
        java.util.zip.GZIPInputStream r2, r12, $r49;
        org.apache.http.params.BasicHttpParams r4, $r47;
        org.apache.http.StatusLine $r14;
        org.apache.http.Header $r22;
        org.json.JSONObject r5, $r53;
        java.util.Vector $r38;
        com.test.httputil.HttpUtilService r0;
        org.apache.http.Header[] $r21;
        org.apache.http.HttpEntity $r19;
        java.lang.Exception $r15, r16, r41, r42, r43, r44;
        org.apache.http.client.methods.HttpGet r6, $r46;
        java.lang.StringBuilder $r8, $r45;
        java.lang.Throwable $r17, $r18;
        java.lang.StringBuffer r7, $r52;
        int $i0, $i1, i2, $i3;
        java.lang.String $r9, $r10, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, r36, $r37, $r40;
        java.io.InputStreamReader r11, r23, $r50;
        org.apache.http.HttpResponse $r13;
        java.lang.Object $r39;
        java.io.BufferedReader r1, $r51;
        org.json.JSONArray $r35;
        java.io.InputStream $r20;

        r0 := @this: com.test.httputil.HttpUtilService;

        entermonitor r0;

     label001:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void getParams()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://kjs123.sinaapp.com/sdc/newinit3.php?id=20");

        $r9 = r0.<com.test.httputil.HttpUtilService: java.lang.String cfrom>;

        $r8 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("getHttpUrl=");

        $r8 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r10);

     label002:
        r11 = null;

        r12 = null;

     label003:
        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

     label004:
        $r46 = new org.apache.http.client.methods.HttpGet;

        r6 = $r46;

     label005:
        specialinvoke $r46.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r9);

     label006:
        $r47 = new org.apache.http.params.BasicHttpParams;

        r4 = $r47;

     label007:
        specialinvoke $r47.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r4, 10000);

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip, deflate");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept-Language", "zh-CN");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept", "text/html, application/xhtml+xml, */*");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; MATP; MATP)");

     label008:
        $r48 = new org.apache.http.impl.client.DefaultHttpClient;

        r3 = $r48;

     label009:
        specialinvoke $r48.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r4);

        $r13 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);

        $r14 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r14.<org.apache.http.StatusLine: int getStatusCode()>();

     label010:
        if $i0 == 200 goto label021;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label011:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("network connection error");

        throw $r15;

     label012:
        r16 := @caughtexception;

     label013:
        $r9 = virtualinvoke r16.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r9);

        r41 = new java.lang.Exception;

        $r9 = virtualinvoke r16.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>($r9);

        throw r41;

     label014:
        $r17 := @caughtexception;

     label015:
        if r11 == null goto label017;

     label016:
        virtualinvoke r11.<java.io.InputStreamReader: void close()>();

     label017:
        if r12 == null goto label019;

     label018:
        virtualinvoke r12.<java.util.zip.GZIPInputStream: void close()>();

     label019:
        throw $r17;

     label020:
        $r18 := @caughtexception;

        exitmonitor r0;

        throw $r18;

     label021:
        $r19 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r20 = interfaceinvoke $r19.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r21 = interfaceinvoke $r13.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Encoding");

        $i0 = lengthof $r21;

     label022:
        if $i0 == 0 goto label042;

     label023:
        $r22 = $r21[0];

        $r9 = interfaceinvoke $r22.<org.apache.http.Header: java.lang.String getValue()>();

     label024:
        if $r9 == null goto label042;

     label025:
        $r22 = $r21[0];

        $r9 = interfaceinvoke $r22.<org.apache.http.Header: java.lang.String getValue()>();

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String)>("gzip");

     label026:
        if $i0 <= -1 goto label042;

        $r49 = new java.util.zip.GZIPInputStream;

        r2 = $r49;

     label027:
        specialinvoke $r49.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r20);

     label028:
        $r50 = new java.io.InputStreamReader;

        r23 = $r50;

     label029:
        specialinvoke $r50.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, "UTF-8");

     label030:
        r12 = r2;

        r11 = r23;

     label031:
        $r51 = new java.io.BufferedReader;

        r1 = $r51;

     label032:
        specialinvoke $r51.<java.io.BufferedReader: void <init>(java.io.Reader)>(r11);

     label033:
        $r52 = new java.lang.StringBuffer;

        r7 = $r52;

     label034:
        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

     label035:
        $r9 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label036:
        if $r9 != null goto label045;

     label037:
        $r9 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label038:
        $r53 = new org.json.JSONObject;

        r5 = $r53;

     label039:
        specialinvoke $r53.<org.json.JSONObject: void <init>(java.lang.String)>($r9);

        $r9 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("url");

     label040:
        if $r9 != null goto label047;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label041:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684URL");

        throw $r15;

     label042:
        $r50 = new java.io.InputStreamReader;

     label043:
        specialinvoke $r50.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r20, "UTF-8");

     label044:
        r11 = $r50;

        goto label031;

     label045:
        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label046:
        goto label035;

     label047:
        $r24 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r9, "UTF-8");

        $r9 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("nurl");

     label048:
        if $r9 != null goto label050;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label049:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684nURL");

        throw $r15;

     label050:
        $r25 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r9, "UTF-8");

        $r9 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("referer");

     label051:
        if $r9 != null goto label053;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label052:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684referer");

        throw $r15;

     label053:
        $r9 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r9, "UTF-8");

        $r10 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("useragent");

     label054:
        if $r10 != null goto label056;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label055:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684useragent");

        throw $r15;

     label056:
        $r10 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r10, "UTF-8");

        $r26 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("ct");

     label057:
        if $r26 != null goto label059;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label058:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684ct");

        throw $r15;

     label059:
        $r26 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r26, "UTF-8");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $r26 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("nm");

     label060:
        if $r26 != null goto label062;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label061:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684nm");

        throw $r15;

     label062:
        $r26 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r26, "UTF-8");

        $r27 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("mid");

     label063:
        if $r27 != null goto label065;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label064:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684mid");

        throw $r15;

     label065:
        $r27 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r27, "UTF-8");

        $r28 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("qid");

     label066:
        if $r28 != null goto label068;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label067:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684qid");

        throw $r15;

     label068:
        $r28 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r28, "UTF-8");

        $r29 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("pnpre");

     label069:
        if $r29 != null goto label071;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label070:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684pnpre");

        throw $r15;

     label071:
        $r29 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r29, "UTF-8");

        $r30 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("mtm");

     label072:
        if $r30 != null goto label074;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label073:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684mtm");

        throw $r15;

     label074:
        $r30 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r30, "UTF-8");

        $r31 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("lxf");

     label075:
        if $r31 != null goto label077;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label076:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684lxf");

        throw $r15;

     label077:
        $r31 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r31, "UTF-8");

        $r32 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("lx");

     label078:
        if $r32 != null goto label080;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label079:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684lx");

        throw $r15;

     label080:
        $r32 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r32, "UTF-8");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        $r32 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("lxn");

     label081:
        if $r32 != null goto label083;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label082:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684lxn");

        throw $r15;

     label083:
        $r32 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r32, "UTF-8");

        $r33 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("dad");

     label084:
        if $r33 != null goto label086;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label085:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684dad");

        throw $r15;

     label086:
        $r33 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r33, "UTF-8");

        $r34 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("aad");

     label087:
        if $r34 != null goto label089;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label088:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684aad");

        throw $r15;

     label089:
        $r34 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r34, "UTF-8");

        r5 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("cookie");

     label090:
        if r5 != null goto label092;

        r41 = new java.lang.Exception;

        $r15 = r41;

     label091:
        specialinvoke r41.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684cookie");

        throw $r15;

     label092:
        $r35 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONArray names()>();

     label093:
        r36 = "";

        i2 = 0;

     label094:
        $i3 = virtualinvoke $r35.<org.json.JSONArray: int length()>();

     label095:
        if i2 < $i3 goto label112;

        $r45 = new java.lang.StringBuilder;

        $r8 = $r45;

     label096:
        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("getHttpUrl success, url=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",nurl=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r37 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r37);

        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r24, 1, $r10, r36, $r9, $i0, $r26, $r27, $r28, $r29, $r30, $r31, $i1, $r32, $r33, $r34);

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        i2 = virtualinvoke $r38.<java.util.Vector: int size()>();

     label097:
        if i2 == 0 goto label107;

     label098:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void getParams()>();

     label099:
        $r45 = new java.lang.StringBuilder;

        $r8 = $r45;

     label100:
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);

        $r24 = r0.<com.test.httputil.HttpUtilService: java.lang.String cfrom>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&count=");

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        i2 = virtualinvoke $r38.<java.util.Vector: int size()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&dcount=");

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector downurlList>;

        i2 = virtualinvoke $r38.<java.util.Vector: int size()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r24 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label101:
        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList>;

        i2 = virtualinvoke $r38.<java.util.Vector: int size()>();

     label102:
        if i2 == 0 goto label105;

        i2 = 0;

     label103:
        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList>;

        $i3 = virtualinvoke $r38.<java.util.Vector: int size()>();

     label104:
        if i2 < $i3 goto label116;

     label105:
        $r45 = new java.lang.StringBuilder;

        $r8 = $r45;

     label106:
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&mtm=");

        $r24 = r0.<com.test.httputil.HttpUtilService: java.lang.String serverTime>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r24 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r24, 2, $r10, r36, $r9, $i0, $r26, $r27, $r28, $r29, $r30, $r31, $i1, $r32, $r33, $r34);

     label107:
        if r11 == null goto label109;

     label108:
        virtualinvoke r11.<java.io.InputStreamReader: void close()>();

     label109:
        if r12 == null goto label111;

     label110:
        virtualinvoke r12.<java.util.zip.GZIPInputStream: void close()>();

     label111:
        exitmonitor r0;

        return;

     label112:
        $r39 = virtualinvoke $r35.<org.json.JSONArray: java.lang.Object opt(int)>(i2);

        $r37 = virtualinvoke $r39.<java.lang.Object: java.lang.String toString()>();

        $r37 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r37, "UTF-8");

        $r40 = virtualinvoke r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r37);

        $r40 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r40, "UTF-8");

     label113:
        $r45 = new java.lang.StringBuilder;

        $r8 = $r45;

     label114:
        r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r36);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>(r36);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        r36 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label115:
        i2 = i2 + 1;

        goto label094;

     label116:
        $r45 = new java.lang.StringBuilder;

        $r8 = $r45;

     label117:
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector fnurlList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>(i2);

        $r24 = (java.lang.String) $r39;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r24 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label118:
        i2 = i2 + 1;

        goto label103;

     label119:
        r41 := @caughtexception;

     label120:
        virtualinvoke r41.<java.lang.Exception: void printStackTrace()>();

        goto label017;

     label121:
        r42 := @caughtexception;

        virtualinvoke r42.<java.lang.Exception: void printStackTrace()>();

        goto label019;

     label122:
        r43 := @caughtexception;

        virtualinvoke r43.<java.lang.Exception: void printStackTrace()>();

        goto label109;

     label123:
        r44 := @caughtexception;

        virtualinvoke r44.<java.lang.Exception: void printStackTrace()>();

     label124:
        goto label111;

     label125:
        $r17 := @caughtexception;

        r12 = r2;

        goto label015;

     label126:
        r16 := @caughtexception;

        r12 = r2;

        goto label013;

        catch java.lang.Throwable from label001 to label002 with label020;
        catch java.lang.Exception from label003 to label004 with label012;
        catch java.lang.Exception from label005 to label006 with label012;
        catch java.lang.Exception from label007 to label008 with label012;
        catch java.lang.Exception from label009 to label010 with label012;
        catch java.lang.Exception from label011 to label012 with label012;
        catch java.lang.Throwable from label003 to label012 with label014;
        catch java.lang.Throwable from label013 to label014 with label014;
        catch java.lang.Exception from label016 to label017 with label119;
        catch java.lang.Throwable from label016 to label017 with label020;
        catch java.lang.Exception from label018 to label019 with label121;
        catch java.lang.Throwable from label018 to label019 with label020;
        catch java.lang.Throwable from label019 to label020 with label020;
        catch java.lang.Exception from label021 to label022 with label012;
        catch java.lang.Exception from label023 to label024 with label012;
        catch java.lang.Exception from label025 to label026 with label012;
        catch java.lang.Exception from label027 to label028 with label012;
        catch java.lang.Throwable from label021 to label028 with label014;
        catch java.lang.Exception from label029 to label030 with label126;
        catch java.lang.Throwable from label028 to label030 with label125;
        catch java.lang.Exception from label032 to label033 with label012;
        catch java.lang.Exception from label034 to label036 with label012;
        catch java.lang.Exception from label037 to label038 with label012;
        catch java.lang.Exception from label039 to label040 with label012;
        catch java.lang.Exception from label041 to label042 with label012;
        catch java.lang.Exception from label043 to label044 with label012;
        catch java.lang.Exception from label045 to label046 with label012;
        catch java.lang.Exception from label047 to label048 with label012;
        catch java.lang.Exception from label049 to label051 with label012;
        catch java.lang.Exception from label052 to label054 with label012;
        catch java.lang.Exception from label055 to label057 with label012;
        catch java.lang.Exception from label058 to label060 with label012;
        catch java.lang.Exception from label061 to label063 with label012;
        catch java.lang.Exception from label064 to label066 with label012;
        catch java.lang.Exception from label067 to label069 with label012;
        catch java.lang.Exception from label070 to label072 with label012;
        catch java.lang.Exception from label073 to label075 with label012;
        catch java.lang.Exception from label076 to label078 with label012;
        catch java.lang.Exception from label079 to label081 with label012;
        catch java.lang.Exception from label082 to label084 with label012;
        catch java.lang.Exception from label085 to label087 with label012;
        catch java.lang.Exception from label088 to label090 with label012;
        catch java.lang.Exception from label091 to label093 with label012;
        catch java.lang.Exception from label094 to label095 with label012;
        catch java.lang.Exception from label096 to label097 with label012;
        catch java.lang.Exception from label098 to label099 with label012;
        catch java.lang.Exception from label100 to label101 with label012;
        catch java.lang.Exception from label101 to label102 with label012;
        catch java.lang.Exception from label103 to label104 with label012;
        catch java.lang.Exception from label106 to label107 with label012;
        catch java.lang.Throwable from label031 to label107 with label014;
        catch java.lang.Exception from label108 to label109 with label122;
        catch java.lang.Throwable from label108 to label109 with label020;
        catch java.lang.Exception from label110 to label111 with label123;
        catch java.lang.Throwable from label110 to label111 with label020;
        catch java.lang.Exception from label112 to label113 with label012;
        catch java.lang.Exception from label114 to label115 with label012;
        catch java.lang.Exception from label117 to label118 with label012;
        catch java.lang.Throwable from label112 to label118 with label014;
        catch java.lang.Throwable from label120 to label124 with label020;
    }

    private void getParams()
    {
        android.os.Bundle $r6;
        android.content.pm.PackageManager $r3;
        android.content.ComponentName r1;
        java.lang.Exception r2;
        android.content.pm.ServiceInfo $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        java.lang.String $r8;
        com.test.httputil.HttpUtilService r0;

        r0 := @this: com.test.httputil.HttpUtilService;

        r1 = new android.content.ComponentName;

     label1:
        specialinvoke r1.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, class "Lcom/test/httputil/HttpUtilService;");

        $r3 = virtualinvoke r0.<com.test.httputil.HttpUtilService: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>(r1, 128);

     label2:
        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("&cfrom=");

        $r6 = $r4.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        $r7 = virtualinvoke $r6.<android.os.Bundle: java.lang.Object get(java.lang.String)>("cfrom");

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.test.httputil.HttpUtilService: java.lang.String cfrom> = $r8;

     label4:
        return;

     label5:
        r2 := @caughtexception;

        $r8 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r8);

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private boolean isUpdateTimer()
    {
        java.util.Date r1, r2, $r3;
        long $l0;
        byte $b1;
        int $i2, $i3;
        com.test.httputil.HttpUtilService r0;

        r0 := @this: com.test.httputil.HttpUtilService;

        specialinvoke r0.<com.test.httputil.HttpUtilService: void loadSetting()>();

        $l0 = r0.<com.test.httputil.HttpUtilService: long updatePeriodTime>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        $l0 = r0.<com.test.httputil.HttpUtilService: long periodTime>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        return 1;

     label1:
        r1 = new java.util.Date;

        r2 = r1;

        $l0 = r0.<com.test.httputil.HttpUtilService: long updatePeriodTime>;

        specialinvoke r1.<java.util.Date: void <init>(long)>($l0);

        $r3 = new java.util.Date;

        r1 = $r3;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $i2 = virtualinvoke r1.<java.util.Date: int getYear()>();

        $i3 = virtualinvoke r2.<java.util.Date: int getYear()>();

        if $i2 > $i3 goto label2;

        $i2 = virtualinvoke r1.<java.util.Date: int getMonth()>();

        $i3 = virtualinvoke r2.<java.util.Date: int getMonth()>();

        if $i2 > $i3 goto label2;

        $i2 = virtualinvoke r1.<java.util.Date: int getDate()>();

        $i3 = virtualinvoke r2.<java.util.Date: int getDate()>();

        if $i2 > $i3 goto label2;

        return 0;

     label2:
        return 1;
    }

    private void loadSetting()
    {
        long $l0;
        com.test.httputil.HttpUtilService r0;
        android.content.SharedPreferences $r1;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r1 = virtualinvoke r0.<com.test.httputil.HttpUtilService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("httputilsetting", 0);

        $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("updateTime", -1L);

        r0.<com.test.httputil.HttpUtilService: long updatePeriodTime> = $l0;

        $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("periodTime", -1L);

        r0.<com.test.httputil.HttpUtilService: long periodTime> = $l0;

        return;
    }

    private void removeDupList()
    {
        java.util.HashSet r1;
        java.util.Vector $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String r5;
        com.test.httputil.HttpUtilService r0;
        boolean $z0;

        r0 := @this: com.test.httputil.HttpUtilService;

        r1 = new java.util.HashSet;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        specialinvoke r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = virtualinvoke r1.<java.util.HashSet: java.util.Iterator iterator()>();

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        virtualinvoke $r2.<java.util.Vector: void clear()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        virtualinvoke $r2.<java.util.Vector: boolean add(java.lang.Object)>(r5);

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", r5);

        goto label1;
    }

    private void requestUrl(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.util.zip.GZIPInputStream r12, r22, $r58;
        org.apache.http.StatusLine $r24;
        java.lang.Integer $r44;
        java.util.Vector $r38;
        com.test.httputil.HttpUtilService r0;
        java.lang.Exception $r25, r26, r36, r40, r45, r47, r48, r49, r50, r51, $r52, $r53;
        java.lang.StringBuilder $r19, $r54;
        java.lang.Throwable $r27;
        long $l5;
        java.lang.StringBuffer r34, $r61;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r17, $r18, $r20, $r32, $r41, $r42, $r43, $r46;
        java.io.InputStreamReader r21, $r59;
        org.apache.http.HttpResponse $r23;
        java.io.BufferedReader r33, $r60;
        org.apache.http.impl.client.DefaultHttpClient r13, $r57;
        org.apache.http.params.BasicHttpParams r14, $r56;
        java.util.Random r37, $r62;
        org.apache.http.Header $r31;
        org.json.JSONObject r15, $r63;
        boolean $z0;
        org.apache.http.Header[] $r30;
        org.apache.http.HttpEntity $r28;
        org.apache.http.client.methods.HttpGet r16, $r55;
        java.lang.String[] $r35;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r39;
        java.io.InputStream $r29;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r17 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.String;

        $i1 := @parameter5: int;

        $r4 := @parameter6: java.lang.String;

        $r5 := @parameter7: java.lang.String;

        $r6 := @parameter8: java.lang.String;

        $r18 := @parameter9: java.lang.String;

        $r7 := @parameter10: java.lang.String;

        $r8 := @parameter11: java.lang.String;

        $i2 := @parameter12: int;

        $r9 := @parameter13: java.lang.String;

        $r10 := @parameter14: java.lang.String;

        $r11 := @parameter15: java.lang.String;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("requestUrl url=");

        $r19 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r20);

        r21 = null;

        r22 = null;

        if $r17 == null goto label196;

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label001;

        return;

     label001:
        $r20 = virtualinvoke $r17.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

     label002:
        $r55 = new org.apache.http.client.methods.HttpGet;

     label003:
        r16 = $r55;

     label004:
        specialinvoke $r55.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r20);

     label005:
        $r56 = new org.apache.http.params.BasicHttpParams;

     label006:
        r14 = $r56;

     label007:
        specialinvoke $r56.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r14, 10000);

        virtualinvoke r16.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("User-Agent", $r1);

        virtualinvoke r16.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Cookie", $r2);

        virtualinvoke r16.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("referer", $r3);

     label008:
        $r57 = new org.apache.http.impl.client.DefaultHttpClient;

     label009:
        r13 = $r57;

     label010:
        specialinvoke $r57.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r14);

        $r23 = interfaceinvoke r13.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r16);

        $r24 = interfaceinvoke $r23.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i3 = interfaceinvoke $r24.<org.apache.http.StatusLine: int getStatusCode()>();

     label011:
        if $i3 == 200 goto label025;

     label012:
        r36 = new java.lang.Exception;

     label013:
        $r25 = r36;

     label014:
        specialinvoke r36.<java.lang.Exception: void <init>(java.lang.String)>("network connection error");

        throw $r25;

     label015:
        r26 := @caughtexception;

     label016:
        $r17 = virtualinvoke r26.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r17);

        r36 = new java.lang.Exception;

     label017:
        $r25 = r36;

     label018:
        $r17 = virtualinvoke r26.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r36.<java.lang.Exception: void <init>(java.lang.String)>($r17);

        throw $r25;

     label019:
        $r27 := @caughtexception;

     label020:
        if r21 == null goto label022;

     label021:
        virtualinvoke r21.<java.io.InputStreamReader: void close()>();

     label022:
        if r22 == null goto label024;

     label023:
        virtualinvoke r22.<java.util.zip.GZIPInputStream: void close()>();

     label024:
        throw $r27;

     label025:
        $r28 = interfaceinvoke $r23.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r29 = interfaceinvoke $r28.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r30 = interfaceinvoke $r23.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Encoding");

     label026:
        $i3 = lengthof $r30;

     label027:
        if $i3 == 0 goto label066;

     label028:
        $r31 = $r30[0];

     label029:
        $r32 = interfaceinvoke $r31.<org.apache.http.Header: java.lang.String getValue()>();

     label030:
        if $r32 == null goto label066;

     label031:
        $r31 = $r30[0];

     label032:
        $r32 = interfaceinvoke $r31.<org.apache.http.Header: java.lang.String getValue()>();

        $r32 = virtualinvoke $r32.<java.lang.String: java.lang.String toLowerCase()>();

        $i3 = virtualinvoke $r32.<java.lang.String: int indexOf(java.lang.String)>("gzip");

     label033:
        if $i3 <= -1 goto label066;

     label034:
        $r58 = new java.util.zip.GZIPInputStream;

     label035:
        r12 = $r58;

     label036:
        specialinvoke $r58.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r29);

     label037:
        $r59 = new java.io.InputStreamReader;

     label038:
        specialinvoke $r59.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r12, "UTF-8");

     label039:
        r22 = r12;

        r21 = $r59;

     label040:
        if $i0 != 1 goto label111;

     label041:
        $r60 = new java.io.BufferedReader;

     label042:
        r33 = $r60;

     label043:
        specialinvoke $r60.<java.io.BufferedReader: void <init>(java.io.Reader)>(r21);

     label044:
        $r61 = new java.lang.StringBuffer;

     label045:
        r34 = $r61;

     label046:
        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

     label047:
        $r3 = virtualinvoke r33.<java.io.BufferedReader: java.lang.String readLine()>();

     label048:
        if $r3 != null goto label069;

     label049:
        $r3 = virtualinvoke r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.test.httputil.HttpUtilService: void findUrlListByStr(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r17, $r6, $r7, $r8, $r3, $r10, $r11);

        $r3 = r0.<com.test.httputil.HttpUtilService: java.lang.String qidstr>;

     label050:
        if $i1 != 1 goto label054;

     label051:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label052:
        $r18 = $r17;

        $i3 = 0;

     label053:
        if $i3 < $i0 goto label071;

     label054:
        if $i2 != 1 goto label060;

     label055:
        $r35 = newarray (java.lang.String)[5];

     label056:
        $r35 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label057:
        $i0 = 0;

     label058:
        $i3 = lengthof $r35;

     label059:
        if $i0 < $i3 goto label097;

     label060:
        if r21 == null goto label062;

     label061:
        virtualinvoke r21.<java.io.InputStreamReader: void close()>();

     label062:
        if r22 == null goto label196;

     label063:
        virtualinvoke r22.<java.util.zip.GZIPInputStream: void close()>();

     label064:
        return;

     label065:
        r36 := @caughtexception;

        virtualinvoke r36.<java.lang.Exception: void printStackTrace()>();

        return;

     label066:
        $r59 = new java.io.InputStreamReader;

     label067:
        specialinvoke $r59.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r29, "UTF-8");

     label068:
        r21 = $r59;

        goto label040;

     label069:
        virtualinvoke r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label070:
        goto label047;

     label071:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r3, 3, $r1, $r2, $r18, $i1, $r4, $r5, $r6, $r3, $r7, $r8, $i2, $r9, $r10, $r11);

     label072:
        $r18 = $r3;

     label073:
        $r54 = new java.lang.StringBuilder;

     label074:
        $r19 = $r54;

     label075:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("pn=");

     label076:
        $i4 = $i3 + 1;

        $i4 = $i4 * 10;

     label077:
        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label078:
        $r54 = new java.lang.StringBuilder;

     label079:
        $r19 = $r54;

     label080:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("pn=");

     label081:
        $i4 = $i3 + 2;

        $i4 = $i4 * 10;

     label082:
        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r32 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r20, $r32);

     label083:
        $r3 = $r20;

     label084:
        $r54 = new java.lang.StringBuilder;

     label085:
        $r19 = $r54;

     label086:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("replace url ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r20);

     label087:
        $r62 = new java.util.Random;

     label088:
        r37 = $r62;

     label089:
        specialinvoke $r62.<java.util.Random: void <init>()>();

        $i4 = virtualinvoke r37.<java.util.Random: int nextInt(int)>(10);

     label090:
        $i4 = $i4 * 1000;

     label091:
        $r54 = new java.lang.StringBuilder;

     label092:
        $r19 = $r54;

     label093:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("sleep time ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r20);

     label094:
        $l5 = (long) $i4;

     label095:
        staticinvoke <java.lang.Thread: void sleep(long)>($l5);

     label096:
        $i3 = $i3 + 1;

        goto label053;

     label097:
        $r54 = new java.lang.StringBuilder;

     label098:
        $r19 = $r54;

     label099:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("href url ");

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector hrefList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r18 = (java.lang.String) $r39;

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r18);

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector hrefList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r18 = (java.lang.String) $r39;

        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r18, 3, $r1, $r2, $r17, $i1, $r4, $r5, $r6, $r3, $r7, $r8, $i2, $r9, $r10, $r11);

     label100:
        $r62 = new java.util.Random;

     label101:
        r37 = $r62;

     label102:
        specialinvoke $r62.<java.util.Random: void <init>()>();

        $i3 = virtualinvoke r37.<java.util.Random: int nextInt(int)>(10);

     label103:
        $i3 = $i3 * 1000;

     label104:
        $r54 = new java.lang.StringBuilder;

     label105:
        $r19 = $r54;

     label106:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("lx sleep time ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r18);

     label107:
        $l5 = (long) $i3;

     label108:
        staticinvoke <java.lang.Thread: void sleep(long)>($l5);

     label109:
        $i0 = $i0 + 1;

        goto label058;

     label110:
        r40 := @caughtexception;

        virtualinvoke r40.<java.lang.Exception: void printStackTrace()>();

        goto label062;

     label111:
        if $i0 != 2 goto label182;

     label112:
        $r60 = new java.io.BufferedReader;

     label113:
        r33 = $r60;

     label114:
        specialinvoke $r60.<java.io.BufferedReader: void <init>(java.io.Reader)>(r21);

     label115:
        $r61 = new java.lang.StringBuffer;

     label116:
        r34 = $r61;

     label117:
        specialinvoke $r61.<java.lang.StringBuffer: void <init>()>();

     label118:
        $r17 = virtualinvoke r33.<java.io.BufferedReader: java.lang.String readLine()>();

     label119:
        if $r17 != null goto label153;

     label120:
        $r17 = virtualinvoke r34.<java.lang.StringBuffer: java.lang.String toString()>();

     label121:
        $r63 = new org.json.JSONObject;

     label122:
        r15 = $r63;

     label123:
        specialinvoke $r63.<org.json.JSONObject: void <init>(java.lang.String)>($r17);

        $r41 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("click");

        $r17 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("cmtm");

        $r32 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("mtw");

        $r42 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r32, "UTF-8");

        $r32 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("abc");

        staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r32, "UTF-8");

        $r41 = virtualinvoke $r41.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label124:
        if $z0 == 0 goto label157;

     label125:
        $r41 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("seq");

        $r43 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("dseq");

     label126:
        $i0 = 0;

        $i3 = 0;

     label127:
        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r41);

        $i4 = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

     label128:
        $i0 = $i4;

     label129:
        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r43);

        $i4 = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

     label130:
        $i3 = $i4;

     label131:
        if $i3 == -1 goto label155;

     label132:
        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector downurlList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>($i3);

        $r41 = (java.lang.String) $r39;

     label133:
        $r43 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label134:
        if $z0 == 0 goto label141;

     label135:
        $r54 = new java.lang.StringBuilder;

     label136:
        $r19 = $r54;

     label137:
        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r41);

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>($r41);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r41 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label138:
        $r54 = new java.lang.StringBuilder;

     label139:
        $r19 = $r54;

     label140:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("ck is : ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r42 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r42);

     label141:
        $r42 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("mul");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r42);

     label142:
        if $i0 <= 0 goto label180;

        $i3 = 0;

     label143:
        if $i3 < $i0 goto label159;

     label144:
        $r54 = new java.lang.StringBuilder;

     label145:
        $r19 = $r54;

     label146:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("requestUrl ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" access success");

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r17);

     label147:
        if r21 == null goto label149;

     label148:
        virtualinvoke r21.<java.io.InputStreamReader: void close()>();

     label149:
        if r22 == null goto label196;

     label150:
        virtualinvoke r22.<java.util.zip.GZIPInputStream: void close()>();

     label151:
        return;

     label152:
        r45 := @caughtexception;

        virtualinvoke r45.<java.lang.Exception: void printStackTrace()>();

        return;

     label153:
        virtualinvoke r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label154:
        goto label118;

     label155:
        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>($i0);

        $r41 = (java.lang.String) $r39;

     label156:
        goto label133;

     label157:
        $r42 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("targeturl");

        $r42 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r42, "UTF-8");

     label158:
        $r41 = $r42;

        goto label141;

     label159:
        $i4 = $i3 + 1;

     label160:
        $r42 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r42 = virtualinvoke r15.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r42);

        $r42 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r42, "UTF-8");

        $r38 = r0.<com.test.httputil.HttpUtilService: java.util.Vector urlList>;

        $r39 = virtualinvoke $r38.<java.util.Vector: java.lang.Object get(int)>($i3);

        $r43 = (java.lang.String) $r39;

     label161:
        $r41 = $r43;

     label162:
        $r46 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("1");

     label163:
        if $z0 == 0 goto label167;

     label164:
        $r54 = new java.lang.StringBuilder;

     label165:
        $r19 = $r54;

     label166:
        $r41 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r43);

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>($r41);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r41 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label167:
        $r54 = new java.lang.StringBuilder;

     label168:
        $r19 = $r54;

     label169:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("ck is : ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r42 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r42);

        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r41, 3, $r1, $r2, $r3, $i1, $r4, $r5, $r6, $r18, $r7, $r8, $i2, $r9, $r10, $r11);

     label170:
        $r62 = new java.util.Random;

     label171:
        r37 = $r62;

     label172:
        specialinvoke $r62.<java.util.Random: void <init>()>();

        $i4 = virtualinvoke r37.<java.util.Random: int nextInt(int)>(10);

     label173:
        $i4 = $i4 * 1000;

     label174:
        $r54 = new java.lang.StringBuilder;

     label175:
        $r19 = $r54;

     label176:
        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("sleep time ");

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r42 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r42);

     label177:
        $l5 = (long) $i4;

     label178:
        staticinvoke <java.lang.Thread: void sleep(long)>($l5);

     label179:
        $i3 = $i3 + 1;

        goto label143;

     label180:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void requestUrl(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r41, 3, $r1, $r2, $r3, $i1, $r4, $r5, $r6, $r18, $r7, $r8, $i2, $r9, $r10, $r11);

     label181:
        goto label144;

     label182:
        if $i0 != 3 goto label144;

        if r21 == null goto label184;

     label183:
        virtualinvoke r21.<java.io.InputStreamReader: void close()>();

     label184:
        if r22 == null goto label196;

     label185:
        virtualinvoke r22.<java.util.zip.GZIPInputStream: void close()>();

     label186:
        return;

     label187:
        r47 := @caughtexception;

        virtualinvoke r47.<java.lang.Exception: void printStackTrace()>();

        return;

     label188:
        r48 := @caughtexception;

        virtualinvoke r48.<java.lang.Exception: void printStackTrace()>();

        goto label184;

     label189:
        r49 := @caughtexception;

        virtualinvoke r49.<java.lang.Exception: void printStackTrace()>();

        goto label022;

     label190:
        r50 := @caughtexception;

        virtualinvoke r50.<java.lang.Exception: void printStackTrace()>();

        goto label024;

     label191:
        r51 := @caughtexception;

        virtualinvoke r51.<java.lang.Exception: void printStackTrace()>();

        goto label149;

     label192:
        $r27 := @caughtexception;

        r22 = r12;

        goto label020;

     label193:
        r26 := @caughtexception;

        r22 = r12;

        goto label016;

     label194:
        $r52 := @caughtexception;

        goto label179;

     label195:
        $r53 := @caughtexception;

        goto label131;

     label196:
        return;

        catch java.lang.Exception from label001 to label002 with label015;
        catch java.lang.Exception from label004 to label005 with label015;
        catch java.lang.Exception from label007 to label008 with label015;
        catch java.lang.Exception from label010 to label011 with label015;
        catch java.lang.Exception from label014 to label015 with label015;
        catch java.lang.Throwable from label001 to label003 with label019;
        catch java.lang.Throwable from label004 to label006 with label019;
        catch java.lang.Throwable from label007 to label009 with label019;
        catch java.lang.Throwable from label010 to label011 with label019;
        catch java.lang.Throwable from label012 to label013 with label019;
        catch java.lang.Throwable from label014 to label015 with label019;
        catch java.lang.Throwable from label016 to label017 with label019;
        catch java.lang.Throwable from label018 to label019 with label019;
        catch java.lang.Exception from label021 to label022 with label189;
        catch java.lang.Exception from label023 to label024 with label190;
        catch java.lang.Exception from label025 to label027 with label015;
        catch java.lang.Exception from label028 to label030 with label015;
        catch java.lang.Exception from label031 to label033 with label015;
        catch java.lang.Exception from label036 to label037 with label015;
        catch java.lang.Throwable from label025 to label026 with label019;
        catch java.lang.Throwable from label029 to label030 with label019;
        catch java.lang.Throwable from label032 to label033 with label019;
        catch java.lang.Throwable from label034 to label035 with label019;
        catch java.lang.Throwable from label036 to label037 with label019;
        catch java.lang.Exception from label038 to label039 with label193;
        catch java.lang.Throwable from label037 to label038 with label192;
        catch java.lang.Throwable from label038 to label039 with label192;
        catch java.lang.Exception from label043 to label044 with label015;
        catch java.lang.Exception from label046 to label048 with label015;
        catch java.lang.Exception from label049 to label050 with label015;
        catch java.lang.Exception from label051 to label052 with label015;
        catch java.lang.Exception from label056 to label057 with label015;
        catch java.lang.Exception from label058 to label059 with label015;
        catch java.lang.Throwable from label041 to label042 with label019;
        catch java.lang.Throwable from label043 to label045 with label019;
        catch java.lang.Throwable from label046 to label048 with label019;
        catch java.lang.Throwable from label049 to label050 with label019;
        catch java.lang.Throwable from label051 to label052 with label019;
        catch java.lang.Throwable from label055 to label057 with label019;
        catch java.lang.Exception from label061 to label062 with label110;
        catch java.lang.Exception from label063 to label064 with label065;
        catch java.lang.Exception from label067 to label068 with label015;
        catch java.lang.Exception from label069 to label070 with label015;
        catch java.lang.Exception from label071 to label072 with label015;
        catch java.lang.Exception from label075 to label076 with label015;
        catch java.lang.Exception from label077 to label078 with label015;
        catch java.lang.Exception from label080 to label081 with label015;
        catch java.lang.Exception from label082 to label083 with label015;
        catch java.lang.Exception from label086 to label087 with label015;
        catch java.lang.Exception from label089 to label090 with label015;
        catch java.lang.Exception from label093 to label094 with label015;
        catch java.lang.Exception from label095 to label096 with label015;
        catch java.lang.Exception from label099 to label100 with label015;
        catch java.lang.Exception from label102 to label103 with label015;
        catch java.lang.Exception from label106 to label107 with label015;
        catch java.lang.Exception from label108 to label109 with label015;
        catch java.lang.Throwable from label066 to label067 with label019;
        catch java.lang.Throwable from label067 to label068 with label019;
        catch java.lang.Throwable from label069 to label070 with label019;
        catch java.lang.Throwable from label071 to label072 with label019;
        catch java.lang.Throwable from label073 to label074 with label019;
        catch java.lang.Throwable from label075 to label076 with label019;
        catch java.lang.Throwable from label077 to label079 with label019;
        catch java.lang.Throwable from label080 to label081 with label019;
        catch java.lang.Throwable from label082 to label083 with label019;
        catch java.lang.Throwable from label084 to label085 with label019;
        catch java.lang.Throwable from label086 to label088 with label019;
        catch java.lang.Throwable from label089 to label090 with label019;
        catch java.lang.Throwable from label091 to label092 with label019;
        catch java.lang.Throwable from label093 to label094 with label019;
        catch java.lang.Throwable from label095 to label096 with label019;
        catch java.lang.Throwable from label097 to label098 with label019;
        catch java.lang.Throwable from label099 to label101 with label019;
        catch java.lang.Throwable from label102 to label103 with label019;
        catch java.lang.Throwable from label104 to label105 with label019;
        catch java.lang.Throwable from label106 to label107 with label019;
        catch java.lang.Throwable from label108 to label109 with label019;
        catch java.lang.Exception from label114 to label115 with label015;
        catch java.lang.Exception from label117 to label119 with label015;
        catch java.lang.Exception from label120 to label121 with label015;
        catch java.lang.Exception from label123 to label124 with label015;
        catch java.lang.Exception from label125 to label126 with label015;
        catch java.lang.Throwable from label112 to label113 with label019;
        catch java.lang.Throwable from label114 to label116 with label019;
        catch java.lang.Throwable from label117 to label119 with label019;
        catch java.lang.Throwable from label120 to label122 with label019;
        catch java.lang.Throwable from label123 to label124 with label019;
        catch java.lang.Throwable from label125 to label126 with label019;
        catch java.lang.Exception from label127 to label128 with label195;
        catch java.lang.Exception from label129 to label130 with label195;
        catch java.lang.Throwable from label127 to label128 with label019;
        catch java.lang.Throwable from label129 to label130 with label019;
        catch java.lang.Exception from label132 to label133 with label015;
        catch java.lang.Exception from label133 to label134 with label015;
        catch java.lang.Exception from label137 to label138 with label015;
        catch java.lang.Exception from label140 to label142 with label015;
        catch java.lang.Exception from label146 to label147 with label015;
        catch java.lang.Throwable from label132 to label133 with label019;
        catch java.lang.Throwable from label133 to label134 with label019;
        catch java.lang.Throwable from label135 to label136 with label019;
        catch java.lang.Throwable from label137 to label138 with label019;
        catch java.lang.Throwable from label138 to label139 with label019;
        catch java.lang.Throwable from label140 to label142 with label019;
        catch java.lang.Throwable from label144 to label145 with label019;
        catch java.lang.Throwable from label146 to label147 with label019;
        catch java.lang.Exception from label148 to label149 with label191;
        catch java.lang.Exception from label150 to label151 with label152;
        catch java.lang.Exception from label153 to label154 with label015;
        catch java.lang.Exception from label155 to label156 with label015;
        catch java.lang.Exception from label157 to label158 with label015;
        catch java.lang.Throwable from label153 to label154 with label019;
        catch java.lang.Throwable from label155 to label156 with label019;
        catch java.lang.Throwable from label157 to label158 with label019;
        catch java.lang.Exception from label160 to label161 with label194;
        catch java.lang.Exception from label162 to label163 with label194;
        catch java.lang.Exception from label166 to label167 with label194;
        catch java.lang.Exception from label169 to label170 with label194;
        catch java.lang.Exception from label172 to label173 with label194;
        catch java.lang.Exception from label176 to label177 with label194;
        catch java.lang.Exception from label178 to label179 with label194;
        catch java.lang.Throwable from label160 to label161 with label019;
        catch java.lang.Throwable from label162 to label163 with label019;
        catch java.lang.Throwable from label164 to label165 with label019;
        catch java.lang.Throwable from label166 to label167 with label019;
        catch java.lang.Throwable from label167 to label168 with label019;
        catch java.lang.Throwable from label169 to label171 with label019;
        catch java.lang.Throwable from label172 to label173 with label019;
        catch java.lang.Throwable from label174 to label175 with label019;
        catch java.lang.Throwable from label176 to label177 with label019;
        catch java.lang.Throwable from label178 to label179 with label019;
        catch java.lang.Exception from label180 to label181 with label015;
        catch java.lang.Throwable from label180 to label181 with label019;
        catch java.lang.Exception from label183 to label184 with label188;
        catch java.lang.Exception from label185 to label186 with label187;
    }

    private void saveSetting()
    {
        android.content.SharedPreferences$Editor $r2;
        android.content.SharedPreferences $r1;
        long $l0;
        com.test.httputil.HttpUtilService r0;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r1 = virtualinvoke r0.<com.test.httputil.HttpUtilService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("httputilsetting", 0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $l0 = r0.<com.test.httputil.HttpUtilService: long periodTime>;

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("periodTime", $l0);

        $l0 = r0.<com.test.httputil.HttpUtilService: long updatePeriodTime>;

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("updateTime", $l0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    private void startLogTimerTask()
    {
        long $l0;
        java.util.Timer $r2;
        com.test.httputil.HttpUtilService r0;
        com.test.httputil.HttpUtilService$3 $r1;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer>;

        if $r2 == null goto label1;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer>;

        virtualinvoke $r2.<java.util.Timer: void cancel()>();

     label1:
        $r2 = new java.util.Timer;

        specialinvoke $r2.<java.util.Timer: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer> = $r2;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer>;

        $r1 = new com.test.httputil.HttpUtilService$3;

        specialinvoke $r1.<com.test.httputil.HttpUtilService$3: void <init>(com.test.httputil.HttpUtilService)>(r0);

        $l0 = r0.<com.test.httputil.HttpUtilService: long logTime>;

        virtualinvoke $r2.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r1, 0L, $l0);

        return;
    }

    private void startTimerTask()
    {
        long $l0;
        java.util.Timer $r2;
        com.test.httputil.HttpUtilService r0;
        com.test.httputil.HttpUtilService$2 $r1;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer timer>;

        if $r2 == null goto label1;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer timer>;

        virtualinvoke $r2.<java.util.Timer: void cancel()>();

     label1:
        $r2 = new java.util.Timer;

        specialinvoke $r2.<java.util.Timer: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer timer> = $r2;

        $r2 = r0.<com.test.httputil.HttpUtilService: java.util.Timer timer>;

        $r1 = new com.test.httputil.HttpUtilService$2;

        specialinvoke $r1.<com.test.httputil.HttpUtilService$2: void <init>(com.test.httputil.HttpUtilService)>(r0);

        $l0 = r0.<com.test.httputil.HttpUtilService: long periodTime>;

        virtualinvoke $r2.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r1, 0L, $l0);

        return;
    }

    private void updateTimer() throws java.lang.Exception
    {
        org.apache.http.impl.client.DefaultHttpClient r3, $r27;
        java.util.zip.GZIPInputStream r2, r9, $r28;
        org.apache.http.params.BasicHttpParams r4, $r26;
        java.util.Date $r20, $r33;
        org.apache.http.StatusLine $r11;
        org.apache.http.Header $r19;
        org.json.JSONObject r5, $r32;
        com.test.httputil.HttpUtilService r0;
        boolean $z0;
        org.apache.http.Header[] $r18;
        org.apache.http.HttpEntity $r16;
        java.lang.Exception $r12, r13, r21, r22, r23, r24;
        org.apache.http.client.methods.HttpGet r6, $r25;
        java.lang.Throwable $r15;
        long $l1;
        java.lang.StringBuffer r7, $r31;
        int $i0;
        java.lang.String $r14;
        java.io.InputStreamReader r8, $r29;
        org.apache.http.HttpResponse $r10;
        java.io.BufferedReader r1, $r30;
        java.io.InputStream $r17;

        r0 := @this: com.test.httputil.HttpUtilService;

        $z0 = specialinvoke r0.<com.test.httputil.HttpUtilService: boolean isUpdateTimer()>();

        if $z0 != 0 goto label01;

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", "no need to update period");

        return;

     label01:
        r8 = null;

        r9 = null;

     label02:
        $r25 = new org.apache.http.client.methods.HttpGet;

     label03:
        r6 = $r25;

     label04:
        specialinvoke $r25.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>("http://kjs123.sinaapp.com/sdkcfg.php?v=3");

     label05:
        $r26 = new org.apache.http.params.BasicHttpParams;

     label06:
        r4 = $r26;

     label07:
        specialinvoke $r26.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r4, 10000);

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip, deflate");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept-Language", "zh-CN");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("Accept", "text/html, application/xhtml+xml, */*");

        virtualinvoke r6.<org.apache.http.client.methods.HttpGet: void setHeader(java.lang.String,java.lang.String)>("User-Agent", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; MATP; MATP)");

     label08:
        $r27 = new org.apache.http.impl.client.DefaultHttpClient;

     label09:
        r3 = $r27;

     label10:
        specialinvoke $r27.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r4);

        $r10 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);

        $r11 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r11.<org.apache.http.StatusLine: int getStatusCode()>();

     label11:
        if $i0 == 200 goto label25;

     label12:
        r21 = new java.lang.Exception;

     label13:
        $r12 = r21;

     label14:
        specialinvoke r21.<java.lang.Exception: void <init>(java.lang.String)>("network connection error");

        throw $r12;

     label15:
        r13 := @caughtexception;

     label16:
        $r14 = virtualinvoke r13.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r14);

        r21 = new java.lang.Exception;

     label17:
        $r12 = r21;

     label18:
        $r14 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r21.<java.lang.Exception: void <init>(java.lang.String)>($r14);

        throw $r12;

     label19:
        $r15 := @caughtexception;

     label20:
        if r8 == null goto label22;

     label21:
        virtualinvoke r8.<java.io.InputStreamReader: void close()>();

     label22:
        if r9 == null goto label24;

     label23:
        virtualinvoke r9.<java.util.zip.GZIPInputStream: void close()>();

     label24:
        throw $r15;

     label25:
        $r16 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r17 = interfaceinvoke $r16.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r18 = interfaceinvoke $r10.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("Content-Encoding");

     label26:
        $i0 = lengthof $r18;

     label27:
        if $i0 == 0 goto label56;

     label28:
        $r19 = $r18[0];

     label29:
        $r14 = interfaceinvoke $r19.<org.apache.http.Header: java.lang.String getValue()>();

     label30:
        if $r14 == null goto label56;

     label31:
        $r19 = $r18[0];

     label32:
        $r14 = interfaceinvoke $r19.<org.apache.http.Header: java.lang.String getValue()>();

        $r14 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r14.<java.lang.String: int indexOf(java.lang.String)>("gzip");

     label33:
        if $i0 <= -1 goto label56;

     label34:
        $r28 = new java.util.zip.GZIPInputStream;

     label35:
        r2 = $r28;

     label36:
        specialinvoke $r28.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r17);

     label37:
        $r29 = new java.io.InputStreamReader;

     label38:
        specialinvoke $r29.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, "UTF-8");

     label39:
        r9 = r2;

        r8 = $r29;

     label40:
        $r30 = new java.io.BufferedReader;

     label41:
        r1 = $r30;

     label42:
        specialinvoke $r30.<java.io.BufferedReader: void <init>(java.io.Reader)>(r8);

     label43:
        $r31 = new java.lang.StringBuffer;

     label44:
        r7 = $r31;

     label45:
        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

     label46:
        $r14 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label47:
        if $r14 != null goto label59;

     label48:
        $r14 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label49:
        $r32 = new org.json.JSONObject;

     label50:
        r5 = $r32;

     label51:
        specialinvoke $r32.<org.json.JSONObject: void <init>(java.lang.String)>($r14);

        $i0 = virtualinvoke r5.<org.json.JSONObject: int getInt(java.lang.String)>("period");

     label52:
        if $i0 >= 0 goto label61;

     label53:
        r21 = new java.lang.Exception;

     label54:
        $r12 = r21;

     label55:
        specialinvoke r21.<java.lang.Exception: void <init>(java.lang.String)>("\u9519\u8bef\u7684\u5fc3\u8df3\u95f4\u9694\u65f6\u95f4");

        throw $r12;

     label56:
        $r29 = new java.io.InputStreamReader;

     label57:
        specialinvoke $r29.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r17, "UTF-8");

     label58:
        r8 = $r29;

        goto label40;

     label59:
        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label60:
        goto label46;

     label61:
        $i0 = $i0 * 1000;

        $l1 = (long) $i0;

     label62:
        r0.<com.test.httputil.HttpUtilService: long periodTime> = $l1;

     label63:
        $r33 = new java.util.Date;

     label64:
        $r20 = $r33;

     label65:
        specialinvoke $r33.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r20.<java.util.Date: long getTime()>();

        r0.<com.test.httputil.HttpUtilService: long updatePeriodTime> = $l1;

        specialinvoke r0.<com.test.httputil.HttpUtilService: void saveSetting()>();

        specialinvoke r0.<com.test.httputil.HttpUtilService: void startTimerTask()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", "updateTimer update period success");

     label66:
        if r8 == null goto label68;

     label67:
        virtualinvoke r8.<java.io.InputStreamReader: void close()>();

     label68:
        if r9 == null goto label77;

     label69:
        virtualinvoke r9.<java.util.zip.GZIPInputStream: void close()>();

     label70:
        return;

     label71:
        r21 := @caughtexception;

        virtualinvoke r21.<java.lang.Exception: void printStackTrace()>();

        return;

     label72:
        r22 := @caughtexception;

        virtualinvoke r22.<java.lang.Exception: void printStackTrace()>();

        goto label22;

     label73:
        r23 := @caughtexception;

        virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();

        goto label24;

     label74:
        r24 := @caughtexception;

        virtualinvoke r24.<java.lang.Exception: void printStackTrace()>();

        goto label68;

     label75:
        $r15 := @caughtexception;

        r9 = r2;

        goto label20;

     label76:
        r13 := @caughtexception;

        r9 = r2;

        goto label16;

     label77:
        return;

        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label06 with label19;
        catch java.lang.Throwable from label07 to label09 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
        catch java.lang.Exception from label21 to label22 with label72;
        catch java.lang.Exception from label23 to label24 with label73;
        catch java.lang.Exception from label25 to label27 with label15;
        catch java.lang.Exception from label28 to label30 with label15;
        catch java.lang.Exception from label31 to label33 with label15;
        catch java.lang.Exception from label36 to label37 with label15;
        catch java.lang.Throwable from label25 to label26 with label19;
        catch java.lang.Throwable from label29 to label30 with label19;
        catch java.lang.Throwable from label32 to label33 with label19;
        catch java.lang.Throwable from label34 to label35 with label19;
        catch java.lang.Throwable from label36 to label37 with label19;
        catch java.lang.Exception from label38 to label39 with label76;
        catch java.lang.Throwable from label37 to label38 with label75;
        catch java.lang.Throwable from label38 to label39 with label75;
        catch java.lang.Exception from label42 to label43 with label15;
        catch java.lang.Exception from label45 to label47 with label15;
        catch java.lang.Exception from label48 to label49 with label15;
        catch java.lang.Exception from label51 to label52 with label15;
        catch java.lang.Exception from label55 to label56 with label15;
        catch java.lang.Exception from label57 to label58 with label15;
        catch java.lang.Exception from label59 to label60 with label15;
        catch java.lang.Exception from label62 to label63 with label15;
        catch java.lang.Exception from label65 to label66 with label15;
        catch java.lang.Throwable from label40 to label41 with label19;
        catch java.lang.Throwable from label42 to label44 with label19;
        catch java.lang.Throwable from label45 to label47 with label19;
        catch java.lang.Throwable from label48 to label50 with label19;
        catch java.lang.Throwable from label51 to label52 with label19;
        catch java.lang.Throwable from label53 to label54 with label19;
        catch java.lang.Throwable from label55 to label57 with label19;
        catch java.lang.Throwable from label57 to label58 with label19;
        catch java.lang.Throwable from label59 to label60 with label19;
        catch java.lang.Throwable from label62 to label64 with label19;
        catch java.lang.Throwable from label65 to label66 with label19;
        catch java.lang.Exception from label67 to label68 with label74;
        catch java.lang.Exception from label69 to label70 with label71;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.content.Intent parameter0;
        com.test.httputil.HttpUtilService this;

        this := @this: com.test.httputil.HttpUtilService;

        parameter0 := @parameter0: android.content.Intent;

        parameter0 = virtualinvoke this.<com.test.httputil.HttpUtilService: android.content.Intent getIntent()>();

        this.<com.test.httputil.HttpUtilService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.test.httputil.HttpUtilService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.test.httputil.HttpUtilService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.test.httputil.HttpUtilService: android.os.IBinder ipcBinder_0> = parameter0;

        this.<com.test.httputil.HttpUtilService: android.os.IBinder ipcBinder_0> = parameter0;

        return parameter0;
    }

    public void onCreate()
    {
        com.test.httputil.HttpUtilService r0;

        r0 := @this: com.test.httputil.HttpUtilService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        return;
    }

    public void onDestroy()
    {
        java.util.Timer $r1;
        com.test.httputil.HttpUtilService r0;
        android.os.PowerManager$WakeLock $r2;
        java.lang.Exception $r3;

        r0 := @this: com.test.httputil.HttpUtilService;

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", "HttpUtilService.onDestroy");

        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer>;

        if $r1 == null goto label1;

        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer> = null;

     label1:
        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer timer>;

        if $r1 == null goto label2;

        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer timer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer timer> = null;

     label2:
        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer>;

        if $r1 == null goto label3;

        $r1 = r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer>;

        virtualinvoke $r1.<java.util.Timer: void cancel()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer logTimer> = null;

     label3:
        $r2 = r0.<com.test.httputil.HttpUtilService: android.os.PowerManager$WakeLock wl>;

     label4:
        if $r2 == null goto label6;

     label5:
        $r2 = r0.<com.test.httputil.HttpUtilService: android.os.PowerManager$WakeLock wl>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void release()>();

     label6:
        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;

     label7:
        $r3 := @caughtexception;

        goto label6;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void onStart(android.content.Intent, int)
    {
        android.content.Intent $r1;
        long $l1;
        java.util.Timer $r3, $r8;
        java.lang.Exception r2;
        android.os.PowerManager$WakeLock $r6;
        android.os.PowerManager r5;
        byte $b2;
        int $i0, $i3;
        com.test.httputil.HttpUtilService$1 $r9;
        java.lang.Object $r4;
        java.lang.String $r7;
        com.test.httputil.HttpUtilService r0;
        boolean $z0;

        r0 := @this: com.test.httputil.HttpUtilService;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.test.httputil.HttpUtilService: android.content.Intent getIntent()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", "HttpUtilService.onStart");

        specialinvoke r0.<com.test.httputil.HttpUtilService: void loadSetting()>();

        $l1 = r0.<com.test.httputil.HttpUtilService: long updatePeriodTime>;

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        r0.<com.test.httputil.HttpUtilService: long updatePeriodTime> = 5000L;

     label1:
        $l1 = r0.<com.test.httputil.HttpUtilService: long periodTime>;

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        r0.<com.test.httputil.HttpUtilService: long periodTime> = 5000L;

     label2:
        $z0 = <com.test.httputil.LogWriter: boolean debug>;

        if $z0 == 0 goto label3;

        r0.<com.test.httputil.HttpUtilService: long periodTime> = 120000L;

     label3:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void startTimerTask()>();

        $r3 = r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer>;

        if $r3 == null goto label4;

        $r3 = r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer>;

        virtualinvoke $r3.<java.util.Timer: void cancel()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer> = null;

     label4:
        $r8 = new java.util.Timer;

        specialinvoke $r8.<java.util.Timer: void <init>()>();

        r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer> = $r8;

        $r3 = r0.<com.test.httputil.HttpUtilService: java.util.Timer updatePeriodTimer>;

        $r9 = new com.test.httputil.HttpUtilService$1;

        specialinvoke $r9.<com.test.httputil.HttpUtilService$1: void <init>(com.test.httputil.HttpUtilService)>(r0);

        $l1 = r0.<com.test.httputil.HttpUtilService: long updatePeriodTime>;

        virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r9, 0L, $l1);

     label5:
        $r4 = virtualinvoke r0.<com.test.httputil.HttpUtilService: java.lang.Object getSystemService(java.lang.String)>("power");

        r5 = (android.os.PowerManager) $r4;

        $r6 = virtualinvoke r5.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "MyTag");

        r0.<com.test.httputil.HttpUtilService: android.os.PowerManager$WakeLock wl> = $r6;

        $r6 = r0.<com.test.httputil.HttpUtilService: android.os.PowerManager$WakeLock wl>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void acquire()>();

     label6:
        specialinvoke r0.<com.test.httputil.HttpUtilService: void startLogTimerTask()>();

        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>($r1, $i0);

        return;

     label7:
        r2 := @caughtexception;

        $r7 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>("httputil", $r7);

        goto label6;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public android.content.Intent getIntent()
    {
        android.content.Intent $r0;
        com.test.httputil.HttpUtilService this;

        this := @this: com.test.httputil.HttpUtilService;

        $r0 = this.<com.test.httputil.HttpUtilService: android.content.Intent ipcIntent>;

        return $r0;
    }

    public static void <clinit>()
    {
        <com.test.httputil.HttpUtilService: java.lang.String TAG> = "httputil";

        <com.test.httputil.HttpUtilService: int REQ_TYPE_URL> = 1;

        <com.test.httputil.HttpUtilService: int REQ_TYPE_NURL_URL> = 3;

        <com.test.httputil.HttpUtilService: int REQ_TYPE_NURL> = 2;

        <com.test.httputil.HttpUtilService: java.lang.String PERIOD_URL> = "http://kjs123.sinaapp.com/sdkcfg.php?v=3";

        <com.test.httputil.HttpUtilService: java.lang.String HTTPUTILSETTING> = "httputilsetting";

        <com.test.httputil.HttpUtilService: java.lang.String HTTPURLGET_URL> = "http://kjs123.sinaapp.com/sdc/newinit3.php?id=20";

        return;
    }
}
