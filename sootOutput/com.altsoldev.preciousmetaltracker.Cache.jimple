public class com.altsoldev.preciousmetaltracker.Cache extends java.lang.Object
{
    public static java.sql.Timestamp gold_lastRunTime;
    public static java.lang.String[] gold_table_data;
    public static java.sql.Timestamp palladium_lastRunTime;
    public static java.lang.String[] palladium_table_data;
    public static java.sql.Timestamp platinum_lastRunTime;
    public static java.lang.String[] platinum_table_data;
    public static java.sql.Timestamp silver_lastRunTime;
    public static java.lang.String[] silver_table_data;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp gold_lastRunTime> = null;

        $r0 = newarray (java.lang.String)[13];

        <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] gold_table_data> = $r0;

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp silver_lastRunTime> = null;

        $r0 = newarray (java.lang.String)[13];

        <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] silver_table_data> = $r0;

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp platinum_lastRunTime> = null;

        $r0 = newarray (java.lang.String)[13];

        <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] platinum_table_data> = $r0;

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp palladium_lastRunTime> = null;

        $r0 = newarray (java.lang.String)[13];

        <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] palladium_table_data> = $r0;

        return;
    }

    public void <init>()
    {
        com.altsoldev.preciousmetaltracker.Cache r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.Cache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clearGoldTableData()
    {
        int i0, $i1;
        java.lang.String[] $r0;

        i0 = 0;

     label1:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] gold_table_data>;

        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return;

     label2:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] gold_table_data>;

        $r0[i0] = null;

        i0 = i0 + 1;

        goto label1;
    }

    public static void clearPalladiumTableData()
    {
        int i0, $i1;
        java.lang.String[] $r0;

        i0 = 0;

     label1:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] palladium_table_data>;

        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return;

     label2:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] palladium_table_data>;

        $r0[i0] = null;

        i0 = i0 + 1;

        goto label1;
    }

    public static void clearPlatinumTableData()
    {
        int i0, $i1;
        java.lang.String[] $r0;

        i0 = 0;

     label1:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] platinum_table_data>;

        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return;

     label2:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] platinum_table_data>;

        $r0[i0] = null;

        i0 = i0 + 1;

        goto label1;
    }

    public static void clearSilverTableData()
    {
        int i0, $i1;
        java.lang.String[] $r0;

        i0 = 0;

     label1:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] silver_table_data>;

        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return;

     label2:
        $r0 = <com.altsoldev.preciousmetaltracker.Cache: java.lang.String[] silver_table_data>;

        $r0[i0] = null;

        i0 = i0 + 1;

        goto label1;
    }

    public static boolean isGoldLastRunTimeExpired(int)
    {
        java.util.Calendar $r2;
        java.sql.Timestamp r0, r1;
        int $i0;
        long $l1;
        boolean $z0;

        $i0 := @parameter0: int;

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp gold_lastRunTime>;

        if r0 == null goto label2;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp gold_lastRunTime>;

        $l1 = virtualinvoke r0.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(12, $i0);

        r0 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<java.sql.Timestamp: void <init>(long)>($l1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r1 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r1.<java.sql.Timestamp: void <init>(long)>($l1);

        $z0 = virtualinvoke r1.<java.sql.Timestamp: boolean after(java.sql.Timestamp)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isPalladiumLastRunTimeExpired(int)
    {
        java.util.Calendar $r2;
        java.sql.Timestamp r0, r1;
        int $i0;
        long $l1;
        boolean $z0;

        $i0 := @parameter0: int;

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp palladium_lastRunTime>;

        if r0 == null goto label2;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp palladium_lastRunTime>;

        $l1 = virtualinvoke r0.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(12, 2);

        r0 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<java.sql.Timestamp: void <init>(long)>($l1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r1 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r1.<java.sql.Timestamp: void <init>(long)>($l1);

        $z0 = virtualinvoke r1.<java.sql.Timestamp: boolean after(java.sql.Timestamp)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isPlatinumLastRunTimeExpired(int)
    {
        java.util.Calendar $r2;
        java.sql.Timestamp r0, r1;
        int $i0;
        long $l1;
        boolean $z0;

        $i0 := @parameter0: int;

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp platinum_lastRunTime>;

        if r0 == null goto label2;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp platinum_lastRunTime>;

        $l1 = virtualinvoke r0.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(12, 2);

        r0 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<java.sql.Timestamp: void <init>(long)>($l1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r1 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r1.<java.sql.Timestamp: void <init>(long)>($l1);

        $z0 = virtualinvoke r1.<java.sql.Timestamp: boolean after(java.sql.Timestamp)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static boolean isSilverLastRunTimeExpired(int)
    {
        java.util.Calendar $r2;
        java.sql.Timestamp r0, r1;
        int $i0;
        long $l1;
        boolean $z0;

        $i0 := @parameter0: int;

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp silver_lastRunTime>;

        if r0 == null goto label2;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0 = <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp silver_lastRunTime>;

        $l1 = virtualinvoke r0.<java.sql.Timestamp: long getTime()>();

        virtualinvoke $r2.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(12, 1);

        r0 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<java.sql.Timestamp: void <init>(long)>($l1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r1 = new java.sql.Timestamp;

        $l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r1.<java.sql.Timestamp: void <init>(long)>($l1);

        $z0 = virtualinvoke r1.<java.sql.Timestamp: boolean after(java.sql.Timestamp)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;

        $r0 := @parameter0: java.lang.String[];

        return;
    }

    public static void resetGoldLastRunTime()
    {
        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp gold_lastRunTime> = null;

        return;
    }

    public static void resetPalladiumLastRunTime()
    {
        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp palladium_lastRunTime> = null;

        return;
    }

    public static void resetPlatinumLastRunTime()
    {
        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp platinum_lastRunTime> = null;

        return;
    }

    public static void resetSilverLastRunTime()
    {
        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp silver_lastRunTime> = null;

        return;
    }

    public static void setCurrentGoldRunTime()
    {
        long $l0;
        java.util.Calendar $r1;
        java.sql.Timestamp $r0;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0 = new java.sql.Timestamp;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<java.sql.Timestamp: void <init>(long)>($l0);

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp gold_lastRunTime> = $r0;

        return;
    }

    public static void setCurrentPalladiumRunTime()
    {
        long $l0;
        java.util.Calendar $r1;
        java.sql.Timestamp $r0;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0 = new java.sql.Timestamp;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<java.sql.Timestamp: void <init>(long)>($l0);

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp palladium_lastRunTime> = $r0;

        return;
    }

    public static void setCurrentPlatinumRunTime()
    {
        long $l0;
        java.util.Calendar $r1;
        java.sql.Timestamp $r0;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0 = new java.sql.Timestamp;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<java.sql.Timestamp: void <init>(long)>($l0);

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp platinum_lastRunTime> = $r0;

        return;
    }

    public static void setCurrentSilverRunTime()
    {
        long $l0;
        java.util.Calendar $r1;
        java.sql.Timestamp $r0;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r0 = new java.sql.Timestamp;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<java.sql.Timestamp: void <init>(long)>($l0);

        <com.altsoldev.preciousmetaltracker.Cache: java.sql.Timestamp silver_lastRunTime> = $r0;

        return;
    }
}
