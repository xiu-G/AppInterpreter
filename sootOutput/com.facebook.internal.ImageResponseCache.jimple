class com.facebook.internal.ImageResponseCache extends java.lang.Object
{
    static final java.lang.String TAG;
    private static volatile com.facebook.internal.FileLruCache imageCache;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lcom/facebook/internal/ImageResponseCache;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.facebook.internal.ImageResponseCache: java.lang.String TAG> = $r0;

        return;
    }

    void <init>()
    {
        com.facebook.internal.ImageResponseCache r0;

        r0 := @this: com.facebook.internal.ImageResponseCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void clearCache(android.content.Context)
    {
        java.lang.Throwable $r5;
        android.content.Context $r0;
        com.facebook.internal.FileLruCache $r4;
        java.io.IOException $r8;
        com.facebook.LoggingBehavior $r1;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r2, $r6;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r4 = staticinvoke <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache getCache(android.content.Context)>($r0);

        virtualinvoke $r4.<com.facebook.internal.FileLruCache: void clearCache()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r1 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r2 = <com.facebook.internal.ImageResponseCache: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("clearCache failed ");

        $r8 = (java.io.IOException) $r5;

        $r6 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r1, 5, $r2, $r6);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static com.facebook.internal.FileLruCache getCache(android.content.Context)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.facebook.internal.FileLruCache $r3;
        java.lang.String $r1;
        com.facebook.internal.FileLruCache$Limits $r2;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/facebook/internal/ImageResponseCache;";

     label1:
        $r3 = <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache imageCache>;

        if $r3 != null goto label2;

        $r3 = new com.facebook.internal.FileLruCache;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = <com.facebook.internal.ImageResponseCache: java.lang.String TAG>;

        $r2 = new com.facebook.internal.FileLruCache$Limits;

        specialinvoke $r2.<com.facebook.internal.FileLruCache$Limits: void <init>()>();

        specialinvoke $r3.<com.facebook.internal.FileLruCache: void <init>(android.content.Context,java.lang.String,com.facebook.internal.FileLruCache$Limits)>($r0, $r1, $r2);

        <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache imageCache> = $r3;

     label2:
        $r3 = <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache imageCache>;

     label3:
        exitmonitor class "Lcom/facebook/internal/ImageResponseCache;";

        return $r3;

     label4:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/facebook/internal/ImageResponseCache;";

        throw $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    static java.io.InputStream getCachedImageStream(java.net.URI, android.content.Context)
    {
        java.lang.Throwable $r5;
        android.content.Context $r1;
        com.facebook.internal.FileLruCache $r3;
        java.io.IOException $r8;
        com.facebook.LoggingBehavior $r6;
        java.net.URI $r0;
        java.lang.String $r2, $r7;
        boolean $z0;
        java.io.InputStream $r4;

        $r0 := @parameter0: java.net.URI;

        $r1 := @parameter1: android.content.Context;

        if $r0 == null goto label4;

        $z0 = staticinvoke <com.facebook.internal.ImageResponseCache: boolean isCDNURL(java.net.URI)>($r0);

        if $z0 == 0 goto label4;

     label1:
        $r3 = staticinvoke <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache getCache(android.content.Context)>($r1);

        $r2 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<com.facebook.internal.FileLruCache: java.io.InputStream get(java.lang.String)>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior CACHE>;

        $r2 = <com.facebook.internal.ImageResponseCache: java.lang.String TAG>;

        $r8 = (java.io.IOException) $r5;

        $r7 = virtualinvoke $r8.<java.io.IOException: java.lang.String toString()>();

        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,int,java.lang.String,java.lang.String)>($r6, 5, $r2, $r7);

     label4:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static java.io.InputStream interceptAndCacheImageStream(android.content.Context, java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r1;
        java.lang.Throwable $r9, $r10;
        android.content.Context $r0;
        com.facebook.internal.FileLruCache $r6;
        java.net.URL $r3;
        com.facebook.internal.ImageResponseCache$BufferedHttpInputStream $r2;
        int $i0;
        java.net.URI $r5;
        java.lang.String $r7;
        java.io.InputStream $r4, $r8;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.net.HttpURLConnection;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 != 200 goto label09;

        $r3 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label01:
        $r5 = virtualinvoke $r3.<java.net.URL: java.net.URI toURI()>();

        $z0 = staticinvoke <com.facebook.internal.ImageResponseCache: boolean isCDNURL(java.net.URI)>($r5);

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r6 = staticinvoke <com.facebook.internal.ImageResponseCache: com.facebook.internal.FileLruCache getCache(android.content.Context)>($r0);

        $r7 = virtualinvoke $r3.<java.net.URL: java.lang.String toString()>();

     label04:
        $r2 = new com.facebook.internal.ImageResponseCache$BufferedHttpInputStream;

     label05:
        specialinvoke $r2.<com.facebook.internal.ImageResponseCache$BufferedHttpInputStream: void <init>(java.io.InputStream,java.net.HttpURLConnection)>($r4, $r1);

        $r8 = virtualinvoke $r6.<com.facebook.internal.FileLruCache: java.io.InputStream interceptAndPut(java.lang.String,java.io.InputStream)>($r7, $r2);

     label06:
        return $r8;

     label07:
        $r9 := @caughtexception;

        return $r4;

     label08:
        $r10 := @caughtexception;

        return $r4;

     label09:
        return null;

     label10:
        return $r4;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.net.URISyntaxException from label01 to label02 with label07;
        catch java.net.URISyntaxException from label03 to label04 with label07;
        catch java.net.URISyntaxException from label05 to label06 with label07;
    }

    private static boolean isCDNURL(java.net.URI)
    {
        java.net.URI $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.net.URI;

        if $r0 == null goto label2;

        $r1 = virtualinvoke $r0.<java.net.URI: java.lang.String getHost()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("fbcdn.net");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("fbcdn");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("akamaihd.net");

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }
}
