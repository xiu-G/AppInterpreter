class com.mt.airad.m extends java.lang.Object
{
    private static final byte[] a;
    private static final byte[] b;

    static void <clinit>()
    {
        byte[] $r0;
        byte $b3;
        int $i0, $i1, $i2;

        $i0 = 0;

        $i1 = 48;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 45;

        $r0[63] = 95;

        <com.mt.airad.m: byte[] a> = $r0;

        $r0 = newarray (byte)[128];

        <com.mt.airad.m: byte[] b> = $r0;

     label1:
        if $i0 >= 128 goto label2;

        $r0 = <com.mt.airad.m: byte[] b>;

        $r0[$i0] = -1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = 65;

     label3:
        if $i0 > 90 goto label4;

        $r0 = <com.mt.airad.m: byte[] b>;

        $i2 = $i0 + -65;

        $b3 = (byte) $i2;

        $r0[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = 97;

     label5:
        if $i0 > 122 goto label6;

        $r0 = <com.mt.airad.m: byte[] b>;

        $i2 = $i0 + -97;

        $i2 = $i2 + 26;

        $b3 = (byte) $i2;

        $r0[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        if $i1 > 57 goto label7;

        $r0 = <com.mt.airad.m: byte[] b>;

        $i0 = $i1 + -48;

        $i0 = $i0 + 52;

        $b3 = (byte) $i0;

        $r0[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $r0 = <com.mt.airad.m: byte[] b>;

        $r0[43] = 62;

        $r0 = <com.mt.airad.m: byte[] b>;

        $r0[47] = 63;

        return;
    }

    void <init>()
    {
        com.mt.airad.m r0;

        r0 := @this: com.mt.airad.m;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean a(byte)
    {
        int $i1;
        byte[] $r0;
        byte $b0;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        if $i1 != 61 goto label1;

        return 1;

     label1:
        $i1 = (int) $b0;

        if $i1 < 0 goto label2;

        $i1 = (int) $b0;

        if $i1 < 128 goto label3;

     label2:
        return 0;

     label3:
        $r0 = <com.mt.airad.m: byte[] b>;

        $i1 = (int) $b0;

        $b0 = $r0[$i1];

        $i1 = (int) $b0;

        if $i1 != -1 goto label4;

        return 0;

     label4:
        return 1;
    }

    protected static byte[] a(java.lang.String)
    {
        byte[] $r1, $r2;
        java.lang.IndexOutOfBoundsException $r3;
        char $c2;
        byte $b4, $b5, $b6, $b7;
        int $i0, $i1, $i3, $i8, $i9;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $r1 = null;

        $r0 = staticinvoke <com.mt.airad.m: java.lang.String b(java.lang.String)>($r0);

     label001:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label002:
        $i1 = $i1 + -2;

     label003:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

     label004:
        $i1 = (int) $c2;

        if $i1 != 61 goto label032;

     label005:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label006:
        $i1 = $i1 / 4;

        $i1 = $i1 + -1;

        $i1 = $i1 * 3;

        $i1 = $i1 + 1;

        $r1 = newarray (byte)[$i1];

     label007:
        $i1 = 0;

     label008:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

     label009:
        $i3 = $i3 + -4;

        if $i1 >= $i3 goto label040;

        $r2 = <com.mt.airad.m: byte[] b>;

     label010:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

     label011:
        $i3 = (int) $c2;

     label012:
        $b4 = $r2[$i3];

     label013:
        $r2 = <com.mt.airad.m: byte[] b>;

        $i3 = $i1 + 1;

     label014:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

     label015:
        $i3 = (int) $c2;

     label016:
        $b5 = $r2[$i3];

     label017:
        $r2 = <com.mt.airad.m: byte[] b>;

        $i3 = $i1 + 2;

     label018:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

     label019:
        $i3 = (int) $c2;

     label020:
        $b6 = $r2[$i3];

     label021:
        $r2 = <com.mt.airad.m: byte[] b>;

        $i3 = $i1 + 3;

     label022:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

     label023:
        $i3 = (int) $c2;

     label024:
        $b7 = $r2[$i3];

     label025:
        $i3 = (int) $b4;

        $i3 = $i3 << 2;

        $i8 = (int) $b5;

        $i8 = $i8 >> 4;

        $i3 = $i3 | $i8;

        $b4 = (byte) $i3;

     label026:
        $r1[$i0] = $b4;

     label027:
        $i3 = $i0 + 1;

        $i8 = (int) $b5;

        $i8 = $i8 << 4;

        $i9 = (int) $b6;

        $i9 = $i9 >> 2;

        $i8 = $i8 | $i9;

        $b5 = (byte) $i8;

     label028:
        $r1[$i3] = $b5;

     label029:
        $i3 = $i0 + 2;

        $i8 = (int) $b6;

        $i8 = $i8 << 6;

        $i9 = (int) $b7;

        $i8 = $i8 | $i9;

        $b6 = (byte) $i8;

     label030:
        $r1[$i3] = $b6;

     label031:
        $i1 = $i1 + 4;

        $i0 = $i0 + 3;

        goto label008;

     label032:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label033:
        $i1 = $i1 + -1;

     label034:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

     label035:
        $i1 = (int) $c2;

        if $i1 != 61 goto label038;

     label036:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label037:
        $i1 = $i1 / 4;

        $i1 = $i1 + -1;

        $i1 = $i1 * 3;

        $i1 = $i1 + 2;

        $r1 = newarray (byte)[$i1];

        goto label007;

     label038:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label039:
        $i1 = $i1 / 4;

        $i1 = $i1 * 3;

        $r1 = newarray (byte)[$i1];

        goto label007;

     label040:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label041:
        $i0 = $i0 + -2;

     label042:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label043:
        $i0 = (int) $c2;

        if $i0 != 61 goto label058;

        $r2 = <com.mt.airad.m: byte[] b>;

     label044:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label045:
        $i0 = $i0 + -4;

     label046:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label047:
        $i0 = (int) $c2;

     label048:
        $b6 = $r2[$i0];

     label049:
        $r2 = <com.mt.airad.m: byte[] b>;

     label050:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label051:
        $i0 = $i0 + -3;

     label052:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label053:
        $i0 = (int) $c2;

     label054:
        $b7 = $r2[$i0];

     label055:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b6;

        $i1 = $i1 << 2;

        $i3 = (int) $b7;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b6 = (byte) $i1;

     label056:
        $r1[$i0] = $b6;

     label057:
        return $r1;

     label058:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label059:
        $i0 = $i0 + -1;

     label060:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label061:
        $i0 = (int) $c2;

        if $i0 != 61 goto label085;

        $r2 = <com.mt.airad.m: byte[] b>;

     label062:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label063:
        $i0 = $i0 + -4;

     label064:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label065:
        $i0 = (int) $c2;

     label066:
        $b7 = $r2[$i0];

     label067:
        $r2 = <com.mt.airad.m: byte[] b>;

     label068:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label069:
        $i0 = $i0 + -3;

     label070:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label071:
        $i0 = (int) $c2;

     label072:
        $b6 = $r2[$i0];

     label073:
        $r2 = <com.mt.airad.m: byte[] b>;

     label074:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label075:
        $i0 = $i0 + -2;

     label076:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label077:
        $i0 = (int) $c2;

     label078:
        $b5 = $r2[$i0];

     label079:
        $i0 = lengthof $r1;

        $i0 = $i0 + -2;

        $i1 = (int) $b7;

        $i1 = $i1 << 2;

        $i3 = (int) $b6;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b7 = (byte) $i1;

     label080:
        $r1[$i0] = $b7;

     label081:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b6;

        $i1 = $i1 << 4;

        $i3 = (int) $b5;

        $i3 = $i3 >> 2;

        $i1 = $i1 | $i3;

        $b6 = (byte) $i1;

     label082:
        $r1[$i0] = $b6;

     label083:
        return $r1;

     label084:
        $r3 := @caughtexception;

        return $r1;

     label085:
        $r2 = <com.mt.airad.m: byte[] b>;

     label086:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label087:
        $i0 = $i0 + -4;

     label088:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label089:
        $i0 = (int) $c2;

     label090:
        $b4 = $r2[$i0];

     label091:
        $r2 = <com.mt.airad.m: byte[] b>;

     label092:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label093:
        $i0 = $i0 + -3;

     label094:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label095:
        $i0 = (int) $c2;

     label096:
        $b7 = $r2[$i0];

     label097:
        $r2 = <com.mt.airad.m: byte[] b>;

     label098:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label099:
        $i0 = $i0 + -2;

     label100:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label101:
        $i0 = (int) $c2;

     label102:
        $b6 = $r2[$i0];

     label103:
        $r2 = <com.mt.airad.m: byte[] b>;

     label104:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label105:
        $i0 = $i0 + -1;

     label106:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

     label107:
        $i0 = (int) $c2;

     label108:
        $b5 = $r2[$i0];

     label109:
        $i0 = lengthof $r1;

        $i0 = $i0 + -3;

        $i1 = (int) $b4;

        $i1 = $i1 << 2;

        $i3 = (int) $b7;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b4 = (byte) $i1;

     label110:
        $r1[$i0] = $b4;

     label111:
        $i0 = lengthof $r1;

        $i0 = $i0 + -2;

        $i1 = (int) $b7;

        $i1 = $i1 << 4;

        $i3 = (int) $b6;

        $i3 = $i3 >> 2;

        $i1 = $i1 | $i3;

        $b7 = (byte) $i1;

     label112:
        $r1[$i0] = $b7;

     label113:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b6;

        $i1 = $i1 << 6;

        $i3 = (int) $b5;

        $i1 = $i1 | $i3;

        $b6 = (byte) $i1;

     label114:
        $r1[$i0] = $b6;

     label115:
        return $r1;

        catch java.lang.IndexOutOfBoundsException from label001 to label002 with label084;
        catch java.lang.IndexOutOfBoundsException from label003 to label004 with label084;
        catch java.lang.IndexOutOfBoundsException from label005 to label006 with label084;
        catch java.lang.IndexOutOfBoundsException from label008 to label009 with label084;
        catch java.lang.IndexOutOfBoundsException from label010 to label011 with label084;
        catch java.lang.IndexOutOfBoundsException from label012 to label013 with label084;
        catch java.lang.IndexOutOfBoundsException from label014 to label015 with label084;
        catch java.lang.IndexOutOfBoundsException from label016 to label017 with label084;
        catch java.lang.IndexOutOfBoundsException from label018 to label019 with label084;
        catch java.lang.IndexOutOfBoundsException from label020 to label021 with label084;
        catch java.lang.IndexOutOfBoundsException from label022 to label023 with label084;
        catch java.lang.IndexOutOfBoundsException from label024 to label025 with label084;
        catch java.lang.IndexOutOfBoundsException from label026 to label027 with label084;
        catch java.lang.IndexOutOfBoundsException from label028 to label029 with label084;
        catch java.lang.IndexOutOfBoundsException from label030 to label031 with label084;
        catch java.lang.IndexOutOfBoundsException from label032 to label033 with label084;
        catch java.lang.IndexOutOfBoundsException from label034 to label035 with label084;
        catch java.lang.IndexOutOfBoundsException from label036 to label037 with label084;
        catch java.lang.IndexOutOfBoundsException from label038 to label039 with label084;
        catch java.lang.IndexOutOfBoundsException from label040 to label041 with label084;
        catch java.lang.IndexOutOfBoundsException from label042 to label043 with label084;
        catch java.lang.IndexOutOfBoundsException from label044 to label045 with label084;
        catch java.lang.IndexOutOfBoundsException from label046 to label047 with label084;
        catch java.lang.IndexOutOfBoundsException from label048 to label049 with label084;
        catch java.lang.IndexOutOfBoundsException from label050 to label051 with label084;
        catch java.lang.IndexOutOfBoundsException from label052 to label053 with label084;
        catch java.lang.IndexOutOfBoundsException from label054 to label055 with label084;
        catch java.lang.IndexOutOfBoundsException from label056 to label057 with label084;
        catch java.lang.IndexOutOfBoundsException from label058 to label059 with label084;
        catch java.lang.IndexOutOfBoundsException from label060 to label061 with label084;
        catch java.lang.IndexOutOfBoundsException from label062 to label063 with label084;
        catch java.lang.IndexOutOfBoundsException from label064 to label065 with label084;
        catch java.lang.IndexOutOfBoundsException from label066 to label067 with label084;
        catch java.lang.IndexOutOfBoundsException from label068 to label069 with label084;
        catch java.lang.IndexOutOfBoundsException from label070 to label071 with label084;
        catch java.lang.IndexOutOfBoundsException from label072 to label073 with label084;
        catch java.lang.IndexOutOfBoundsException from label074 to label075 with label084;
        catch java.lang.IndexOutOfBoundsException from label076 to label077 with label084;
        catch java.lang.IndexOutOfBoundsException from label078 to label079 with label084;
        catch java.lang.IndexOutOfBoundsException from label080 to label081 with label084;
        catch java.lang.IndexOutOfBoundsException from label082 to label083 with label084;
        catch java.lang.IndexOutOfBoundsException from label086 to label087 with label084;
        catch java.lang.IndexOutOfBoundsException from label088 to label089 with label084;
        catch java.lang.IndexOutOfBoundsException from label090 to label091 with label084;
        catch java.lang.IndexOutOfBoundsException from label092 to label093 with label084;
        catch java.lang.IndexOutOfBoundsException from label094 to label095 with label084;
        catch java.lang.IndexOutOfBoundsException from label096 to label097 with label084;
        catch java.lang.IndexOutOfBoundsException from label098 to label099 with label084;
        catch java.lang.IndexOutOfBoundsException from label100 to label101 with label084;
        catch java.lang.IndexOutOfBoundsException from label102 to label103 with label084;
        catch java.lang.IndexOutOfBoundsException from label104 to label105 with label084;
        catch java.lang.IndexOutOfBoundsException from label106 to label107 with label084;
        catch java.lang.IndexOutOfBoundsException from label108 to label109 with label084;
        catch java.lang.IndexOutOfBoundsException from label110 to label111 with label084;
        catch java.lang.IndexOutOfBoundsException from label112 to label113 with label084;
        catch java.lang.IndexOutOfBoundsException from label114 to label115 with label084;
    }

    protected static byte[] a(byte[])
    {
        byte[] $r0, $r1, $r2;
        short $s6, $s8, $s9;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i10;

        $r0 := @parameter0: byte[];

        $i1 = 0;

        $i2 = lengthof $r0;

        $i2 = $i2 % 3;

        if $i2 != 0 goto label3;

        $i3 = lengthof $r0;

        $i3 = $i3 * 4;

        $i3 = $i3 / 3;

        $r1 = newarray (byte)[$i3];

     label1:
        $i3 = lengthof $r0;

        $i3 = $i3 - $i2;

        $i4 = 0;

     label2:
        if $i4 >= $i3 goto label4;

        $b5 = $r0[$i4];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i7 = $i4 + 1;

        $b5 = $r0[$i7];

        $s8 = (short) $b5;

        $s8 = $s8 & 255;

        $i7 = $i4 + 2;

        $b5 = $r0[$i7];

        $s9 = (short) $b5;

        $s9 = $s9 & 255;

        $r2 = <com.mt.airad.m: byte[] a>;

        $i7 = (int) $s6;

        $i7 = $i7 >>> 2;

        $i7 = $i7 & 63;

        $b5 = $r2[$i7];

        $r1[$i1] = $b5;

        $i7 = $i1 + 1;

        $r2 = <com.mt.airad.m: byte[] a>;

        $i10 = (int) $s6;

        $i10 = $i10 << 4;

        $i0 = (int) $s8;

        $i0 = $i0 >>> 4;

        $i10 = $i10 | $i0;

        $i10 = $i10 & 63;

        $b5 = $r2[$i10];

        $r1[$i7] = $b5;

        $i7 = $i1 + 2;

        $r2 = <com.mt.airad.m: byte[] a>;

        $i10 = (int) $s8;

        $i10 = $i10 << 2;

        $i0 = (int) $s9;

        $i0 = $i0 >>> 6;

        $i10 = $i10 | $i0;

        $i10 = $i10 & 63;

        $b5 = $r2[$i10];

        $r1[$i7] = $b5;

        $i7 = $i1 + 3;

        $r2 = <com.mt.airad.m: byte[] a>;

        $s6 = $s9 & 63;

        $i10 = (int) $s6;

        $b5 = $r2[$i10];

        $r1[$i7] = $b5;

        $i4 = $i4 + 3;

        $i1 = $i1 + 4;

        goto label2;

     label3:
        $i3 = lengthof $r0;

        $i3 = $i3 / 3;

        $i3 = $i3 + 1;

        $i3 = $i3 * 4;

        $r1 = newarray (byte)[$i3];

        goto label1;

     label4:
        lookupswitch($i2)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label5;
        };

     label5:
        return $r1;

     label6:
        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        $b5 = $r0[$i1];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i1 = (int) $s6;

        $i1 = $i1 >>> 2;

        $i2 = $i1 & 63;

        $i1 = (int) $s6;

        $i1 = $i1 << 4;

        $i1 = $i1 & 63;

        $i3 = lengthof $r1;

        $i3 = $i3 + -4;

        $r0 = <com.mt.airad.m: byte[] a>;

        $b5 = $r0[$i2];

        $r1[$i3] = $b5;

        $i2 = lengthof $r1;

        $i2 = $i2 + -3;

        $r0 = <com.mt.airad.m: byte[] a>;

        $b5 = $r0[$i1];

        $r1[$i2] = $b5;

        $i1 = lengthof $r1;

        $i1 = $i1 + -2;

        $r1[$i1] = 61;

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

        $r1[$i1] = 61;

        return $r1;

     label7:
        $i1 = lengthof $r0;

        $i1 = $i1 + -2;

        $b5 = $r0[$i1];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        $b5 = $r0[$i1];

        $s8 = (short) $b5;

        $s8 = $s8 & 255;

        $i1 = (int) $s6;

        $i1 = $i1 >>> 2;

        $i1 = $i1 & 63;

        $i2 = (int) $s6;

        $i2 = $i2 << 4;

        $i3 = (int) $s8;

        $i3 = $i3 >>> 4;

        $i2 = $i2 | $i3;

        $i3 = $i2 & 63;

        $i2 = (int) $s8;

        $i2 = $i2 << 2;

        $i2 = $i2 & 63;

        $i4 = lengthof $r1;

        $i4 = $i4 + -4;

        $r0 = <com.mt.airad.m: byte[] a>;

        $b5 = $r0[$i1];

        $r1[$i4] = $b5;

        $i1 = lengthof $r1;

        $i1 = $i1 + -3;

        $r0 = <com.mt.airad.m: byte[] a>;

        $b5 = $r0[$i3];

        $r1[$i1] = $b5;

        $i1 = lengthof $r1;

        $i1 = $i1 + -2;

        $r0 = <com.mt.airad.m: byte[] a>;

        $b5 = $r0[$i2];

        $r1[$i1] = $b5;

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

        $r1[$i1] = 61;

        return $r1;
    }

    private static java.lang.String b(java.lang.String)
    {
        java.lang.IndexOutOfBoundsException $r2;
        char $c2;
        byte $b3;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

     label2:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

     label3:
        $b3 = (byte) $c2;

     label4:
        $z0 = staticinvoke <com.mt.airad.m: boolean a(byte)>($b3);

     label5:
        if $z0 == 0 goto label7;

     label6:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label7:
        $i1 = $i1 + 1;

        goto label1;

     label8:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label9:
        $r2 := @caughtexception;

        goto label7;

        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label9;
        catch java.lang.IndexOutOfBoundsException from label4 to label5 with label9;
        catch java.lang.IndexOutOfBoundsException from label6 to label7 with label9;
    }
}
