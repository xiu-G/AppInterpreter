class com.sysapk.my.ac extends java.lang.Thread
{
    final java.lang.String a;
    final com.sysapk.my.ab b;

    void <init>(com.sysapk.my.ab, java.lang.String)
    {
        java.lang.String $r2;
        com.sysapk.my.ab $r1;
        com.sysapk.my.ac r0;

        r0 := @this: com.sysapk.my.ac;

        $r1 := @parameter0: com.sysapk.my.ab;

        $r2 := @parameter1: java.lang.String;

        r0.<com.sysapk.my.ac: com.sysapk.my.ab b> = $r1;

        r0.<com.sysapk.my.ac: java.lang.String a> = $r2;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        android.content.Context $r1, $r3;
        java.util.Map $r4;
        android.widget.Toast $r7;
        java.lang.StringBuilder $r2;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.sysapk.my.ac r0;

        r0 := @this: com.sysapk.my.ac;

        staticinvoke <android.os.Looper: void prepare()>();

        $r1 = staticinvoke <com.sysapk.my.ab: android.content.Context b()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <com.sysapk.my.ab: android.content.Context b()>();

        $r4 = staticinvoke <com.sysapk.my.AppConnect: java.util.Map e(android.content.Context)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("exception");

        $r6 = (java.lang.String) $r5;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = r0.<com.sysapk.my.ac: java.lang.String a>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r1, $r6, 1);

        virtualinvoke $r7.<android.widget.Toast: void show()>();

        staticinvoke <android.os.Looper: void loop()>();

        return;
    }
}
