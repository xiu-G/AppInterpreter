public class hw.ats.common.model.Config extends java.lang.Object
{
    public java.util.Date chgdate;
    public java.lang.String layout;
    public java.lang.String memo;
    public java.lang.String owner_email;
    public java.lang.String owner_name;
    public java.lang.String package_name;
    public int payment;
    public java.lang.String site;
    public java.lang.String template;
    public java.lang.String title;
    public int uid;
    public java.lang.String url;
    public java.lang.String version;

    public void <init>()
    {
        hw.ats.common.model.Config r0;

        r0 := @this: hw.ats.common.model.Config;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<hw.ats.common.model.Config: int uid> = 0;

        r0.<hw.ats.common.model.Config: java.lang.String package_name> = null;

        r0.<hw.ats.common.model.Config: java.lang.String layout> = null;

        r0.<hw.ats.common.model.Config: java.lang.String title> = null;

        r0.<hw.ats.common.model.Config: java.lang.String memo> = null;

        r0.<hw.ats.common.model.Config: java.lang.String version> = null;

        r0.<hw.ats.common.model.Config: java.util.Date chgdate> = null;

        r0.<hw.ats.common.model.Config: java.lang.String template> = null;

        r0.<hw.ats.common.model.Config: java.lang.String owner_name> = null;

        r0.<hw.ats.common.model.Config: java.lang.String owner_email> = null;

        r0.<hw.ats.common.model.Config: int payment> = 0;

        r0.<hw.ats.common.model.Config: java.lang.String url> = null;

        r0.<hw.ats.common.model.Config: java.lang.String site> = null;

        return;
    }

    private hw.ats.common.model.Config bind(android.database.Cursor)
    {
        java.util.Date $r3;
        int $i0;
        long $l1;
        java.lang.String $r2;
        hw.ats.common.model.Config r0;
        android.database.Cursor $r1;

        r0 := @this: hw.ats.common.model.Config;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("uid");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Config: int uid> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("layout");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String layout> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("title");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String title> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("memo");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String memo> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("version");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String version> = $r2;

        $r3 = new java.util.Date;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("chgdate");

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

        r0.<hw.ats.common.model.Config: java.util.Date chgdate> = $r3;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("template");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String template> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("owner_name");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String owner_name> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("owner_email");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String owner_email> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("url");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String url> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("site");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Config: java.lang.String site> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("payment");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Config: int payment> = $i0;

        return r0;
    }

    public static void checkVersion(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r5;
        java.lang.Exception $r6, $r7, $r8, $r9, $r10, $r11;
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String r1, $r4;
        android.database.Cursor r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label01:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table if not exists version (version text)");

     label02:
        r1 = null;

        r2 = null;

     label03:
        $r3 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT version FROM version", null);

     label04:
        r2 = $r3;

     label05:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>(0);

     label08:
        r1 = $r4;

     label09:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label10:
        if r1 != null goto label13;

     label11:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("insert into version values (\'20100601\')");

     label12:
        r1 = "20100601";

     label13:
        $r4 = "20100601";

     label14:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

     label15:
        if $z0 == 0 goto label27;

     label16:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("alter table config add column site text;");

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("update version set version = \'20100623\'");

     label17:
        return;

     label18:
        $r5 := @caughtexception;

     label19:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label20:
        throw $r5;

     label21:
        $r6 := @caughtexception;

        goto label10;

     label22:
        $r7 := @caughtexception;

        goto label20;

     label23:
        $r8 := @caughtexception;

        goto label10;

     label24:
        $r9 := @caughtexception;

        return;

     label25:
        $r10 := @caughtexception;

        goto label13;

     label26:
        $r11 := @caughtexception;

        goto label02;

     label27:
        return;

        catch java.lang.Exception from label01 to label02 with label26;
        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label18;
        catch java.lang.Throwable from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Exception from label14 to label15 with label24;
        catch java.lang.Exception from label16 to label17 with label24;
        catch java.lang.Exception from label19 to label20 with label22;
        catch java.lang.Exception from label20 to label21 with label21;
    }

    public static hw.ats.common.model.Config load(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r5;
        java.lang.Exception $r4, $r6, $r7;
        android.database.sqlite.SQLiteDatabase $r0;
        hw.ats.common.model.Config $r3;
        android.database.Cursor r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 = null;

     label01:
        $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT * FROM config LIMIT 1", null);

     label02:
        r1 = $r2;

     label03:
        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        $r3 = new hw.ats.common.model.Config;

        specialinvoke $r3.<hw.ats.common.model.Config: void <init>()>();

        $r3 = specialinvoke $r3.<hw.ats.common.model.Config: hw.ats.common.model.Config bind(android.database.Cursor)>($r2);

     label08:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label09:
        return $r3;

     label10:
        $r4 := @caughtexception;

        return $r3;

     label11:
        $r5 := @caughtexception;

     label12:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label13:
        throw $r5;

     label14:
        $r6 := @caughtexception;

        goto label06;

     label15:
        $r7 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public boolean exist(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r5;
        java.lang.Exception $r4, $r6, $r7;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        hw.ats.common.model.Config r0;
        android.database.Cursor r2, $r3;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Config;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = null;

     label01:
        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT COUNT(*) FROM config", null);

     label02:
        r2 = $r3;

     label03:
        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>(0);

     label08:
        if $i0 <= 0 goto label12;

        $z0 = 1;

     label09:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label10:
        return $z0;

     label11:
        $r4 := @caughtexception;

        return $z0;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r5 := @caughtexception;

     label14:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label15:
        throw $r5;

     label16:
        $r6 := @caughtexception;

        goto label06;

     label17:
        $r7 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public void insert(android.database.sqlite.SQLiteDatabase)
    {
        java.util.Date $r5;
        long $l1;
        java.lang.Integer $r3;
        java.lang.Exception $r7;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Long $r6;
        int $i0;
        android.content.ContentValues r2;
        java.lang.String $r4;
        hw.ats.common.model.Config r0;

        r0 := @this: hw.ats.common.model.Config;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Config: int uid>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uid", $r3);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String layout>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("layout", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String title>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String memo>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("memo", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String version>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("version", $r4);

        $r5 = r0.<hw.ats.common.model.Config: java.util.Date chgdate>;

     label2:
        if $r5 != null goto label5;

        $l1 = -1L;

     label3:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("chgdate", $r6);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String template>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("template", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String owner_name>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("owner_name", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String owner_email>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("owner_email", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String site>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("site", $r4);

        $i0 = r0.<hw.ats.common.model.Config: int payment>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("payment", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("config", null, r2);

     label4:
        return;

     label5:
        $r5 = r0.<hw.ats.common.model.Config: java.util.Date chgdate>;

        $l1 = virtualinvoke $r5.<java.util.Date: long getTime()>();

     label6:
        goto label3;

     label7:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void update(android.database.sqlite.SQLiteDatabase)
    {
        java.util.Date $r5;
        long $l1;
        java.lang.Integer $r3;
        java.lang.Exception $r7;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.Long $r6;
        int $i0;
        android.content.ContentValues r2;
        java.lang.String $r4;
        hw.ats.common.model.Config r0;

        r0 := @this: hw.ats.common.model.Config;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Config: int uid>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uid", $r3);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String layout>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("layout", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String title>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String memo>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("memo", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String version>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("version", $r4);

        $r5 = r0.<hw.ats.common.model.Config: java.util.Date chgdate>;

     label2:
        if $r5 != null goto label5;

        $l1 = -1L;

     label3:
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("chgdate", $r6);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String template>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("template", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String owner_name>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("owner_name", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String owner_email>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("owner_email", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", $r4);

        $r4 = r0.<hw.ats.common.model.Config: java.lang.String site>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("site", $r4);

        $i0 = r0.<hw.ats.common.model.Config: int payment>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("payment", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("config", r2, null, null);

     label4:
        return;

     label5:
        $r5 = r0.<hw.ats.common.model.Config: java.util.Date chgdate>;

        $l1 = virtualinvoke $r5.<java.util.Date: long getTime()>();

     label6:
        goto label3;

     label7:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
