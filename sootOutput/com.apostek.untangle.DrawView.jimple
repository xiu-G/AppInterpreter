public class com.apostek.untangle.DrawView extends android.view.View
{
    private static android.graphics.Bitmap lockedBitmap;
    private static android.graphics.Bitmap orbRing;
    private long gameHeight;
    private int gameId;
    private long gameWidth;
    private java.lang.Boolean locked;
    private android.content.Context mContext;
    private int nodeRadius;
    private java.util.ArrayList nodes;
    private android.graphics.Paint pCircle;
    private android.graphics.Paint pCircleSelected;
    private android.graphics.Paint pIntersect;
    private android.graphics.Paint pNotIntersect;
    private android.graphics.Paint paint;
    private android.graphics.RectF rect;
    private java.lang.Boolean selectedGame;

    static void <clinit>()
    {
        <com.apostek.untangle.DrawView: android.graphics.Bitmap lockedBitmap> = null;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.apostek.untangle.DrawView r0;
        java.lang.Boolean $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean locked> = $r2;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean selectedGame> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes> = $r3;

        virtualinvoke r0.<com.apostek.untangle.DrawView: void setupMain(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.apostek.untangle.DrawView r0;
        java.lang.Boolean $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean locked> = $r3;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean selectedGame> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes> = $r4;

        virtualinvoke r0.<com.apostek.untangle.DrawView: void setupMain(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        com.apostek.untangle.DrawView r0;
        int $i0;
        java.lang.Boolean $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean locked> = $r3;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean selectedGame> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes> = $r4;

        virtualinvoke r0.<com.apostek.untangle.DrawView: void setupMain(android.content.Context)>($r1);

        return;
    }

    private int checkForIntersection(com.apostek.untangle.Orb$Coordinates, com.apostek.untangle.Orb$Coordinates)
    {
        java.lang.Integer $r8;
        java.util.ArrayList $r3, $r7;
        byte $b11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.apostek.untangle.Orb $r5;
        com.apostek.untangle.Orb$Coordinates $r1, $r2, $r6, $r9;
        com.apostek.untangle.DrawView r0;
        float f0, f1, f2, f3, f4, $f5, $f6;
        java.lang.Object $r4;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: com.apostek.untangle.Orb$Coordinates;

        $r2 := @parameter1: com.apostek.untangle.Orb$Coordinates;

        i0 = 0;

        i1 = 0;

     label01:
        $r3 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 < $i2 goto label02;

        return i0;

     label02:
        $r3 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.apostek.untangle.Orb) $r4;

        $r6 = virtualinvoke $r5.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

        $r3 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.apostek.untangle.Orb) $r4;

        $r3 = virtualinvoke $r5.<com.apostek.untangle.Orb: java.util.ArrayList getConnectedNodes()>();

        if $r3 == null goto label04;

        $i2 = 0;

     label03:
        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i2 < $i3 goto label05;

     label04:
        i1 = i1 + 1;

        goto label01;

     label05:
        $r7 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r8 = (java.lang.Integer) $r4;

        $i3 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (com.apostek.untangle.Orb) $r4;

        $r9 = virtualinvoke $r5.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

        $i3 = virtualinvoke $r1.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i4 = virtualinvoke $r1.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i4 = neg $i4;

        $i5 = virtualinvoke $r2.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i6 = virtualinvoke $r2.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i7 = neg $i6;

        $i6 = virtualinvoke $r6.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i8 = virtualinvoke $r6.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i8 = neg $i8;

        $i9 = virtualinvoke $r9.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i10 = virtualinvoke $r9.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i10 = neg $i10;

        if $i3 != $i5 goto label06;

        if $i4 == $i7 goto label11;

     label06:
        if $i3 != $i6 goto label07;

        if $i4 == $i8 goto label11;

     label07:
        if $i3 != $i9 goto label08;

        if $i4 == $i10 goto label11;

     label08:
        if $i5 != $i6 goto label09;

        if $i7 == $i8 goto label11;

     label09:
        if $i5 != $i9 goto label10;

        if $i7 == $i10 goto label11;

     label10:
        if $i6 != $i9 goto label12;

        if $i8 != $i10 goto label12;

     label11:
        $i2 = $i2 + 1;

        goto label03;

     label12:
        $i5 = $i5 - $i3;

        f2 = (float) $i5;

        $i5 = $i7 - $i4;

        f3 = (float) $i5;

        $i5 = $i9 - $i6;

        f0 = (float) $i5;

        $i5 = $i10 - $i8;

        f1 = (float) $i5;

        f4 = f0 * f3;

        $f5 = f1 * f2;

        f4 = f4 - $f5;

        $b11 = f4 cmpl 0.0F;

        if $b11 == 0 goto label11;

        $i5 = $i8 - $i4;

        f4 = (float) $i5;

        f4 = f4 * f2;

        $i5 = $i3 - $i6;

        $f5 = (float) $i5;

        $f5 = $f5 * f3;

        f4 = f4 + $f5;

        $f5 = f0 * f3;

        $f6 = f1 * f2;

        $f5 = $f5 - $f6;

        f4 = f4 / $f5;

        $i4 = $i4 - $i8;

        $f5 = (float) $i4;

        $f5 = $f5 * f0;

        $i3 = $i6 - $i3;

        $f6 = (float) $i3;

        $f6 = $f6 * f1;

        $f5 = $f5 + $f6;

        f1 = f1 * f2;

        f0 = f0 * f3;

        f0 = f1 - f0;

        f0 = $f5 / f0;

        $b11 = f4 cmpl 0.0F;

        $i3 = (int) $b11;

        if $i3 < 0 goto label11;

        $b11 = f4 cmpg 1.0F;

        $i3 = (int) $b11;

        if $i3 > 0 goto label11;

        $b11 = f0 cmpl 0.0F;

        $i3 = (int) $b11;

        if $i3 < 0 goto label11;

        $b11 = f0 cmpg 1.0F;

        $i3 = (int) $b11;

        if $i3 > 0 goto label11;

        i0 = i0 + 1;

        goto label11;
    }

    public int getGameId()
    {
        int i0;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        i0 = r0.<com.apostek.untangle.DrawView: int gameId>;

        return i0;
    }

    public java.lang.Boolean getLocked()
    {
        java.lang.Boolean r1;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        r1 = r0.<com.apostek.untangle.DrawView: java.lang.Boolean locked>;

        return r1;
    }

    public java.lang.Boolean getSelectedGame()
    {
        java.lang.Boolean r1;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        r1 = r0.<com.apostek.untangle.DrawView: java.lang.Boolean selectedGame>;

        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        java.lang.Integer $r12;
        java.util.ArrayList $r4, $r11;
        byte $b5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Boolean $r2;
        android.graphics.Canvas $r1;
        boolean $z0;
        java.util.Iterator $r5;
        com.apostek.untangle.Orb r7;
        java.lang.Exception $r10, $r14;
        com.apostek.untangle.Orb$Coordinates $r8, $r13;
        com.apostek.untangle.DrawView r0;
        android.graphics.Bitmap $r3;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r6;
        android.graphics.Paint $r9;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>($r1);

        $r2 = virtualinvoke r0.<com.apostek.untangle.DrawView: java.lang.Boolean getLocked()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label01;

        $r3 = <com.apostek.untangle.DrawView: android.graphics.Bitmap lockedBitmap>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, 0.0F, 0.0F, null);

        return;

     label01:
        i0 = 0;

     label02:
        $r4 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label03:
        if i0 < $i1 goto label18;

     label04:
        $r4 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 == 0 goto label64;

     label07:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.apostek.untangle.Orb) $r6;

        $r8 = virtualinvoke r7.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

        $r2 = virtualinvoke r0.<com.apostek.untangle.DrawView: java.lang.Boolean getSelectedGame()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

     label08:
        if $z0 == 0 goto label56;

     label09:
        i0 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i1 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label10:
        i0 = i0 + $i1;

        i0 = i0 + 3;

        $f0 = (float) i0;

     label11:
        i0 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i1 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label12:
        i0 = i0 + $i1;

        i0 = i0 + 3;

        $f1 = (float) i0;

     label13:
        i0 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label14:
        $f2 = (float) i0;

     label15:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r9);

     label16:
        goto label05;

     label17:
        $r10 := @caughtexception;

        return;

     label18:
        $r4 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r7 = (com.apostek.untangle.Orb) $r6;

        $r8 = virtualinvoke r7.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

        $r4 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r7 = (com.apostek.untangle.Orb) $r6;

        $r4 = virtualinvoke r7.<com.apostek.untangle.Orb: java.util.ArrayList getConnectedNodes()>();

     label19:
        if $r4 == null goto label22;

        $i1 = 0;

     label20:
        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label21:
        if $i1 < $i2 goto label23;

     label22:
        i0 = i0 + 1;

        goto label02;

     label23:
        $r11 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r12 = (java.lang.Integer) $r6;

        $i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r6 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        r7 = (com.apostek.untangle.Orb) $r6;

        $r13 = virtualinvoke r7.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

        $i2 = specialinvoke r0.<com.apostek.untangle.DrawView: int checkForIntersection(com.apostek.untangle.Orb$Coordinates,com.apostek.untangle.Orb$Coordinates)>($r8, $r13);

        $i3 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i4 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label24:
        $i3 = $i3 + $i4;

        $f0 = (float) $i3;

     label25:
        $i3 = virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i4 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label26:
        $i3 = $i3 + $i4;

        $f1 = (float) $i3;

     label27:
        virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getY()>();

     label28:
        $b5 = $f1 cmpg $f0;

        $i3 = (int) $b5;

        if $i3 >= 0 goto label29;

     label29:
        $r2 = virtualinvoke r0.<com.apostek.untangle.DrawView: java.lang.Boolean getSelectedGame()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

     label30:
        if $z0 == 0 goto label43;

     label31:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r9.<android.graphics.Paint: void setAlpha(int)>(255);

        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r9.<android.graphics.Paint: void setAlpha(int)>(255);

     label32:
        if $i2 <= 0 goto label46;

     label33:
        $i2 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label34:
        $i2 = $i2 + $i3;

        $f0 = (float) $i2;

     label35:
        $i2 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label36:
        $i2 = $i2 + $i3;

        $f1 = (float) $i2;

     label37:
        $i2 = virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label38:
        $i2 = $i2 + $i3;

        $f2 = (float) $i2;

     label39:
        $i2 = virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label40:
        $i2 = $i2 + $i3;

        $f3 = (float) $i2;

     label41:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r9);

     label42:
        $i1 = $i1 + 1;

        goto label20;

     label43:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r9.<android.graphics.Paint: void setAlpha(int)>(100);

        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r9.<android.graphics.Paint: void setAlpha(int)>(100);

     label44:
        goto label32;

     label45:
        $r14 := @caughtexception;

        goto label04;

     label46:
        $i2 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label47:
        $i2 = $i2 + $i3;

        $f0 = (float) $i2;

     label48:
        $i2 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label49:
        $i2 = $i2 + $i3;

        $f1 = (float) $i2;

     label50:
        $i2 = virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label51:
        $i2 = $i2 + $i3;

        $i2 = $i2 + 3;

        $f2 = (float) $i2;

     label52:
        $i2 = virtualinvoke $r13.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i3 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label53:
        $i2 = $i2 + $i3;

        $f3 = (float) $i2;

     label54:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r9);

     label55:
        goto label42;

     label56:
        i0 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getX()>();

        $i1 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label57:
        i0 = i0 + $i1;

        i0 = i0 + 3;

        $f0 = (float) i0;

     label58:
        i0 = virtualinvoke $r8.<com.apostek.untangle.Orb$Coordinates: int getY()>();

        $i1 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label59:
        i0 = i0 + $i1;

        i0 = i0 + 3;

        $f1 = (float) i0;

     label60:
        i0 = r0.<com.apostek.untangle.DrawView: int nodeRadius>;

     label61:
        $f2 = (float) i0;

     label62:
        $r9 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r9);

     label63:
        goto label05;

     label64:
        return;

        catch java.lang.Exception from label02 to label03 with label45;
        catch java.lang.Exception from label04 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label45;
        catch java.lang.Exception from label20 to label21 with label45;
        catch java.lang.Exception from label23 to label24 with label45;
        catch java.lang.Exception from label25 to label26 with label45;
        catch java.lang.Exception from label27 to label28 with label45;
        catch java.lang.Exception from label29 to label30 with label45;
        catch java.lang.Exception from label31 to label32 with label45;
        catch java.lang.Exception from label33 to label34 with label45;
        catch java.lang.Exception from label35 to label36 with label45;
        catch java.lang.Exception from label37 to label38 with label45;
        catch java.lang.Exception from label39 to label40 with label45;
        catch java.lang.Exception from label41 to label42 with label45;
        catch java.lang.Exception from label43 to label44 with label45;
        catch java.lang.Exception from label46 to label47 with label45;
        catch java.lang.Exception from label48 to label49 with label45;
        catch java.lang.Exception from label50 to label51 with label45;
        catch java.lang.Exception from label52 to label53 with label45;
        catch java.lang.Exception from label54 to label55 with label45;
        catch java.lang.Exception from label56 to label57 with label17;
        catch java.lang.Exception from label58 to label59 with label17;
        catch java.lang.Exception from label60 to label61 with label17;
        catch java.lang.Exception from label62 to label63 with label17;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.apostek.untangle.DrawView r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.view.MotionEvent;

        virtualinvoke r0.<com.apostek.untangle.DrawView: void invalidate()>();

        $z0 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        return $z0;
    }

    public void setGameId(int)
    {
        int $i0;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        $i0 := @parameter0: int;

        r0.<com.apostek.untangle.DrawView: int gameId> = $i0;

        return;
    }

    public void setLocked(java.lang.Boolean)
    {
        java.lang.Boolean $r1;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: java.lang.Boolean;

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean locked> = $r1;

        return;
    }

    public void setSelectedGame(java.lang.Boolean)
    {
        java.lang.Boolean $r1;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: java.lang.Boolean;

        r0.<com.apostek.untangle.DrawView: java.lang.Boolean selectedGame> = $r1;

        virtualinvoke r0.<com.apostek.untangle.DrawView: void invalidate()>();

        return;
    }

    public void setup(android.content.Context, int)
    {
        android.content.Context $r1;
        int[][] $r5;
        long $l5, $l6;
        java.lang.Integer $r8;
        java.util.ArrayList r2;
        int[] $r6;
        int $i0, i1, i2, i3, $i4;
        com.apostek.untangle.Orb r3;
        java.lang.Exception $r9;
        com.apostek.untangle.Orb$Coordinates $r7;
        int[][][] $r4;
        com.apostek.untangle.DrawView r0;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r4 = <com.apostek.untangle.Global: int[][][] nodesChallenge>;

     label01:
        $r5 = $r4[$i0];

        i1 = lengthof $r5;

        r2 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        virtualinvoke r2.<java.util.ArrayList: void clear()>();

     label02:
        i2 = 0;

     label03:
        if i2 < i1 goto label04;

        return;

     label04:
        r3 = new com.apostek.untangle.Orb;

     label05:
        specialinvoke r3.<com.apostek.untangle.Orb: void <init>()>();

     label06:
        r2 = new java.util.ArrayList;

     label07:
        specialinvoke r2.<java.util.ArrayList: void <init>()>();

     label08:
        i3 = 0;

     label09:
        $r4 = <com.apostek.untangle.Global: int[][][] nodesChallengeConnects>;

     label10:
        $r5 = $r4[$i0];

        $r6 = $r5[i2];

        $i4 = lengthof $r6;

     label11:
        if i3 < $i4 goto label26;

     label12:
        virtualinvoke r3.<com.apostek.untangle.Orb: void setConnectedNodes(java.util.ArrayList)>(r2);

        $r7 = virtualinvoke r3.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

     label13:
        $r4 = <com.apostek.untangle.Global: int[][][] nodesChallenge>;

     label14:
        $r5 = $r4[$i0];

        $r6 = $r5[i2];

        i3 = $r6[0];

     label15:
        $l5 = (long) i3;

     label16:
        $l6 = r0.<com.apostek.untangle.DrawView: long gameWidth>;

     label17:
        $l5 = $l5 * $l6;

        $l5 = $l5 / 20L;

        i3 = (int) $l5;

     label18:
        virtualinvoke $r7.<com.apostek.untangle.Orb$Coordinates: void setX(int)>(i3);

        $r7 = virtualinvoke r3.<com.apostek.untangle.Orb: com.apostek.untangle.Orb$Coordinates getCoordinates()>();

     label19:
        $r4 = <com.apostek.untangle.Global: int[][][] nodesChallenge>;

     label20:
        $r5 = $r4[$i0];

        $r6 = $r5[i2];

        i3 = $r6[1];

     label21:
        $l5 = (long) i3;

     label22:
        $l6 = r0.<com.apostek.untangle.DrawView: long gameHeight>;

     label23:
        $l5 = $l5 * $l6;

        $l5 = $l5 / 20L;

        i3 = (int) $l5;

     label24:
        virtualinvoke $r7.<com.apostek.untangle.Orb$Coordinates: void setY(int)>(i3);

        r2 = r0.<com.apostek.untangle.DrawView: java.util.ArrayList nodes>;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label25:
        i2 = i2 + 1;

        goto label03;

     label26:
        $r4 = <com.apostek.untangle.Global: int[][][] nodesChallengeConnects>;

     label27:
        $r5 = $r4[$i0];

        $r6 = $r5[i2];

        $i4 = $r6[i3];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label28:
        i3 = i3 + 1;

        goto label09;

     label29:
        $r9 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label05 to label06 with label29;
        catch java.lang.Exception from label07 to label08 with label29;
        catch java.lang.Exception from label10 to label11 with label29;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Exception from label14 to label15 with label29;
        catch java.lang.Exception from label16 to label17 with label29;
        catch java.lang.Exception from label18 to label19 with label29;
        catch java.lang.Exception from label20 to label21 with label29;
        catch java.lang.Exception from label22 to label23 with label29;
        catch java.lang.Exception from label24 to label25 with label29;
        catch java.lang.Exception from label27 to label28 with label29;
    }

    public void setupMain(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.Exception $r7;
        android.graphics.Paint$Style $r5;
        android.graphics.Paint$Cap $r6;
        com.apostek.untangle.DrawView r0;
        android.graphics.Bitmap $r2;
        int $i0;
        android.graphics.Paint $r4, $r8;
        android.content.res.Resources $r3;

        r0 := @this: com.apostek.untangle.DrawView;

        $r1 := @parameter0: android.content.Context;

     label01:
        r0.<com.apostek.untangle.DrawView: android.content.Context mContext> = $r1;

     label02:
        $r2 = <com.apostek.untangle.DrawView: android.graphics.Bitmap lockedBitmap>;

        if $r2 != null goto label05;

     label03:
        $r1 = r0.<com.apostek.untangle.DrawView: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r3, 2130837676);

     label04:
        <com.apostek.untangle.DrawView: android.graphics.Bitmap lockedBitmap> = $r2;

     label05:
        $r2 = <com.apostek.untangle.DrawView: android.graphics.Bitmap orbRing>;

        if $r2 != null goto label08;

     label06:
        $r1 = r0.<com.apostek.untangle.DrawView: android.content.Context mContext>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r3, 2130837702);

     label07:
        <com.apostek.untangle.DrawView: android.graphics.Bitmap orbRing> = $r2;

     label08:
        $r8 = new android.graphics.Paint;

        $r4 = $r8;

     label09:
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected> = $r4;

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 77, 197, 239);

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

     label10:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label11:
        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(255);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(4.0F);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

     label12:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

     label13:
        virtualinvoke $r4.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircleSelected>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label14:
        $r8 = new android.graphics.Paint;

        $r4 = $r8;

     label15:
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle> = $r4;

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 77, 197, 239);

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

     label16:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label17:
        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(100);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(5.0F);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

     label18:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

     label19:
        virtualinvoke $r4.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pCircle>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label20:
        $r8 = new android.graphics.Paint;

        $r4 = $r8;

     label21:
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect> = $r4;

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

     label22:
        $i0 = -1;

     label23:
        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

     label24:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label25:
        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(100);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

     label26:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

     label27:
        virtualinvoke $r4.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

     label28:
        $r8 = new android.graphics.Paint;

        $r4 = $r8;

     label29:
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect> = $r4;

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 77, 197, 239);

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i0);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

     label30:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

     label31:
        virtualinvoke $r4.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(100);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

     label32:
        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

     label33:
        virtualinvoke $r4.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        $r4 = r0.<com.apostek.untangle.DrawView: android.graphics.Paint pNotIntersect>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r0.<com.apostek.untangle.DrawView: int nodeRadius> = 3;

        r0.<com.apostek.untangle.DrawView: long gameWidth> = 60L;

        r0.<com.apostek.untangle.DrawView: long gameHeight> = 80L;

     label34:
        return;

     label35:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label35;
        catch java.lang.Exception from label03 to label04 with label35;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label09 to label10 with label35;
        catch java.lang.Exception from label11 to label12 with label35;
        catch java.lang.Exception from label13 to label14 with label35;
        catch java.lang.Exception from label15 to label16 with label35;
        catch java.lang.Exception from label17 to label18 with label35;
        catch java.lang.Exception from label19 to label20 with label35;
        catch java.lang.Exception from label21 to label22 with label35;
        catch java.lang.Exception from label23 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Exception from label29 to label30 with label35;
        catch java.lang.Exception from label31 to label32 with label35;
        catch java.lang.Exception from label33 to label34 with label35;
    }
}
