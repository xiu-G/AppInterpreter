public class com.aishukeclassmfkb.db.DB extends java.lang.Object
{
    public static java.lang.String Const_TableName_ASK_BookInfo;
    public static java.lang.String Const_TableName_ASK_BookMark;
    private static final java.lang.String DATABASE_NAME;
    private static final java.lang.String SQL_CREATE_ASK_BOOKChapter;
    private static final java.lang.String SQL_CREATE_ASK_BOOKINFO;
    private static final java.lang.String SQL_CREATE_ASK_BOOKMARK;
    public static java.lang.String const_TableName_ASK_BookChapter;
    private static volatile com.aishukeclassmfkb.db.DB dao;
    private static volatile android.database.sqlite.SQLiteDatabase db;
    private android.content.Context ctx;

    static void <clinit>()
    {
        <com.aishukeclassmfkb.db.DB: java.lang.String SQL_CREATE_ASK_BOOKMARK> = "CREATE TABLE IF NOT EXISTS ASK_BookMark(objectid INTEGER PRIMARY KEY,bookInfoID TEXT,bookId TEXT,bookTitle TEXT,chapterId TEXT,chapterName TEXT,readDate TEXT,offset TEXT,offset_keywold TEXT);";

        <com.aishukeclassmfkb.db.DB: java.lang.String SQL_CREATE_ASK_BOOKINFO> = "CREATE TABLE IF NOT EXISTS ASK_BookInfo(objectid INTEGER PRIMARY KEY,booktype INTEGER,bookID TEXT,bookTitle TEXT,bookImg TEXT,bookPath TEXT,lastReadChapterID TEXT,readingPostion TEXT,lastReadingDate TEXT,totleSize TEXT,orderno TEXT,isupdate,INTEGER);";

        <com.aishukeclassmfkb.db.DB: java.lang.String SQL_CREATE_ASK_BOOKChapter> = "CREATE TABLE IF NOT EXISTS ASK_BookChapter(objectid INTEGER PRIMARY KEY,bookInfoID TEXT,bookid TEXT,chapterid TEXT,chaptertitle TEXT,chaptercontent TEXT,chaptersort INTEGER);";

        <com.aishukeclassmfkb.db.DB: java.lang.String DATABASE_NAME> = "LeDu.db";

        <com.aishukeclassmfkb.db.DB: com.aishukeclassmfkb.db.DB dao> = null;

        <com.aishukeclassmfkb.db.DB: java.lang.String Const_TableName_ASK_BookInfo> = "ASK_BookInfo";

        <com.aishukeclassmfkb.db.DB: java.lang.String Const_TableName_ASK_BookMark> = "ASK_BookMark";

        <com.aishukeclassmfkb.db.DB: java.lang.String const_TableName_ASK_BookChapter> = "ASK_BookChapter";

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.aishukeclassmfkb.db.DB r0;
        java.lang.Exception $r5, $r6;

        r0 := @this: com.aishukeclassmfkb.db.DB;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>("****************************************");

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>("***************execSQL******************");

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>("****************************************");

        r0.<com.aishukeclassmfkb.db.DB: android.content.Context ctx> = $r1;

        $r2 = virtualinvoke r0.<com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase openDB()>();

        <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db> = $r2;

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        $r3 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ALTER TABLE ");

     label02:
        $r4 = <com.aishukeclassmfkb.db.DB: java.lang.String Const_TableName_ASK_BookInfo>;

     label03:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add \'orderno\' TEXT");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

     label04:
        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        $r3 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ALTER TABLE ");

     label06:
        $r4 = <com.aishukeclassmfkb.db.DB: java.lang.String Const_TableName_ASK_BookInfo>;

     label07:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add \'isupdate\' INTEGER");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

     label08:
        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS ASK_BookInfo(objectid INTEGER PRIMARY KEY,booktype INTEGER,bookID TEXT,bookTitle TEXT,bookImg TEXT,bookPath TEXT,lastReadChapterID TEXT,readingPostion TEXT,lastReadingDate TEXT,totleSize TEXT,orderno TEXT,isupdate,INTEGER);");

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS ASK_BookMark(objectid INTEGER PRIMARY KEY,bookInfoID TEXT,bookId TEXT,bookTitle TEXT,chapterId TEXT,chapterName TEXT,readDate TEXT,offset TEXT,offset_keywold TEXT);");

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS ASK_BookChapter(objectid INTEGER PRIMARY KEY,bookInfoID TEXT,bookid TEXT,chapterid TEXT,chaptertitle TEXT,chaptercontent TEXT,chaptersort INTEGER);");

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

        return;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        goto label04;

     label10:
        $r6 := @caughtexception;

        goto label08;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    public static com.aishukeclassmfkb.db.DB getInstance(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        com.aishukeclassmfkb.db.DB $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.aishukeclassmfkb.db.DB: com.aishukeclassmfkb.db.DB dao>;

        if $r1 != null goto label3;

        entermonitor class "Lcom/aishukeclassmfkb/db/DB;";

     label1:
        $r1 = <com.aishukeclassmfkb.db.DB: com.aishukeclassmfkb.db.DB dao>;

        if $r1 != null goto label2;

        $r1 = new com.aishukeclassmfkb.db.DB;

        specialinvoke $r1.<com.aishukeclassmfkb.db.DB: void <init>(android.content.Context)>($r0);

        <com.aishukeclassmfkb.db.DB: com.aishukeclassmfkb.db.DB dao> = $r1;

     label2:
        exitmonitor class "Lcom/aishukeclassmfkb/db/DB;";

     label3:
        $r1 = <com.aishukeclassmfkb.db.DB: com.aishukeclassmfkb.db.DB dao>;

        return $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor class "Lcom/aishukeclassmfkb/db/DB;";

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean deleteLocalBook(com.aishukeclassmfkb.entity.BookMark)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        com.aishukeclassmfkb.entity.BookMark $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.aishukeclassmfkb.db.DB r0;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.db.DB;

        $r1 := @parameter0: com.aishukeclassmfkb.entity.BookMark;

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase openDB()>();

        <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db> = $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Book DB ID=");

        $i0 = virtualinvoke $r1.<com.aishukeclassmfkb.entity.BookMark: int getId()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>($r4);

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id =\'");

        $i0 = virtualinvoke $r1.<com.aishukeclassmfkb.entity.BookMark: int getId()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("BookMark", $r4, null);

        $r2 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteBookMark counts=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>($r4);

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public android.database.sqlite.SQLiteDatabase openDB()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.Context $r2;
        com.aishukeclassmfkb.db.DB r0;
        boolean $z0;

        r0 := @this: com.aishukeclassmfkb.db.DB;

        staticinvoke <com.aishukeclassmfkb.util.DebugLog: void d(java.lang.String)>("openDB");

        $r1 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        if $r1 == null goto label1;

        $r1 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<com.aishukeclassmfkb.db.DB: android.content.Context ctx>;

        $r1 = virtualinvoke $r2.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>("LeDu.db", 0, null);

        <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db> = $r1;

     label2:
        $r1 = <com.aishukeclassmfkb.db.DB: android.database.sqlite.SQLiteDatabase db>;

        return $r1;
    }
}
