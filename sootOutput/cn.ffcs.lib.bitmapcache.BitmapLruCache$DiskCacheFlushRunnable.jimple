final class cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final com.jakewharton.disklrucache.DiskLruCache mDiskCache;

    public void <init>(com.jakewharton.disklrucache.DiskLruCache)
    {
        cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable r0;
        com.jakewharton.disklrucache.DiskLruCache $r1;

        r0 := @this: cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable;

        $r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable: com.jakewharton.disklrucache.DiskLruCache mDiskCache> = $r1;

        return;
    }

    public void run()
    {
        java.lang.Throwable r1;
        com.jakewharton.disklrucache.DiskLruCache $r3;
        cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable r0;
        java.io.IOException $r4;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        $z0 = <cn.ffcs.lib.bitmapcache.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = <cn.ffcs.lib.bitmapcache.Constants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, "Flushing Disk Cache");

     label1:
        $r3 = r0.<cn.ffcs.lib.bitmapcache.BitmapLruCache$DiskCacheFlushRunnable: com.jakewharton.disklrucache.DiskLruCache mDiskCache>;

     label2:
        virtualinvoke $r3.<com.jakewharton.disklrucache.DiskLruCache: void flush()>();

     label3:
        return;

     label4:
        r1 := @caughtexception;

        $r4 = (java.io.IOException) r1;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
