public class com.qq.jce.wup.BasicClassTypeUtil extends java.lang.Object
{

    public void <init>()
    {
        com.qq.jce.wup.BasicClassTypeUtil r0;

        r0 := @this: com.qq.jce.wup.BasicClassTypeUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void addType(java.util.ArrayList, java.lang.String)
    {
        int $i0, $i1;
        char $c2;
        java.lang.String $r1;
        java.util.ArrayList r0;

        r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        $i1 = -1;

        $i1 = $i0 + $i1;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        if $i1 != 62 goto label2;

        $i1 = -1;

        $i0 = $i0 + $i1;

        if $i0 != 0 goto label1;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r1 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.String uni2JavaType(java.lang.String)>($r1);

        virtualinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>(0, $r1);

        return;
    }

    public static java.lang.Object createClassByName(java.lang.String) throws com.qq.jce.wup.ObjectCreateException
    {
        java.lang.Float $r6;
        java.lang.Object[] $r15;
        java.lang.Double $r5;
        java.util.HashMap r11;
        java.lang.Integer $r2;
        java.lang.reflect.Constructor $r14;
        java.util.ArrayList r10;
        java.lang.Long $r7;
        java.lang.Short $r8;
        java.lang.Boolean $r3;
        java.lang.String r1;
        java.lang.Byte $r4;
        boolean $z0;
        com.qq.jce.wup.ObjectCreateException $r17;
        java.lang.Class[] $r13;
        java.lang.IllegalArgumentException $r9;
        java.lang.Exception r0;
        java.lang.Class $r12;
        java.lang.Object $r16;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z0 == 0 goto label01;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r2;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z0 == 0 goto label02;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r3;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z0 == 0 goto label03;

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        return $r4;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z0 == 0 goto label04;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r5;

     label04:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z0 == 0 goto label05;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r6;

     label05:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z0 == 0 goto label06;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        return $r7;

     label06:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z0 == 0 goto label07;

        $r8 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        return $r8;

     label07:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z0 == 0 goto label08;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can not support java.lang.Character");

        throw $r9;

     label08:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z0 == 0 goto label09;

        return "";

     label09:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.util.List");

        if $z0 == 0 goto label10;

        r10 = new java.util.ArrayList;

        specialinvoke r10.<java.util.ArrayList: void <init>()>();

        return r10;

     label10:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("java.util.Map");

        if $z0 == 0 goto label11;

        r11 = new java.util.HashMap;

        specialinvoke r11.<java.util.HashMap: void <init>()>();

        return r11;

     label11:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Array");

        if $z0 == 0 goto label12;

        return "Array";

     label12:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("?");

        if $z0 != 0 goto label20;

     label13:
        $r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label14:
        $r13 = newarray (java.lang.Class)[0];

     label15:
        $r14 = virtualinvoke $r12.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r13);

     label16:
        $r15 = newarray (java.lang.Object)[0];

     label17:
        $r16 = virtualinvoke $r14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r15);

     label18:
        return $r16;

     label19:
        r0 := @caughtexception;

        virtualinvoke r0.<java.lang.Exception: void printStackTrace()>();

        $r17 = new com.qq.jce.wup.ObjectCreateException;

        specialinvoke $r17.<com.qq.jce.wup.ObjectCreateException: void <init>(java.lang.Exception)>(r0);

        throw $r17;

     label20:
        return r1;

        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    public static java.lang.Object createClassByUni(java.lang.String) throws com.qq.jce.wup.ObjectCreateException
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r1;
        java.util.List $r8;
        java.util.Map $r9;
        java.lang.Object r2, $r4, r5, $r6;
        java.lang.String $r0, $r7;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.util.ArrayList getTypeList(java.lang.String)>($r0);

        r2 = null;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r4 = null;

        r5 = null;

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (java.lang.String) r2;

        $r6 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.Object createClassByName(java.lang.String)>($r0);

        r2 = $r6;

        $z0 = $r6 instanceof java.lang.String;

        if $z0 == 0 goto label06;

        $r0 = "Array";

        $r7 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label03;

        if r5 != null goto label18;

        r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(class "Ljava/lang/Byte;", 0);

        $r6 = r5;

        r5 = $r4;

     label02:
        $r4 = r5;

        r5 = $r6;

        goto label01;

     label03:
        $r0 = "?";

        $r7 = (java.lang.String) $r6;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label04;

        $r6 = r5;

        r5 = $r4;

        goto label02;

     label04:
        if r5 != null goto label05;

        r5 = $r4;

        goto label02;

     label05:
        goto label02;

     label06:
        $z0 = $r6 instanceof java.util.List;

        if $z0 == 0 goto label09;

        if r5 == null goto label07;

        $z0 = r5 instanceof java.lang.Byte;

        if $z0 == 0 goto label07;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(class "Ljava/lang/Byte;", 1);

        r2 = $r6;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r6, 0, r5);

        $r6 = r5;

        r5 = $r4;

        goto label02;

     label07:
        if r5 == null goto label08;

        $r8 = (java.util.List) $r6;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r5);

     label08:
        $r6 = null;

        r5 = $r4;

        goto label02;

     label09:
        $z0 = $r6 instanceof java.util.Map;

        if $z0 == 0 goto label15;

        if r5 == null goto label13;

        $z0 = 1;

     label10:
        if $r4 == null goto label14;

        $z1 = 1;

     label11:
        $z0 = $z1 & $z0;

        if $z0 == 0 goto label12;

        $r9 = (java.util.Map) $r6;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r4);

     label12:
        $r6 = null;

        r5 = null;

        goto label02;

     label13:
        $z0 = 0;

        goto label10;

     label14:
        $z1 = 0;

        goto label11;

     label15:
        if r5 != null goto label16;

        r5 = $r4;

        goto label02;

     label16:
        goto label02;

     label17:
        return r2;

     label18:
        $r6 = r5;

        r5 = $r4;

        goto label02;
    }

    public static java.lang.String getClassTransName(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label1;

        return "Integer";

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label2;

        return "Boolean";

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label3;

        return "Byte";

     label3:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label4;

        return "Double";

     label4:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label5;

        return "Float";

     label5:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label6;

        return "Long";

     label6:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label7;

        return "Short";

     label7:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 == 0 goto label8;

        return "Character";

     label8:
        return $r0;
    }

    public static java.util.ArrayList getTypeList(java.lang.String)
    {
        java.util.ArrayList r1, $r3;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.util.ArrayList;

        r1 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i0 = 0;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("<");

     label1:
        if i0 >= $i1 goto label3;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: void addType(java.util.ArrayList,java.lang.String)>(r1, $r2);

        i0 = $i1 + 1;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("<", i0);

        $i1 = $i2;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>(",", i0);

        $i4 = -1;

        if $i2 != $i4 goto label2;

        $i1 = $i3;

     label2:
        $i2 = -1;

        if $i3 == $i2 goto label1;

        if $i3 >= $i1 goto label1;

        $i1 = $i3;

        goto label1;

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1);

        staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: void addType(java.util.ArrayList,java.lang.String)>(r1, $r0);

        return r1;
    }

    public static java.lang.String getVariableInit(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=false ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label6;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label6:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label7:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 == 0 goto label8;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label8:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = null ;\n");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static boolean isBasicType(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Integer");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Boolean");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Byte");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Double");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Float");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Long");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Short");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("Char");

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static java.lang.String java2UniType(java.lang.String)
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Integer");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z0 == 0 goto label02;

     label01:
        return "int32";

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Boolean");

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label04;

     label03:
        return "bool";

     label04:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Byte");

        if $z0 != 0 goto label05;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label06;

     label05:
        return "char";

     label06:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Double");

        if $z0 != 0 goto label07;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label08;

     label07:
        return "double";

     label08:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Float");

        if $z0 != 0 goto label09;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label10;

     label09:
        return "float";

     label10:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Long");

        if $z0 != 0 goto label11;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("long");

        if $z0 == 0 goto label12;

     label11:
        return "int64";

     label12:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Short");

        if $z0 != 0 goto label13;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label14;

     label13:
        return "short";

     label14:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.Character");

        if $z0 == 0 goto label15;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can not support java.lang.Character");

        throw $r1;

     label15:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.String");

        if $z0 == 0 goto label16;

        return "string";

     label16:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.util.List");

        if $z0 == 0 goto label17;

        return "list";

     label17:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("java.util.Map");

        if $z0 == 0 goto label18;

        return "map";

     label18:
        return r0;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r6;
        java.util.Iterator $r2, $r5;
        java.lang.String[] $r0;
        java.util.ArrayList r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7;
        java.lang.String r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("char");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("list<char>");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("list<list<char>>");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("map<short,string>");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("map<double,map<float,list<bool>>>");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("map<int64,list<Test.UserInfo>>");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>("map<short,Test.FriendInfo>");

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        r1 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.util.ArrayList getTypeList(java.lang.String)>(r4);

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r4);

        goto label2;

     label3:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r1);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------finished ");

        r4 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.String transTypeList(java.util.ArrayList)>(r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(r4);

        goto label1;

     label4:
        return;
    }

    public static java.lang.String transTypeList(java.util.ArrayList)
    {
        java.util.Iterator $r5;
        java.util.ArrayList r0;
        java.lang.StringBuffer r1, $r6;
        int i0, $i1, $i2;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r7;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.util.ArrayList;

        $r6 = new java.lang.StringBuffer;

        r1 = $r6;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label2;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        $r3 = staticinvoke <com.qq.jce.wup.BasicClassTypeUtil: java.lang.String java2UniType(java.lang.String)>($r3);

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, $r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r0);

        i0 = 0;

     label3:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label7;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label5;

        $i1 = i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i2 = i0 + -1;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z0 == 0 goto label6;

        $i1 = i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i2 = i0 + -1;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

        goto label4;

     label6:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Array");

        if $z0 == 0 goto label4;

        $i1 = i0 + -1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $i2 = i0 + -1;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i1, $r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(0, $r3);

        goto label4;

     label7:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r0);

        $r5 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label8;

     label9:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String uni2JavaType(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int32");

        if $z0 == 0 goto label01;

        return "java.lang.Integer";

     label01:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("bool");

        if $z0 == 0 goto label02;

        return "java.lang.Boolean";

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("char");

        if $z0 == 0 goto label03;

        return "java.lang.Byte";

     label03:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("double");

        if $z0 == 0 goto label04;

        return "java.lang.Double";

     label04:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("float");

        if $z0 == 0 goto label05;

        return "java.lang.Float";

     label05:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("int64");

        if $z0 == 0 goto label06;

        return "java.lang.Long";

     label06:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z0 == 0 goto label07;

        return "java.lang.Short";

     label07:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("string");

        if $z0 == 0 goto label08;

        return "java.lang.String";

     label08:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("list");

        if $z0 == 0 goto label09;

        return "java.util.List";

     label09:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("map");

        if $z0 == 0 goto label10;

        return "java.util.Map";

     label10:
        return r0;
    }
}
