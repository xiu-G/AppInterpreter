final class com.google.tagmanager.protobuf.SmallSortedMap$1 extends com.google.tagmanager.protobuf.SmallSortedMap
{

    void <init>(int)
    {
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap$1 r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap$1;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void <init>(int,com.google.tagmanager.protobuf.SmallSortedMap$1)>($i0, null);

        return;
    }

    public final void makeImmutable()
    {
        java.util.Map$Entry $r1;
        java.util.Iterator $r6;
        com.google.tagmanager.protobuf.SmallSortedMap$1 r0;
        java.lang.Iterable $r5;
        java.util.List $r4;
        int $i0, $i1;
        java.lang.Object $r2;
        com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite $r3;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap$1;

        $z0 = virtualinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap$1: boolean isImmutable()>();

        if $z0 != 0 goto label5;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap$1: int getNumArrayEntries()>();

        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap$1: java.util.Map$Entry getArrayEntryAt(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) $r2;

        $z0 = interfaceinvoke $r3.<com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite: boolean isRepeated()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.List) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r4);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap$1: java.lang.Iterable getOverflowEntries()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) $r2;

        $z0 = interfaceinvoke $r3.<com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite: boolean isRepeated()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.List) $r2;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r4);

        goto label4;

     label5:
        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void makeImmutable()>();

        return;
    }

    public final volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite $r3;
        com.google.tagmanager.protobuf.SmallSortedMap$1 r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap$1;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) $r2;

        $r2 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>($r3, $r1);

        return $r2;
    }
}
