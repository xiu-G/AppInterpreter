class com.google.tagmanager.protobuf.SmallSortedMap extends java.util.AbstractMap
{
    private java.util.List entryList;
    private boolean isImmutable;
    private volatile com.google.tagmanager.protobuf.SmallSortedMap$EntrySet lazyEntrySet;
    private final int maxArraySize;
    private java.util.Map overflowEntries;

    private void <init>(int)
    {
        java.util.List $r1;
        java.util.Map $r2;
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: int maxArraySize> = $i0;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r2;

        return;
    }

    void <init>(int, com.google.tagmanager.protobuf.SmallSortedMap$1)
    {
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        com.google.tagmanager.protobuf.SmallSortedMap$1 $r1;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.google.tagmanager.protobuf.SmallSortedMap$1;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void <init>(int)>($i0);

        return;
    }

    static void access$200(com.google.tagmanager.protobuf.SmallSortedMap)
    {
        com.google.tagmanager.protobuf.SmallSortedMap $r0;

        $r0 := @parameter0: com.google.tagmanager.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        return;
    }

    static java.util.List access$400(com.google.tagmanager.protobuf.SmallSortedMap)
    {
        java.util.List r1;
        com.google.tagmanager.protobuf.SmallSortedMap $r0;

        $r0 := @parameter0: com.google.tagmanager.protobuf.SmallSortedMap;

        r1 = $r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        return r1;
    }

    static java.lang.Object access$500(com.google.tagmanager.protobuf.SmallSortedMap, int)
    {
        int $i0;
        java.lang.Object $r1;
        com.google.tagmanager.protobuf.SmallSortedMap $r0;

        $r0 := @parameter0: com.google.tagmanager.protobuf.SmallSortedMap;

        $i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>($i0);

        return $r1;
    }

    static java.util.Map access$600(com.google.tagmanager.protobuf.SmallSortedMap)
    {
        com.google.tagmanager.protobuf.SmallSortedMap $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.google.tagmanager.protobuf.SmallSortedMap;

        r1 = $r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        return r1;
    }

    private int binarySearchInArray(java.lang.Comparable)
    {
        java.util.List $r2;
        com.google.tagmanager.protobuf.SmallSortedMap$Entry $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Comparable $r1, $r5;
        java.lang.Object $r3;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 + -1;

        if $i1 < 0 goto label6;

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r3;

        $r5 = virtualinvoke $r4.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $i0 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i0 <= 0 goto label1;

        $i0 = $i1 + 2;

        $i0 = neg $i0;

        return $i0;

     label1:
        if $i0 != 0 goto label6;

        return $i1;

     label2:
        if $i0 > $i1 goto label5;

        $i2 = $i0 + $i1;

        $i2 = $i2 / 2;

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);

        $r4 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r3;

        $r5 = virtualinvoke $r4.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $i3 = interfaceinvoke $r1.<java.lang.Comparable: int compareTo(java.lang.Object)>($r5);

        if $i3 >= 0 goto label3;

        $i1 = $i2 + -1;

        goto label2;

     label3:
        if $i3 <= 0 goto label4;

        $i0 = $i2 + 1;

        goto label2;

     label4:
        return $i2;

     label5:
        $i0 = $i0 + 1;

        $i0 = neg $i0;

        return $i0;

     label6:
        $i0 = 0;

        goto label2;
    }

    private void checkMutable()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $z0 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: boolean isImmutable>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    private void ensureEntryArrayMutable()
    {
        java.util.List $r1;
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = $r1 instanceof java.util.ArrayList;

        if $z0 != 0 goto label1;

        $r2 = new java.util.ArrayList;

        $i0 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: int maxArraySize>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList> = $r2;

     label1:
        return;
    }

    private java.util.SortedMap getOverflowEntriesMutable()
    {
        java.util.TreeMap $r2;
        java.util.Map $r1;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        java.util.SortedMap $r3;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = $r1 instanceof java.util.TreeMap;

        if $z0 != 0 goto label1;

        $r2 = new java.util.TreeMap;

        specialinvoke $r2.<java.util.TreeMap: void <init>()>();

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r2;

     label1:
        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r3 = (java.util.SortedMap) $r1;

        return $r3;
    }

    static com.google.tagmanager.protobuf.SmallSortedMap newFieldMap(int)
    {
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap$1 $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.tagmanager.protobuf.SmallSortedMap$1;

        specialinvoke $r0.<com.google.tagmanager.protobuf.SmallSortedMap$1: void <init>(int)>($i0);

        return $r0;
    }

    static com.google.tagmanager.protobuf.SmallSortedMap newInstanceForTest(int)
    {
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap $r0;

        $i0 := @parameter0: int;

        $r0 = new com.google.tagmanager.protobuf.SmallSortedMap;

        specialinvoke $r0.<com.google.tagmanager.protobuf.SmallSortedMap: void <init>(int)>($i0);

        return $r0;
    }

    private java.lang.Object removeArrayEntryAt(int)
    {
        java.util.Map$Entry $r9;
        java.util.Iterator $r7;
        java.util.Set $r6;
        java.util.List $r1;
        com.google.tagmanager.protobuf.SmallSortedMap$Entry $r2;
        java.util.Map $r4;
        int $i0;
        java.lang.Object $r3, $r8;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        java.util.SortedMap $r5;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $r2 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r3;

        $r3 = virtualinvoke $r2.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        $r4 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r2 = new com.google.tagmanager.protobuf.SmallSortedMap$Entry;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.util.Map$Entry) $r8;

        specialinvoke $r2.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: void <init>(com.google.tagmanager.protobuf.SmallSortedMap,java.util.Map$Entry)>(r0, $r9);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

     label1:
        return $r3;
    }

    public void clear()
    {
        java.util.List $r1;
        java.util.Map $r2;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label2:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Comparable) $r1;

        $i0 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 >= 0 goto label1;

        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.util.Set entrySet()
    {
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        com.google.tagmanager.protobuf.SmallSortedMap$EntrySet $r1;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: com.google.tagmanager.protobuf.SmallSortedMap$EntrySet lazyEntrySet>;

        if $r1 != null goto label1;

        $r1 = new com.google.tagmanager.protobuf.SmallSortedMap$EntrySet;

        specialinvoke $r1.<com.google.tagmanager.protobuf.SmallSortedMap$EntrySet: void <init>(com.google.tagmanager.protobuf.SmallSortedMap,com.google.tagmanager.protobuf.SmallSortedMap$1)>(r0, null);

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: com.google.tagmanager.protobuf.SmallSortedMap$EntrySet lazyEntrySet> = $r1;

     label1:
        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: com.google.tagmanager.protobuf.SmallSortedMap$EntrySet lazyEntrySet>;

        return $r1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.List $r1;
        com.google.tagmanager.protobuf.SmallSortedMap$Entry $r4;
        java.util.Map $r5;
        int $i0;
        java.lang.Object $r2;
        java.lang.Comparable $r3;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.Comparable) $r2;

        $i0 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r3);

        if $i0 < 0 goto label1;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r2;

        $r2 = virtualinvoke $r4.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        return $r2;

     label1:
        $r5 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r2 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        return $r2;
    }

    public java.util.Map$Entry getArrayEntryAt(int)
    {
        java.util.List $r2;
        java.util.Map$Entry $r3;
        int $i0;
        java.lang.Object $r1;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $i0 := @parameter0: int;

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.util.Map$Entry) $r1;

        return $r3;
    }

    public int getNumArrayEntries()
    {
        int $i0;
        java.util.List $r1;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public int getNumOverflowEntries()
    {
        int $i0;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        java.util.Map $r1;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.lang.Iterable getOverflowEntries()
    {
        java.util.Map $r1;
        java.util.Set $r3;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        java.lang.Iterable $r2;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.google.tagmanager.protobuf.SmallSortedMap$EmptySet: java.lang.Iterable iterable()>();

        return $r2;

     label1:
        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r3;
    }

    public boolean isImmutable()
    {
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        z0 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: boolean isImmutable>;

        return z0;
    }

    public void makeImmutable()
    {
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;
        java.util.Map $r1;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $z0 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: boolean isImmutable>;

        if $z0 != 0 goto label3;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label1:
        r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries> = $r1;

        r0.<com.google.tagmanager.protobuf.SmallSortedMap: boolean isImmutable> = 1;

        return;

     label2:
        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        goto label1;

     label3:
        return;
    }

    public java.lang.Object put(java.lang.Comparable, java.lang.Object)
    {
        java.util.List $r3;
        com.google.tagmanager.protobuf.SmallSortedMap$Entry $r5, $r8;
        int $i0, $i1, $i2;
        java.lang.Comparable $r1, $r7;
        java.lang.Object $r2, $r4;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        java.util.SortedMap $r6;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Comparable;

        $r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $i0 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r1);

        if $i0 < 0 goto label1;

        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r4;

        $r2 = virtualinvoke $r5.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Object setValue(java.lang.Object)>($r2);

        return $r2;

     label1:
        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void ensureEntryArrayMutable()>();

        $i0 = $i0 + 1;

        $i0 = neg $i0;

        $i1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: int maxArraySize>;

        if $i0 < $i1 goto label2;

        $r6 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r2 = interfaceinvoke $r6.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r2;

     label2:
        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: int maxArraySize>;

        if $i1 != $i2 goto label3;

        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $i1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: int maxArraySize>;

        $i1 = $i1 + -1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>($i1);

        $r5 = (com.google.tagmanager.protobuf.SmallSortedMap$Entry) $r4;

        $r6 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.SortedMap getOverflowEntriesMutable()>();

        $r7 = virtualinvoke $r5.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Comparable getKey()>();

        $r4 = virtualinvoke $r5.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r6.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r4);

     label3:
        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $r8 = new com.google.tagmanager.protobuf.SmallSortedMap$Entry;

        specialinvoke $r8.<com.google.tagmanager.protobuf.SmallSortedMap$Entry: void <init>(com.google.tagmanager.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object)>(r0, $r1, $r2);

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>($i0, $r8);

        return null;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        java.lang.Comparable $r3;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Comparable) $r2;

        $r2 = virtualinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.lang.Object put(java.lang.Comparable,java.lang.Object)>($r3, $r1);

        return $r2;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r1;
        java.lang.Comparable $r2;
        com.google.tagmanager.protobuf.SmallSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: void checkMutable()>();

        $r2 = (java.lang.Comparable) $r1;

        $i0 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>($r2);

        if $i0 < 0 goto label1;

        $r1 = specialinvoke r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.lang.Object removeArrayEntryAt(int)>($i0);

        return $r1;

     label1:
        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r3 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $r1 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return $r1;
    }

    public int size()
    {
        java.util.List $r1;
        java.util.Map $r2;
        int $i0, $i1;
        com.google.tagmanager.protobuf.SmallSortedMap r0;

        r0 := @this: com.google.tagmanager.protobuf.SmallSortedMap;

        $r1 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.List entryList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = r0.<com.google.tagmanager.protobuf.SmallSortedMap: java.util.Map overflowEntries>;

        $i1 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i0 = $i0 + $i1;

        return $i0;
    }
}
