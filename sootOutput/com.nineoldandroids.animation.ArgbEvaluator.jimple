public class com.nineoldandroids.animation.ArgbEvaluator extends java.lang.Object implements com.nineoldandroids.animation.TypeEvaluator
{

    public void <init>()
    {
        com.nineoldandroids.animation.ArgbEvaluator r0;

        r0 := @this: com.nineoldandroids.animation.ArgbEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        com.nineoldandroids.animation.ArgbEvaluator r0;
        java.lang.Integer $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float $f0, $f1;
        java.lang.Object $r1, $r2;

        r0 := @this: com.nineoldandroids.animation.ArgbEvaluator;

        $f0 := @parameter0: float;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object;

        $r3 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i1 = $i0 >> 24;

        $i2 = $i0 >> 16;

        $i3 = $i2 & 255;

        $i2 = $i0 >> 8;

        $i2 = $i2 & 255;

        $i0 = $i0 & 255;

        $r3 = (java.lang.Integer) $r2;

        $i4 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $i5 = $i4 >> 24;

        $i6 = $i4 >> 16;

        $i7 = $i6 & 255;

        $i6 = $i4 >> 8;

        $i6 = $i6 & 255;

        $i4 = $i4 & 255;

        $i5 = $i5 - $i1;

        $f1 = (float) $i5;

        $f1 = $f1 * $f0;

        $i5 = (int) $f1;

        $i1 = $i1 + $i5;

        $i1 = $i1 << 24;

        $i7 = $i7 - $i3;

        $f1 = (float) $i7;

        $f1 = $f1 * $f0;

        $i7 = (int) $f1;

        $i3 = $i3 + $i7;

        $i3 = $i3 << 16;

        $i3 = $i1 | $i3;

        $i6 = $i6 - $i2;

        $f1 = (float) $i6;

        $f1 = $f1 * $f0;

        $i6 = (int) $f1;

        $i2 = $i6 + $i2;

        $i2 = $i2 << 8;

        $i2 = $i3 | $i2;

        $i4 = $i4 - $i0;

        $f1 = (float) $i4;

        $f0 = $f1 * $f0;

        $i4 = (int) $f0;

        $i0 = $i0 + $i4;

        $i0 = $i0 | $i2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r3;
    }
}
