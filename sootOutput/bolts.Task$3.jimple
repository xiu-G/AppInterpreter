final class bolts.Task$3 extends java.lang.Object implements bolts.Continuation
{
    final bolts.Task$TaskCompletionSource val$allFinished;
    final java.util.concurrent.atomic.AtomicInteger val$count;
    final java.lang.Object val$errorLock;
    final java.util.ArrayList val$errors;
    final java.util.concurrent.atomic.AtomicBoolean val$isCancelled;

    void <init>(java.lang.Object, java.util.ArrayList, java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicInteger, bolts.Task$TaskCompletionSource)
    {
        bolts.Task$TaskCompletionSource $r5;
        java.util.concurrent.atomic.AtomicInteger $r4;
        bolts.Task$3 r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: bolts.Task$3;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.concurrent.atomic.AtomicBoolean;

        $r4 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        $r5 := @parameter4: bolts.Task$TaskCompletionSource;

        r0.<bolts.Task$3: java.lang.Object val$errorLock> = $r1;

        r0.<bolts.Task$3: java.util.ArrayList val$errors> = $r2;

        r0.<bolts.Task$3: java.util.concurrent.atomic.AtomicBoolean val$isCancelled> = $r3;

        r0.<bolts.Task$3: java.util.concurrent.atomic.AtomicInteger val$count> = $r4;

        r0.<bolts.Task$3: bolts.Task$TaskCompletionSource val$allFinished> = $r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object then(bolts.Task) throws java.lang.Exception
    {
        java.lang.Void $r2;
        bolts.Task $r1;
        bolts.Task$3 r0;

        r0 := @this: bolts.Task$3;

        $r1 := @parameter0: bolts.Task;

        $r2 = virtualinvoke r0.<bolts.Task$3: java.lang.Void then(bolts.Task)>($r1);

        return $r2;
    }

    public java.lang.Void then(bolts.Task)
    {
        bolts.Task$TaskCompletionSource $r7;
        java.lang.Throwable $r8;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        java.lang.Exception $r4;
        java.util.ArrayList $r3;
        bolts.AggregateException $r9;
        java.util.concurrent.atomic.AtomicInteger $r6;
        bolts.Task$3 r0;
        int $i0;
        java.lang.Object $r2;
        bolts.Task r1;
        boolean $z0;

        r0 := @this: bolts.Task$3;

        r1 := @parameter0: bolts.Task;

        $z0 = virtualinvoke r1.<bolts.Task: boolean isFaulted()>();

        if $z0 == 0 goto label02;

        $r2 = r0.<bolts.Task$3: java.lang.Object val$errorLock>;

        entermonitor $r2;

     label01:
        $r3 = r0.<bolts.Task$3: java.util.ArrayList val$errors>;

        $r4 = virtualinvoke r1.<bolts.Task: java.lang.Exception getError()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        exitmonitor $r2;

     label02:
        $z0 = virtualinvoke r1.<bolts.Task: boolean isCancelled()>();

        if $z0 == 0 goto label03;

        $r5 = r0.<bolts.Task$3: java.util.concurrent.atomic.AtomicBoolean val$isCancelled>;

        virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label03:
        $r6 = r0.<bolts.Task$3: java.util.concurrent.atomic.AtomicInteger val$count>;

        $i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label10;

        $r3 = r0.<bolts.Task$3: java.util.ArrayList val$errors>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label08;

        $r3 = r0.<bolts.Task$3: java.util.ArrayList val$errors>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label07;

        $r7 = r0.<bolts.Task$3: bolts.Task$TaskCompletionSource val$allFinished>;

        $r3 = r0.<bolts.Task$3: java.util.ArrayList val$errors>;

        $r2 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (java.lang.Exception) $r2;

        virtualinvoke $r7.<bolts.Task$TaskCompletionSource: void setError(java.lang.Exception)>($r4);

        return null;

     label04:
        $r8 := @caughtexception;

     label05:
        exitmonitor $r2;

     label06:
        throw $r8;

     label07:
        $r7 = r0.<bolts.Task$3: bolts.Task$TaskCompletionSource val$allFinished>;

        $r9 = new bolts.AggregateException;

        $r3 = r0.<bolts.Task$3: java.util.ArrayList val$errors>;

        specialinvoke $r9.<bolts.AggregateException: void <init>(java.util.List)>($r3);

        virtualinvoke $r7.<bolts.Task$TaskCompletionSource: void setError(java.lang.Exception)>($r9);

        return null;

     label08:
        $r5 = r0.<bolts.Task$3: java.util.concurrent.atomic.AtomicBoolean val$isCancelled>;

        $z0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label09;

        $r7 = r0.<bolts.Task$3: bolts.Task$TaskCompletionSource val$allFinished>;

        virtualinvoke $r7.<bolts.Task$TaskCompletionSource: void setCancelled()>();

        return null;

     label09:
        $r7 = r0.<bolts.Task$3: bolts.Task$TaskCompletionSource val$allFinished>;

        virtualinvoke $r7.<bolts.Task$TaskCompletionSource: void setResult(java.lang.Object)>(null);

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
    }
}
