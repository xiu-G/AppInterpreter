public class cn.hi321.browser.view.MyScrollLayout extends android.view.ViewGroup
{
    private static final int SNAP_VELOCITY;
    private static final java.lang.String TAG;
    private int mCurScreen;
    private int mDefaultScreen;
    private float mLastMotionX;
    private cn.hi321.browser.view.OnViewChangeListener mOnViewChangeListener;
    private android.widget.Scroller mScroller;
    private android.view.VelocityTracker mVelocityTracker;

    public void <init>(android.content.Context)
    {
        cn.hi321.browser.view.MyScrollLayout r0;
        android.content.Context $r1;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>($r1);

        r0.<cn.hi321.browser.view.MyScrollLayout: int mDefaultScreen> = 0;

        specialinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void init(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        cn.hi321.browser.view.MyScrollLayout r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<cn.hi321.browser.view.MyScrollLayout: int mDefaultScreen> = 0;

        specialinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void init(android.content.Context)>($r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<cn.hi321.browser.view.MyScrollLayout: int mDefaultScreen> = 0;

        specialinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void init(android.content.Context)>($r1);

        return;
    }

    private boolean IsCanMove(int)
    {
        int $i0, $i1, $i2, $i3;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        if $i1 > 0 goto label1;

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        $i2 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getChildCount()>();

        $i3 = -1;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getWidth()>();

        $i2 = $i2 * $i3;

        if $i1 < $i2 goto label2;

        if $i0 > 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void init(android.content.Context)
    {
        android.content.Context $r1;
        android.widget.Scroller $r2;
        int $i0;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: android.content.Context;

        $i0 = r0.<cn.hi321.browser.view.MyScrollLayout: int mDefaultScreen>;

        r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen> = $i0;

        $r2 = new android.widget.Scroller;

        specialinvoke $r2.<android.widget.Scroller: void <init>(android.content.Context)>($r1);

        r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller> = $r2;

        return;
    }

    public void SetOnViewChangeListener(cn.hi321.browser.view.OnViewChangeListener)
    {
        cn.hi321.browser.view.OnViewChangeListener $r1;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: cn.hi321.browser.view.OnViewChangeListener;

        r0.<cn.hi321.browser.view.MyScrollLayout: cn.hi321.browser.view.OnViewChangeListener mOnViewChangeListener> = $r1;

        return;
    }

    public void computeScroll()
    {
        android.widget.Scroller $r1;
        int $i0, $i1;
        cn.hi321.browser.view.MyScrollLayout r0;
        boolean $z0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r1 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        $i1 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void scrollTo(int,int)>($i0, $i1);

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void postInvalidate()>();

     label1:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        cn.hi321.browser.view.MyScrollLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        if $z0 == 0 goto label4;

        $i0 = 0;

        $i1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        return;

     label2:
        $r1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: android.view.View getChildAt(int)>($i2);

        $i3 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i3 == 8 goto label3;

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = $i0 + $i3;

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, 0, $i4, $i5);

        $i0 = $i0 + $i3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        return;
    }

    protected void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3, i4;
        cn.hi321.browser.view.MyScrollLayout r0;
        android.view.View $r1;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onMeasure(int,int)>($i0, $i1);

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i3 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getChildCount()>();

        i4 = 0;

     label1:
        if i4 < $i3 goto label2;

        $i0 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        $i0 = $i0 * $i2;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void scrollTo(int,int)>($i0, 0);

        return;

     label2:
        $r1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: android.view.View getChildAt(int)>(i4);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        i4 = i4 + 1;

        goto label1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.Scroller $r3;
        cn.hi321.browser.view.MyScrollLayout r0;
        android.view.VelocityTracker $r2;
        android.view.MotionEvent $r1;
        int i0, $i1, $i2;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        lookupswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label07;
            case 2: goto label05;
            default: goto label01;
        };

     label01:
        return 1;

     label02:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("", "onTouchEvent  ACTION_DOWN");

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label03;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker> = $r2;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

     label03:
        $r3 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r3.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label04;

        $r3 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        virtualinvoke $r3.<android.widget.Scroller: void abortAnimation()>();

     label04:
        r0.<cn.hi321.browser.view.MyScrollLayout: float mLastMotionX> = $f0;

        goto label01;

     label05:
        $f1 = r0.<cn.hi321.browser.view.MyScrollLayout: float mLastMotionX>;

        $f1 = $f1 - $f0;

        i0 = (int) $f1;

        $z0 = specialinvoke r0.<cn.hi321.browser.view.MyScrollLayout: boolean IsCanMove(int)>(i0);

        if $z0 == 0 goto label01;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label06;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

     label06:
        r0.<cn.hi321.browser.view.MyScrollLayout: float mLastMotionX> = $f0;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void scrollBy(int,int)>(i0, 0);

        goto label01;

     label07:
        i0 = 0;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label08;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        $f0 = virtualinvoke $r2.<android.view.VelocityTracker: float getXVelocity()>();

        i0 = (int) $f0;

     label08:
        if i0 <= 600 goto label10;

        $i1 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        if $i1 <= 0 goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScrollLayout", "snap left");

        i0 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        $i1 = -1;

        i0 = i0 + $i1;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void snapToScreen(int)>(i0);

     label09:
        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label01;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<cn.hi321.browser.view.MyScrollLayout: android.view.VelocityTracker mVelocityTracker> = null;

        goto label01;

     label10:
        $i1 = -600;

        if i0 >= $i1 goto label11;

        i0 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        $i1 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getChildCount()>();

        $i2 = -1;

        $i1 = $i1 + $i2;

        if i0 >= $i1 goto label11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ScrollLayout", "snap right");

        i0 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        i0 = i0 + 1;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void snapToScreen(int)>(i0);

        goto label09;

     label11:
        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void snapToDestination()>();

        goto label09;
    }

    public void snapToDestination()
    {
        int i0, $i1, $i2;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        i0 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getWidth()>();

        $i2 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        $i1 = i0 / 2;

        $i1 = $i2 + $i1;

        i0 = $i1 / i0;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void snapToScreen(int)>(i0);

        return;
    }

    public void snapToScreen(int)
    {
        cn.hi321.browser.view.OnViewChangeListener $r2;
        android.widget.Scroller $r1;
        int i0, $i1, $i2, $i3;
        cn.hi321.browser.view.MyScrollLayout r0;

        r0 := @this: cn.hi321.browser.view.MyScrollLayout;

        $i2 := @parameter0: int;

        i0 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getChildCount()>();

        $i3 = -1;

        i0 = i0 + $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, i0);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        i0 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        $i3 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getWidth()>();

        $i3 = $i3 * $i2;

        if i0 == $i3 goto label1;

        i0 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getWidth()>();

        i0 = i0 * $i2;

        $i3 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        i0 = i0 - $i3;

        $r1 = r0.<cn.hi321.browser.view.MyScrollLayout: android.widget.Scroller mScroller>;

        $i3 = virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: int getScrollX()>();

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i1 = $i1 * 2;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int,int)>($i3, 0, i0, 0, $i1);

        r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen> = $i2;

        virtualinvoke r0.<cn.hi321.browser.view.MyScrollLayout: void invalidate()>();

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: cn.hi321.browser.view.OnViewChangeListener mOnViewChangeListener>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.hi321.browser.view.MyScrollLayout: cn.hi321.browser.view.OnViewChangeListener mOnViewChangeListener>;

        $i2 = r0.<cn.hi321.browser.view.MyScrollLayout: int mCurScreen>;

        interfaceinvoke $r2.<cn.hi321.browser.view.OnViewChangeListener: void OnViewChange(int)>($i2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <cn.hi321.browser.view.MyScrollLayout: java.lang.String TAG> = "ScrollLayout";

        <cn.hi321.browser.view.MyScrollLayout: int SNAP_VELOCITY> = 600;

        return;
    }
}
