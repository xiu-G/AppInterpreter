public class com.cooliris.media.RotateBitmap extends java.lang.Object
{
    public static final java.lang.String TAG;
    private android.graphics.Bitmap mBitmap;
    private int mRotation;

    public void <init>(android.graphics.Bitmap)
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap> = $r1;

        r0.<com.cooliris.media.RotateBitmap: int mRotation> = 0;

        return;
    }

    public void <init>(android.graphics.Bitmap, int)
    {
        com.cooliris.media.RotateBitmap r0;
        int $i0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap> = $r1;

        $i0 = $i0 % 360;

        r0.<com.cooliris.media.RotateBitmap: int mRotation> = $i0;

        return;
    }

    public android.graphics.Bitmap getBitmap()
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        return r1;
    }

    public int getHeight()
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $z0 = virtualinvoke r0.<com.cooliris.media.RotateBitmap: boolean isOrientationChanged()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        return $i0;

     label1:
        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        return $i0;
    }

    public android.graphics.Matrix getRotateMatrix()
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r2;
        int i0, i1;
        float $f0, $f1;
        android.graphics.Matrix r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        i0 = r0.<com.cooliris.media.RotateBitmap: int mRotation>;

        if i0 == 0 goto label1;

        $r2 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        i0 = i0 / 2;

        $r2 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        i1 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        i1 = i1 / 2;

        i0 = neg i0;

        $f0 = (float) i0;

        i0 = neg i1;

        $f1 = (float) i0;

        virtualinvoke r1.<android.graphics.Matrix: boolean preTranslate(float,float)>($f0, $f1);

        i0 = r0.<com.cooliris.media.RotateBitmap: int mRotation>;

        $f0 = (float) i0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float)>($f0);

        i0 = virtualinvoke r0.<com.cooliris.media.RotateBitmap: int getWidth()>();

        i0 = i0 / 2;

        $f0 = (float) i0;

        i0 = virtualinvoke r0.<com.cooliris.media.RotateBitmap: int getHeight()>();

        i0 = i0 / 2;

        $f1 = (float) i0;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f0, $f1);

     label1:
        return r1;
    }

    public int getRotation()
    {
        com.cooliris.media.RotateBitmap r0;
        int i0;

        r0 := @this: com.cooliris.media.RotateBitmap;

        i0 = r0.<com.cooliris.media.RotateBitmap: int mRotation>;

        return i0;
    }

    public int getWidth()
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $z0 = virtualinvoke r0.<com.cooliris.media.RotateBitmap: boolean isOrientationChanged()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        return $i0;

     label1:
        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        return $i0;
    }

    public boolean isOrientationChanged()
    {
        com.cooliris.media.RotateBitmap r0;
        int $i0;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $i0 = r0.<com.cooliris.media.RotateBitmap: int mRotation>;

        $i0 = $i0 / 90;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void recycle()
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label1;

        $r1 = r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

        r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap> = null;

     label1:
        return;
    }

    public void setBitmap(android.graphics.Bitmap)
    {
        com.cooliris.media.RotateBitmap r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $r1 := @parameter0: android.graphics.Bitmap;

        r0.<com.cooliris.media.RotateBitmap: android.graphics.Bitmap mBitmap> = $r1;

        return;
    }

    public void setRotation(int)
    {
        com.cooliris.media.RotateBitmap r0;
        int $i0;

        r0 := @this: com.cooliris.media.RotateBitmap;

        $i0 := @parameter0: int;

        r0.<com.cooliris.media.RotateBitmap: int mRotation> = $i0;

        return;
    }

    public static void <clinit>()
    {
        <com.cooliris.media.RotateBitmap: java.lang.String TAG> = "RotateBitmap";

        return;
    }
}
