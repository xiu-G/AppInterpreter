public class oauth.signpost.basic.HttpRequestAdapter extends java.lang.Object implements oauth.signpost.http.HttpRequest
{
    protected java.net.HttpURLConnection connection;

    public void <init>(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r1;
        oauth.signpost.basic.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r1 := @parameter0: java.net.HttpURLConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection> = $r1;

        return;
    }

    public java.lang.String getContentType()
    {
        java.net.HttpURLConnection $r2;
        oauth.signpost.basic.HttpRequestAdapter r0;
        java.lang.String $r1;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r2 = r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>("Content-Type");

        return $r1;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        java.net.HttpURLConnection $r2;
        oauth.signpost.basic.HttpRequestAdapter r0;
        java.lang.String $r1;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>($r1);

        return $r1;
    }

    public java.io.InputStream getMessagePayload() throws java.io.IOException
    {
        oauth.signpost.basic.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        return null;
    }

    public java.lang.String getMethod()
    {
        java.net.HttpURLConnection $r2;
        oauth.signpost.basic.HttpRequestAdapter r0;
        java.lang.String $r1;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r2 = r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection>;

        $r1 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        return $r1;
    }

    public java.lang.String getRequestUrl()
    {
        java.net.HttpURLConnection $r1;
        java.net.URL $r2;
        oauth.signpost.basic.HttpRequestAdapter r0;
        java.lang.String $r3;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r1 = r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toExternalForm()>();

        return $r3;
    }

    public boolean hasPayload() throws java.io.IOException
    {
        oauth.signpost.basic.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        return 0;
    }

    public void setHeader(java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection $r3;
        oauth.signpost.basic.HttpRequestAdapter r0;
        java.lang.String $r1, $r2;

        r0 := @this: oauth.signpost.basic.HttpRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<oauth.signpost.basic.HttpRequestAdapter: java.net.HttpURLConnection connection>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }
}
