public interface  twitter4j.HttpClient extends java.lang.Object
{

    public abstract void addDefaultRequestHeader(java.lang.String, java.lang.String);

    public abstract twitter4j.HttpResponse delete(java.lang.String);

    public abstract twitter4j.HttpResponse delete(java.lang.String, twitter4j.HttpParameter[], twitter4j.auth.Authorization, twitter4j.HttpResponseListener);

    public abstract twitter4j.HttpResponse get(java.lang.String);

    public abstract twitter4j.HttpResponse get(java.lang.String, twitter4j.HttpParameter[], twitter4j.auth.Authorization, twitter4j.HttpResponseListener);

    public abstract java.util.Map getRequestHeaders();

    public abstract twitter4j.HttpResponse head(java.lang.String);

    public abstract twitter4j.HttpResponse post(java.lang.String);

    public abstract twitter4j.HttpResponse post(java.lang.String, twitter4j.HttpParameter[], twitter4j.auth.Authorization, twitter4j.HttpResponseListener);

    public abstract twitter4j.HttpResponse put(java.lang.String);

    public abstract twitter4j.HttpResponse put(java.lang.String, twitter4j.HttpParameter[], twitter4j.auth.Authorization, twitter4j.HttpResponseListener);

    public abstract twitter4j.HttpResponse request(twitter4j.HttpRequest);

    public abstract twitter4j.HttpResponse request(twitter4j.HttpRequest, twitter4j.HttpResponseListener);
}
