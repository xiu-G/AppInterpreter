public class cn.mobgo.linlingo.util.UpdateChecker extends android.os.AsyncTask
{
    public static final java.lang.String ACTION_UPDATE_INFO_RETRIEVED;
    public static final java.lang.String EXTRA_OUT_DESCRIPTION;
    public static final java.lang.String EXTRA_OUT_URI;
    public static final java.lang.String EXTRA_OUT_VERSION;
    private android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.mobgo.linlingo.util.UpdateChecker r0;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<cn.mobgo.linlingo.util.UpdateChecker: android.content.Context mContext> = $r1;

        return;
    }

    private org.apache.http.impl.client.DefaultHttpClient createHttpClient()
    {
        org.apache.http.impl.client.DefaultHttpClient r2;
        org.apache.http.conn.scheme.PlainSocketFactory $r5;
        org.apache.http.HttpVersion $r7;
        org.apache.http.conn.scheme.SchemeRegistry r4;
        org.apache.http.params.BasicHttpParams r3;
        cn.mobgo.linlingo.util.UpdateChecker r0;
        org.apache.http.conn.scheme.Scheme $r6;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler $r8;
        org.apache.http.params.HttpParams $r10;
        org.apache.http.HttpHost $r9;
        boolean $z0;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        r4 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r4.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r5 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        $r6 = new org.apache.http.conn.scheme.Scheme;

        specialinvoke $r6.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r5, 80);

        virtualinvoke r4.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r6);

        r3 = new org.apache.http.params.BasicHttpParams;

        specialinvoke r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r7 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>(r3, $r7);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>(r3, "UTF-8");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>(r3, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r3, 30000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r3, 2147483647);

        r1 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke r1.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r3, r4);

        r2 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke r2.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r1, r3);

        $r8 = new org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        specialinvoke $r8.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>(3, 0);

        virtualinvoke r2.<org.apache.http.impl.client.DefaultHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>($r8);

        $z0 = staticinvoke <cn.mobgo.linlingo.util.NetworkWatcher: boolean isWifiConnected()>();

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <cn.mobgo.linlingo.util.NetworkWatcher: boolean hasProxy()>();

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <cn.mobgo.linlingo.util.NetworkWatcher: org.apache.http.HttpHost getProxy()>();

        if $r9 == null goto label1;

        $r10 = virtualinvoke r2.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r10.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", $r9);

     label1:
        return r2;
    }

    private java.lang.String getBodyAsString(org.apache.http.HttpEntity)
    {
        byte[] r3;
        java.io.ByteArrayOutputStream r2, $r7;
        org.apache.http.HttpEntity $r1;
        cn.mobgo.linlingo.util.UpdateChecker r0;
        java.lang.Exception $r6;
        int i0;
        java.lang.String $r5;
        java.io.InputStream $r4;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r1 := @parameter0: org.apache.http.HttpEntity;

        $r7 = new java.io.ByteArrayOutputStream;

        r2 = $r7;

     label01:
        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label02:
        r3 = newarray (byte)[2048];

     label03:
        $r4 = interfaceinvoke $r1.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label04:
        i0 = 0;

     label05:
        if i0 == -1 goto label08;

     label06:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>(r3);

     label07:
        goto label05;

     label08:
        r3 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r5 = staticinvoke <cn.mobgo.linlingo.util.Utilities: java.lang.String getUTF8String(byte[])>(r3);

     label09:
        return $r5;

     label10:
        $r6 := @caughtexception;

        return "";

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        cn.mobgo.linlingo.util.UpdateChecker r0;
        java.lang.Void[] $r3;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.Void[]) $r2;

        $r1 = virtualinvoke r0.<cn.mobgo.linlingo.util.UpdateChecker: java.lang.Void doInBackground(java.lang.Void[])>($r3);

        return $r1;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        org.apache.http.impl.client.DefaultHttpClient $r6;
        android.content.Context $r7;
        android.content.Intent r2;
        org.apache.http.StatusLine $r10;
        org.json.JSONObject r4;
        java.util.Locale $r13;
        java.lang.Thread $r5;
        int $i0;
        java.lang.String $r8, r14;
        java.lang.Void[] $r1;
        boolean $z0;
        org.apache.http.HttpEntity $r11;
        org.json.JSONTokener $r12;
        cn.mobgo.linlingo.util.UpdateChecker r0;
        java.lang.Exception $r16;
        org.apache.http.client.methods.HttpGet r3;
        org.apache.http.HttpResponse $r9;
        java.lang.StringBuilder $r15;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r1 := @parameter0: java.lang.Void[];

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void setName(java.lang.String)>("Update Checker");

        $r6 = specialinvoke r0.<cn.mobgo.linlingo.util.UpdateChecker: org.apache.http.impl.client.DefaultHttpClient createHttpClient()>();

        r3 = new org.apache.http.client.methods.HttpGet;

        $r7 = r0.<cn.mobgo.linlingo.util.UpdateChecker: android.content.Context mContext>;

        $r8 = staticinvoke <cn.mobgo.linlingo.util.Utilities: java.lang.String appendUserInfo(android.content.Context,java.lang.String)>($r7, "http://b2c.mobgo.cn/update/android_linlingo.json");

        specialinvoke r3.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r8);

     label01:
        $r9 = virtualinvoke $r6.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r3);

        $r10 = interfaceinvoke $r9.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r10.<org.apache.http.StatusLine: int getStatusCode()>();

     label02:
        if $i0 != 200 goto label22;

     label03:
        $r11 = interfaceinvoke $r9.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = specialinvoke r0.<cn.mobgo.linlingo.util.UpdateChecker: java.lang.String getBodyAsString(org.apache.http.HttpEntity)>($r11);

     label04:
        r4 = new org.json.JSONObject;

        $r12 = new org.json.JSONTokener;

     label05:
        specialinvoke $r12.<org.json.JSONTokener: void <init>(java.lang.String)>($r8);

        specialinvoke r4.<org.json.JSONObject: void <init>(org.json.JSONTokener)>($r12);

        $r8 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("version");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

     label06:
        if $z0 != 0 goto label22;

        r2 = new android.content.Intent;

     label07:
        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String)>("cn.mobgo.lockgo.UPDATE_INFO_RETRIEVED");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(1073741824);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("version", $r8);

        $r13 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r8 = virtualinvoke $r13.<java.util.Locale: java.lang.String getLanguage()>();

     label08:
        r14 = $r8;

     label09:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

     label10:
        if $z0 == 0 goto label11;

        r14 = "en";

     label11:
        $r15 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("desc_");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r4.<org.json.JSONObject: boolean has(java.lang.String)>($r8);

     label13:
        if $z0 == 0 goto label23;

     label14:
        $r8 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r8);

     label15:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

     label16:
        if $z0 != 0 goto label18;

     label17:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("desc", $r8);

     label18:
        $r8 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("link");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

     label19:
        if $z0 != 0 goto label21;

     label20:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("uri", $r8);

     label21:
        $r7 = r0.<cn.mobgo.linlingo.util.UpdateChecker: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcast(android.content.Intent)>(r2);

     label22:
        return null;

     label23:
        $r8 = virtualinvoke r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("desc");

     label24:
        goto label15;

     label25:
        $r16 := @caughtexception;

        $r8 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        if $r8 == null goto label22;

        $r8 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LinLinGo", $r8);

        goto label22;

        catch java.lang.Exception from label01 to label02 with label25;
        catch java.lang.Exception from label03 to label04 with label25;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label12 to label13 with label25;
        catch java.lang.Exception from label14 to label15 with label25;
        catch java.lang.Exception from label15 to label16 with label25;
        catch java.lang.Exception from label17 to label19 with label25;
        catch java.lang.Exception from label20 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        java.lang.Void $r2;
        java.lang.Object $r1;
        cn.mobgo.linlingo.util.UpdateChecker r0;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke r0.<cn.mobgo.linlingo.util.UpdateChecker: void onPostExecute(java.lang.Void)>($r2);

        return;
    }

    protected void onPostExecute(java.lang.Void)
    {
        java.lang.Void $r1;
        cn.mobgo.linlingo.util.UpdateChecker r0;

        r0 := @this: cn.mobgo.linlingo.util.UpdateChecker;

        $r1 := @parameter0: java.lang.Void;

        r0.<cn.mobgo.linlingo.util.UpdateChecker: android.content.Context mContext> = null;

        return;
    }

    public static void <clinit>()
    {
        <cn.mobgo.linlingo.util.UpdateChecker: java.lang.String EXTRA_OUT_VERSION> = "version";

        <cn.mobgo.linlingo.util.UpdateChecker: java.lang.String EXTRA_OUT_URI> = "uri";

        <cn.mobgo.linlingo.util.UpdateChecker: java.lang.String EXTRA_OUT_DESCRIPTION> = "desc";

        <cn.mobgo.linlingo.util.UpdateChecker: java.lang.String ACTION_UPDATE_INFO_RETRIEVED> = "cn.mobgo.lockgo.UPDATE_INFO_RETRIEVED";

        return;
    }
}
