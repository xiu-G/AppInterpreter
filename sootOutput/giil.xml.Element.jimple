public class giil.xml.Element extends java.lang.Object
{
    private java.util.Vector a;
    private giil.xml.Namespace b;
    private java.lang.String c;
    private java.lang.String d;
    private java.util.Vector e;
    private giil.xml.Element f;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        java.util.Vector $r2;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector a> = null;

        r0.<giil.xml.Element: giil.xml.Namespace b> = null;

        r0.<giil.xml.Element: java.lang.String c> = null;

        r0.<giil.xml.Element: java.lang.String d> = null;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector e> = $r2;

        r0.<giil.xml.Element: giil.xml.Element f> = null;

        r0.<giil.xml.Element: java.lang.String c> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector a> = $r2;

        return;
    }

    public void <init>(java.lang.String, giil.xml.Namespace)
    {
        java.util.Vector $r3;
        giil.xml.Namespace $r2, $r4;
        java.lang.String $r1, $r5;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector a> = null;

        r0.<giil.xml.Element: giil.xml.Namespace b> = null;

        r0.<giil.xml.Element: java.lang.String c> = null;

        r0.<giil.xml.Element: java.lang.String d> = null;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector e> = $r3;

        r0.<giil.xml.Element: giil.xml.Element f> = null;

        r0.<giil.xml.Element: java.lang.String c> = $r1;

        r0.<giil.xml.Element: giil.xml.Namespace b> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<giil.xml.Element: java.util.Vector a> = $r3;

        $r4 = r0.<giil.xml.Element: giil.xml.Namespace b>;

        $r1 = virtualinvoke $r4.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespaceUri()>();

        virtualinvoke r0.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>("xmlns", $r1);

        return;

     label1:
        $r1 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r5 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespaceUri()>();

        virtualinvoke r0.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>($r1, $r5);

        return;
    }

    public giil.xml.Element addChild(java.lang.String)
    {
        java.util.Vector $r3;
        java.lang.String $r1;
        giil.xml.Element r0, $r2;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = new giil.xml.Element;

        specialinvoke $r2.<giil.xml.Element: void <init>(java.lang.String)>($r1);

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        return $r2;
    }

    public giil.xml.Element addChild(java.lang.String, giil.xml.Namespace)
    {
        java.util.Vector $r6;
        giil.xml.Namespace $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r3;
        giil.xml.Element r0, $r5;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = new giil.xml.Element;

        specialinvoke $r5.<giil.xml.Element: void <init>(java.lang.String)>($r1);

        $r6 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        return $r5;

     label2:
        goto label1;
    }

    public giil.xml.Element addContent(giil.xml.Element)
    {
        java.util.Vector $r2;
        giil.xml.Element r0, $r1;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: giil.xml.Element;

        virtualinvoke $r1.<giil.xml.Element: void setParentElement(giil.xml.Element)>(r0);

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return r0;
    }

    public void addNamespaceDeclaration(giil.xml.Namespace)
    {
        giil.xml.Namespace $r1;
        java.lang.String $r2, $r3;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: giil.xml.Namespace;

        $r2 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r3 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespaceUri()>();

        virtualinvoke r0.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    public giil.xml.Attribute getAttribute(java.lang.String)
    {
        giil.xml.Attribute $r4;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Attribute) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    public java.lang.String getAttributeValue(java.lang.String)
    {
        giil.xml.Attribute $r4;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Attribute) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r4.<giil.xml.Attribute: java.lang.String getValue()>();

        return $r1;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public java.lang.String getAttributeValue(java.lang.String, giil.xml.Namespace)
    {
        giil.xml.Attribute $r7;
        java.util.Vector $r5;
        giil.xml.Namespace $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r1, $r3;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        if $r2 == null goto label5;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label5;

        $r4 = new java.lang.StringBuilder;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r5.<java.util.Vector: int size()>();

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        return null;

     label3:
        $r5 = r0.<giil.xml.Element: java.util.Vector a>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r7 = (giil.xml.Attribute) $r6;

        $r3 = virtualinvoke $r7.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r7.<giil.xml.Attribute: java.lang.String getValue()>();

        return $r1;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        goto label1;
    }

    public giil.xml.AttrList getAttributes()
    {
        java.util.Vector $r2;
        giil.xml.Element r0;
        giil.xml.AttrList $r1;

        r0 := @this: giil.xml.Element;

        $r1 = new giil.xml.AttrList;

        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        specialinvoke $r1.<giil.xml.AttrList: void <init>(java.util.Vector)>($r2);

        return $r1;
    }

    public giil.xml.Element getChild(java.lang.String)
    {
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0, $r4;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Element) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    public giil.xml.Element getChild(java.lang.String, giil.xml.Namespace)
    {
        java.util.Vector $r5;
        giil.xml.Namespace $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.Object $r6;
        java.lang.String $r1, $r3;
        giil.xml.Element r0, $r7;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        $r3 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r5.<java.util.Vector: int size()>();

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        return null;

     label3:
        $r5 = r0.<giil.xml.Element: java.util.Vector e>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r7 = (giil.xml.Element) $r6;

        $r3 = virtualinvoke $r7.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label5;

        $i1 = $i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return $r7;
    }

    public java.lang.String getChildText(java.lang.String)
    {
        java.lang.String $r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        r0 = virtualinvoke r0.<giil.xml.Element: giil.xml.Element getChild(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<giil.xml.Element: java.lang.String getText()>();

        return $r1;
    }

    public java.lang.String getChildText(java.lang.String, giil.xml.Namespace)
    {
        java.lang.String $r1;
        giil.xml.Namespace $r2;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        r0 = virtualinvoke r0.<giil.xml.Element: giil.xml.Element getChild(java.lang.String,giil.xml.Namespace)>($r1, $r2);

        $r1 = virtualinvoke r0.<giil.xml.Element: java.lang.String getText()>();

        return $r1;
    }

    public giil.xml.ElemList getChildren()
    {
        giil.xml.ElemList $r1;
        java.util.Vector $r2;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 = new giil.xml.ElemList;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        specialinvoke $r1.<giil.xml.ElemList: void <init>(java.util.Vector)>($r2);

        return $r1;
    }

    public giil.xml.ElemList getChildren(java.lang.String)
    {
        giil.xml.ElemList $r4;
        java.util.Vector $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r1, $r7;
        giil.xml.Element r0, $r6;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $r4 = new giil.xml.ElemList;

        specialinvoke $r4.<giil.xml.ElemList: void <init>(java.util.Vector)>($r2);

        return $r4;

     label2:
        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $r5 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r6 = (giil.xml.Element) $r5;

        $r7 = virtualinvoke $r6.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r6);

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public giil.xml.ElemList getChildren(java.lang.String, giil.xml.Namespace)
    {
        giil.xml.ElemList $r7;
        java.util.Vector $r3, $r6;
        giil.xml.Namespace $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r8;
        java.lang.String $r1, $r4;
        giil.xml.Element r0, $r9;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        if $r2 == null goto label5;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $r6 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        $r7 = new giil.xml.ElemList;

        specialinvoke $r7.<giil.xml.ElemList: void <init>(java.util.Vector)>($r3);

        return $r7;

     label3:
        $r6 = r0.<giil.xml.Element: java.util.Vector e>;

        $r8 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r9 = (giil.xml.Element) $r8;

        $r4 = virtualinvoke $r9.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r9);

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        goto label1;
    }

    public giil.xml.Document getDocument()
    {
        giil.xml.Document $r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 = new giil.xml.Document;

        specialinvoke $r1.<giil.xml.Document: void <init>()>();

        $r1 = virtualinvoke $r1.<giil.xml.Document: giil.xml.Document build(giil.xml.Element)>(r0);

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        r1 = r0.<giil.xml.Element: java.lang.String c>;

        return r1;
    }

    public giil.xml.Namespace getNamespace()
    {
        giil.xml.Namespace r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        r1 = r0.<giil.xml.Element: giil.xml.Namespace b>;

        return r1;
    }

    public giil.xml.Document getOwnerDocument()
    {
        giil.xml.Document $r1;
        giil.xml.Element r0, $r2, $r3;

        r0 := @this: giil.xml.Element;

        $r2 = null;

     label1:
        $r3 = r0.<giil.xml.Element: giil.xml.Element f>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<giil.xml.Element: giil.xml.Element getParentElement()>();

        $r2 = $r3;

        goto label1;

     label2:
        if $r2 == null goto label3;

        $r1 = new giil.xml.Document;

        specialinvoke $r1.<giil.xml.Document: void <init>()>();

        $r1 = virtualinvoke $r1.<giil.xml.Document: giil.xml.Document build(giil.xml.Element)>($r2);

        return $r1;

     label3:
        return null;
    }

    public giil.xml.Element getParentElement()
    {
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        r0 = r0.<giil.xml.Element: giil.xml.Element f>;

        return r0;
    }

    public java.lang.String getText()
    {
        java.lang.String r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        r1 = r0.<giil.xml.Element: java.lang.String d>;

        return r1;
    }

    public void removeAttribute(java.lang.String)
    {
        giil.xml.Attribute $r4;
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Attribute) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r2 = r0.<giil.xml.Element: java.util.Vector a>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r4);

        return;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public void removeChild(int)
    {
        int $i0;
        java.util.Vector $r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $i0 := @parameter0: int;

        $r1 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r1.<java.util.Vector: void removeElementAt(int)>($i0);

        return;
    }

    public void removeChild(giil.xml.Element)
    {
        java.util.Vector $r2;
        giil.xml.Element r0, $r1;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: giil.xml.Element;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

        return;
    }

    public void removeChild(java.lang.String)
    {
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0, $r4;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Element) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r4);

        return;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public void removeChild(java.lang.String, giil.xml.Namespace)
    {
        java.util.Vector $r3;
        giil.xml.Namespace $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        java.lang.String $r1, $r4;
        giil.xml.Element r0, $r7;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $r2 == null goto label5;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        return;

     label3:
        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $r6 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r7 = (giil.xml.Element) $r6;

        $r4 = virtualinvoke $r7.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>($r7);

        return;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        goto label1;
    }

    public void removeChildren(java.lang.String)
    {
        java.util.Vector $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        giil.xml.Element r0, $r4;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        $i0 = $i0 - 1;

     label1:
        if $i0 >= 0 goto label2;

        return;

     label2:
        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r4 = (giil.xml.Element) $r3;

        $r5 = virtualinvoke $r4.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r2 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r4);

     label3:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;
    }

    public void removeChildren(java.lang.String, giil.xml.Namespace)
    {
        java.util.Vector $r3;
        giil.xml.Namespace $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r8;
        java.lang.Object $r6;
        java.lang.String $r1, $r4;
        giil.xml.Element r0, $r7;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: giil.xml.Namespace;

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $r2 == null goto label5;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r2.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i0 = $i0 - 1;

     label2:
        if $i0 >= 0 goto label3;

        return;

     label3:
        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        $r6 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r7 = (giil.xml.Element) $r6;

        $r4 = virtualinvoke $r7.<giil.xml.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r3 = r0.<giil.xml.Element: java.util.Vector e>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>($r7);

     label4:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label2;

     label5:
        goto label1;
    }

    public giil.xml.Element setAttribute(java.lang.String, java.lang.String)
    {
        giil.xml.Attribute $r4;
        java.util.Vector $r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r1, $r2, $r6;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $r3 = r0.<giil.xml.Element: java.util.Vector a>;

        $r4 = new giil.xml.Attribute;

        specialinvoke $r4.<giil.xml.Attribute: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<giil.xml.Attribute: giil.xml.Attribute setValue(java.lang.String)>($r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return r0;

     label2:
        $r3 = r0.<giil.xml.Element: java.util.Vector a>;

        $r5 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r4 = (giil.xml.Attribute) $r5;

        $r6 = virtualinvoke $r4.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        virtualinvoke $r4.<giil.xml.Attribute: giil.xml.Attribute setValue(java.lang.String)>($r2);

        return r0;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public giil.xml.Element setAttribute(java.lang.String, java.lang.String, giil.xml.Namespace)
    {
        giil.xml.Attribute $r7;
        java.util.Vector $r6;
        giil.xml.Namespace $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.Object $r8;
        java.lang.String $r1, $r2, $r4;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: giil.xml.Namespace;

        if $r3 == null goto label5;

        $r4 = virtualinvoke $r3.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r3.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r6 = r0.<giil.xml.Element: java.util.Vector a>;

        $i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        $r6 = r0.<giil.xml.Element: java.util.Vector a>;

        $r7 = new giil.xml.Attribute;

        specialinvoke $r7.<giil.xml.Attribute: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<giil.xml.Attribute: giil.xml.Attribute setValue(java.lang.String)>($r2);

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        return r0;

     label3:
        $r6 = r0.<giil.xml.Element: java.util.Vector a>;

        $r8 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>($i1);

        $r7 = (giil.xml.Attribute) $r8;

        $r4 = virtualinvoke $r7.<giil.xml.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        virtualinvoke $r7.<giil.xml.Attribute: giil.xml.Attribute setValue(java.lang.String)>($r2);

        return r0;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        goto label1;
    }

    public void setNamespace(giil.xml.Namespace)
    {
        giil.xml.Namespace $r1;
        java.lang.String $r2, $r3;
        giil.xml.Element r0;
        boolean $z0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: giil.xml.Namespace;

        r0.<giil.xml.Element: giil.xml.Namespace b> = $r1;

        $r2 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespaceUri()>();

        virtualinvoke r0.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>("xmlns", $r2);

        return;

     label1:
        $r2 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespace()>();

        $r3 = virtualinvoke $r1.<giil.xml.Namespace: java.lang.String getNamespaceUri()>();

        virtualinvoke r0.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    public void setParentElement(giil.xml.Element)
    {
        giil.xml.Element r0, $r1;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: giil.xml.Element;

        r0.<giil.xml.Element: giil.xml.Element f> = $r1;

        return;
    }

    public giil.xml.Element setText(java.lang.String)
    {
        java.lang.String $r1;
        giil.xml.Element r0;

        r0 := @this: giil.xml.Element;

        $r1 := @parameter0: java.lang.String;

        r0.<giil.xml.Element: java.lang.String d> = $r1;

        return r0;
    }
}
