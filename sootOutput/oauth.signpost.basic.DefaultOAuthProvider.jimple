public class oauth.signpost.basic.DefaultOAuthProvider extends oauth.signpost.AbstractOAuthProvider
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        oauth.signpost.basic.DefaultOAuthProvider r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: oauth.signpost.basic.DefaultOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<oauth.signpost.AbstractOAuthProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://twitter.com/oauth/request_token", "http://twitter.com/oauth/access_token", "http://twitter.com/oauth/authorize");

        return;
    }

    protected void closeConnection(oauth.signpost.http.HttpRequest, oauth.signpost.http.HttpResponse)
    {
        oauth.signpost.basic.DefaultOAuthProvider r0;
        java.net.HttpURLConnection r4;
        oauth.signpost.http.HttpResponse $r2;
        oauth.signpost.http.HttpRequest $r1;
        java.lang.Object $r3;

        r0 := @this: oauth.signpost.basic.DefaultOAuthProvider;

        $r1 := @parameter0: oauth.signpost.http.HttpRequest;

        $r2 := @parameter1: oauth.signpost.http.HttpResponse;

        $r3 = interfaceinvoke $r1.<oauth.signpost.http.HttpRequest: java.lang.Object unwrap()>();

        r4 = (java.net.HttpURLConnection) $r3;

        if r4 == null goto label1;

        virtualinvoke r4.<java.net.HttpURLConnection: void disconnect()>();

     label1:
        return;
    }

    protected oauth.signpost.http.HttpRequest createRequest(java.lang.String) throws java.net.MalformedURLException, java.io.IOException
    {
        oauth.signpost.basic.DefaultOAuthProvider r0;
        java.net.HttpURLConnection r4;
        java.net.URLConnection $r2;
        java.net.URL $r3;
        java.lang.String $r1;
        oauth.signpost.basic.HttpURLConnectionRequestAdapter $r5;

        r0 := @this: oauth.signpost.basic.DefaultOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        r4 = (java.net.HttpURLConnection) $r2;

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke r4.<java.net.HttpURLConnection: void setAllowUserInteraction(boolean)>(0);

        virtualinvoke r4.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", "0");

        $r5 = new oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        specialinvoke $r5.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: void <init>(java.net.HttpURLConnection)>(r4);

        return $r5;
    }

    protected oauth.signpost.http.HttpResponse sendRequest(oauth.signpost.http.HttpRequest) throws java.io.IOException
    {
        oauth.signpost.basic.DefaultOAuthProvider r0;
        java.net.HttpURLConnection r4;
        oauth.signpost.http.HttpRequest $r1;
        java.lang.Object $r3;
        oauth.signpost.basic.HttpURLConnectionResponseAdapter $r2;

        r0 := @this: oauth.signpost.basic.DefaultOAuthProvider;

        $r1 := @parameter0: oauth.signpost.http.HttpRequest;

        $r3 = interfaceinvoke $r1.<oauth.signpost.http.HttpRequest: java.lang.Object unwrap()>();

        r4 = (java.net.HttpURLConnection) $r3;

        virtualinvoke r4.<java.net.HttpURLConnection: void connect()>();

        $r2 = new oauth.signpost.basic.HttpURLConnectionResponseAdapter;

        specialinvoke $r2.<oauth.signpost.basic.HttpURLConnectionResponseAdapter: void <init>(java.net.HttpURLConnection)>(r4);

        return $r2;
    }

    public static void <clinit>()
    {
        <oauth.signpost.basic.DefaultOAuthProvider: long serialVersionUID> = 1L;

        return;
    }
}
