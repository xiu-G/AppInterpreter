public class cn.mobgo.linlingo.util.Utilities extends java.lang.Object
{
    private static final java.lang.String CP_BRAND;
    private static final java.lang.String CP_MODEL;
    private static final java.lang.String CP_OS;
    private static final java.lang.String CP_OS_VERSION;
    private static final java.lang.String CP_USER_ID;
    private static boolean sEmulator;
    private static java.lang.String sUserId;

    static void <clinit>()
    {
        <cn.mobgo.linlingo.util.Utilities: java.lang.String CP_USER_ID> = "u";

        <cn.mobgo.linlingo.util.Utilities: java.lang.String CP_OS_VERSION> = "v";

        <cn.mobgo.linlingo.util.Utilities: java.lang.String CP_OS> = "o";

        <cn.mobgo.linlingo.util.Utilities: java.lang.String CP_MODEL> = "m";

        <cn.mobgo.linlingo.util.Utilities: java.lang.String CP_BRAND> = "b";

        <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId> = null;

        return;
    }

    public void <init>()
    {
        cn.mobgo.linlingo.util.Utilities r0;

        r0 := @this: cn.mobgo.linlingo.util.Utilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendFirstParams(java.lang.StringBuilder, java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("o");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        return;
    }

    private static void appendParams(java.lang.StringBuilder, java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label1:
        return;
    }

    public static java.lang.String appendUserInfo(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        java.lang.StringBuilder r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

     label01:
        specialinvoke r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://b2c.mobgo.cn/update/android_linlingo.json");

     label02:
        $z0 = <cn.mobgo.linlingo.util.Utilities: boolean sEmulator>;

        if $z0 == 0 goto label11;

        $r3 = "Android Emulator";

     label03:
        staticinvoke <cn.mobgo.linlingo.util.Utilities: void appendFirstParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r2, "o", $r3);

     label04:
        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

     label05:
        staticinvoke <cn.mobgo.linlingo.util.Utilities: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r2, "v", $r3);

     label06:
        $r3 = <android.os.Build: java.lang.String BRAND>;

     label07:
        staticinvoke <cn.mobgo.linlingo.util.Utilities: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r2, "b", $r3);

     label08:
        $r3 = <android.os.Build: java.lang.String MODEL>;

     label09:
        staticinvoke <cn.mobgo.linlingo.util.Utilities: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r2, "m", $r3);

        $r3 = staticinvoke <cn.mobgo.linlingo.util.Utilities: java.lang.String getUserId(android.content.Context)>($r0);

        staticinvoke <cn.mobgo.linlingo.util.Utilities: void appendParams(java.lang.StringBuilder,java.lang.String,java.lang.String)>(r2, "u", $r3);

        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        return $r3;

     label11:
        $r3 = "Android";

        goto label03;

     label12:
        $r4 := @caughtexception;

        return "http://b2c.mobgo.cn/update/android_linlingo.json";

        catch java.io.UnsupportedEncodingException from label01 to label02 with label12;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label12;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label12;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label12;
    }

    public static int compareVersion(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r2, $r3;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        i0 = lengthof $r2;

        i1 = lengthof $r3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        if i3 >= i1 goto label3;

        $r0 = $r2[i3];

        i2 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int getInt(java.lang.String)>($r0);

        $r0 = $r3[i3];

        $i4 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int getInt(java.lang.String)>($r0);

        i2 = i2 - $i4;

        if i2 == 0 goto label2;

        return i2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        i0 = i0 - i1;

        return i0;
    }

    public static float getFloat(java.lang.String)
    {
        java.lang.Throwable $r1;
        float $f0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0.0F;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r0);

     label2:
        return $f0;

     label3:
        $r1 := @caughtexception;

        return 0.0F;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int getInt(int,java.lang.String,int)>(10, $r0, 0);

        return $i0;
    }

    public static int getInt(int, java.lang.String, int)
    {
        java.lang.Throwable $r1;
        int $i0, $i1;
        long $l2;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r0, 10);

     label2:
        $i0 = (int) $l2;

        return $i0;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int getInt(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int getInt(int,java.lang.String)>(10, $r0);

        return $i0;
    }

    public static int getInt(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i0 = staticinvoke <cn.mobgo.linlingo.util.Utilities: int getInt(int,java.lang.String,int)>(10, $r0, $i0);

        return $i0;
    }

    public static java.lang.String getUTF8String(byte[])
    {
        int $i0;
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <cn.mobgo.linlingo.util.Utilities: java.lang.String getUTF8String(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String getUTF8String(byte[], int, int)
    {
        java.lang.Throwable $r2;
        byte[] $r0;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        return "";

     label1:
        $r1 = new java.lang.String;

     label2:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, 0, $i1, "UTF-8");

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        return "";

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static java.lang.String getUserId(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager r3;
        int $i0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId>;

        if $r1 != null goto label1;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.READ_PHONE_STATE");

        if $i0 != 0 goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r3 = (android.telephony.TelephonyManager) $r2;

        if r3 == null goto label2;

        $r1 = virtualinvoke r3.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId> = $r1;

        $r1 = "000000000000000";

        $r4 = <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        <cn.mobgo.linlingo.util.Utilities: boolean sEmulator> = $z0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The user ID is ");

        $r1 = <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LinLinGo", $r1);

     label1:
        $r1 = <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId>;

        return $r1;

     label2:
        <cn.mobgo.linlingo.util.Utilities: boolean sEmulator> = 1;

        <cn.mobgo.linlingo.util.Utilities: java.lang.String sUserId> = "";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LinLinGo", "No user ID because the telephony manager was not available.");

        goto label1;
    }

    public static boolean isWifiConnected(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r3;
        android.net.wifi.SupplicantState $r1, $r5;
        android.net.wifi.WifiInfo $r4;
        java.lang.Object $r2;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r3 = (android.net.wifi.WifiManager) $r2;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>();

        $r1 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState COMPLETED>;

        if $r5 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String trim(java.lang.String, char)
    {
        int $i1, $i3, $i4, $i5;
        char $c0, $c2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        if $r0 != null goto label1;

        return "";

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        return $r0;

     label2:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c2;

        $i4 = (int) 34;

        if $i3 == $i4 goto label3;

        $i3 = $i1 - 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c2;

        $i4 = (int) 34;

        if $i3 == $i4 goto label3;

        return $r0;

     label3:
        $i3 = 0;

        $i1 = $i1 - 1;

     label4:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i4 = (int) $c2;

        $i5 = (int) 34;

        if $i4 != $i5 goto label5;

        $i3 = $i3 + 1;

        goto label4;

     label5:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i4 = (int) $c2;

        $i5 = (int) 34;

        if $i4 != $i5 goto label6;

        $i1 = $i1 + -1;

        goto label5;

     label6:
        $i1 = $i1 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i1);

        return $r0;
    }
}
