public class cn.hi321.browser.weave.client.Base32 extends java.lang.Object
{
    private static final java.lang.String base32Chars;
    private static final int[] base32Lookup;

    static void <clinit>()
    {
        int[] $r0;

        <cn.hi321.browser.weave.client.Base32: java.lang.String base32Chars> = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";

        $r0 = newarray (int)[80];

        $r0[0] = 255;

        $r0[1] = 255;

        $r0[2] = 26;

        $r0[3] = 27;

        $r0[4] = 28;

        $r0[5] = 29;

        $r0[6] = 30;

        $r0[7] = 31;

        $r0[8] = 255;

        $r0[9] = 255;

        $r0[10] = 255;

        $r0[11] = 255;

        $r0[12] = 255;

        $r0[13] = 255;

        $r0[14] = 255;

        $r0[15] = 255;

        $r0[16] = 255;

        $r0[18] = 1;

        $r0[19] = 2;

        $r0[20] = 3;

        $r0[21] = 4;

        $r0[22] = 5;

        $r0[23] = 6;

        $r0[24] = 7;

        $r0[25] = 8;

        $r0[26] = 9;

        $r0[27] = 10;

        $r0[28] = 11;

        $r0[29] = 12;

        $r0[30] = 13;

        $r0[31] = 14;

        $r0[32] = 15;

        $r0[33] = 16;

        $r0[34] = 17;

        $r0[35] = 18;

        $r0[36] = 19;

        $r0[37] = 20;

        $r0[38] = 21;

        $r0[39] = 22;

        $r0[40] = 23;

        $r0[41] = 24;

        $r0[42] = 25;

        $r0[43] = 255;

        $r0[44] = 255;

        $r0[45] = 255;

        $r0[46] = 255;

        $r0[47] = 255;

        $r0[48] = 255;

        $r0[50] = 1;

        $r0[51] = 2;

        $r0[52] = 3;

        $r0[53] = 4;

        $r0[54] = 5;

        $r0[55] = 6;

        $r0[56] = 7;

        $r0[57] = 8;

        $r0[58] = 9;

        $r0[59] = 10;

        $r0[60] = 11;

        $r0[61] = 12;

        $r0[62] = 13;

        $r0[63] = 14;

        $r0[64] = 15;

        $r0[65] = 16;

        $r0[66] = 17;

        $r0[67] = 18;

        $r0[68] = 19;

        $r0[69] = 20;

        $r0[70] = 21;

        $r0[71] = 22;

        $r0[72] = 23;

        $r0[73] = 24;

        $r0[74] = 25;

        $r0[75] = 255;

        $r0[76] = 255;

        $r0[77] = 255;

        $r0[78] = 255;

        $r0[79] = 255;

        <cn.hi321.browser.weave.client.Base32: int[] base32Lookup> = $r0;

        return;
    }

    public void <init>()
    {
        cn.hi321.browser.weave.client.Base32 r0;

        r0 := @this: cn.hi321.browser.weave.client.Base32;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String)
    {
        byte[] r1;
        char $c4;
        byte $b6;
        int[] $r2;
        int i0, $i1, i2, i3, $i5, $i7;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 * 5;

        $i1 = $i1 / 8;

        r1 = newarray (byte)[$i1];

        $i1 = 0;

        i2 = 0;

        i3 = 0;

     label1:
        i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 < i0 goto label2;

        return r1;

     label2:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        i0 = (int) $c4;

        i0 = i0 + -48;

        if i0 < 0 goto label3;

        $r2 = <cn.hi321.browser.weave.client.Base32: int[] base32Lookup>;

        $i5 = lengthof $r2;

        if i0 < $i5 goto label4;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2 = <cn.hi321.browser.weave.client.Base32: int[] base32Lookup>;

        i0 = $r2[i0];

        if i0 == 255 goto label3;

        if i2 > 3 goto label6;

        i2 = i2 + 5;

        i2 = i2 % 8;

        if i2 != 0 goto label5;

        $b6 = r1[i3];

        $i5 = (int) $b6;

        i0 = $i5 | i0;

        $b6 = (byte) i0;

        r1[i3] = $b6;

        i3 = i3 + 1;

        i0 = lengthof r1;

        if i3 < i0 goto label3;

        return r1;

     label5:
        $b6 = r1[i3];

        $i5 = 8 - i2;

        i0 = i0 << $i5;

        $i5 = (int) $b6;

        i0 = $i5 | i0;

        $b6 = (byte) i0;

        r1[i3] = $b6;

        goto label3;

     label6:
        i2 = i2 + 5;

        i2 = i2 % 8;

        $b6 = r1[i3];

        $i5 = i0 >>> i2;

        $i7 = (int) $b6;

        $i5 = $i7 | $i5;

        $b6 = (byte) $i5;

        r1[i3] = $b6;

        i3 = i3 + 1;

        $i5 = lengthof r1;

        if i3 >= $i5 goto label7;

        $b6 = r1[i3];

        $i5 = 8 - i2;

        i0 = i0 << $i5;

        $i5 = (int) $b6;

        i0 = $i5 | i0;

        $b6 = (byte) i0;

        r1[i3] = $b6;

        goto label3;

     label7:
        return r1;
    }

    public static byte[] decodeModified(java.lang.String)
    {
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(56, 76);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(57, 79);

        $r1 = staticinvoke <cn.hi321.browser.weave.client.Base32: byte[] decode(java.lang.String)>($r0);

        return $r1;
    }

    public static byte[] encode(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <cn.hi321.browser.weave.client.Base32: java.lang.String encodeOriginal(byte[])>($r0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r0 = staticinvoke <cn.hi321.browser.weave.client.WeaveUtil: byte[] toAsciiBytes(java.lang.String)>($r1);

        return $r0;
    }

    public static java.lang.String encodeOriginal(byte[])
    {
        byte[] $r0;
        char $c6;
        byte $b4;
        java.lang.StringBuffer r1, $r3;
        int $i0, i1, i2, $i3, $i5;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        i1 = 0;

        i2 = 0;

        $r3 = new java.lang.StringBuffer;

        r1 = $r3;

        $i3 = lengthof $r0;

        $i3 = $i3 + 7;

        $i3 = $i3 * 8;

        $i3 = $i3 / 5;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i3);

     label1:
        $i3 = lengthof $r0;

        if i1 < $i3 goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $b4 = $r0[i1];

        $i3 = (int) $b4;

        if $i3 < 0 goto label6;

        $i3 = $r0[i1];

     label3:
        if i2 <= 3 goto label9;

        $i5 = i1 + 1;

        $i0 = lengthof $r0;

        if $i5 >= $i0 goto label8;

        $i0 = i1 + 1;

        $b4 = $r0[$i0];

        $i0 = (int) $b4;

        if $i0 < 0 goto label7;

        $i0 = i1 + 1;

        $i0 = $r0[$i0];

     label4:
        $i5 = 255 >> i2;

        $i3 = $i3 & $i5;

        i2 = i2 + 5;

        i2 = i2 % 8;

        $i3 = $i3 << i2;

        $i5 = 8 - i2;

        $i0 = $i0 >> $i5;

        $i3 = $i3 | $i0;

        i1 = i1 + 1;

     label5:
        $r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        goto label1;

     label6:
        $b4 = $r0[i1];

        $i3 = (int) $b4;

        $i3 = $i3 + 256;

        goto label3;

     label7:
        $i0 = i1 + 1;

        $b4 = $r0[$i0];

        $i0 = (int) $b4;

        $i0 = $i0 + 256;

        goto label4;

     label8:
        $i0 = 0;

        goto label4;

     label9:
        $i0 = i2 + 5;

        $i0 = 8 - $i0;

        $i3 = $i3 >> $i0;

        $i3 = $i3 & 31;

        i2 = i2 + 5;

        i2 = i2 % 8;

        if i2 != 0 goto label5;

        i1 = i1 + 1;

        goto label5;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r1;
        byte[] $r4;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        if $i0 != 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("Supply a Base32-encoded argument.");

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(" Original: ");

        $r3 = $r0[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r3 = $r0[0];

        $r4 = staticinvoke <cn.hi321.browser.weave.client.Base32: byte[] decode(java.lang.String)>($r3);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("      Hex: ");

        $i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if $i0 < $i1 goto label3;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println()>();

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Reencoded: ");

        $r4 = staticinvoke <cn.hi321.browser.weave.client.Base32: byte[] encode(byte[])>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return;

     label3:
        $i1 = $r4[$i0];

        if $i1 >= 0 goto label4;

        $i1 = $i1 + 256;

     label4:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        $i1 = $i1 + 256;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label2;
    }
}
