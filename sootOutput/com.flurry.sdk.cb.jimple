public final class com.flurry.sdk.cb extends java.lang.Object
{
    private int a;
    private java.lang.String b;
    private java.util.Map c;
    private long d;
    private boolean e;
    private boolean f;
    private long g;

    public void <init>(int, java.lang.String, java.util.Map, long, boolean)
    {
        com.flurry.sdk.cb r0;
        java.util.Map $r2;
        int $i0;
        long $l1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.flurry.sdk.cb;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $l1 := @parameter3: long;

        $z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.flurry.sdk.cb: int a> = $i0;

        r0.<com.flurry.sdk.cb: java.lang.String b> = $r1;

        r0.<com.flurry.sdk.cb: java.util.Map c> = $r2;

        r0.<com.flurry.sdk.cb: long d> = $l1;

        r0.<com.flurry.sdk.cb: boolean e> = 0;

        $z0 = r0.<com.flurry.sdk.cb: boolean e>;

        if $z0 == 0 goto label1;

        r0.<com.flurry.sdk.cb: boolean f> = 0;

        return;

     label1:
        r0.<com.flurry.sdk.cb: boolean f> = 1;

        return;
    }

    public final void a(long)
    {
        com.flurry.sdk.cb r0;
        long $l0, $l1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.flurry.sdk.cb;

        $l0 := @parameter0: long;

        r0.<com.flurry.sdk.cb: boolean f> = 1;

        $l1 = r0.<com.flurry.sdk.cb: long d>;

        $l0 = $l0 - $l1;

        r0.<com.flurry.sdk.cb: long g> = $l0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Ended event \'");

        $r2 = r0.<com.flurry.sdk.cb: java.lang.String b>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $l0 = r0.<com.flurry.sdk.cb: long d>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") after ");

        $l0 = r0.<com.flurry.sdk.cb: long g>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.flurry.sdk.ex: void a(int,java.lang.String,java.lang.String)>(3, "FlurryAgent", $r2);

        return;
    }

    public final void a(java.util.Map)
    {
        java.util.Map$Entry $r6;
        java.util.Iterator $r4;
        com.flurry.sdk.cb r0;
        java.util.Set $r3;
        java.util.Map $r1, $r2;
        int $i0;
        java.lang.Object $r5, $r7;
        boolean $z0;

        r0 := @this: com.flurry.sdk.cb;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        if $r2 == null goto label1;

        $r2 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        r0.<com.flurry.sdk.cb: java.util.Map c> = $r1;

        return;

     label2:
        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        $r1 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label4;

        $r1 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        $r1 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        goto label3;

     label4:
        $r1 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        goto label3;

     label5:
        return;
    }

    public final boolean a()
    {
        com.flurry.sdk.cb r0;
        boolean z0;

        r0 := @this: com.flurry.sdk.cb;

        z0 = r0.<com.flurry.sdk.cb: boolean e>;

        return z0;
    }

    public final boolean a(java.lang.String)
    {
        byte $b1;
        com.flurry.sdk.cb r0;
        long $l0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.flurry.sdk.cb;

        $r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.flurry.sdk.cb: boolean e>;

        if $z0 == 0 goto label1;

        $l0 = r0.<com.flurry.sdk.cb: long g>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = r0.<com.flurry.sdk.cb: java.lang.String b>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final void b(java.util.Map)
    {
        com.flurry.sdk.cb r0;
        java.util.Map $r1;

        r0 := @this: com.flurry.sdk.cb;

        $r1 := @parameter0: java.util.Map;

        r0.<com.flurry.sdk.cb: java.util.Map c> = $r1;

        return;
    }

    public final boolean b()
    {
        com.flurry.sdk.cb r0;
        boolean z0;

        r0 := @this: com.flurry.sdk.cb;

        z0 = r0.<com.flurry.sdk.cb: boolean f>;

        return z0;
    }

    public final java.util.Map c()
    {
        com.flurry.sdk.cb r0;
        java.util.Map r1;

        r0 := @this: com.flurry.sdk.cb;

        r1 = r0.<com.flurry.sdk.cb: java.util.Map c>;

        return r1;
    }

    public final int d()
    {
        int $i0;
        byte[] $r1;
        com.flurry.sdk.cb r0;

        r0 := @this: com.flurry.sdk.cb;

        $r1 = virtualinvoke r0.<com.flurry.sdk.cb: byte[] e()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public final byte[] e()
    {
        java.lang.Throwable $r10, $r12, $r13, $r14;
        byte[] $r5;
        java.io.ByteArrayOutputStream $r1;
        long $l1;
        java.io.DataOutputStream $r2, $r11;
        java.util.Map $r4;
        int $i0;
        java.lang.String $r3;
        boolean $z0;
        java.util.Map$Entry $r9;
        java.util.Iterator $r7;
        com.flurry.sdk.cb r0;
        java.util.Set $r6;
        java.lang.Object $r8;

        r0 := @this: com.flurry.sdk.cb;

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

     label02:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        $r2 = new java.io.DataOutputStream;

     label04:
        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r1);

     label05:
        $i0 = r0.<com.flurry.sdk.cb: int a>;

     label06:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>($i0);

     label07:
        $r3 = r0.<com.flurry.sdk.cb: java.lang.String b>;

     label08:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

     label09:
        $r4 = r0.<com.flurry.sdk.cb: java.util.Map c>;

     label10:
        if $r4 != null goto label17;

     label11:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>(0);

     label12:
        $l1 = r0.<com.flurry.sdk.cb: long d>;

     label13:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeLong(long)>($l1);

     label14:
        $l1 = r0.<com.flurry.sdk.cb: long g>;

     label15:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeLong(long)>($l1);

        virtualinvoke $r2.<java.io.DataOutputStream: void flush()>();

        $r5 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label16:
        staticinvoke <com.flurry.sdk.fh: void a(java.io.Closeable)>($r2);

        return $r5;

     label17:
        $r4 = r0.<com.flurry.sdk.cb: java.util.Map c>;

     label18:
        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        virtualinvoke $r2.<java.io.DataOutputStream: void writeShort(int)>($i0);

     label19:
        $r4 = r0.<com.flurry.sdk.cb: java.util.Map c>;

     label20:
        $r6 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label22:
        if $z0 == 0 goto label12;

     label23:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label24:
        $r9 = (java.util.Map$Entry) $r8;

     label25:
        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

     label26:
        $r3 = (java.lang.String) $r8;

     label27:
        $r3 = staticinvoke <com.flurry.sdk.fh: java.lang.String a(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

     label28:
        $r3 = (java.lang.String) $r8;

     label29:
        $r3 = staticinvoke <com.flurry.sdk.fh: java.lang.String a(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

     label30:
        goto label21;

     label31:
        $r10 := @caughtexception;

        $r11 = $r2;

     label32:
        $r5 = newarray (byte)[0];

        staticinvoke <com.flurry.sdk.fh: void a(java.io.Closeable)>($r11);

        return $r5;

     label33:
        $r12 := @caughtexception;

        $r2 = null;

        $r13 = $r12;

     label34:
        staticinvoke <com.flurry.sdk.fh: void a(java.io.Closeable)>($r2);

        throw $r13;

     label35:
        $r13 := @caughtexception;

        goto label34;

     label36:
        $r14 := @caughtexception;

        $r11 = null;

        goto label32;

        catch java.io.IOException from label02 to label03 with label36;
        catch java.io.IOException from label04 to label05 with label36;
        catch java.lang.Throwable from label01 to label05 with label33;
        catch java.io.IOException from label06 to label07 with label31;
        catch java.io.IOException from label08 to label09 with label31;
        catch java.io.IOException from label11 to label12 with label31;
        catch java.io.IOException from label13 to label14 with label31;
        catch java.io.IOException from label15 to label16 with label31;
        catch java.lang.Throwable from label05 to label10 with label35;
        catch java.lang.Throwable from label11 to label16 with label35;
        catch java.io.IOException from label18 to label19 with label31;
        catch java.io.IOException from label20 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label31;
        catch java.io.IOException from label25 to label26 with label31;
        catch java.io.IOException from label27 to label28 with label31;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label17 to label22 with label35;
        catch java.lang.Throwable from label23 to label30 with label35;
    }
}
