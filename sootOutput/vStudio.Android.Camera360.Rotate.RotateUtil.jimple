public class vStudio.Android.Camera360.Rotate.RotateUtil extends java.lang.Object
{
    private static final float RANGE;
    private static final float RANGE2;
    private static vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection;
    private static long mOldTime;
    private final int DOWN;
    private final float DOWN_DEGREE;
    private final int LEFT;
    private final float LEFT_DEGREE;
    private final int NORMAL;
    private final int RIGHT;
    private final float RIGHT_DEGREE;
    private final int SEND_TIME;
    private final int UP;
    private final float UP_DEGREE;
    private float mEndDegree;
    private float mHeight;
    private vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler;
    private float mOldOrientation;
    private float mStartDegree;
    private android.view.View mView;
    private float mWidth;

    public void <init>(android.view.View, int, int)
    {
        int $i0, $i1;
        android.view.View $r1;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r2;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float LEFT_DEGREE> = 270.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float RIGHT_DEGREE> = 90.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float UP_DEGREE> = 0.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float DOWN_DEGREE> = 180.0F;

        $r2 = new vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler;

        specialinvoke $r2.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: void <init>(vStudio.Android.Camera360.Rotate.RotateUtil,vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler)>(r0, null);

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler> = $r2;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int UP> = 2;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int DOWN> = 3;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int LEFT> = 4;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int RIGHT> = 5;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int NORMAL> = 1;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: int SEND_TIME> = 700;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: android.view.View mView> = $r1;

        $f0 = (float) $i0;

        $f0 = $f0 / 2.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mWidth> = $f0;

        $f0 = (float) $i1;

        $f0 = $f0 / 2.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mHeight> = $f0;

        return;
    }

    static void access$0(vStudio.Android.Camera360.Rotate.RotateUtil, float)
    {
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil $r0;

        $r0 := @parameter0: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter1: float;

        specialinvoke $r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void rotate(float)>($f0);

        return;
    }

    static vStudio.Android.Camera360.Rotate.SensorUtil$Direction access$1()
    {
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction r0;

        r0 = <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection>;

        return r0;
    }

    private void rotate(float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1;
        android.view.View $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter0: float;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree> = $f0;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $f1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f0 = $f0 - $f1;

        $b0 = $f0 cmpl 180.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $f0 = $f0 - 360.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree> = $f0;

     label1:
        $r1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: void invalidate()>();

        return;

     label2:
        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $f1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f0 = $f0 - $f1;

        $b0 = $f0 cmpg -180.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $f0 = $f0 + 360.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree> = $f0;

        goto label1;
    }

    private void sendMessage(float)
    {
        java.lang.Float $r3;
        android.os.Message $r2;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter0: float;

        $r1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        $r2 = virtualinvoke $r1.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: android.os.Message obtainMessage()>();

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r2.<android.os.Message: java.lang.Object obj> = $r3;

        $r2.<android.os.Message: int what> = 1;

        $r1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        virtualinvoke $r1.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: boolean sendMessageDelayed(android.os.Message,long)>($r2, 700L);

        return;
    }

    public static void setDirection(vStudio.Android.Camera360.Rotate.SensorUtil$Direction)
    {
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r0;

        $r0 := @parameter0: vStudio.Android.Camera360.Rotate.SensorUtil$Direction;

        <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection> = $r0;

        return;
    }

    public void down()
    {
        byte $b0;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation>;

        $b0 = $f0 cmpl 180.0F;

        if $b0 == 0 goto label1;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation> = 180.0F;

        specialinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void sendMessage(float)>(180.0F);

        $r1 = <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection>;

        if $r1 == null goto label1;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        virtualinvoke $r2.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: boolean sendEmptyMessageDelayed(int,long)>(5, 700L);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        vStudio.Android.Camera360.Rotate.RotateUtil r0;
        byte $b0;
        int $i1;
        float $f0, $f1, $f2;
        android.view.View $r2;
        android.graphics.Canvas $r1;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $r1 := @parameter0: android.graphics.Canvas;

        $f1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mWidth>;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mHeight>;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f1, $f2, $f0);

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label3;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mEndDegree>;

        $f1 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $b0 = $f0 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f0 = $f0 + 30.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree> = $f0;

     label1:
        $r2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void invalidate()>();

        return;

     label2:
        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree>;

        $f0 = $f0 - 30.0F;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mStartDegree> = $f0;

        goto label1;

     label3:
        return;
    }

    public void left()
    {
        byte $b0;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation>;

        $b0 = $f0 cmpl 270.0F;

        if $b0 == 0 goto label1;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation> = 270.0F;

        specialinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void sendMessage(float)>(270.0F);

        $r1 = <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection>;

        if $r1 == null goto label1;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        virtualinvoke $r2.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: boolean sendEmptyMessageDelayed(int,long)>(2, 700L);

     label1:
        return;
    }

    public void leftright(float)
    {
        byte $b0;
        int $i1;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 30.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $b0 = $f0 cmpg 150.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void right()>();

        return;

     label1:
        $b0 = $f0 cmpl -150.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $b0 = $f0 cmpg -30.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void left()>();

     label2:
        return;
    }

    public void right()
    {
        byte $b0;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation>;

        $b0 = $f0 cmpl 90.0F;

        if $b0 == 0 goto label1;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation> = 90.0F;

        specialinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void sendMessage(float)>(90.0F);

        $r1 = <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection>;

        if $r1 == null goto label1;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        virtualinvoke $r2.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: boolean sendEmptyMessageDelayed(int,long)>(3, 700L);

     label1:
        return;
    }

    public void rotateForLandscape(float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f1 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $f1 = $f1 - 30.0F;

        $b0 = $f1 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void up()>();

        return;

     label1:
        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void leftright(float)>($f0);

        return;

     label2:
        $f1 = $f1 + 30.0F;

        $b0 = $f1 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void leftright(float)>($f0);

        return;

     label3:
        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void down()>();

        return;
    }

    public void rotateForPortrait(float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f1 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $f0 = $f1 - 30.0F;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void right()>();

        return;

     label1:
        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void up()>();

        return;

     label2:
        $f0 = $f1 + 30.0F;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void up()>();

        return;

     label3:
        virtualinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void left()>();

        return;
    }

    public void up()
    {
        byte $b0;
        float $f0;
        vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler $r2;
        vStudio.Android.Camera360.Rotate.SensorUtil$Direction $r1;
        vStudio.Android.Camera360.Rotate.RotateUtil r0;

        r0 := @this: vStudio.Android.Camera360.Rotate.RotateUtil;

        $f0 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        r0.<vStudio.Android.Camera360.Rotate.RotateUtil: float mOldOrientation> = 0.0F;

        specialinvoke r0.<vStudio.Android.Camera360.Rotate.RotateUtil: void sendMessage(float)>(0.0F);

        $r1 = <vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.SensorUtil$Direction mDirection>;

        if $r1 == null goto label1;

        $r2 = r0.<vStudio.Android.Camera360.Rotate.RotateUtil: vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler mMyHandler>;

        virtualinvoke $r2.<vStudio.Android.Camera360.Rotate.RotateUtil$MyHandler: boolean sendEmptyMessageDelayed(int,long)>(4, 700L);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <vStudio.Android.Camera360.Rotate.RotateUtil: float RANGE2> = 60.0F;

        <vStudio.Android.Camera360.Rotate.RotateUtil: float RANGE> = 30.0F;

        return;
    }
}
