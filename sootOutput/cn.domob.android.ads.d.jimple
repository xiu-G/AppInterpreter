final class cn.domob.android.ads.d extends java.lang.Object
{

    void <init>()
    {
        cn.domob.android.ads.d r0;

        r0 := @this: cn.domob.android.ads.d;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void a(cn.domob.android.ads.c, java.lang.String, byte[])
    {
        java.lang.Throwable $r11;
        byte[] $r2;
        android.net.Uri $r4;
        cn.domob.android.ads.c $r0;
        long $l1;
        java.lang.Exception $r10;
        java.lang.Long $r9;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r7;
        android.content.ContentValues $r8;
        android.database.Cursor $r3, $r5;
        boolean $z0;

        $r0 := @parameter0: cn.domob.android.ads.c;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

        $r3 = null;

     label01:
        $r4 = <cn.domob.android.ads.c: android.net.Uri b>;

     label02:
        $r5 = virtualinvoke $r0.<cn.domob.android.ads.c: android.database.Cursor b(android.net.Uri,java.lang.String)>($r4, $r1);

     label03:
        $r3 = $r5;

        if $r5 == null goto label06;

     label04:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

     label05:
        if $i0 != 0 goto label16;

     label06:
        $r4 = <cn.domob.android.ads.c: android.net.Uri b>;

     label07:
        virtualinvoke $r0.<cn.domob.android.ads.c: int a(android.net.Uri)>($r4);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label08:
        if $z0 == 0 goto label11;

     label09:
        $r6 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("save image:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cache!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r7);

     label11:
        $r8 = new android.content.ContentValues;

     label12:
        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_name", $r1);

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,byte[])>("_image", $r2);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_date", $r9);

     label13:
        $r4 = <cn.domob.android.ads.c: android.net.Uri b>;

     label14:
        virtualinvoke $r0.<cn.domob.android.ads.c: android.net.Uri a(android.net.Uri,android.content.ContentValues)>($r4, $r8);

     label15:
        if $r5 == null goto label26;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return;

     label16:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label17:
        if $z0 == 0 goto label15;

     label18:
        $r6 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already in cache.");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r1);

     label20:
        goto label15;

     label21:
        $r10 := @caughtexception;

     label22:
        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

     label23:
        if $r3 == null goto label26;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return;

     label24:
        $r11 := @caughtexception;

        if $r3 == null goto label25;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label25:
        throw $r11;

     label26:
        return;

        catch java.lang.Exception from label02 to label03 with label21;
        catch java.lang.Exception from label04 to label05 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label10 to label11 with label21;
        catch java.lang.Exception from label12 to label13 with label21;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Throwable from label01 to label03 with label24;
        catch java.lang.Throwable from label04 to label05 with label24;
        catch java.lang.Throwable from label06 to label08 with label24;
        catch java.lang.Throwable from label09 to label15 with label24;
        catch java.lang.Exception from label16 to label17 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    protected static boolean a(cn.domob.android.ads.c, java.lang.String, java.lang.String, java.util.Hashtable)
    {
        java.lang.Throwable $r10;
        byte[] $r7;
        android.net.Uri $r5;
        cn.domob.android.ads.c $r0;
        java.lang.Exception $r9;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.String $r1, $r2;
        java.util.Hashtable $r3;
        boolean $z0, $z1;
        android.database.Cursor $r4, $r6;

        $r0 := @parameter0: cn.domob.android.ads.c;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.Hashtable;

        $z0 = 0;

        $r4 = null;

     label01:
        $r5 = <cn.domob.android.ads.c: android.net.Uri b>;

     label02:
        $r6 = virtualinvoke $r0.<cn.domob.android.ads.c: android.database.Cursor b(android.net.Uri,java.lang.String)>($r5, $r2);

     label03:
        $r4 = $r6;

        if $r6 == null goto label15;

     label04:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getCount()>();

     label05:
        if $i0 <= 0 goto label15;

     label06:
        interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_image");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: byte[] getBlob(int)>($i0);

     label07:
        if $r7 == null goto label14;

     label08:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label09:
        if $z0 == 0 goto label12;

     label10:
        $r8 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("load image from cache:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r2);

     label12:
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label13:
        $z0 = 1;

     label14:
        if $r6 == null goto label25;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $z0;

     label15:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label16:
        if $z1 == 0 goto label14;

     label17:
        $r8 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail to load image:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r1);

     label19:
        goto label14;

     label20:
        $r9 := @caughtexception;

     label21:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label22:
        if $r4 == null goto label26;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return 0;

     label23:
        $r10 := @caughtexception;

        if $r4 == null goto label24;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label24:
        throw $r10;

     label25:
        return $z0;

     label26:
        return 0;

        catch java.lang.Exception from label02 to label03 with label20;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label09 with label20;
        catch java.lang.Exception from label11 to label13 with label20;
        catch java.lang.Throwable from label01 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label13 with label23;
        catch java.lang.Exception from label15 to label16 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    protected static boolean b(cn.domob.android.ads.c, java.lang.String, java.lang.String, java.util.Hashtable)
    {
        java.lang.Throwable $r15;
        byte[] $r7;
        android.content.Context $r8;
        java.io.ByteArrayOutputStream $r9;
        android.net.Uri $r5;
        cn.domob.android.ads.c $r0;
        android.content.res.AssetManager $r10;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r13;
        java.lang.String $r1, $r2;
        java.util.Hashtable $r3;
        boolean $z0, $z1, $z2;
        android.database.Cursor $r4, $r6;
        java.lang.Exception $r14;
        android.graphics.Bitmap $r12;
        java.io.InputStream $r11;

        $r0 := @parameter0: cn.domob.android.ads.c;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.Hashtable;

        $z0 = 1;

        $z1 = 0;

        $r4 = null;

     label01:
        $r5 = <cn.domob.android.ads.c: android.net.Uri a>;

     label02:
        $r6 = virtualinvoke $r0.<cn.domob.android.ads.c: android.database.Cursor b(android.net.Uri,java.lang.String)>($r5, $r2);

     label03:
        $r4 = $r6;

        if $r6 == null goto label13;

     label04:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getCount()>();

     label05:
        if $i0 <= 0 goto label13;

     label06:
        interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_image");

        $r7 = interfaceinvoke $r6.<android.database.Cursor: byte[] getBlob(int)>($i0);

     label07:
        if $r7 == null goto label30;

     label08:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label09:
        if $z2 == 0 goto label11;

     label10:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "success to load from resources DB.");

     label11:
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label12:
        if $r6 == null goto label38;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $z0;

     label13:
        $r8 = virtualinvoke $r0.<cn.domob.android.ads.c: android.content.Context a()>();

     label14:
        if $r8 == null goto label30;

     label15:
        $r9 = new java.io.ByteArrayOutputStream;

     label16:
        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        $r10 = virtualinvoke $r8.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r11 = virtualinvoke $r10.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r2);

        $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r11);

     label17:
        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label18:
        virtualinvoke $r12.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r13, 100, $r9);

        $r7 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label19:
        if $r7 == null goto label25;

     label20:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label21:
        if $z0 == 0 goto label23;

     label22:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "success to load from preload resources.");

     label23:
        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label24:
        $z1 = 1;

     label25:
        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void close()>();

     label26:
        if $r12 == null goto label30;

     label27:
        $z0 = virtualinvoke $r12.<android.graphics.Bitmap: boolean isRecycled()>();

     label28:
        if $z0 != 0 goto label30;

     label29:
        virtualinvoke $r12.<android.graphics.Bitmap: void recycle()>();

     label30:
        $z0 = $z1;

        goto label12;

     label31:
        $r14 := @caughtexception;

     label32:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("DomobSDK", "cannot load it from res this time.");

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label33:
        if $z0 == 0 goto label35;

     label34:
        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

     label35:
        if $r4 == null goto label39;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $z1;

     label36:
        $r15 := @caughtexception;

        if $r4 == null goto label37;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label37:
        throw $r15;

     label38:
        return $z0;

     label39:
        return $z1;

        catch java.lang.Exception from label02 to label03 with label31;
        catch java.lang.Exception from label04 to label05 with label31;
        catch java.lang.Exception from label06 to label07 with label31;
        catch java.lang.Exception from label08 to label09 with label31;
        catch java.lang.Exception from label10 to label12 with label31;
        catch java.lang.Throwable from label01 to label03 with label36;
        catch java.lang.Throwable from label04 to label05 with label36;
        catch java.lang.Throwable from label06 to label07 with label36;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.lang.Throwable from label10 to label12 with label36;
        catch java.lang.Exception from label13 to label14 with label31;
        catch java.lang.Exception from label16 to label17 with label31;
        catch java.lang.Exception from label18 to label19 with label31;
        catch java.lang.Exception from label20 to label21 with label31;
        catch java.lang.Exception from label22 to label24 with label31;
        catch java.lang.Exception from label25 to label26 with label31;
        catch java.lang.Exception from label27 to label28 with label31;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label15 to label19 with label36;
        catch java.lang.Throwable from label20 to label21 with label36;
        catch java.lang.Throwable from label22 to label24 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.lang.Throwable from label32 to label33 with label36;
        catch java.lang.Throwable from label34 to label35 with label36;
    }
}
