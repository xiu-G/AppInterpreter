final class com.google.gson.MapTypeAdapter extends com.google.gson.BaseMapTypeAdapter
{

    void <init>()
    {
        com.google.gson.MapTypeAdapter r0;

        r0 := @this: com.google.gson.MapTypeAdapter;

        specialinvoke r0.<com.google.gson.BaseMapTypeAdapter: void <init>()>();

        return;
    }

    public volatile java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonElement $r1;
        java.lang.reflect.Type $r2;
        java.util.Map $r4;
        com.google.gson.MapTypeAdapter r0;
        com.google.gson.JsonDeserializationContext $r3;

        r0 := @this: com.google.gson.MapTypeAdapter;

        $r1 := @parameter0: com.google.gson.JsonElement;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: com.google.gson.JsonDeserializationContext;

        $r4 = virtualinvoke r0.<com.google.gson.MapTypeAdapter: java.util.Map deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>($r1, $r2, $r3);

        return $r4;
    }

    public java.util.Map deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonObject $r7;
        com.google.gson.JsonDeserializationContext $r3;
        com.google.gson.JsonElement $r1;
        java.util.Map $r4;
        com.google.gson.MapTypeAdapter r0;
        com.google.gson.JsonPrimitive $r12;
        java.lang.String $r13;
        boolean $z0;
        java.util.Map$Entry r11;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.reflect.Type $r2;
        java.lang.reflect.Type[] $r6;
        java.lang.Class $r5;
        java.lang.Object $r10, $r14;

        r0 := @this: com.google.gson.MapTypeAdapter;

        $r1 := @parameter0: com.google.gson.JsonElement;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: com.google.gson.JsonDeserializationContext;

        $r4 = staticinvoke <com.google.gson.MapTypeAdapter: java.util.Map constructMapType(java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>($r2, $r3);

        $r5 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r2);

        $r6 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)>($r2, $r5);

        $r7 = virtualinvoke $r1.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r8 = virtualinvoke $r7.<com.google.gson.JsonObject: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = new com.google.gson.JsonPrimitive;

        $r10 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r10;

        specialinvoke $r12.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r13);

        $r2 = $r6[0];

        $r10 = interfaceinvoke $r3.<com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)>($r12, $r2);

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (com.google.gson.JsonElement) $r14;

        $r2 = $r6[1];

        $r14 = interfaceinvoke $r3.<com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)>($r1, $r2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r14);

        goto label1;

     label2:
        return $r4;
    }

    public volatile com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)
    {
        com.google.gson.JsonElement $r3;
        java.lang.reflect.Type $r1;
        java.util.Map $r5;
        com.google.gson.JsonSerializationContext $r2;
        java.lang.Object $r4;
        com.google.gson.MapTypeAdapter r0;

        r0 := @this: com.google.gson.MapTypeAdapter;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.reflect.Type;

        $r2 := @parameter2: com.google.gson.JsonSerializationContext;

        $r5 = (java.util.Map) $r4;

        $r3 = virtualinvoke r0.<com.google.gson.MapTypeAdapter: com.google.gson.JsonElement serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>($r5, $r1, $r2);

        return $r3;
    }

    public com.google.gson.JsonElement serialize(java.util.Map, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)
    {
        com.google.gson.JsonObject r4, $r15;
        com.google.gson.JsonElement r12;
        java.util.Map $r1;
        com.google.gson.JsonSerializationContext $r3;
        com.google.gson.MapTypeAdapter r0;
        java.lang.String $r13;
        boolean $z0;
        java.util.Map$Entry r11;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.lang.reflect.Type $r2, r5;
        java.lang.reflect.Type[] $r7;
        java.lang.Class $r6;
        java.lang.Object $r10, r14;

        r0 := @this: com.google.gson.MapTypeAdapter;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 := @parameter2: com.google.gson.JsonSerializationContext;

        $r15 = new com.google.gson.JsonObject;

        r4 = $r15;

        specialinvoke $r15.<com.google.gson.JsonObject: void <init>()>();

        r5 = null;

        $z0 = $r2 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r2);

        $r7 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)>($r2, $r6);

        r5 = $r7[1];

     label1:
        $r8 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r10 != null goto label4;

        r12 = staticinvoke <com.google.gson.JsonNull: com.google.gson.JsonNull createJsonNull()>();

     label3:
        $r10 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        virtualinvoke r4.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>($r13, r12);

        goto label2;

     label4:
        if r5 != null goto label6;

        r14 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

     label5:
        $r2 = (java.lang.reflect.Type) r14;

        r12 = staticinvoke <com.google.gson.MapTypeAdapter: com.google.gson.JsonElement serialize(com.google.gson.JsonSerializationContext,java.lang.Object,java.lang.reflect.Type)>($r3, $r10, $r2);

        goto label3;

     label6:
        r14 = r5;

        goto label5;

     label7:
        return r4;
    }

    public java.lang.String toString()
    {
        java.lang.Class $r2;
        com.google.gson.MapTypeAdapter r0;
        java.lang.String $r1;

        r0 := @this: com.google.gson.MapTypeAdapter;

        $r2 = class "Lcom/google/gson/MapTypeAdapter;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r1;
    }
}
