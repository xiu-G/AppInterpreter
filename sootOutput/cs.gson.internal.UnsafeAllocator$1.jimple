class cs.gson.internal.UnsafeAllocator$1 extends cs.gson.internal.UnsafeAllocator
{
    private final java.lang.reflect.Method val$allocateInstance;
    private final java.lang.Object val$unsafe;

    void <init>(java.lang.reflect.Method, java.lang.Object)
    {
        java.lang.Object $r2;
        cs.gson.internal.UnsafeAllocator$1 r0;
        java.lang.reflect.Method $r1;

        r0 := @this: cs.gson.internal.UnsafeAllocator$1;

        $r1 := @parameter0: java.lang.reflect.Method;

        $r2 := @parameter1: java.lang.Object;

        r0.<cs.gson.internal.UnsafeAllocator$1: java.lang.reflect.Method val$allocateInstance> = $r1;

        r0.<cs.gson.internal.UnsafeAllocator$1: java.lang.Object val$unsafe> = $r2;

        specialinvoke r0.<cs.gson.internal.UnsafeAllocator: void <init>()>();

        return;
    }

    public java.lang.Object newInstance(java.lang.Class) throws java.lang.Exception
    {
        cs.gson.internal.UnsafeAllocator$1 r0;
        java.lang.Object[] $r4;
        java.lang.Class r1;
        java.lang.Object $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: cs.gson.internal.UnsafeAllocator$1;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<cs.gson.internal.UnsafeAllocator$1: java.lang.reflect.Method val$allocateInstance>;

        $r2 = r0.<cs.gson.internal.UnsafeAllocator$1: java.lang.Object val$unsafe>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

        return $r2;
    }
}
