public final class kr extends java.lang.Object implements java.io.Serializable
{
    protected static ko f;
    protected java.lang.String a;
    protected java.lang.String b;
    protected ku c;
    protected kt d;
    protected transient java.net.URLConnection e;

    static void <clinit>()
    {
        ko $r0;

        $r0 = new ko;

        specialinvoke $r0.<ko: void <init>()>();

        <kr: ko f> = $r0;

        return;
    }

    public void <init>()
    {
        kr r0;

        r0 := @this: kr;

        specialinvoke r0.<kr: void <init>(java.lang.String)>("");

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        kr r0;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<kr: void <init>(java.lang.String,byte)>($r1, 0);

        return;
    }

    private void <init>(java.lang.String, byte)
    {
        byte $b0;
        kr r0;
        kt $r4;
        java.lang.String $r1;
        kv $r3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r2;

     label1:
        $r3 = new kv;

        specialinvoke $r3.<kv: void <init>(java.lang.String,java.lang.String)>($r1, "ISO-8859-1");

        r0.<kr: ku c> = $r3;

        $r4 = new kt;

        specialinvoke $r4.<kt: void <init>(kr)>(r0);

        r0.<kr: kt d> = $r4;

        r0.<kr: java.net.URLConnection e> = null;

        r0.<kr: java.lang.String a> = null;

        r0.<kr: java.lang.String b> = null;

        return;
    }

    private static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9, $r10, $r11;
        java.io.PrintStream $r12;
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.ClassNotFoundException $r8;
        java.lang.StringBuilder $r13;
        java.lang.String $r0, $r1, $r7;
        java.lang.reflect.Method $r4;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.nio.charset.Charset");

     label02:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/lang/String;";

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("forName", $r3);

     label04:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);

     label06:
        $r3 = newarray (java.lang.Class)[0];

     label07:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("name", $r3);

     label08:
        $r5 = newarray (java.lang.Object)[0];

     label09:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

     label10:
        $r7 = (java.lang.String) $r6;

        return $r7;

     label11:
        $r8 := @caughtexception;

        return $r1;

     label12:
        $r9 := @caughtexception;

        return $r1;

     label13:
        $r10 := @caughtexception;

        return $r1;

     label14:
        $r11 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to determine cannonical charset name for ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - using ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r0;

        catch java.lang.ClassNotFoundException from label01 to label02 with label11;
        catch java.lang.ClassNotFoundException from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label05 to label06 with label11;
        catch java.lang.ClassNotFoundException from label07 to label08 with label11;
        catch java.lang.ClassNotFoundException from label09 to label10 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
        catch java.lang.NoSuchMethodException from label09 to label10 with label12;
        catch java.lang.IllegalAccessException from label01 to label02 with label13;
        catch java.lang.IllegalAccessException from label03 to label04 with label13;
        catch java.lang.IllegalAccessException from label05 to label06 with label13;
        catch java.lang.IllegalAccessException from label07 to label08 with label13;
        catch java.lang.IllegalAccessException from label09 to label10 with label13;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label14;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label14;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label14;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label14;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label14;
    }

    private java.lang.String e(java.lang.String)
    {
        java.lang.Throwable $r7;
        java.net.URL $r3, $r5, $r9, $r10;
        int $i0, $i2;
        java.lang.String $r1, $r2, $r6;
        boolean $z0, $z1;
        kr r0;
        char $c1;
        java.lang.StringBuilder $r4, $r8;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label01;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label02;

     label01:
        return "";

     label02:
        $r2 = r0.<kr: java.lang.String b>;

        if $r2 != null goto label03;

        $r2 = r0.<kr: java.lang.String a>;

        if $r2 != null goto label03;

        return $r1;

     label03:
        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

     label04:
        $i2 = (int) $c1;

        if 63 != $i2 goto label19;

     label05:
        $i2 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(63);

     label06:
        if -1 == $i2 goto label08;

     label07:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label08:
        $r5 = new java.net.URL;

        $r8 = new java.lang.StringBuilder;

        $r4 = $r8;

     label09:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r2);

     label10:
        $r3 = $r5;

     label11:
        $r2 = virtualinvoke $r3.<java.net.URL: java.lang.String getFile()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

     label12:
        if $z0 != 0 goto label42;

        $z0 = 0;

     label13:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/.");

     label14:
        if $z1 == 0 goto label28;

     label15:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/../");

     label16:
        if $z1 == 0 goto label22;

     label17:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(3);

     label18:
        $z0 = 1;

        goto label13;

     label19:
        $r10 = new java.net.URL;

        $r9 = new java.net.URL;

        $r5 = $r9;

     label20:
        specialinvoke $r9.<java.net.URL: void <init>(java.lang.String)>($r2);

        specialinvoke $r10.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r5, $r1);

     label21:
        $r3 = $r10;

        goto label11;

     label22:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/./");

     label23:
        if $z1 != 0 goto label26;

     label24:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/.");

     label25:
        if $z1 == 0 goto label28;

     label26:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(2);

     label27:
        $z0 = 1;

        goto label13;

     label28:
        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("/\\");

     label29:
        if -1 == $i2 goto label36;

        $r8 = new java.lang.StringBuilder;

        $r4 = $r8;

     label30:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

     label31:
        $i0 = $i2 + 1;

     label32:
        $r6 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label33:
        $i2 = $i2 + 2;

     label34:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label35:
        $z0 = 1;

        goto label28;

     label36:
        if $z0 == 0 goto label39;

        $r9 = new java.net.URL;

     label37:
        specialinvoke $r9.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r3, $r2);

     label38:
        $r3 = $r9;

     label39:
        $r2 = virtualinvoke $r3.<java.net.URL: java.lang.String toExternalForm()>();

     label40:
        return $r2;

     label41:
        $r7 := @caughtexception;

        return $r1;

     label42:
        $z0 = 0;

        goto label28;

        catch java.net.MalformedURLException from label03 to label04 with label41;
        catch java.net.MalformedURLException from label05 to label06 with label41;
        catch java.net.MalformedURLException from label07 to label08 with label41;
        catch java.net.MalformedURLException from label09 to label10 with label41;
        catch java.net.MalformedURLException from label11 to label12 with label41;
        catch java.net.MalformedURLException from label13 to label14 with label41;
        catch java.net.MalformedURLException from label15 to label16 with label41;
        catch java.net.MalformedURLException from label17 to label18 with label41;
        catch java.net.MalformedURLException from label20 to label21 with label41;
        catch java.net.MalformedURLException from label22 to label23 with label41;
        catch java.net.MalformedURLException from label24 to label25 with label41;
        catch java.net.MalformedURLException from label26 to label27 with label41;
        catch java.net.MalformedURLException from label28 to label29 with label41;
        catch java.net.MalformedURLException from label30 to label31 with label41;
        catch java.net.MalformedURLException from label32 to label33 with label41;
        catch java.net.MalformedURLException from label34 to label35 with label41;
        catch java.net.MalformedURLException from label37 to label38 with label41;
        catch java.net.MalformedURLException from label39 to label40 with label41;
    }

    public final char a(org.htmlparser.lexer.Cursor)
    {
        java.lang.Throwable $r4, $r7, $r8, $r9, $r10;
        int $i0, $i1;
        java.lang.String $r6;
        kr r0;
        kt $r3;
        ku $r2;
        char $c2;
        org.htmlparser.lexer.Cursor $r1;
        java.lang.StringBuilder $r5, $r11;
        li $r12;

        r0 := @this: kr;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r2 = r0.<kr: ku c>;

        $i1 = virtualinvoke $r2.<ku: int d()>();

        if $i1 != $i0 goto label13;

        $r2 = r0.<kr: ku c>;

     label01:
        $i0 = virtualinvoke $r2.<ku: int read()>();

     label02:
        if -1 != $i0 goto label09;

        $c2 = 65535;

     label03:
        if 13 != $c2 goto label08;

        $r2 = r0.<kr: ku c>;

        $i0 = virtualinvoke $r2.<ku: int d()>();

        $i1 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        if $i0 != $i1 goto label26;

        $r2 = r0.<kr: ku c>;

     label04:
        $i0 = virtualinvoke $r2.<ku: int read()>();

     label05:
        if -1 == $i0 goto label25;

        $c2 = (char) $i0;

        $i0 = (int) $c2;

        if 10 != $i0 goto label18;

     label06:
        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void advance()>();

     label07:
        $c2 = 10;

     label08:
        if 10 != $c2 goto label32;

        $r3 = r0.<kr: kt d>;

        virtualinvoke $r3.<kt: int a(org.htmlparser.lexer.Cursor)>($r1);

        return $c2;

     label09:
        $c2 = (char) $i0;

     label10:
        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void advance()>();

     label11:
        goto label03;

     label12:
        $r4 := @caughtexception;

        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem reading a character at position ");

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r4);

        throw $r12;

     label13:
        if $i1 <= $i0 goto label17;

        $r2 = r0.<kr: ku c>;

     label14:
        $c2 = virtualinvoke $r2.<ku: char a(int)>($i0);

     label15:
        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void advance()>();

        goto label03;

     label16:
        $r7 := @caughtexception;

        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t read a character at position ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r7);

        throw $r12;

     label17:
        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attempt to read future characters from source ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r2 = r0.<kr: ku c>;

        $i0 = virtualinvoke $r2.<ku: int d()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String)>($r6);

        throw $r12;

     label18:
        $r2 = r0.<kr: ku c>;

     label19:
        virtualinvoke $r2.<ku: void b()>();

     label20:
        $c2 = 10;

        goto label08;

     label21:
        $r8 := @caughtexception;

        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        $r5 = $r11;

     label22:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t unread a character at position ");

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r8);

     label23:
        throw $r12;

     label24:
        $r9 := @caughtexception;

        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("problem reading a character at position ");

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r9);

        throw $r12;

     label25:
        $c2 = 10;

        goto label08;

     label26:
        $r2 = r0.<kr: ku c>;

     label27:
        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $c2 = virtualinvoke $r2.<ku: char a(int)>($i0);

     label28:
        $i0 = (int) $c2;

        if 10 != $i0 goto label30;

     label29:
        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void advance()>();

     label30:
        $c2 = 10;

        goto label08;

     label31:
        $r10 := @caughtexception;

        $r12 = new li;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t read a character at position ");

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<li: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r10);

        throw $r12;

     label32:
        return $c2;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label27 to label28 with label31;
        catch java.io.IOException from label29 to label30 with label31;
    }

    public final int a(int)
    {
        kr r0;
        int $i0;
        kt $r2;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: kr;

        $i0 := @parameter0: int;

        $r2 = r0.<kr: kt d>;

        $r1 = new org.htmlparser.lexer.Cursor;

        r0 = virtualinvoke $r2.<kt: kr a()>();

        specialinvoke $r1.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>(r0, $i0);

        $i0 = virtualinvoke $r2.<kt: int b(org.htmlparser.lexer.Cursor)>($r1);

        return $i0;
    }

    public final java.lang.String a()
    {
        java.lang.String r1;
        kr r0;

        r0 := @this: kr;

        r1 = r0.<kr: java.lang.String a>;

        return r1;
    }

    public final java.lang.String a(int, int)
    {
        java.lang.Throwable $r3;
        kr r0;
        ku $r1;
        java.io.IOException $r7;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r2;

        r0 := @this: kr;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<kr: ku c>;

        $i2 = $i1 - $i0;

     label1:
        $r2 = virtualinvoke $r1.<ku: java.lang.String a(int,int)>($i0, $i2);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t get the ");

        $i1 = $i1 - $i0;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("characters at position ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r7 = (java.io.IOException) $r3;

        $r2 = virtualinvoke $r7.<java.io.IOException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final java.lang.String a(java.lang.String)
    {
        kr r0;
        ku $r2;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<kr: ku c>;

        if $r2 != null goto label5;

        $r3 = "ISO-8859-1";

     label1:
        if $r1 == null goto label6;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("charset");

        if $i0 == -1 goto label6;

        $r4 = "charset";

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("=");

        if $z0 == 0 goto label6;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i0 == -1 goto label2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if 1 >= $i0 goto label3;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label3:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if 1 >= $i0 goto label4;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i0 = $i0 - 1;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label4:
        $r1 = staticinvoke <kr: java.lang.String a(java.lang.String,java.lang.String)>($r4, $r3);

        return $r1;

     label5:
        $r2 = r0.<kr: ku c>;

        $r3 = virtualinvoke $r2.<ku: java.lang.String a()>();

        goto label1;

     label6:
        return $r3;
    }

    public final void a(java.lang.StringBuffer, int, int)
    {
        java.lang.Throwable $r5;
        kr r0;
        ku $r2;
        java.io.IOException $r8;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.StringBuffer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<kr: ku c>;

        $i2 = virtualinvoke $r2.<ku: int d()>();

        if $i2 < $i0 goto label1;

        $r2 = r0.<kr: ku c>;

        $i2 = virtualinvoke $r2.<ku: int d()>();

        if $i2 >= $i1 goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attempt to extract future characters from source");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r2 = r0.<kr: ku c>;

        $i0 = virtualinvoke $r2.<ku: int d()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label2:
        if $i1 >= $i0 goto label7;

        $i2 = $i0;

        $i0 = $i1;

     label3:
        $i1 = $i2 - $i0;

        $r2 = r0.<kr: ku c>;

     label4:
        virtualinvoke $r2.<ku: void a(java.lang.StringBuffer,int,int)>($r1, $i0, $i1);

     label5:
        return;

     label6:
        $r5 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t get the ");

        $i1 = $i2 - $i0;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("characters at position ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r8 = (java.io.IOException) $r5;

        $r4 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label7:
        $i2 = $i1;

        goto label3;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public final java.lang.String b()
    {
        java.lang.String $r1;
        java.net.URLConnection $r2;
        kr r0;

        r0 := @this: kr;

        $r2 = r0.<kr: java.net.URLConnection e>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>("Content-Type");

        if $r1 == null goto label1;

        return $r1;

     label1:
        return "text/html";
    }

    public final void b(java.lang.String)
    {
        java.lang.String $r1;
        kr r0;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        r0.<kr: java.lang.String b> = $r1;

        return;
    }

    public final void b(org.htmlparser.lexer.Cursor)
    {
        java.lang.Throwable $r3;
        kr r0;
        ku $r2;
        char $c1;
        org.htmlparser.lexer.Cursor $r1;
        int $i0, $i2;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        li $r7;

        r0 := @this: kr;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void retreat()>();

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r2 = r0.<kr: ku c>;

     label1:
        $c1 = virtualinvoke $r2.<ku: char a(int)>($i0);

     label2:
        $i2 = (int) $c1;

        if 10 != $i2 goto label8;

        if $i0 == 0 goto label8;

        $r2 = r0.<kr: ku c>;

        $i0 = $i0 - 1;

     label3:
        $c1 = virtualinvoke $r2.<ku: char a(int)>($i0);

     label4:
        $i0 = (int) $c1;

        if 13 != $i0 goto label8;

     label5:
        virtualinvoke $r1.<org.htmlparser.lexer.Cursor: void retreat()>();

     label6:
        return;

     label7:
        $r3 := @caughtexception;

        $r7 = new li;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t read a character at position ");

        $i0 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<li: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r3);

        throw $r7;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public final int c(org.htmlparser.lexer.Cursor)
    {
        kr r0;
        int $i0;
        kt $r2;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: kr;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        $r2 = r0.<kr: kt d>;

        $i0 = virtualinvoke $r2.<kt: int b(org.htmlparser.lexer.Cursor)>($r1);

        return $i0;
    }

    public final void c(java.lang.String)
    {
        ku $r2;
        java.lang.String $r1;
        kr r0;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<kr: ku c>;

        virtualinvoke $r2.<ku: void a(java.lang.String)>($r1);

        return;
    }

    public final int d(org.htmlparser.lexer.Cursor)
    {
        kr r0;
        int $i0, $i1;
        kt $r2;
        org.htmlparser.lexer.Cursor $r1;

        r0 := @this: kr;

        $r1 := @parameter0: org.htmlparser.lexer.Cursor;

        $r2 = r0.<kr: kt d>;

        $i0 = virtualinvoke $r2.<kt: int b(org.htmlparser.lexer.Cursor)>($r1);

        if $i0 == 0 goto label2;

        $i0 = $i0 - 1;

        $i0 = virtualinvoke $r2.<kt: int a(int)>($i0);

     label1:
        $i1 = virtualinvoke $r1.<org.htmlparser.lexer.Cursor: int getPosition()>();

        $i0 = $i1 - $i0;

        return $i0;

     label2:
        $i0 = 0;

        goto label1;
    }

    public final java.lang.String d(java.lang.String)
    {
        java.lang.String $r1;
        kr r0;

        r0 := @this: kr;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<kr: java.lang.String e(java.lang.String)>($r1);

        return $r1;
    }

    protected final void finalize()
    {
        ku $r1;
        kr r0;

        r0 := @this: kr;

        $r1 = r0.<kr: ku c>;

        if $r1 == null goto label1;

        $r1 = r0.<kr: ku c>;

        virtualinvoke $r1.<ku: void c()>();

     label1:
        return;
    }

    public final java.lang.String toString()
    {
        java.lang.StringBuffer $r2;
        kr r0;
        int $i0, $i1;
        ku $r1;
        java.lang.String $r3;

        r0 := @this: kr;

        $r1 = r0.<kr: ku c>;

        $i0 = virtualinvoke $r1.<ku: int d()>();

        if $i0 <= 0 goto label3;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>(43);

        $r1 = r0.<kr: ku c>;

        $i0 = virtualinvoke $r1.<ku: int d()>();

        $i0 = $i0 - 40;

        if $i0 >= 0 goto label2;

        $i0 = 0;

     label1:
        $r1 = r0.<kr: ku c>;

        $i1 = virtualinvoke $r1.<ku: int d()>();

        virtualinvoke r0.<kr: void a(java.lang.StringBuffer,int,int)>($r2, $i0, $i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        goto label1;

     label3:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }
}
