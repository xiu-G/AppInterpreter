public final class com.admogo.Base64 extends java.lang.Object
{
    private static final char[] CA;
    private static final int[] IA;
    private static final byte[] decodingTable;
    private static final byte[] encodingTable;

    static void <clinit>()
    {
        byte[] $r3;
        char $c2;
        byte $b3;
        int[] $r2;
        int i0, i1, $i4;
        char[] $r0;
        java.lang.String $r1;

        $r1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.admogo.Base64: char[] CA> = $r0;

        $r2 = newarray (int)[256];

        <com.admogo.Base64: int[] IA> = $r2;

        $r2 = <com.admogo.Base64: int[] IA>;

        i0 = -1;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, i0);

        i1 = 0;

        $r0 = <com.admogo.Base64: char[] CA>;

        i0 = lengthof $r0;

     label01:
        if i1 < i0 goto label06;

        $r2 = <com.admogo.Base64: int[] IA>;

        $r2[61] = 0;

        $r3 = newarray (byte)[64];

        $r3[0] = 65;

        $r3[1] = 66;

        $r3[2] = 67;

        $r3[3] = 68;

        $r3[4] = 69;

        $r3[5] = 70;

        $r3[6] = 71;

        $r3[7] = 72;

        $r3[8] = 73;

        $r3[9] = 74;

        $r3[10] = 75;

        $r3[11] = 76;

        $r3[12] = 77;

        $r3[13] = 78;

        $r3[14] = 79;

        $r3[15] = 80;

        $r3[16] = 81;

        $r3[17] = 82;

        $r3[18] = 83;

        $r3[19] = 84;

        $r3[20] = 85;

        $r3[21] = 86;

        $r3[22] = 87;

        $r3[23] = 88;

        $r3[24] = 89;

        $r3[25] = 90;

        $r3[26] = 97;

        $r3[27] = 98;

        $r3[28] = 99;

        $r3[29] = 100;

        $r3[30] = 101;

        $r3[31] = 102;

        $r3[32] = 103;

        $r3[33] = 104;

        $r3[34] = 105;

        $r3[35] = 106;

        $r3[36] = 107;

        $r3[37] = 108;

        $r3[38] = 109;

        $r3[39] = 110;

        $r3[40] = 111;

        $r3[41] = 112;

        $r3[42] = 113;

        $r3[43] = 114;

        $r3[44] = 115;

        $r3[45] = 116;

        $r3[46] = 117;

        $r3[47] = 118;

        $r3[48] = 119;

        $r3[49] = 120;

        $r3[50] = 121;

        $r3[51] = 122;

        $r3[52] = 48;

        $r3[53] = 49;

        $r3[54] = 50;

        $r3[55] = 51;

        $r3[56] = 52;

        $r3[57] = 53;

        $r3[58] = 54;

        $r3[59] = 55;

        $r3[60] = 56;

        $r3[61] = 57;

        $r3[62] = 43;

        $r3[63] = 47;

        <com.admogo.Base64: byte[] encodingTable> = $r3;

        $r3 = newarray (byte)[128];

        <com.admogo.Base64: byte[] decodingTable> = $r3;

        i0 = 0;

     label02:
        if i0 < 128 goto label07;

        i0 = 65;

     label03:
        if i0 <= 90 goto label08;

        i0 = 97;

     label04:
        if i0 <= 122 goto label09;

        i0 = 48;

     label05:
        if i0 <= 57 goto label10;

        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        $r3[43] = 62;

        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        $r3[47] = 63;

        return;

     label06:
        $r2 = <com.admogo.Base64: int[] IA>;

        $r0 = <com.admogo.Base64: char[] CA>;

        $c2 = $r0[i1];

        $i4 = (int) $c2;

        $r2[$i4] = i1;

        i1 = i1 + 1;

        goto label01;

     label07:
        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        $r3[i0] = -1;

        i0 = i0 + 1;

        goto label02;

     label08:
        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        i1 = -65;

        i1 = i0 + i1;

        $b3 = (byte) i1;

        $r3[i0] = $b3;

        i0 = i0 + 1;

        goto label03;

     label09:
        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        i1 = -97;

        i1 = i0 + i1;

        i1 = i1 + 26;

        $b3 = (byte) i1;

        $r3[i0] = $b3;

        i0 = i0 + 1;

        goto label04;

     label10:
        $r3 = <com.admogo.Base64: byte[] decodingTable>;

        i1 = -48;

        i1 = i0 + i1;

        i1 = i1 + 52;

        $b3 = (byte) i1;

        $r3[i0] = $b3;

        i0 = i0 + 1;

        goto label05;
    }

    public void <init>()
    {
        com.admogo.Base64 r0;

        r0 := @this: com.admogo.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final byte[] decode(java.lang.String)
    {
        byte[] r1, $r2;
        char $c1;
        byte b4, b5, b6, b7;
        int $i0, i2, $i3, $i8, $i9;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.admogo.Base64: java.lang.String discardNonBase64Chars(java.lang.String)>($r0);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -2;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 61 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 4;

        i2 = -1;

        $i0 = $i0 + i2;

        $i0 = $i0 * 3;

        $i0 = $i0 + 1;

        r1 = newarray (byte)[$i0];

     label1:
        $i0 = 0;

        i2 = 0;

     label2:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i8 = -4;

        $i3 = $i3 + $i8;

        if $i0 < $i3 goto label5;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -2;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 61 goto label6;

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -4;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b4 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -3;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b5 = $r2[$i0];

        $i0 = lengthof r1;

        i2 = -1;

        $i0 = $i0 + i2;

        i2 = (int) b4;

        i2 = i2 << 2;

        $i3 = (int) b5;

        $i3 = $i3 >> 4;

        i2 = i2 | $i3;

        b4 = (byte) i2;

        r1[$i0] = b4;

        return r1;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -1;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 61 goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 4;

        i2 = -1;

        $i0 = $i0 + i2;

        $i0 = $i0 * 3;

        $i0 = $i0 + 2;

        r1 = newarray (byte)[$i0];

        goto label1;

     label4:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 4;

        $i0 = $i0 * 3;

        r1 = newarray (byte)[$i0];

        goto label1;

     label5:
        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i3 = (int) $c1;

        b6 = $r2[$i3];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i3 = $i0 + 1;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c1;

        b7 = $r2[$i3];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i3 = $i0 + 2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c1;

        b4 = $r2[$i3];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i3 = $i0 + 3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c1;

        b5 = $r2[$i3];

        $i3 = (int) b6;

        $i3 = $i3 << 2;

        $i8 = (int) b7;

        $i8 = $i8 >> 4;

        $i3 = $i3 | $i8;

        b6 = (byte) $i3;

        r1[i2] = b6;

        $i3 = i2 + 1;

        $i8 = (int) b7;

        $i8 = $i8 << 4;

        $i9 = (int) b4;

        $i9 = $i9 >> 2;

        $i8 = $i8 | $i9;

        b7 = (byte) $i8;

        r1[$i3] = b7;

        $i3 = i2 + 2;

        $i8 = (int) b4;

        $i8 = $i8 << 6;

        $i9 = (int) b5;

        $i8 = $i8 | $i9;

        b4 = (byte) $i8;

        r1[$i3] = b4;

        $i0 = $i0 + 4;

        i2 = i2 + 3;

        goto label2;

     label6:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -1;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        if $i0 != 61 goto label7;

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -4;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b5 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -3;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b4 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -2;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b7 = $r2[$i0];

        $i0 = lengthof r1;

        i2 = -2;

        $i0 = $i0 + i2;

        i2 = (int) b5;

        i2 = i2 << 2;

        $i3 = (int) b4;

        $i3 = $i3 >> 4;

        i2 = i2 | $i3;

        b5 = (byte) i2;

        r1[$i0] = b5;

        $i0 = lengthof r1;

        i2 = -1;

        $i0 = $i0 + i2;

        i2 = (int) b4;

        i2 = i2 << 4;

        $i3 = (int) b7;

        $i3 = $i3 >> 2;

        i2 = i2 | $i3;

        b4 = (byte) i2;

        r1[$i0] = b4;

        return r1;

     label7:
        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -4;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b6 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -3;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b5 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -2;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b4 = $r2[$i0];

        $r2 = <com.admogo.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i2 = -1;

        $i0 = $i0 + i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c1;

        b7 = $r2[$i0];

        $i0 = lengthof r1;

        i2 = -3;

        $i0 = $i0 + i2;

        i2 = (int) b6;

        i2 = i2 << 2;

        $i3 = (int) b5;

        $i3 = $i3 >> 4;

        i2 = i2 | $i3;

        b6 = (byte) i2;

        r1[$i0] = b6;

        $i0 = lengthof r1;

        i2 = -2;

        $i0 = $i0 + i2;

        i2 = (int) b5;

        i2 = i2 << 4;

        $i3 = (int) b4;

        $i3 = $i3 >> 2;

        i2 = i2 | $i3;

        b5 = (byte) i2;

        r1[$i0] = b5;

        $i0 = lengthof r1;

        i2 = -1;

        $i0 = $i0 + i2;

        i2 = (int) b4;

        i2 = i2 << 6;

        $i3 = (int) b7;

        i2 = i2 | $i3;

        b4 = (byte) i2;

        r1[$i0] = b4;

        return r1;
    }

    public static final byte[] decode(byte[])
    {
        byte[] $r0, r2;
        short $s5;
        byte $b4;
        int[] $r1;
        int i0, i1, i2, i3, $i6, i7, $i8;

        $r0 := @parameter0: byte[];

        i1 = lengthof $r0;

        i2 = 0;

        i3 = 0;

     label01:
        if i3 < i1 goto label02;

        i3 = i1 - i2;

        i3 = i3 % 4;

        if i3 == 0 goto label04;

        return null;

     label02:
        $r1 = <com.admogo.Base64: int[] IA>;

        $b4 = $r0[i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $r1[$i6];

        if $i6 >= 0 goto label03;

        i2 = i2 + 1;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        i3 = 0;

        $i6 = i1;

     label05:
        $b4 = $r0[$i6];

        i7 = (int) $b4;

        if i7 != 61 goto label06;

        i3 = i3 + 1;

     label06:
        if $i6 > 1 goto label11;

     label07:
        i1 = i1 - i2;

        i1 = i1 * 6;

        i1 = i1 >> 3;

        i1 = i1 - i3;

        r2 = newarray (byte)[i1];

        i7 = 0;

        i2 = 0;

     label08:
        if i2 >= i1 goto label16;

        i3 = 0;

        $i6 = 0;

        i0 = i7;

     label09:
        if $i6 < 4 goto label12;

        $i6 = i2 + 1;

        i7 = i3 >> 16;

        $b4 = (byte) i7;

        r2[i2] = $b4;

        if $i6 >= i1 goto label10;

        i2 = $i6 + 1;

        i7 = i3 >> 8;

        $b4 = (byte) i7;

        r2[$i6] = $b4;

        if i2 >= i1 goto label15;

        $i6 = i2 + 1;

        $b4 = (byte) i3;

        r2[i2] = $b4;

     label10:
        i2 = $i6;

        i7 = i0;

        goto label08;

     label11:
        i7 = -1;

        $i6 = $i6 + i7;

        $r1 = <com.admogo.Base64: int[] IA>;

        $b4 = $r0[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        i7 = (int) $s5;

        i7 = $r1[i7];

        if i7 <= 0 goto label05;

        goto label07;

     label12:
        $r1 = <com.admogo.Base64: int[] IA>;

        i7 = i0 + 1;

        $b4 = $r0[i0];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        i0 = (int) $s5;

        i0 = $r1[i0];

        if i0 < 0 goto label14;

        $i8 = $i6 * 6;

        $i8 = 18 - $i8;

        i0 = i0 << $i8;

        i3 = i3 | i0;

     label13:
        $i6 = $i6 + 1;

        i0 = i7;

        goto label09;

     label14:
        i0 = -1;

        $i6 = $i6 + i0;

        goto label13;

     label15:
        i7 = i0;

        goto label08;

     label16:
        return r2;
    }

    public static final byte[] decode(char[])
    {
        byte[] r1;
        char $c4;
        byte $b7;
        int[] $r2;
        int i0, i1, i2, i3, $i5, i6, $i8;
        char[] $r0;

        $r0 := @parameter0: char[];

        if $r0 == null goto label02;

        i1 = lengthof $r0;

     label01:
        if i1 != 0 goto label03;

        r1 = newarray (byte)[0];

        return r1;

     label02:
        i1 = 0;

        goto label01;

     label03:
        i2 = 0;

        i3 = 0;

     label04:
        if i3 < i1 goto label05;

        i3 = i1 - i2;

        i3 = i3 % 4;

        if i3 == 0 goto label07;

        return null;

     label05:
        $r2 = <com.admogo.Base64: int[] IA>;

        $c4 = $r0[i3];

        $i5 = (int) $c4;

        $i5 = $r2[$i5];

        if $i5 >= 0 goto label06;

        i2 = i2 + 1;

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        i3 = 0;

        $i5 = i1;

     label08:
        $c4 = $r0[$i5];

        i6 = (int) $c4;

        if i6 != 61 goto label09;

        i3 = i3 + 1;

     label09:
        if $i5 > 1 goto label14;

     label10:
        i1 = i1 - i2;

        i1 = i1 * 6;

        i1 = i1 >> 3;

        i1 = i1 - i3;

        r1 = newarray (byte)[i1];

        i6 = 0;

        i2 = 0;

     label11:
        if i2 >= i1 goto label19;

        i3 = 0;

        $i5 = 0;

        i0 = i6;

     label12:
        if $i5 < 4 goto label15;

        $i5 = i2 + 1;

        i6 = i3 >> 16;

        $b7 = (byte) i6;

        r1[i2] = $b7;

        if $i5 >= i1 goto label13;

        i2 = $i5 + 1;

        i6 = i3 >> 8;

        $b7 = (byte) i6;

        r1[$i5] = $b7;

        if i2 >= i1 goto label18;

        $i5 = i2 + 1;

        $b7 = (byte) i3;

        r1[i2] = $b7;

     label13:
        i2 = $i5;

        i6 = i0;

        goto label11;

     label14:
        i6 = -1;

        $i5 = $i5 + i6;

        $r2 = <com.admogo.Base64: int[] IA>;

        $c4 = $r0[$i5];

        i6 = (int) $c4;

        i6 = $r2[i6];

        if i6 <= 0 goto label08;

        goto label10;

     label15:
        $r2 = <com.admogo.Base64: int[] IA>;

        i6 = i0 + 1;

        $c4 = $r0[i0];

        i0 = (int) $c4;

        i0 = $r2[i0];

        if i0 < 0 goto label17;

        $i8 = $i5 * 6;

        $i8 = 18 - $i8;

        i0 = i0 << $i8;

        i3 = i3 | i0;

     label16:
        $i5 = $i5 + 1;

        i0 = i6;

        goto label12;

     label17:
        i0 = -1;

        $i5 = $i5 + i0;

        goto label16;

     label18:
        i6 = i0;

        goto label11;

     label19:
        return r1;
    }

    public static final byte[] decodeFast(java.lang.String)
    {
        byte[] r1;
        byte b6, $b12;
        int[] $r2;
        int i0, i1, i2, i3, i4, i7, i8, i9, $i10, $i11;
        java.lang.String $r0;
        char $c5;

        $r0 := @parameter0: java.lang.String;

        i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i2 != 0 goto label01;

        r1 = newarray (byte)[0];

        return r1;

     label01:
        i3 = 0;

        i4 = -1;

        i4 = i2 + i4;

     label02:
        i3 = i3 + 1;

        if i3 < i4 goto label12;

     label03:
        if i4 <= 0 goto label04;

        $r2 = <com.admogo.Base64: int[] IA>;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i4);

        $c5 = $c5 & 255;

        i0 = (int) $c5;

        i0 = $r2[i0];

        if i0 < 0 goto label13;

     label04:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i4);

        i0 = (int) $c5;

        if i0 != 61 goto label14;

        b6 = 1;

     label05:
        i0 = i4 - i3;

        i0 = i0 + 1;

        if i2 <= 76 goto label17;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(76);

        i2 = (int) $c5;

        if i2 != 13 goto label16;

        i2 = i0 / 78;

     label06:
        i7 = i2 << 1;

     label07:
        i2 = i0 - i7;

        i2 = i2 * 6;

        i2 = i2 >> 3;

        i2 = i2 - b6;

        r1 = newarray (byte)[i2];

        i8 = 0;

        i0 = i2 / 3;

        i1 = i0 * 3;

        i0 = 0;

     label08:
        if i0 < i1 goto label18;

        if i0 >= i2 goto label11;

        i7 = 0;

        i8 = 0;

     label09:
        i1 = i4 - b6;

        if i3 <= i1 goto label20;

        i4 = 16;

     label10:
        if i0 < i2 goto label21;

     label11:
        return r1;

     label12:
        $r2 = <com.admogo.Base64: int[] IA>;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        $c5 = $c5 & 255;

        i0 = (int) $c5;

        i0 = $r2[i0];

        if i0 < 0 goto label02;

        goto label03;

     label13:
        i0 = -1;

        i4 = i4 + i0;

        goto label03;

     label14:
        i0 = -1;

        i0 = i4 + i0;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        i0 = (int) $c5;

        if i0 != 61 goto label15;

        b6 = 2;

        goto label05;

     label15:
        b6 = 0;

        goto label05;

     label16:
        i2 = 0;

        goto label06;

     label17:
        i7 = 0;

        goto label07;

     label18:
        $r2 = <com.admogo.Base64: int[] IA>;

        i9 = i3 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        i3 = (int) $c5;

        i3 = $r2[i3];

        $i10 = i3 << 18;

        $r2 = <com.admogo.Base64: int[] IA>;

        i3 = i9 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i9);

        i9 = (int) $c5;

        i9 = $r2[i9];

        i9 = i9 << 12;

        $i10 = $i10 | i9;

        $r2 = <com.admogo.Base64: int[] IA>;

        i9 = i3 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        i3 = (int) $c5;

        i3 = $r2[i3];

        i3 = i3 << 6;

        $i10 = $i10 | i3;

        $r2 = <com.admogo.Base64: int[] IA>;

        i3 = i9 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i9);

        i9 = (int) $c5;

        i9 = $r2[i9];

        i9 = $i10 | i9;

        $i10 = i0 + 1;

        $i11 = i9 >> 16;

        $b12 = (byte) $i11;

        r1[i0] = $b12;

        i0 = $i10 + 1;

        $i11 = i9 >> 8;

        $b12 = (byte) $i11;

        r1[$i10] = $b12;

        $i10 = i0 + 1;

        $b12 = (byte) i9;

        r1[i0] = $b12;

        if i7 > 0 goto label19;

        i0 = $i10;

        goto label08;

     label19:
        i8 = i8 + 1;

        if i8 != 19 goto label22;

        i8 = 0;

        i0 = $i10;

        i3 = i3 + 2;

        goto label08;

     label20:
        $r2 = <com.admogo.Base64: int[] IA>;

        i1 = i3 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        i3 = (int) $c5;

        i3 = $r2[i3];

        i9 = i8 * 6;

        i9 = 18 - i9;

        i3 = i3 << i9;

        i7 = i7 | i3;

        i8 = i8 + 1;

        i3 = i1;

        goto label09;

     label21:
        i8 = i0 + 1;

        i1 = i7 >> i4;

        b6 = (byte) i1;

        r1[i0] = b6;

        i0 = -8;

        i4 = i4 + i0;

        i0 = i8;

        goto label10;

     label22:
        i0 = $i10;

        goto label08;
    }

    public static final byte[] decodeFast(byte[])
    {
        byte[] $r0, r2;
        short $s6;
        byte $b5, $b7;
        int[] $r1;
        int i0, i1, i2, i3, i4, i8, i9, i10, $i11, $i12;

        $r0 := @parameter0: byte[];

        i2 = lengthof $r0;

        if i2 != 0 goto label01;

        $r0 = newarray (byte)[0];

        return $r0;

     label01:
        i3 = 0;

        i4 = -1;

        i4 = i2 + i4;

     label02:
        i3 = i3 + 1;

        if i3 < i4 goto label12;

     label03:
        if i4 <= 0 goto label04;

        $r1 = <com.admogo.Base64: int[] IA>;

        $b5 = $r0[i4];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        i0 = (int) $s6;

        i0 = $r1[i0];

        if i0 < 0 goto label13;

     label04:
        $b5 = $r0[i4];

        i0 = (int) $b5;

        if i0 != 61 goto label14;

        $b5 = 1;

     label05:
        i0 = i4 - i3;

        i0 = i0 + 1;

        if i2 <= 76 goto label17;

        $b7 = $r0[76];

        i2 = (int) $b7;

        if i2 != 13 goto label16;

        i2 = i0 / 78;

     label06:
        i8 = i2 << 1;

     label07:
        i2 = i0 - i8;

        i2 = i2 * 6;

        i2 = i2 >> 3;

        i2 = i2 - $b5;

        r2 = newarray (byte)[i2];

        i9 = 0;

        i0 = i2 / 3;

        i1 = i0 * 3;

        i0 = 0;

     label08:
        if i0 < i1 goto label18;

        if i0 >= i2 goto label11;

        i8 = 0;

        i9 = 0;

     label09:
        i1 = i4 - $b5;

        if i3 <= i1 goto label20;

        i4 = 16;

     label10:
        if i0 < i2 goto label21;

     label11:
        return r2;

     label12:
        $r1 = <com.admogo.Base64: int[] IA>;

        $b5 = $r0[i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        i0 = (int) $s6;

        i0 = $r1[i0];

        if i0 < 0 goto label02;

        goto label03;

     label13:
        i0 = -1;

        i4 = i4 + i0;

        goto label03;

     label14:
        i0 = -1;

        i0 = i4 + i0;

        $b5 = $r0[i0];

        i0 = (int) $b5;

        if i0 != 61 goto label15;

        $b5 = 2;

        goto label05;

     label15:
        $b5 = 0;

        goto label05;

     label16:
        i2 = 0;

        goto label06;

     label17:
        i8 = 0;

        goto label07;

     label18:
        $r1 = <com.admogo.Base64: int[] IA>;

        i10 = i3 + 1;

        $b7 = $r0[i3];

        i3 = (int) $b7;

        i3 = $r1[i3];

        $i11 = i3 << 18;

        $r1 = <com.admogo.Base64: int[] IA>;

        i3 = i10 + 1;

        $b7 = $r0[i10];

        i10 = (int) $b7;

        i10 = $r1[i10];

        i10 = i10 << 12;

        $i11 = $i11 | i10;

        $r1 = <com.admogo.Base64: int[] IA>;

        i10 = i3 + 1;

        $b7 = $r0[i3];

        i3 = (int) $b7;

        i3 = $r1[i3];

        i3 = i3 << 6;

        $i11 = $i11 | i3;

        $r1 = <com.admogo.Base64: int[] IA>;

        i3 = i10 + 1;

        $b7 = $r0[i10];

        i10 = (int) $b7;

        i10 = $r1[i10];

        i10 = $i11 | i10;

        $i11 = i0 + 1;

        $i12 = i10 >> 16;

        $b7 = (byte) $i12;

        r2[i0] = $b7;

        i0 = $i11 + 1;

        $i12 = i10 >> 8;

        $b7 = (byte) $i12;

        r2[$i11] = $b7;

        $i11 = i0 + 1;

        $b7 = (byte) i10;

        r2[i0] = $b7;

        if i8 > 0 goto label19;

        i0 = $i11;

        goto label08;

     label19:
        i9 = i9 + 1;

        if i9 != 19 goto label22;

        i9 = 0;

        i0 = $i11;

        i3 = i3 + 2;

        goto label08;

     label20:
        $r1 = <com.admogo.Base64: int[] IA>;

        i1 = i3 + 1;

        $b7 = $r0[i3];

        i3 = (int) $b7;

        i3 = $r1[i3];

        i10 = i9 * 6;

        i10 = 18 - i10;

        i3 = i3 << i10;

        i8 = i8 | i3;

        i9 = i9 + 1;

        i3 = i1;

        goto label09;

     label21:
        i9 = i0 + 1;

        i1 = i8 >> i4;

        $b5 = (byte) i1;

        r2[i0] = $b5;

        i0 = -8;

        i4 = i4 + i0;

        i0 = i9;

        goto label10;

     label22:
        i0 = $i11;

        goto label08;
    }

    public static final byte[] decodeFast(char[])
    {
        byte[] r1;
        byte b6, $b12;
        int[] $r2;
        int i0, i1, i2, i3, i4, i7, i8, i9, $i10, $i11;
        char $c5;
        char[] $r0;

        $r0 := @parameter0: char[];

        i2 = lengthof $r0;

        if i2 != 0 goto label01;

        r1 = newarray (byte)[0];

        return r1;

     label01:
        i3 = 0;

        i4 = -1;

        i4 = i2 + i4;

     label02:
        i3 = i3 + 1;

        if i3 < i4 goto label12;

     label03:
        if i4 <= 0 goto label04;

        $r2 = <com.admogo.Base64: int[] IA>;

        $c5 = $r0[i4];

        i0 = (int) $c5;

        i0 = $r2[i0];

        if i0 < 0 goto label13;

     label04:
        $c5 = $r0[i4];

        i0 = (int) $c5;

        if i0 != 61 goto label14;

        b6 = 1;

     label05:
        i0 = i4 - i3;

        i0 = i0 + 1;

        if i2 <= 76 goto label17;

        $c5 = $r0[76];

        i2 = (int) $c5;

        if i2 != 13 goto label16;

        i2 = i0 / 78;

     label06:
        i7 = i2 << 1;

     label07:
        i2 = i0 - i7;

        i2 = i2 * 6;

        i2 = i2 >> 3;

        i2 = i2 - b6;

        r1 = newarray (byte)[i2];

        i8 = 0;

        i0 = i2 / 3;

        i1 = i0 * 3;

        i0 = 0;

     label08:
        if i0 < i1 goto label18;

        if i0 >= i2 goto label11;

        i7 = 0;

        i8 = 0;

     label09:
        i1 = i4 - b6;

        if i3 <= i1 goto label20;

        i4 = 16;

     label10:
        if i0 < i2 goto label21;

     label11:
        return r1;

     label12:
        $r2 = <com.admogo.Base64: int[] IA>;

        $c5 = $r0[i3];

        i0 = (int) $c5;

        i0 = $r2[i0];

        if i0 < 0 goto label02;

        goto label03;

     label13:
        i0 = -1;

        i4 = i4 + i0;

        goto label03;

     label14:
        i0 = -1;

        i0 = i4 + i0;

        $c5 = $r0[i0];

        i0 = (int) $c5;

        if i0 != 61 goto label15;

        b6 = 2;

        goto label05;

     label15:
        b6 = 0;

        goto label05;

     label16:
        i2 = 0;

        goto label06;

     label17:
        i7 = 0;

        goto label07;

     label18:
        $r2 = <com.admogo.Base64: int[] IA>;

        i9 = i3 + 1;

        $c5 = $r0[i3];

        i3 = (int) $c5;

        i3 = $r2[i3];

        $i10 = i3 << 18;

        $r2 = <com.admogo.Base64: int[] IA>;

        i3 = i9 + 1;

        $c5 = $r0[i9];

        i9 = (int) $c5;

        i9 = $r2[i9];

        i9 = i9 << 12;

        $i10 = $i10 | i9;

        $r2 = <com.admogo.Base64: int[] IA>;

        i9 = i3 + 1;

        $c5 = $r0[i3];

        i3 = (int) $c5;

        i3 = $r2[i3];

        i3 = i3 << 6;

        $i10 = $i10 | i3;

        $r2 = <com.admogo.Base64: int[] IA>;

        i3 = i9 + 1;

        $c5 = $r0[i9];

        i9 = (int) $c5;

        i9 = $r2[i9];

        i9 = $i10 | i9;

        $i10 = i0 + 1;

        $i11 = i9 >> 16;

        $b12 = (byte) $i11;

        r1[i0] = $b12;

        i0 = $i10 + 1;

        $i11 = i9 >> 8;

        $b12 = (byte) $i11;

        r1[$i10] = $b12;

        $i10 = i0 + 1;

        $b12 = (byte) i9;

        r1[i0] = $b12;

        if i7 > 0 goto label19;

        i0 = $i10;

        goto label08;

     label19:
        i8 = i8 + 1;

        if i8 != 19 goto label22;

        i8 = 0;

        i0 = $i10;

        i3 = i3 + 2;

        goto label08;

     label20:
        $r2 = <com.admogo.Base64: int[] IA>;

        i1 = i3 + 1;

        $c5 = $r0[i3];

        i3 = (int) $c5;

        i3 = $r2[i3];

        i9 = i8 * 6;

        i9 = 18 - i9;

        i3 = i3 << i9;

        i7 = i7 | i3;

        i8 = i8 + 1;

        i3 = i1;

        goto label09;

     label21:
        i8 = i0 + 1;

        i1 = i7 >> i4;

        b6 = (byte) i1;

        r1[i0] = b6;

        i0 = -8;

        i4 = i4 + i0;

        i0 = i8;

        goto label10;

     label22:
        i0 = $i10;

        goto label08;
    }

    private static java.lang.String discardNonBase64Chars(java.lang.String)
    {
        byte $b3;
        java.lang.StringBuffer r1;
        int $i0, i1;
        char $c2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 < $i0 goto label2;

        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label2:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $b3 = (byte) $c2;

        $z0 = staticinvoke <com.admogo.Base64: boolean isValidBase64Byte(byte)>($b3);

        if $z0 == 0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    public static final byte[] encodeToByte(byte[], boolean)
    {
        byte[] $r0, r1;
        short $s7;
        byte $b6;
        int i0, i1, i2, i3, i4, i5, i9, $i10, $i11;
        boolean $z0;
        char $c8;
        char[] $r2;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $r0 == null goto label02;

        i3 = lengthof $r0;

     label01:
        if i3 != 0 goto label03;

        $r0 = newarray (byte)[0];

        return $r0;

     label02:
        i3 = 0;

        goto label01;

     label03:
        i0 = i3 / 3;

        i1 = i0 * 3;

        i0 = -1;

        i0 = i3 + i0;

        i0 = i0 / 3;

        i0 = i0 + 1;

        i0 = i0 << 2;

        if $z0 == 0 goto label08;

        i2 = -1;

        i2 = i0 + i2;

        i2 = i2 / 76;

        i2 = i2 << 1;

     label04:
        i0 = i0 + i2;

        r1 = newarray (byte)[i0];

        i2 = 0;

        i4 = 0;

        i5 = 0;

     label05:
        if i5 < i1 goto label09;

        i2 = i3 - i1;

        if i2 <= 0 goto label14;

        $b6 = $r0[i1];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i1 = (int) $s7;

        i1 = i1 << 10;

        if i2 != 2 goto label11;

        i4 = -1;

        i3 = i3 + i4;

        $b6 = $r0[i3];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i3 = (int) $s7;

        i3 = i3 << 2;

     label06:
        i3 = i1 | i3;

        i1 = -4;

        i1 = i0 + i1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i4 = i3 >> 12;

        $c8 = $r2[i4];

        $b6 = (byte) $c8;

        r1[i1] = $b6;

        i1 = -3;

        i1 = i0 + i1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i4 = i3 >>> 6;

        i4 = i4 & 63;

        $c8 = $r2[i4];

        $b6 = (byte) $c8;

        r1[i1] = $b6;

        i1 = -2;

        i1 = i0 + i1;

        if i2 != 2 goto label12;

        $r2 = <com.admogo.Base64: char[] CA>;

        i3 = i3 & 63;

        $c8 = $r2[i3];

        $b6 = (byte) $c8;

     label07:
        r1[i1] = $b6;

        i3 = -1;

        i0 = i0 + i3;

        r1[i0] = 61;

        return r1;

     label08:
        i2 = 0;

        goto label04;

     label09:
        i9 = i5 + 1;

        $b6 = $r0[i5];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i5 = (int) $s7;

        $i10 = i5 << 16;

        i5 = i9 + 1;

        $b6 = $r0[i9];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i9 = (int) $s7;

        i9 = i9 << 8;

        $i10 = $i10 | i9;

        i9 = i5 + 1;

        $b6 = $r0[i5];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i5 = (int) $s7;

        i5 = $i10 | i5;

        $i10 = i4 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 18;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        $b6 = (byte) $c8;

        r1[i4] = $b6;

        i4 = $i10 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 12;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        $b6 = (byte) $c8;

        r1[$i10] = $b6;

        $i10 = i4 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 6;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        $b6 = (byte) $c8;

        r1[i4] = $b6;

        i4 = $i10 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i5 = i5 & 63;

        $c8 = $r2[i5];

        $b6 = (byte) $c8;

        r1[$i10] = $b6;

        if $z0 != 0 goto label10;

        i5 = i9;

        goto label05;

     label10:
        i2 = i2 + 1;

        if i2 != 19 goto label13;

        i5 = -2;

        i5 = i0 + i5;

        if i4 >= i5 goto label13;

        i2 = i4 + 1;

        r1[i4] = 13;

        i4 = i2 + 1;

        r1[i2] = 10;

        i2 = 0;

        i5 = i9;

        goto label05;

     label11:
        i3 = 0;

        goto label06;

     label12:
        $b6 = 61;

        goto label07;

     label13:
        i5 = i9;

        goto label05;

     label14:
        return r1;
    }

    public static final char[] encodeToChar(byte[], boolean)
    {
        byte[] $r0;
        short $s7;
        byte $b6;
        int i0, i1, i2, i3, i4, i5, i9, $i10, $i11;
        boolean $z0;
        char $c8;
        char[] r1, $r2;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        if $r0 == null goto label02;

        i3 = lengthof $r0;

     label01:
        if i3 != 0 goto label03;

        r1 = newarray (char)[0];

        return r1;

     label02:
        i3 = 0;

        goto label01;

     label03:
        i0 = i3 / 3;

        i1 = i0 * 3;

        i0 = -1;

        i0 = i3 + i0;

        i0 = i0 / 3;

        i0 = i0 + 1;

        i0 = i0 << 2;

        if $z0 == 0 goto label08;

        i2 = -1;

        i2 = i0 + i2;

        i2 = i2 / 76;

        i2 = i2 << 1;

     label04:
        i0 = i0 + i2;

        r1 = newarray (char)[i0];

        i2 = 0;

        i4 = 0;

        i5 = 0;

     label05:
        if i5 < i1 goto label09;

        i2 = i3 - i1;

        if i2 <= 0 goto label14;

        $b6 = $r0[i1];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i1 = (int) $s7;

        i1 = i1 << 10;

        if i2 != 2 goto label11;

        i4 = -1;

        i3 = i3 + i4;

        $b6 = $r0[i3];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i3 = (int) $s7;

        i3 = i3 << 2;

     label06:
        i3 = i1 | i3;

        i1 = -4;

        i1 = i0 + i1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i4 = i3 >> 12;

        $c8 = $r2[i4];

        r1[i1] = $c8;

        i1 = -3;

        i1 = i0 + i1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i4 = i3 >>> 6;

        i4 = i4 & 63;

        $c8 = $r2[i4];

        r1[i1] = $c8;

        i1 = -2;

        i1 = i0 + i1;

        if i2 != 2 goto label12;

        $r2 = <com.admogo.Base64: char[] CA>;

        i3 = i3 & 63;

        $c8 = $r2[i3];

     label07:
        r1[i1] = $c8;

        i3 = -1;

        i0 = i0 + i3;

        r1[i0] = 61;

        return r1;

     label08:
        i2 = 0;

        goto label04;

     label09:
        i9 = i5 + 1;

        $b6 = $r0[i5];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i5 = (int) $s7;

        $i10 = i5 << 16;

        i5 = i9 + 1;

        $b6 = $r0[i9];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i9 = (int) $s7;

        i9 = i9 << 8;

        $i10 = $i10 | i9;

        i9 = i5 + 1;

        $b6 = $r0[i5];

        $s7 = (short) $b6;

        $s7 = $s7 & 255;

        i5 = (int) $s7;

        i5 = $i10 | i5;

        $i10 = i4 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 18;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        r1[i4] = $c8;

        i4 = $i10 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 12;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        r1[$i10] = $c8;

        $i10 = i4 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        $i11 = i5 >>> 6;

        $i11 = $i11 & 63;

        $c8 = $r2[$i11];

        r1[i4] = $c8;

        i4 = $i10 + 1;

        $r2 = <com.admogo.Base64: char[] CA>;

        i5 = i5 & 63;

        $c8 = $r2[i5];

        r1[$i10] = $c8;

        if $z0 != 0 goto label10;

        i5 = i9;

        goto label05;

     label10:
        i2 = i2 + 1;

        if i2 != 19 goto label13;

        i5 = -2;

        i5 = i0 + i5;

        if i4 >= i5 goto label13;

        i2 = i4 + 1;

        r1[i4] = 13;

        i4 = i2 + 1;

        r1[i2] = 10;

        i2 = 0;

        i5 = i9;

        goto label05;

     label11:
        i3 = 0;

        goto label06;

     label12:
        $c8 = 61;

        goto label07;

     label13:
        i5 = i9;

        goto label05;

     label14:
        return r1;
    }

    public static final java.lang.String encodeToString(byte[], boolean)
    {
        byte[] $r0;
        char[] $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.admogo.Base64: char[] encodeToChar(byte[],boolean)>($r0, $z0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }

    private static boolean isValidBase64Byte(byte)
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        if $i1 != 61 goto label1;

        return 1;

     label1:
        $i1 = (int) $b0;

        if $i1 < 0 goto label2;

        $i1 = (int) $b0;

        if $i1 < 128 goto label3;

     label2:
        return 0;

     label3:
        $r0 = <com.admogo.Base64: byte[] decodingTable>;

        $i1 = (int) $b0;

        $b0 = $r0[$i1];

        $i1 = (int) $b0;

        $i2 = -1;

        if $i1 != $i2 goto label4;

        return 0;

     label4:
        return 1;
    }
}
