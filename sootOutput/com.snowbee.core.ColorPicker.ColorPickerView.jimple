public class com.snowbee.core.ColorPicker.ColorPickerView extends android.view.View
{
    private static int CENTER_RADIUS;
    private static int CENTER_X;
    private static int CENTER_Y;
    private static final float PI;
    private android.graphics.Paint mCenterPaint;
    private final int[] mColors;
    private boolean mHighlightCenter;
    private com.snowbee.core.ColorPicker.OnColorChangedListener mListener;
    private android.graphics.Paint mPaint;
    private boolean mTrackingCenter;

    static void <clinit>()
    {
        <com.snowbee.core.ColorPicker.ColorPickerView: float PI> = 3.1415925F;

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS> = 0;

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X> = 100;

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_Y> = 100;

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS> = 32;

        return;
    }

    void <init>(android.content.Context, com.snowbee.core.ColorPicker.OnColorChangedListener, int)
    {
        android.content.Context $r1;
        com.snowbee.core.ColorPicker.OnColorChangedListener $r2;
        android.graphics.Paint$Style $r6;
        int[] $r4;
        int $i0, $i1;
        float $f0;
        android.graphics.Paint $r5, $r8;
        com.snowbee.core.ColorPicker.ColorPickerView r0;
        android.graphics.SweepGradient $r7;
        android.content.res.Resources $r3;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.snowbee.core.ColorPicker.OnColorChangedListener;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230720);

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X> = $i1;

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_Y> = $i1;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131230721);

        <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS> = $i1;

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: com.snowbee.core.ColorPicker.OnColorChangedListener mListener> = $r2;

        $r4 = newarray (int)[10];

        $r4[0] = -65536;

        $r4[1] = -65281;

        $r4[2] = -16776961;

        $r4[3] = -16711681;

        $r4[4] = -16711936;

        $i1 = -256;

        $r4[5] = $i1;

        $i1 = -1;

        $r4[6] = $i1;

        $r4[7] = -8355712;

        $r4[8] = -16777216;

        $r4[9] = -65536;

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: int[] mColors> = $r4;

        $r7 = new android.graphics.SweepGradient;

        $r4 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: int[] mColors>;

        specialinvoke $r7.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>(0.0F, 0.0F, $r4, null);

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint> = $r8;

        $r5 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r7);

        $r5 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $r5 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint>;

        $i1 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS>;

        $f0 = (float) $i1;

        virtualinvoke $r5.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint> = $r8;

        $r5 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setStrokeWidth(float)>(5.0F);

        return;
    }

    private int ave(int, int, float)
    {
        int $i0, $i1;
        float $f0, $f1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 := @parameter2: float;

        $i1 = $i1 - $i0;

        $f1 = (float) $i1;

        $f0 = $f1 * $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    private int interpColor(int[], float)
    {
        byte $b2;
        int[] $r1;
        int i0, i1, $i3, $i4, $i5, $i6;
        float $f0, $f1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $r1 := @parameter0: int[];

        $f0 := @parameter1: float;

        $b2 = $f0 cmpg 0.0F;

        i0 = (int) $b2;

        if i0 > 0 goto label1;

        i0 = $r1[0];

        return i0;

     label1:
        $b2 = $f0 cmpl 1.0F;

        i0 = (int) $b2;

        if i0 < 0 goto label2;

        i0 = lengthof $r1;

        i0 = i0 - 1;

        i0 = $r1[i0];

        return i0;

     label2:
        i0 = lengthof $r1;

        i0 = i0 - 1;

        $f1 = (float) i0;

        $f0 = $f0 * $f1;

        i1 = (int) $f0;

        $f1 = (float) i1;

        $f0 = $f0 - $f1;

        i0 = $r1[i1];

        i1 = i1 + 1;

        i1 = $r1[i1];

        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $i4 = staticinvoke <android.graphics.Color: int alpha(int)>(i1);

        $i3 = specialinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: int ave(int,int,float)>($i3, $i4, $f0);

        $i4 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $i5 = staticinvoke <android.graphics.Color: int red(int)>(i1);

        $i4 = specialinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: int ave(int,int,float)>($i4, $i5, $f0);

        $i5 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $i6 = staticinvoke <android.graphics.Color: int green(int)>(i1);

        $i5 = specialinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: int ave(int,int,float)>($i5, $i6, $f0);

        i0 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        i1 = staticinvoke <android.graphics.Color: int blue(int)>(i1);

        i0 = specialinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: int ave(int,int,float)>(i0, i1, $f0);

        i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i3, $i4, $i5, i0);

        return i0;
    }

    public int getColor()
    {
        int $i0;
        android.graphics.Paint $r1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $r1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.graphics.RectF $r3;
        android.graphics.Paint$Style $r4;
        int $i0, $i1;
        float f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        com.snowbee.core.ColorPicker.ColorPickerView r0;
        boolean $z0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X>;

        f0 = (float) $i0;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        $f1 = $f1 * 0.8F;

        f0 = f0 - $f1;

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X>;

        $f1 = (float) $i0;

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X>;

        $f2 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f2);

        $r3 = new android.graphics.RectF;

        $f1 = neg f0;

        $f2 = neg f0;

        specialinvoke $r3.<android.graphics.RectF: void <init>(float,float,float,float)>($f1, $f2, f0, f0);

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r3, $r2);

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS>;

        f0 = (float) $i0;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(0.0F, 0.0F, f0, $r2);

        $z0 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mTrackingCenter>;

        if $z0 == 0 goto label3;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getColor()>();

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $z0 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mHighlightCenter>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(255);

     label1:
        $i1 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS>;

        f0 = (float) $i1;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $f1 = virtualinvoke $r2.<android.graphics.Paint: float getStrokeWidth()>();

        f0 = f0 + $f1;

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(0.0F, 0.0F, f0, $r2);

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        return;

     label2:
        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(128);

        goto label1;

     label3:
        return;
    }

    protected void onMeasure(int, int)
    {
        int $i0, $i1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X>;

        $i0 = $i0 * 2;

        $i1 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_Y>;

        $i1 = $i1 * 2;

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.snowbee.core.ColorPicker.OnColorChangedListener $r4;
        byte $b1;
        int[] $r2;
        android.view.MotionEvent $r1;
        int $i0;
        float f0, f1, $f2, $f3;
        android.graphics.Paint $r3;
        com.snowbee.core.ColorPicker.ColorPickerView r0;
        double $d0, $d1;
        boolean z0, $z1;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $r1 := @parameter0: android.view.MotionEvent;

        f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_X>;

        f1 = (float) $i0;

        f0 = f0 - f1;

        f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_Y>;

        $f2 = (float) $i0;

        f1 = f1 - $f2;

        $f2 = f0 * f0;

        $f3 = f1 * f1;

        $f2 = $f2 + $f3;

        $d0 = (double) $f2;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i0 = <com.snowbee.core.ColorPicker.ColorPickerView: int CENTER_RADIUS>;

        $d1 = (double) $i0;

        $b1 = $d0 cmpg $d1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label03;

        z0 = 1;

     label01:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label08;
            case 2: goto label05;
            default: goto label02;
        };

     label02:
        return 1;

     label03:
        z0 = 0;

        goto label01;

     label04:
        r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mTrackingCenter> = z0;

        if z0 == 0 goto label05;

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mHighlightCenter> = 1;

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return 1;

     label05:
        $z1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mTrackingCenter>;

        if $z1 == 0 goto label06;

        $z1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mHighlightCenter>;

        if $z1 == z0 goto label10;

        r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mHighlightCenter> = z0;

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return 1;

     label06:
        $d0 = (double) f1;

        $d1 = (double) f0;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        f0 = (float) $d0;

        f0 = f0 / 6.283185F;

        $b1 = f0 cmpg 0.0F;

        $i0 = (int) $b1;

        if $i0 >= 0 goto label07;

        f0 = f0 + 1.0F;

     label07:
        $r2 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: int[] mColors>;

        $i0 = specialinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: int interpColor(int[],float)>($r2, f0);

        $r3 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return 1;

     label08:
        $z1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mTrackingCenter>;

        if $z1 == 0 goto label10;

        if z0 == 0 goto label09;

        $r4 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: com.snowbee.core.ColorPicker.OnColorChangedListener mListener>;

        $r3 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $i0 = virtualinvoke $r3.<android.graphics.Paint: int getColor()>();

        interfaceinvoke $r4.<com.snowbee.core.ColorPicker.OnColorChangedListener: void colorChanged(int)>($i0);

     label09:
        r0.<com.snowbee.core.ColorPicker.ColorPickerView: boolean mTrackingCenter> = 0;

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

     label10:
        return 1;
    }

    public void setCenterColor(int)
    {
        int $i0;
        android.graphics.Paint $r1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return;
    }

    public void setColor(int)
    {
        int $i0;
        android.graphics.Paint $r1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return;
    }

    public void setTransparency(int)
    {
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r1;
        com.snowbee.core.ColorPicker.ColorPickerView r0;

        r0 := @this: com.snowbee.core.ColorPicker.ColorPickerView;

        $i0 := @parameter0: int;

        $r1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        $i2 = staticinvoke <android.graphics.Color: int red(int)>($i1);

        $i3 = staticinvoke <android.graphics.Color: int green(int)>($i1);

        $i1 = staticinvoke <android.graphics.Color: int blue(int)>($i1);

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i0, $i2, $i3, $i1);

        $r1 = r0.<com.snowbee.core.ColorPicker.ColorPickerView: android.graphics.Paint mCenterPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke r0.<com.snowbee.core.ColorPicker.ColorPickerView: void invalidate()>();

        return;
    }
}
