class vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager extends java.lang.Object
{
    private static final long ONE_HOUR;
    private static final java.lang.String RENREN_SDK_CONFIG;
    private static final java.lang.String RENREN_SDK_CONFIG_PROP_ACCESS_TOKEN;
    private static final java.lang.String RENREN_SDK_CONFIG_PROP_CREATE_TIME;
    private static final java.lang.String SESSION_KEY_URL;
    private java.lang.String accessToken;
    private android.content.Context context;
    private java.lang.String sessionKey;
    private java.lang.String sessionSecret;

    void <init>(android.content.Context)
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        android.content.Context $r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String accessToken> = null;

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionSecret> = null;

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: android.content.Context context> = $r1;

        return;
    }

    private void exchangeSessionKey(java.lang.String)
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        android.os.Bundle r3;
        long $l1;
        java.lang.RuntimeException $r6;
        org.json.JSONException $r5;
        org.json.JSONObject r2, $r7;
        vStudio.Android.Camera360.Share.Renren.SDK.RenrenError $r4;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.String $r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label18;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 1 goto label01;

        return;

     label01:
        r3 = new android.os.Bundle;

        specialinvoke r3.<android.os.Bundle: void <init>()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("oauth_token", $r1);

        $r1 = staticinvoke <vStudio.Android.Camera360.Share.Renren.SDK.Util: java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle)>("http://graph.renren.com/renren_api/session_key", "POST", r3);

        r2 = new org.json.JSONObject;

     label02:
        specialinvoke r2.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke r2.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("error", null);

     label03:
        if $r1 == null goto label07;

        $r4 = new vStudio.Android.Camera360.Share.Renren.SDK.RenrenError;

     label04:
        $r1 = virtualinvoke r2.<org.json.JSONObject: java.lang.String toString()>();

        specialinvoke $r4.<vStudio.Android.Camera360.Share.Renren.SDK.RenrenError: void <init>(java.lang.String)>($r1);

     label05:
        throw $r4;

     label06:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r1 = virtualinvoke $r5.<org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r5);

        throw $r6;

     label07:
        $r7 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("renren_token");

        $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("session_key");

     label08:
        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionKey> = $r1;

     label09:
        $r7 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("renren_token");

        $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("session_secret");

     label10:
        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionSecret> = $r1;

     label11:
        r2 = virtualinvoke r2.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("renren_token");

        $l1 = virtualinvoke r2.<org.json.JSONObject: long getLong(java.lang.String)>("expires_in");

     label12:
        $r8 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("---login success sessionKey:");

     label14:
        $r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionKey>;

     label15:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expires:");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sessionSecret:");

     label16:
        $r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionSecret>;

     label17:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Renren-SDK", $r1);

     label18:
        return;

        catch org.json.JSONException from label02 to label03 with label06;
        catch org.json.JSONException from label04 to label05 with label06;
        catch org.json.JSONException from label07 to label08 with label06;
        catch org.json.JSONException from label09 to label10 with label06;
        catch org.json.JSONException from label11 to label12 with label06;
        catch org.json.JSONException from label13 to label14 with label06;
        catch org.json.JSONException from label15 to label16 with label06;
        catch org.json.JSONException from label17 to label18 with label06;
    }

    private java.lang.String restoreAccessToken()
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        android.content.Context $r1;
        long l0, $l1, $l2;
        java.lang.String[] $r4;
        android.content.SharedPreferences $r2;
        byte $b3;
        int $i4;
        java.lang.String $r3, $r5;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("renren_sdk_config", 0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("renren_sdk_config_prop_access_token", null);

        if $r3 != null goto label1;

        return null;

     label1:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("renren_sdk_config_prop_create_time", 0L);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r5 = $r4[2];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        l0 = $l2 * 1000L;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l1 + l0;

        $l2 = $l2 - 3600000L;

        $b3 = $l1 cmp $l2;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label2;

        virtualinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void clearPersistSession()>();

        return null;

     label2:
        return $r3;
    }

    private void storeAccessToken(java.lang.String)
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        android.content.SharedPreferences$Editor $r4;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        long $l0;
        java.lang.String $r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("renren_sdk_config", 0);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        if $r1 == null goto label2;

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("renren_sdk_config_prop_access_token", $r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("renren_sdk_config_prop_create_time", $l0);

     label1:
        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label2:
        virtualinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void clearPersistSession()>();

        goto label1;
    }

    private void updateAccessToken(java.lang.String, boolean)
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 1 goto label1;

        return;

     label1:
        specialinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void exchangeSessionKey(java.lang.String)>($r1);

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String accessToken> = $r1;

        specialinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void storeAccessToken(java.lang.String)>($r1);

        return;

     label2:
        return;
    }

    void clearPersistSession()
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        android.content.SharedPreferences$Editor $r3;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("renren_sdk_config", 0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("renren_sdk_config_prop_access_token");

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("renren_sdk_config_prop_create_time");

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    java.lang.String getSessionKey()
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        java.lang.String r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionKey>;

        return r1;
    }

    java.lang.String getSessionSecret()
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        java.lang.String r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionSecret>;

        return r1;
    }

    void restoreSessionKey()
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 = specialinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String restoreAccessToken()>();

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String accessToken> = $r1;

     label1:
        $r1 = r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String accessToken>;

        specialinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void exchangeSessionKey(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        virtualinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void clearPersistSession()>();

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String accessToken> = null;

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionKey> = null;

        r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String sessionSecret> = null;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void updateAccessToken(java.lang.String)
    {
        vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager r0;
        java.lang.String $r1;

        r0 := @this: vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: void updateAccessToken(java.lang.String,boolean)>($r1, 1);

        return;
    }

    public static void <clinit>()
    {
        <vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String SESSION_KEY_URL> = "http://graph.renren.com/renren_api/session_key";

        <vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String RENREN_SDK_CONFIG_PROP_CREATE_TIME> = "renren_sdk_config_prop_create_time";

        <vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String RENREN_SDK_CONFIG_PROP_ACCESS_TOKEN> = "renren_sdk_config_prop_access_token";

        <vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: java.lang.String RENREN_SDK_CONFIG> = "renren_sdk_config";

        <vStudio.Android.Camera360.Share.Renren.SDK.AccessTokenManager: long ONE_HOUR> = 3600000L;

        return;
    }
}
