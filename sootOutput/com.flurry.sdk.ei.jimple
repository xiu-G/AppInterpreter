public class com.flurry.sdk.ei extends java.lang.Object
{
    private java.util.Map a;
    private java.util.Map b;

    public void <init>()
    {
        com.flurry.sdk.ei r0;
        java.util.HashMap $r1;

        r0 := @this: com.flurry.sdk.ei;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.flurry.sdk.ei: java.util.Map a> = $r1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.flurry.sdk.ei: java.util.Map b> = $r1;

        return;
    }

    private boolean a(java.lang.Object, java.lang.Object)
    {
        com.flurry.sdk.ei r0;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == $r2 goto label1;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void b(java.lang.String, java.lang.Object)
    {
        com.flurry.sdk.ei r0;
        java.util.Iterator $r6;
        com.flurry.sdk.ei$a $r7;
        java.util.List $r5;
        java.util.Map $r3;
        java.lang.Object $r2, $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.flurry.sdk.ei: java.util.Map b>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r4 == null goto label2;

        $r3 = r0.<com.flurry.sdk.ei: java.util.Map b>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.flurry.sdk.ei$a) $r4;

        interfaceinvoke $r7.<com.flurry.sdk.ei$a: void a(java.lang.String,java.lang.Object)>($r1, $r2);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object a(java.lang.String)
    {
        java.lang.Throwable $r4;
        com.flurry.sdk.ei r0;
        java.util.Map $r3;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<com.flurry.sdk.ei: java.util.Map a>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label2:
        exitmonitor r0;

        return $r2;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void a(java.lang.String, com.flurry.sdk.ei$a)
    {
        java.lang.Throwable $r5;
        com.flurry.sdk.ei r0;
        com.flurry.sdk.ei$a $r2;
        java.util.List $r7;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.util.LinkedList $r6;
        boolean $z0;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.flurry.sdk.ei$a;

        entermonitor r0;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor r0;

        return;

     label4:
        if $r2 == null goto label3;

     label5:
        $r3 = r0.<com.flurry.sdk.ei: java.util.Map b>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r4;

        if $r4 != null goto label6;

        $r6 = new java.util.LinkedList;

        $r4 = $r6;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

     label6:
        $r7 = (java.util.List) $r4;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<com.flurry.sdk.ei: java.util.Map b>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label7:
        goto label3;

     label8:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }

    public void a(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r5;
        com.flurry.sdk.ei r0;
        java.util.Map $r3;
        java.lang.Object $r2, $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label2:
        if $z0 == 0 goto label4;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r3 = r0.<com.flurry.sdk.ei: java.util.Map a>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = specialinvoke r0.<com.flurry.sdk.ei: boolean a(java.lang.Object,java.lang.Object)>($r2, $r4);

        if $z0 != 0 goto label3;

        if $r2 != null goto label8;

        $r3 = r0.<com.flurry.sdk.ei: java.util.Map a>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label5:
        specialinvoke r0.<com.flurry.sdk.ei: void b(java.lang.String,java.lang.Object)>($r1, $r2);

     label6:
        goto label3;

     label7:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label8:
        $r3 = r0.<com.flurry.sdk.ei: java.util.Map a>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label9:
        goto label5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean b(java.lang.String, com.flurry.sdk.ei$a)
    {
        java.lang.Throwable $r6;
        com.flurry.sdk.ei r0;
        com.flurry.sdk.ei$a $r2;
        java.util.List $r5;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.flurry.sdk.ei;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.flurry.sdk.ei$a;

        entermonitor r0;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label2:
        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        exitmonitor r0;

        return $z0;

     label4:
        if $r2 != null goto label5;

        $z0 = 0;

        goto label3;

     label5:
        $r3 = r0.<com.flurry.sdk.ei: java.util.Map b>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        if $r5 != null goto label6;

        $z0 = 0;

        goto label3;

     label6:
        $z0 = interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>($r2);

     label7:
        goto label3;

     label8:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }
}
