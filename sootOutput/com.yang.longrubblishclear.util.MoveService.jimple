public class com.yang.longrubblishclear.util.MoveService extends android.app.IntentService
{
    public static final int ACTION_ALERTDIALOG;
    public static final int ACTION_CLEAR;
    public static final int ACTION_MOVE;
    public static final java.lang.String EXTRA_ACTION;
    public static final java.lang.String EXTRA_NAME;
    public static final java.lang.String EXTRA_OBJ;
    public static final java.lang.String EXTRA_PKG;
    public static final java.lang.String EXTRA_SIZE;
    private com.yang.longrubblishclear.util.ShellCommand mShellCommand;
    private android.os.Handler mUiHandler;

    public void <init>()
    {
        com.yang.longrubblishclear.util.MoveService r0;

        r0 := @this: com.yang.longrubblishclear.util.MoveService;

        specialinvoke r0.<com.yang.longrubblishclear.util.MoveService: void <init>(java.lang.String)>("MoveService");

        return;
    }

    public void <init>(java.lang.String)
    {
        com.yang.longrubblishclear.util.MoveService r0;
        java.lang.String $r1;
        com.yang.longrubblishclear.util.MoveService$1 $r2;

        r0 := @this: com.yang.longrubblishclear.util.MoveService;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>($r1);

        $r2 = new com.yang.longrubblishclear.util.MoveService$1;

        specialinvoke $r2.<com.yang.longrubblishclear.util.MoveService$1: void <init>(com.yang.longrubblishclear.util.MoveService)>(r0);

        r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler> = $r2;

        return;
    }

    private com.yang.longrubblishclear.util.ShellCommand initShellCommand()
    {
        java.lang.Throwable r8, r9;
        com.yang.longrubblishclear.util.MoveService r0;
        int $i0;
        java.lang.String r4, $r5;
        boolean $z0;
        java.io.IOException $r16;
        java.io.File $r11;
        java.io.FileNotFoundException $r15;
        com.yang.longrubblishclear.util.ShellCommand $r3, $r10;
        com.yang.longrubblishclear.util.ShellCommand$SH $r6;
        java.lang.StringBuilder $r7, $r14;
        java.io.BufferedReader r1, $r13;
        java.io.FileReader r2, $r12;

        r0 := @this: com.yang.longrubblishclear.util.MoveService;

        $r3 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        if $r3 != null goto label07;

        $r10 = new com.yang.longrubblishclear.util.ShellCommand;

        specialinvoke $r10.<com.yang.longrubblishclear.util.ShellCommand: void <init>()>();

        r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand> = $r10;

        $r3 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        $z0 = virtualinvoke $r3.<com.yang.longrubblishclear.util.ShellCommand: boolean canSU()>();

        if $z0 == 0 goto label07;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>("/system/app");

        $z0 = virtualinvoke $r11.<java.io.File: boolean canWrite()>();

        if $z0 != 0 goto label07;

        r4 = "/dev/block/mtdblock3";

        $r12 = new java.io.FileReader;

        r2 = $r12;

     label01:
        specialinvoke $r12.<java.io.FileReader: void <init>(java.lang.String)>("/proc/mounts");

     label02:
        $r13 = new java.io.BufferedReader;

        r1 = $r13;

     label03:
        specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

     label04:
        $r5 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r5 != null goto label08;

     label06:
        $r3 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        $r6 = $r3.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("mount -o remount,rw ");

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" /system");

        r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.yang.longrubblishclear.util.ShellCommand$SH: com.yang.longrubblishclear.util.ShellCommand$CommandResult runWaitFor(java.lang.String)>(r4);

        $r3 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        $r6 = $r3.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su>;

        virtualinvoke $r6.<com.yang.longrubblishclear.util.ShellCommand$SH: com.yang.longrubblishclear.util.ShellCommand$CommandResult runWaitFor(java.lang.String)>("chmod 0777 /system/app");

     label07:
        $r3 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        return $r3;

     label08:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

     label09:
        if $z0 != 0 goto label04;

     label10:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("/system");

     label11:
        if $z0 == 0 goto label04;

     label12:
        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>(" ");

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label13:
        r4 = $r5;

     label14:
        staticinvoke <com.yang.longrubblishclear.util.Debug: void d(java.lang.String)>($r5);

     label15:
        goto label06;

     label16:
        r8 := @caughtexception;

        $r15 = (java.io.FileNotFoundException) r8;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label06;

     label17:
        r9 := @caughtexception;

        $r16 = (java.io.IOException) r9;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        goto label06;

        catch java.io.FileNotFoundException from label01 to label02 with label16;
        catch java.io.FileNotFoundException from label03 to label05 with label16;
        catch java.io.IOException from label01 to label02 with label17;
        catch java.io.IOException from label03 to label05 with label17;
        catch java.io.FileNotFoundException from label08 to label09 with label16;
        catch java.io.FileNotFoundException from label10 to label11 with label16;
        catch java.io.FileNotFoundException from label12 to label13 with label16;
        catch java.io.FileNotFoundException from label14 to label15 with label16;
        catch java.io.IOException from label08 to label09 with label17;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.io.IOException from label12 to label13 with label17;
        catch java.io.IOException from label14 to label15 with label17;
    }

    protected void onHandleIntent(android.content.Intent)
    {
        com.yang.longrubblishclear.util.MoveService r0;
        android.content.pm.PackageManager $r7;
        com.yang.longrubblishclear.util.ClearHelper$ClearInfo r17;
        android.content.Intent $r1;
        com.yang.longrubblishclear.util.ShellCommand$CommandResult $r13;
        long $l1;
        android.content.pm.PackageInfo $r8;
        android.os.Handler $r4;
        int $i0;
        java.lang.String $r3, $r12;
        boolean $z0, $z1;
        com.yang.longrubblishclear.util.APKInfo $r9;
        com.yang.longrubblishclear.util.MoveService$2 $r6;
        com.yang.longrubblishclear.util.MoveService$3 $r14;
        com.yang.longrubblishclear.util.MoveService$4 $r15;
        com.yang.longrubblishclear.util.MoveService$5 $r18;
        java.lang.Exception r2;
        java.io.Serializable $r16;
        com.yang.longrubblishclear.util.ShellCommand $r10;
        android.os.Message $r5;
        com.yang.longrubblishclear.util.ShellCommand$SH $r11;

        r0 := @this: com.yang.longrubblishclear.util.MoveService;

        $r1 := @parameter0: android.content.Intent;

        $z0 = 0;

        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("action", 0);

        $r3 = virtualinvoke $r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("pkg");

        virtualinvoke $r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("name");

        if $i0 != 0 goto label01;

        $r4 = r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler>;

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r4, 0, $r1);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;

     label01:
        if $i0 != 1 goto label20;

        $r4 = r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler>;

        $r6 = new com.yang.longrubblishclear.util.MoveService$2;

        specialinvoke $r6.<com.yang.longrubblishclear.util.MoveService$2: void <init>(com.yang.longrubblishclear.util.MoveService)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label02:
        $r7 = virtualinvoke r0.<com.yang.longrubblishclear.util.MoveService: android.content.pm.PackageManager getPackageManager()>();

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

        $r7 = virtualinvoke r0.<com.yang.longrubblishclear.util.MoveService: android.content.pm.PackageManager getPackageManager()>();

        $r9 = staticinvoke <com.yang.longrubblishclear.util.Uitils: com.yang.longrubblishclear.util.APKInfo createApkInfo(android.content.pm.PackageManager,android.content.pm.PackageInfo,android.graphics.drawable.Drawable)>($r7, $r8, null);

        specialinvoke r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand initShellCommand()>();

        $r10 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        $z1 = virtualinvoke $r10.<com.yang.longrubblishclear.util.ShellCommand: boolean canSU()>();

     label03:
        if $z1 != 0 goto label07;

     label04:
        $r3 = $r9.<com.yang.longrubblishclear.util.APKInfo: java.lang.String packageName>;

        $r1 = staticinvoke <com.yang.longrubblishclear.util.Uitils: android.content.Intent getInstalledAppDetailsIntent(java.lang.String)>($r3);

        virtualinvoke r0.<com.yang.longrubblishclear.util.MoveService: void startActivity(android.content.Intent)>($r1);

     label05:
        return;

     label06:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

     label07:
        $r10 = r0.<com.yang.longrubblishclear.util.MoveService: com.yang.longrubblishclear.util.ShellCommand mShellCommand>;

        $r11 = $r10.<com.yang.longrubblishclear.util.ShellCommand: com.yang.longrubblishclear.util.ShellCommand$SH su>;

        $z1 = $r9.<com.yang.longrubblishclear.util.APKInfo: boolean onSDCard>;

     label08:
        if $z1 == 0 goto label15;

     label09:
        $r3 = $r9.<com.yang.longrubblishclear.util.APKInfo: java.lang.String sourceDir>;

        $r12 = $r9.<com.yang.longrubblishclear.util.APKInfo: java.lang.String packageName>;

        $r13 = virtualinvoke $r11.<com.yang.longrubblishclear.util.ShellCommand$SH: com.yang.longrubblishclear.util.ShellCommand$CommandResult moveTo(boolean,java.lang.String,java.lang.String)>($z0, $r3, $r12);

        $z0 = virtualinvoke $r13.<com.yang.longrubblishclear.util.ShellCommand$CommandResult: boolean success()>();

     label10:
        if $z0 == 0 goto label16;

     label11:
        $r4 = r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler>;

     label12:
        $r14 = new com.yang.longrubblishclear.util.MoveService$3;

     label13:
        specialinvoke $r14.<com.yang.longrubblishclear.util.MoveService$3: void <init>(com.yang.longrubblishclear.util.MoveService)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r14);

     label14:
        return;

     label15:
        $z0 = 1;

        goto label09;

     label16:
        $r4 = r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler>;

     label17:
        $r15 = new com.yang.longrubblishclear.util.MoveService$4;

     label18:
        specialinvoke $r15.<com.yang.longrubblishclear.util.MoveService$4: void <init>(com.yang.longrubblishclear.util.MoveService)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r15);

     label19:
        return;

     label20:
        if $i0 != 2 goto label21;

        $r16 = virtualinvoke $r1.<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>("obj");

        r17 = (com.yang.longrubblishclear.util.ClearHelper$ClearInfo) $r16;

        $l1 = virtualinvoke $r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("size", 0L);

        virtualinvoke r17.<com.yang.longrubblishclear.util.ClearHelper$ClearInfo: void deleteFiles()>();

        $r4 = r0.<com.yang.longrubblishclear.util.MoveService: android.os.Handler mUiHandler>;

        $r18 = new com.yang.longrubblishclear.util.MoveService$5;

        specialinvoke $r18.<com.yang.longrubblishclear.util.MoveService$5: void <init>(com.yang.longrubblishclear.util.MoveService,long)>(r0, $l1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r18);

     label21:
        return;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label06;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Exception from label11 to label12 with label06;
        catch java.lang.Exception from label13 to label14 with label06;
        catch java.lang.Exception from label16 to label17 with label06;
        catch java.lang.Exception from label18 to label19 with label06;
    }

    public static void <clinit>()
    {
        <com.yang.longrubblishclear.util.MoveService: java.lang.String EXTRA_SIZE> = "size";

        <com.yang.longrubblishclear.util.MoveService: java.lang.String EXTRA_PKG> = "pkg";

        <com.yang.longrubblishclear.util.MoveService: java.lang.String EXTRA_OBJ> = "obj";

        <com.yang.longrubblishclear.util.MoveService: java.lang.String EXTRA_NAME> = "name";

        <com.yang.longrubblishclear.util.MoveService: java.lang.String EXTRA_ACTION> = "action";

        <com.yang.longrubblishclear.util.MoveService: int ACTION_MOVE> = 1;

        <com.yang.longrubblishclear.util.MoveService: int ACTION_CLEAR> = 2;

        <com.yang.longrubblishclear.util.MoveService: int ACTION_ALERTDIALOG> = 0;

        return;
    }
}
