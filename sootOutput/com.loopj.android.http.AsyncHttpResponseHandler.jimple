public class com.loopj.android.http.AsyncHttpResponseHandler extends java.lang.Object
{
    protected static final int FAILURE_MESSAGE;
    protected static final int FINISH_MESSAGE;
    protected static final int START_MESSAGE;
    protected static final int SUCCESS_MESSAGE;
    private android.os.Handler handler;

    public void <init>()
    {
        com.loopj.android.http.AsyncHttpResponseHandler$1 $r2;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        android.os.Looper $r1;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r1 == null goto label1;

        $r2 = new com.loopj.android.http.AsyncHttpResponseHandler$1;

        specialinvoke $r2.<com.loopj.android.http.AsyncHttpResponseHandler$1: void <init>(com.loopj.android.http.AsyncHttpResponseHandler)>(r0);

        r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Handler handler> = $r2;

     label1:
        return;
    }

    protected void handleFailureMessage(java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable $r1;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onFailure(java.lang.Throwable,java.lang.String)>($r1, $r2);

        return;
    }

    protected void handleMessage(android.os.Message)
    {
        org.apache.http.Header[] $r5;
        java.lang.Throwable $r7;
        java.lang.Object[] r3;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.Integer $r4;
        android.os.Message $r1;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r6;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r2 = $r1.<android.os.Message: java.lang.Object obj>;

        r3 = (java.lang.Object[]) r2;

        r2 = r3[0];

        $r4 = (java.lang.Integer) r2;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r2 = r3[1];

        $r5 = (org.apache.http.Header[]) r2;

        r2 = r3[2];

        $r6 = (java.lang.String) r2;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void handleSuccessMessage(int,org.apache.http.Header[],java.lang.String)>($i0, $r5, $r6);

        return;

     label3:
        r2 = $r1.<android.os.Message: java.lang.Object obj>;

        r3 = (java.lang.Object[]) r2;

        r2 = r3[0];

        $r7 = (java.lang.Throwable) r2;

        r2 = r3[1];

        $r6 = (java.lang.String) r2;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void handleFailureMessage(java.lang.Throwable,java.lang.String)>($r7, $r6);

        return;

     label4:
        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onStart()>();

        return;

     label5:
        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onFinish()>();

        return;
    }

    protected void handleSuccessMessage(int, org.apache.http.Header[], java.lang.String)
    {
        org.apache.http.Header[] $r1;
        int $i0;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.http.Header[];

        $r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onSuccess(int,org.apache.http.Header[],java.lang.String)>($i0, $r1, $r2);

        return;
    }

    protected android.os.Message obtainMessage(int, java.lang.Object)
    {
        android.os.Message $r3;
        android.os.Handler $r2;
        int $i0;
        java.lang.Object $r1;
        com.loopj.android.http.AsyncHttpResponseHandler r0;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Handler handler>;

        if $r2 == null goto label1;

        $r2 = r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Handler handler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>($i0, $r1);

        return $r3;

     label1:
        $r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r3.<android.os.Message: int what> = $i0;

        $r3.<android.os.Message: java.lang.Object obj> = $r1;

        return $r3;
    }

    public void onFailure(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        com.loopj.android.http.AsyncHttpResponseHandler r0;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        return;
    }

    public void onFailure(java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable $r1;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onFailure(java.lang.Throwable)>($r1);

        return;
    }

    public void onFinish()
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        return;
    }

    public void onStart()
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        return;
    }

    public void onSuccess(int, java.lang.String)
    {
        int $i0;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r1;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onSuccess(java.lang.String)>($r1);

        return;
    }

    public void onSuccess(int, org.apache.http.Header[], java.lang.String)
    {
        org.apache.http.Header[] $r1;
        int $i0;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.http.Header[];

        $r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void onSuccess(int,java.lang.String)>($i0, $r2);

        return;
    }

    public void onSuccess(java.lang.String)
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r1;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.String;

        return;
    }

    protected void sendFailureMessage(java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable $r1;
        java.lang.Object[] $r4;
        android.os.Message $r3;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: java.lang.String;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = $r2;

        $r3 = virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r4);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    protected void sendFailureMessage(java.lang.Throwable, byte[])
    {
        java.lang.Throwable $r1;
        byte[] $r2;
        java.lang.Object[] $r4;
        android.os.Message $r3;
        com.loopj.android.http.AsyncHttpResponseHandler r0;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: java.lang.Throwable;

        $r2 := @parameter1: byte[];

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = null;

        $r3 = virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r4);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    protected void sendFinishMessage()
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        android.os.Message $r1;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 = virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, null);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendMessage(android.os.Message)>($r1);

        return;
    }

    protected void sendMessage(android.os.Message)
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        android.os.Message $r1;
        android.os.Handler $r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Handler handler>;

        if $r2 == null goto label1;

        $r2 = r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Handler handler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1);

        return;

     label1:
        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void handleMessage(android.os.Message)>($r1);

        return;
    }

    void sendResponseMessage(org.apache.http.HttpResponse)
    {
        java.lang.Throwable r8;
        org.apache.http.Header[] $r9;
        org.apache.http.HttpEntity $r5;
        org.apache.http.client.HttpResponseException $r7;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        org.apache.http.StatusLine $r3;
        int $i0;
        org.apache.http.HttpResponse $r1;
        java.lang.String r4, $r6;
        org.apache.http.entity.BufferedHttpEntity r2;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        $r3 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        r4 = null;

     label01:
        $r5 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label02:
        if $r5 == null goto label06;

        r2 = new org.apache.http.entity.BufferedHttpEntity;

     label03:
        specialinvoke r2.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>($r5);

     label04:
        $r6 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>(r2, "UTF-8");

     label05:
        r4 = $r6;

     label06:
        $i0 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 < 300 goto label09;

        $r7 = new org.apache.http.client.HttpResponseException;

        $i0 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        $r6 = interfaceinvoke $r3.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        specialinvoke $r7.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i0, $r6);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,java.lang.String)>($r7, r4);

        return;

     label07:
        r8 := @caughtexception;

     label08:
        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendFailureMessage(java.lang.Throwable,java.lang.String)>(r8, null);

        goto label06;

     label09:
        $i0 = interfaceinvoke $r3.<org.apache.http.StatusLine: int getStatusCode()>();

        $r9 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendSuccessMessage(int,org.apache.http.Header[],java.lang.String)>($i0, $r9, r4);

        return;

     label10:
        r8 := @caughtexception;

        goto label08;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label04 to label05 with label10;
    }

    protected void sendStartMessage()
    {
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        android.os.Message $r1;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $r1 = virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(2, null);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendMessage(android.os.Message)>($r1);

        return;
    }

    protected void sendSuccessMessage(int, org.apache.http.Header[], java.lang.String)
    {
        org.apache.http.Header[] $r1;
        java.lang.Object[] $r4;
        android.os.Message $r3;
        int $i0;
        com.loopj.android.http.AsyncHttpResponseHandler r0;
        java.lang.String $r2;
        java.lang.Integer $r5;

        r0 := @this: com.loopj.android.http.AsyncHttpResponseHandler;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.apache.http.Header[];

        $r2 := @parameter2: java.lang.String;

        $r4 = newarray (java.lang.Object)[3];

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i0);

        $r4[0] = $r5;

        $r4[1] = $r1;

        $r4[2] = $r2;

        $r3 = virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r4);

        virtualinvoke r0.<com.loopj.android.http.AsyncHttpResponseHandler: void sendMessage(android.os.Message)>($r3);

        return;
    }

    public static void <clinit>()
    {
        <com.loopj.android.http.AsyncHttpResponseHandler: int START_MESSAGE> = 2;

        <com.loopj.android.http.AsyncHttpResponseHandler: int FINISH_MESSAGE> = 3;

        <com.loopj.android.http.AsyncHttpResponseHandler: int FAILURE_MESSAGE> = 1;

        return;
    }
}
