public class com.kingroot.sdk.util.i extends java.lang.Object
{

    public static int Z(java.lang.String)
    {
        java.lang.Throwable $r2;
        long $l1;
        java.io.File $r1, $r6;
        java.lang.Exception $r5;
        int $i0;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r0, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r6 = new java.io.File;

        $r1 = $r6;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label9;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label9;

        $i0 = 3;

     label1:
        staticinvoke <java.lang.System: void load(java.lang.String)>($r0);

     label2:
        return 0;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("load ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fail. ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void a(java.lang.String,java.lang.Throwable)>($r4, $r2);

        staticinvoke <com.kingroot.sdk.util.i: void bk()>();

        $i0 = $i0 + -1;

        if $i0 > 0 goto label1;

     label4:
        $l1 = virtualinvoke $r1.<java.io.File: long length()>();

        $r0 = staticinvoke <com.kingroot.sdk.util.c: java.lang.String g(java.io.File)>($r1);

     label5:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label6:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("loadSo fail : length = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", md5 = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void i(java.lang.String)>($r0);

     label7:
        return -1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        goto label7;

     label9:
        return -2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.Class a(java.lang.String, java.lang.String, java.lang.String, java.lang.ClassLoader)
    {
        java.lang.Throwable $r6;
        int $i0;
        java.lang.Class $r5;
        java.lang.StringBuilder $r7, $r10;
        java.lang.String $r0, $r1, $r2, $r8;
        java.lang.ClassLoader $r3;
        dalvik.system.DexClassLoader $r4, $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.ClassLoader;

        $i0 = 3;

     label1:
        $r9 = new dalvik.system.DexClassLoader;

        $r4 = $r9;

        specialinvoke $r9.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r0, $r1, null, $r3);

     label2:
        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("load ");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fail. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void a(java.lang.String,java.lang.Throwable)>($r8, $r6);

        staticinvoke <com.kingroot.sdk.util.i: void bk()>();

        $i0 = $i0 + -1;

        if $i0 > 0 goto label1;

        return null;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void bk()
    {
        java.lang.Throwable $r0;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label2:
        return;

     label3:
        $r0 := @caughtexception;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static void f(long)
    {
        java.lang.Throwable $r0;
        long $l0;

        $l0 := @parameter0: long;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label2:
        return;

     label3:
        $r0 := @caughtexception;

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static boolean g(long)
    {
        java.lang.Throwable $r0;
        long $l0;

        $l0 := @parameter0: long;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label2:
        return 0;

     label3:
        $r0 := @caughtexception;

        return 1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
