public class org.kobjects.isodate.IsoDate extends java.lang.Object
{
    public static final int DATE;
    public static final int DATE_TIME;
    public static final int TIME;

    public void <init>()
    {
        org.kobjects.isodate.IsoDate r0;

        r0 := @this: org.kobjects.isodate.IsoDate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String dateToString(java.util.Date, int)
    {
        java.util.Date $r0;
        java.util.TimeZone $r3;
        char $c3;
        java.util.Calendar $r2;
        java.lang.StringBuffer r1;
        int $i0, $i1, $i2;
        java.lang.String $r4;

        $r0 := @parameter0: java.util.Date;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r3);

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $i2 = $i1 / 100;

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i2);

        $i1 = $i1 % 100;

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        $i1 = $i1 + 1;

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(5);

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(11);

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(12);

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(13);

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(14);

        $i1 = $i0 / 100;

        $i1 = $i1 + 48;

        $c3 = (char) $i1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i0 = $i0 % 100;

        staticinvoke <org.kobjects.isodate.IsoDate: void dd(java.lang.StringBuffer,int)>(r1, $i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(90);

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static void dd(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.StringBuffer;

        $i0 := @parameter1: int;

        $i1 = $i0 / 10;

        $i1 = $i1 + 48;

        $c2 = (char) $i1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $i0 = $i0 % 10;

        $i0 = $i0 + 48;

        $c2 = (char) $i0;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    public static java.util.Date stringToDate(java.lang.String, int)
    {
        java.util.Date $r3;
        java.util.TimeZone $r5;
        char $c2;
        java.lang.RuntimeException $r8;
        java.util.Calendar $r1;
        int $i0, $i1, i3, $i4;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, $i1);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(5, 7);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        $i1 = $i1 + -1;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(8, 10);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, $i1);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 11 goto label01;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);

        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;

     label01:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(11);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, $i0);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, $i0);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, $i0);

        $i0 = 8;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if 8 >= $i1 goto label08;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(8);

        $i1 = (int) $c2;

        if $i1 != 46 goto label08;

        $i1 = 0;

        i3 = 100;

     label02:
        $i0 = $i0 + 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i4 = (int) $c2;

        if $i4 < 48 goto label03;

        $i4 = (int) $c2;

        if $i4 <= 57 goto label07;

     label03:
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, $i1);

     label04:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label06;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 == 43 goto label05;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 45 goto label09;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r0);

        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r5);

     label06:
        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;

     label07:
        $i4 = (int) $c2;

        $i4 = $i4 + -48;

        $i4 = $i4 * i3;

        $i1 = $i1 + $i4;

        i3 = i3 / 10;

        goto label02;

     label08:
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);

        goto label04;

     label09:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        if $i0 != 90 goto label10;

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r5);

        goto label06;

     label10:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("illegal time format!");

        throw $r8;
    }

    public static void <clinit>()
    {
        <org.kobjects.isodate.IsoDate: int TIME> = 2;

        <org.kobjects.isodate.IsoDate: int DATE_TIME> = 3;

        <org.kobjects.isodate.IsoDate: int DATE> = 1;

        return;
    }
}
