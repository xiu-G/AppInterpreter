class net.youmi.android.aj extends java.lang.Object
{

    static void a(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        net.youmi.android.da $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new net.youmi.android.da;

        specialinvoke $r2.<net.youmi.android.da: void <init>(java.io.InputStream)>($r0);

        staticinvoke <net.youmi.android.aj: void b(java.io.InputStream,java.io.OutputStream)>($r2, $r1);

        return;
    }

    static byte[] a(byte[])
    {
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8, $r9;
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.RuntimeException $r2;
        java.io.ByteArrayInputStream $r3;

        $r0 := @parameter0: byte[];

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        staticinvoke <net.youmi.android.aj: void a(java.io.InputStream,java.io.OutputStream)>($r3, $r1);

     label02:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label03:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label04:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label05:
        $r4 := @caughtexception;

     label06:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected I/O error", $r4);

        throw $r2;

     label07:
        $r5 := @caughtexception;

     label08:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label09:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label10:
        throw $r5;

     label11:
        $r6 := @caughtexception;

        goto label09;

     label12:
        $r7 := @caughtexception;

        goto label10;

     label13:
        $r8 := @caughtexception;

        goto label03;

     label14:
        $r9 := @caughtexception;

        goto label04;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label07;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label12;
    }

    private static void b(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 != -1 goto label2;

        return;

     label2:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;
    }
}
