public final class com.facebook.model.GraphObject$Factory extends java.lang.Object
{
    private static final java.text.SimpleDateFormat[] dateFormats;
    private static final java.util.HashSet verifiedGraphObjectClasses;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Locale $r3;
        java.text.SimpleDateFormat $r2;
        java.text.SimpleDateFormat[] $r1;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.facebook.model.GraphObject$Factory: java.util.HashSet verifiedGraphObjectClasses> = $r0;

        $r1 = newarray (java.text.SimpleDateFormat)[3];

        $r2 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ssZ", $r3);

        $r1[0] = $r2;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd\'T\'HH:mm:ss", $r3);

        $r1[1] = $r2;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd", $r3);

        $r1[2] = $r2;

        <com.facebook.model.GraphObject$Factory: java.text.SimpleDateFormat[] dateFormats> = $r1;

        return;
    }

    private void <init>()
    {
        com.facebook.model.GraphObject$Factory r0;

        r0 := @this: com.facebook.model.GraphObject$Factory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.facebook.model.GraphObject access$0(java.lang.Class, org.json.JSONObject)
    {
        com.facebook.model.GraphObject $r2;
        java.lang.Class $r0;
        org.json.JSONObject $r1;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject)>($r0, $r1);

        return $r2;
    }

    static java.util.Map access$1(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.util.Map $r1;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = staticinvoke <com.facebook.model.GraphObject$Factory: java.util.Map createGraphObjectProxyForMap(org.json.JSONObject)>($r0);

        return $r1;
    }

    static java.lang.Object access$2(java.lang.Object)
    {
        java.lang.Object $r0;

        $r0 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <com.facebook.model.GraphObject$Factory: java.lang.Object getUnderlyingJSONObject(java.lang.Object)>($r0);

        return $r0;
    }

    static java.lang.Object coerceValueToExpectedType(java.lang.Object, java.lang.Class, java.lang.reflect.ParameterizedType)
    {
        java.lang.Throwable $r21;
        java.lang.Object[] $r18;
        java.util.Date $r20;
        com.facebook.model.GraphObject $r10;
        java.text.SimpleDateFormat $r2;
        java.lang.Integer $r7;
        org.json.JSONObject $r9;
        java.lang.Character $r6;
        int $i0, $i1;
        java.lang.Boolean $r5;
        java.lang.String $r13;
        boolean $z0;
        java.lang.reflect.ParameterizedType $r1;
        java.lang.Class $r0, $r4, $r8;
        java.lang.Object $r3;
        com.facebook.FacebookGraphObjectException $r11;
        java.lang.StringBuilder $r12;
        java.text.SimpleDateFormat[] $r19;

        $r3 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Class;

        $r1 := @parameter2: java.lang.reflect.ParameterizedType;

        if $r3 != null goto label04;

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label01;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r5;

     label01:
        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0);

        return $r6;

     label02:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label03;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r7;

     label03:
        return null;

     label04:
        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label20;

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label20;

        $r8 = class "Lcom/facebook/model/GraphObject;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r0);

        if $z0 == 0 goto label07;

        $r8 = class "Lorg/json/JSONObject;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label05;

        $r9 = (org.json.JSONObject) $r3;

        $r10 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject)>($r0, $r9);

        return $r10;

     label05:
        $r8 = class "Lcom/facebook/model/GraphObject;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label06;

        $r10 = (com.facebook.model.GraphObject) $r3;

        $r10 = interfaceinvoke $r10.<com.facebook.model.GraphObject: com.facebook.model.GraphObject cast(java.lang.Class)>($r0);

        return $r10;

     label06:
        $r11 = new com.facebook.FacebookGraphObjectException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t create GraphObject from ");

        $r13 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.facebook.FacebookGraphObjectException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label07:
        $r8 = class "Ljava/lang/Iterable;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label08;

        $r8 = class "Ljava/util/Collection;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label08;

        $r8 = class "Ljava/util/List;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label08;

        $r8 = class "Lcom/facebook/model/GraphObjectList;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label09;

     label08:
        $r11 = new com.facebook.FacebookGraphObjectException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("can\'t infer generic type of: ");

        $r13 = virtualinvoke $r0.<java.lang.Class: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.facebook.FacebookGraphObjectException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label09:
        $r8 = class "Ljava/lang/String;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label12;

        $r8 = class "Ljava/lang/Double;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label10;

        $r8 = class "Ljava/lang/Float;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label11;

     label10:
        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r3;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%f", $r18);

        return $r13;

     label11:
        $r8 = class "Ljava/lang/Number;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label14;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r3;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r18);

        return $r13;

     label12:
        $r8 = class "Ljava/util/Date;";

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label14;

        $r8 = class "Ljava/lang/String;";

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 == 0 goto label14;

        $r19 = <com.facebook.model.GraphObject$Factory: java.text.SimpleDateFormat[] dateFormats>;

        $i0 = lengthof $r19;

        $i1 = 0;

     label13:
        if $i1 < $i0 goto label15;

     label14:
        $r11 = new com.facebook.FacebookGraphObjectException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t convert type");

        $r13 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r13 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.facebook.FacebookGraphObjectException: void <init>(java.lang.String)>($r13);

        throw $r11;

     label15:
        $r2 = $r19[$i1];

        $r13 = (java.lang.String) $r3;

     label16:
        $r20 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r13);

     label17:
        if $r20 == null goto label19;

        return $r20;

     label18:
        $r21 := @caughtexception;

     label19:
        $i1 = $i1 + 1;

        goto label13;

     label20:
        return $r3;

        catch java.text.ParseException from label16 to label17 with label18;
    }

    static java.lang.String convertCamelCaseToLowercaseWithUnderscores(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Locale $r1;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("([a-z])([A-Z])", "$1_$2");

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        return $r0;
    }

    public static com.facebook.model.GraphObject create()
    {
        com.facebook.model.GraphObject $r0;

        $r0 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject create(java.lang.Class)>(class "Lcom/facebook/model/GraphObject;");

        return $r0;
    }

    public static com.facebook.model.GraphObject create(java.lang.Class)
    {
        com.facebook.model.GraphObject $r1;
        java.lang.Class $r0;
        org.json.JSONObject $r2;

        $r0 := @parameter0: java.lang.Class;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r1 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject)>($r0, $r2);

        return $r1;
    }

    public static com.facebook.model.GraphObject create(org.json.JSONObject)
    {
        com.facebook.model.GraphObject $r1;
        org.json.JSONObject $r0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject create(org.json.JSONObject,java.lang.Class)>($r0, class "Lcom/facebook/model/GraphObject;");

        return $r1;
    }

    public static com.facebook.model.GraphObject create(org.json.JSONObject, java.lang.Class)
    {
        com.facebook.model.GraphObject $r2;
        java.lang.Class $r1;
        org.json.JSONObject $r0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class,org.json.JSONObject)>($r1, $r0);

        return $r2;
    }

    private static com.facebook.model.GraphObject createGraphObjectProxy(java.lang.Class, org.json.JSONObject)
    {
        org.json.JSONObject $r1;
        com.facebook.model.GraphObject$Factory$GraphObjectProxy $r3;
        com.facebook.model.GraphObject $r6;
        java.lang.Class[] $r2;
        java.lang.Class $r0;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.json.JSONObject;

        staticinvoke <com.facebook.model.GraphObject$Factory: void verifyCanProxyClass(java.lang.Class)>($r0);

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = $r0;

        $r3 = new com.facebook.model.GraphObject$Factory$GraphObjectProxy;

        specialinvoke $r3.<com.facebook.model.GraphObject$Factory$GraphObjectProxy: void <init>(org.json.JSONObject,java.lang.Class)>($r1, $r0);

        $r0 = class "Lcom/facebook/model/GraphObject;";

        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r4, $r2, $r3);

        $r6 = (com.facebook.model.GraphObject) $r5;

        return $r6;
    }

    private static java.util.Map createGraphObjectProxyForMap(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        com.facebook.model.GraphObject$Factory$GraphObjectProxy $r1;
        java.util.Map $r6;
        java.lang.Class[] $r2;
        java.lang.Class $r3;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4;

        $r0 := @parameter0: org.json.JSONObject;

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Ljava/util/Map;";

        $r1 = new com.facebook.model.GraphObject$Factory$GraphObjectProxy;

        specialinvoke $r1.<com.facebook.model.GraphObject$Factory$GraphObjectProxy: void <init>(org.json.JSONObject,java.lang.Class)>($r0, class "Ljava/util/Map;");

        $r3 = class "Lcom/facebook/model/GraphObject;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r4, $r2, $r1);

        $r6 = (java.util.Map) $r5;

        return $r6;
    }

    public static com.facebook.model.GraphObjectList createList(java.lang.Class)
    {
        com.facebook.model.GraphObjectList $r1;
        java.lang.Class $r0;
        org.json.JSONArray $r2;

        $r0 := @parameter0: java.lang.Class;

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        $r1 = staticinvoke <com.facebook.model.GraphObject$Factory: com.facebook.model.GraphObjectList createList(org.json.JSONArray,java.lang.Class)>($r2, $r0);

        return $r1;
    }

    public static com.facebook.model.GraphObjectList createList(org.json.JSONArray, java.lang.Class)
    {
        java.lang.Class $r1;
        com.facebook.model.GraphObject$Factory$GraphObjectListImpl $r2;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 := @parameter1: java.lang.Class;

        $r2 = new com.facebook.model.GraphObject$Factory$GraphObjectListImpl;

        specialinvoke $r2.<com.facebook.model.GraphObject$Factory$GraphObjectListImpl: void <init>(org.json.JSONArray,java.lang.Class)>($r0, $r1);

        return $r2;
    }

    private static java.lang.Object getUnderlyingJSONObject(java.lang.Object)
    {
        java.util.Iterator $r8;
        com.facebook.model.GraphObject $r3;
        java.lang.Iterable $r7;
        com.facebook.model.GraphObjectList $r5;
        org.json.JSONObject $r4;
        java.lang.Object $r0;
        java.lang.Class $r1, $r2;
        org.json.JSONArray $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = class "Lcom/facebook/model/GraphObject;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label2;

        $r3 = (com.facebook.model.GraphObject) $r0;

        $r4 = interfaceinvoke $r3.<com.facebook.model.GraphObject: org.json.JSONObject getInnerJSONObject()>();

        return $r4;

     label2:
        $r2 = class "Lcom/facebook/model/GraphObjectList;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label3;

        $r5 = (com.facebook.model.GraphObjectList) $r0;

        $r6 = interfaceinvoke $r5.<com.facebook.model.GraphObjectList: org.json.JSONArray getInnerJSONArray()>();

        return $r6;

     label3:
        $r2 = class "Ljava/lang/Iterable;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 == 0 goto label7;

        $r6 = new org.json.JSONArray;

        specialinvoke $r6.<org.json.JSONArray: void <init>()>();

        $r7 = (java.lang.Iterable) $r0;

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

        return $r6;

     label5:
        $r0 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r1 = class "Lcom/facebook/model/GraphObject;";

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label6;

        $r3 = (com.facebook.model.GraphObject) $r0;

        $r4 = interfaceinvoke $r3.<com.facebook.model.GraphObject: org.json.JSONObject getInnerJSONObject()>();

        virtualinvoke $r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r4);

        goto label4;

     label6:
        virtualinvoke $r6.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r0);

        goto label4;

     label7:
        return $r0;
    }

    private static boolean hasClassBeenVerified(java.lang.Class)
    {
        java.util.HashSet $r1;
        java.lang.Throwable $r2;
        java.lang.Class $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.Class;

        entermonitor class "Lcom/facebook/model/GraphObject$Factory;";

     label1:
        $r1 = <com.facebook.model.GraphObject$Factory: java.util.HashSet verifiedGraphObjectClasses>;

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r0);

     label2:
        exitmonitor class "Lcom/facebook/model/GraphObject$Factory;";

        return $z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/facebook/model/GraphObject$Factory;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean hasSameId(com.facebook.model.GraphObject, com.facebook.model.GraphObject)
    {
        java.util.Map $r2;
        com.facebook.model.GraphObject $r0, $r1;
        java.lang.Object $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: com.facebook.model.GraphObject;

        $r1 := @parameter1: com.facebook.model.GraphObject;

        if $r0 == null goto label3;

        if $r1 == null goto label3;

        $r2 = interfaceinvoke $r0.<com.facebook.model.GraphObject: java.util.Map asMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("id");

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<com.facebook.model.GraphObject: java.util.Map asMap()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("id");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r3 = interfaceinvoke $r0.<com.facebook.model.GraphObject: java.lang.Object getProperty(java.lang.String)>("id");

        $r4 = interfaceinvoke $r1.<com.facebook.model.GraphObject: java.lang.Object getProperty(java.lang.String)>("id");

        if $r3 == null goto label3;

        if $r4 == null goto label3;

        $z0 = $r3 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $z0 = $r4 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z0;

     label3:
        return 0;
    }

    private static void recordClassHasBeenVerified(java.lang.Class)
    {
        java.util.HashSet $r1;
        java.lang.Throwable $r2;
        java.lang.Class $r0;

        $r0 := @parameter0: java.lang.Class;

        entermonitor class "Lcom/facebook/model/GraphObject$Factory;";

     label1:
        $r1 = <com.facebook.model.GraphObject$Factory: java.util.HashSet verifiedGraphObjectClasses>;

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>($r0);

     label2:
        exitmonitor class "Lcom/facebook/model/GraphObject$Factory;";

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor class "Lcom/facebook/model/GraphObject$Factory;";

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static void verifyCanProxyClass(java.lang.Class)
    {
        java.lang.reflect.Method[] $r5;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        java.lang.reflect.Method $r1;
        boolean $z0, $z1;
        com.facebook.model.PropertyName $r10;
        java.lang.Class[] $r6;
        java.lang.'annotation'.Annotation $r9;
        java.lang.Class $r0, $r7, $r8;
        com.facebook.FacebookGraphObjectException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <com.facebook.model.GraphObject$Factory: boolean hasClassBeenVerified(java.lang.Class)>($r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label2;

        $r2 = new com.facebook.FacebookGraphObjectException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Factory can only wrap interfaces, not class: ");

        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.facebook.FacebookGraphObjectException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i0 = lengthof $r5;

        $i1 = 0;

     label3:
        if $i1 < $i0 goto label4;

        staticinvoke <com.facebook.model.GraphObject$Factory: void recordClassHasBeenVerified(java.lang.Class)>($r0);

        return;

     label4:
        $r1 = $r5[$i1];

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r6;

        $r7 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z0 = virtualinvoke $r1.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/facebook/model/PropertyName;");

        $r8 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z1 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Lcom/facebook/model/GraphObject;");

        if $z1 != 0 goto label5;

        if $i2 != 1 goto label8;

        $r8 = <java.lang.Void: java.lang.Class TYPE>;

        if $r7 != $r8 goto label8;

        if $z0 == 0 goto label6;

        $r9 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/facebook/model/PropertyName;");

        $r10 = (com.facebook.model.PropertyName) $r9;

        $r4 = interfaceinvoke $r10.<com.facebook.model.PropertyName: java.lang.String value()>();

        $z0 = staticinvoke <com.facebook.internal.Utility: boolean isNullOrEmpty(java.lang.String)>($r4);

        if $z0 != 0 goto label7;

     label5:
        $i1 = $i1 + 1;

        goto label3;

     label6:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("set");

        if $z0 == 0 goto label7;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 > 3 goto label5;

     label7:
        $r2 = new com.facebook.FacebookGraphObjectException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Factory can\'t proxy method: ");

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.facebook.FacebookGraphObjectException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label8:
        if $i2 != 0 goto label7;

        $r8 = <java.lang.Void: java.lang.Class TYPE>;

        if $r7 == $r8 goto label7;

        if $z0 == 0 goto label9;

        $r9 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/facebook/model/PropertyName;");

        $r10 = (com.facebook.model.PropertyName) $r9;

        $r4 = interfaceinvoke $r10.<com.facebook.model.PropertyName: java.lang.String value()>();

        $z0 = staticinvoke <com.facebook.internal.Utility: boolean isNullOrEmpty(java.lang.String)>($r4);

        if $z0 != 0 goto label7;

        goto label5;

     label9:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z0 == 0 goto label7;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 > 3 goto label5;

        goto label7;
    }
}
