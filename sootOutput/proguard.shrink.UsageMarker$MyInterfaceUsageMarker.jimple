class proguard.shrink.UsageMarker$MyInterfaceUsageMarker extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private final proguard.shrink.UsageMarker this$0;

    private void <init>(proguard.shrink.UsageMarker)
    {
        proguard.shrink.UsageMarker$MyInterfaceUsageMarker r0;
        proguard.shrink.UsageMarker $r1;

        r0 := @this: proguard.shrink.UsageMarker$MyInterfaceUsageMarker;

        $r1 := @parameter0: proguard.shrink.UsageMarker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.shrink.UsageMarker$MyInterfaceUsageMarker: proguard.shrink.UsageMarker this$0> = $r1;

        return;
    }

    void <init>(proguard.shrink.UsageMarker, proguard.shrink.UsageMarker$1)
    {
        proguard.shrink.UsageMarker$1 $r2;
        proguard.shrink.UsageMarker$MyInterfaceUsageMarker r0;
        proguard.shrink.UsageMarker $r1;

        r0 := @this: proguard.shrink.UsageMarker$MyInterfaceUsageMarker;

        $r1 := @parameter0: proguard.shrink.UsageMarker;

        $r2 := @parameter1: proguard.shrink.UsageMarker$1;

        specialinvoke r0.<proguard.shrink.UsageMarker$MyInterfaceUsageMarker: void <init>(proguard.shrink.UsageMarker)>($r1);

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.shrink.UsageMarker$MyInterfaceUsageMarker r0;
        proguard.classfile.LibraryClass $r1;
        proguard.shrink.UsageMarker $r2;

        r0 := @this: proguard.shrink.UsageMarker$MyInterfaceUsageMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.shrink.UsageMarker$MyInterfaceUsageMarker: proguard.shrink.UsageMarker this$0>;

        virtualinvoke $r2.<proguard.shrink.UsageMarker: void visitLibraryClass(proguard.classfile.LibraryClass)>($r1);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.shrink.UsageMarker $r2;
        proguard.shrink.UsageMarker$MyInterfaceUsageMarker r0;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.UsageMarker$MyInterfaceUsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.shrink.UsageMarker$MyInterfaceUsageMarker: proguard.shrink.UsageMarker this$0>;

        $z0 = virtualinvoke $r2.<proguard.shrink.UsageMarker: boolean shouldBeMarkedAsPossiblyUsed(proguard.classfile.VisitorAccepter)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<proguard.shrink.UsageMarker$MyInterfaceUsageMarker: proguard.shrink.UsageMarker this$0>;

        virtualinvoke $r2.<proguard.shrink.UsageMarker: void markAsPossiblyUsed(proguard.classfile.VisitorAccepter)>($r1);

     label1:
        return;
    }
}
