class com.mobclix.android.sdk.Base64$1 extends java.io.ObjectInputStream
{
    private final java.lang.ClassLoader val$loader;

    void <init>(java.io.InputStream, java.lang.ClassLoader) throws java.io.StreamCorruptedException, java.io.IOException
    {
        java.lang.ClassLoader $r2;
        com.mobclix.android.sdk.Base64$1 r0;
        java.io.InputStream $r1;

        r0 := @this: com.mobclix.android.sdk.Base64$1;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.ClassLoader;

        r0.<com.mobclix.android.sdk.Base64$1: java.lang.ClassLoader val$loader> = $r2;

        specialinvoke r0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectStreamClass $r1;
        java.lang.Class $r4;
        java.lang.ClassLoader $r2;
        java.lang.String $r3;
        com.mobclix.android.sdk.Base64$1 r0;

        r0 := @this: com.mobclix.android.sdk.Base64$1;

        $r1 := @parameter0: java.io.ObjectStreamClass;

        $r3 = virtualinvoke $r1.<java.io.ObjectStreamClass: java.lang.String getName()>();

        $r2 = r0.<com.mobclix.android.sdk.Base64$1: java.lang.ClassLoader val$loader>;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r3, 0, $r2);

        if $r4 != null goto label1;

        $r4 = specialinvoke r0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>($r1);

     label1:
        return $r4;
    }
}
