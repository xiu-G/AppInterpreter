public final class twitter4j.http.OAuthAuthorization extends java.lang.Object implements twitter4j.http.Authorization, java.io.Serializable, twitter4j.http.OAuthSupport
{
    private static final java.lang.String HMAC_SHA1;
    private static final twitter4j.http.HttpParameter OAUTH_SIGNATURE_METHOD;
    private static java.util.Random RAND;
    private static transient twitter4j.http.HttpClientWrapper http;
    private static final twitter4j.logging.Logger logger;
    static final long serialVersionUID;
    private final twitter4j.conf.Configuration conf;
    private java.lang.String consumerKey;
    private java.lang.String consumerSecret;
    private twitter4j.http.OAuthToken oauthToken;

    static void <clinit>()
    {
        twitter4j.logging.Logger $r0;
        java.util.Random $r2;
        twitter4j.http.HttpParameter $r1;

        <twitter4j.http.OAuthAuthorization: long serialVersionUID> = -4368426677157998618L;

        <twitter4j.http.OAuthAuthorization: java.lang.String HMAC_SHA1> = "HmacSHA1";

        $r1 = new twitter4j.http.HttpParameter;

        specialinvoke $r1.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_signature_method", "HMAC-SHA1");

        <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpParameter OAUTH_SIGNATURE_METHOD> = $r1;

        $r0 = staticinvoke <twitter4j.logging.Logger: twitter4j.logging.Logger getLogger()>();

        <twitter4j.http.OAuthAuthorization: twitter4j.logging.Logger logger> = $r0;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        <twitter4j.http.OAuthAuthorization: java.util.Random RAND> = $r2;

        return;
    }

    public void <init>(twitter4j.conf.Configuration, java.lang.String, java.lang.String)
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey> = "";

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = null;

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf> = $r1;

        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    public void <init>(twitter4j.conf.Configuration, java.lang.String, java.lang.String, twitter4j.http.AccessToken)
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r4;
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: twitter4j.http.AccessToken;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey> = "";

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = null;

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf> = $r1;

        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String,twitter4j.http.AccessToken)>($r2, $r3, $r4);

        return;
    }

    public static java.lang.String constructRequestURL(java.lang.String)
    {
        java.lang.StringBuffer $r3, $r4;
        int $i0, $i1;
        java.lang.String $r0, $r1, r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("?");

        if -1 == $i0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("/", 8);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        r2 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>(":", 8);

        if -1 == $i1 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(":80");

        if $z0 == 0 goto label3;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(":443");

        if $z0 == 0 goto label2;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label2;
    }

    public static java.lang.String encode(java.lang.String)
    {
        java.lang.Throwable $r3;
        char $c2, $c4;
        java.lang.StringBuffer r1, $r4;
        int $i0, $i1, $i3;
        java.lang.String $r0, r2;

        $r0 := @parameter0: java.lang.String;

        r2 = null;

     label01:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label02:
        r2 = $r0;

     label03:
        $r4 = new java.lang.StringBuffer;

        r1 = $r4;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label04:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label09;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i0);

        $i1 = (int) $c2;

        if $i1 != 42 goto label06;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%2A");

     label05:
        $i0 = $i0 + 1;

        goto label04;

     label06:
        $i1 = (int) $c2;

        if $i1 != 43 goto label07;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%20");

        goto label05;

     label07:
        $i1 = (int) $c2;

        if $i1 != 37 goto label08;

        $i1 = $i0 + 1;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 >= $i3 goto label08;

        $i1 = $i0 + 1;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c4;

        if $i1 != 55 goto label08;

        $i1 = $i0 + 2;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c4;

        if $i1 != 69 goto label08;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(126);

        $i0 = $i0 + 2;

        goto label05;

     label08:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label05;

     label09:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label10:
        $r3 := @caughtexception;

        goto label03;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
    }

    public static java.lang.String encodeParameters(java.util.List)
    {
        java.util.List r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encodeParameters(java.util.List,java.lang.String,boolean)>(r0, "&", 0);

        return $r1;
    }

    public static java.lang.String encodeParameters(java.util.List, java.lang.String, boolean)
    {
        java.util.Iterator $r3;
        twitter4j.http.HttpParameter r5;
        java.util.List r0;
        java.lang.StringBuffer r2, $r7;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (twitter4j.http.HttpParameter) $r4;

        $z1 = virtualinvoke r5.<twitter4j.http.HttpParameter: boolean isFile()>();

        if $z1 != 0 goto label1;

        $i0 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if $i0 == 0 goto label3;

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label3:
        $r6 = virtualinvoke r5.<twitter4j.http.HttpParameter: java.lang.String getName()>();

        $r6 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r6);

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        if $z0 == 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

     label4:
        $r6 = virtualinvoke r5.<twitter4j.http.HttpParameter: java.lang.String getValue()>();

        $r6 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r6);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label1;

     label5:
        $i0 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if $i0 == 0 goto label6;

        if $z0 == 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

     label6:
        $r1 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private void init(java.lang.String, java.lang.String)
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r2;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new twitter4j.http.HttpClientWrapper;

        $r4 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf>;

        specialinvoke $r3.<twitter4j.http.HttpClientWrapper: void <init>(twitter4j.http.HttpClientWrapperConfiguration)>($r4);

        <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpClientWrapper http> = $r3;

        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void setConsumerKey(java.lang.String)>($r1);

        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void setConsumerSecret(java.lang.String)>($r2);

        return;
    }

    private void init(java.lang.String, java.lang.String, twitter4j.http.AccessToken)
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r3;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.http.AccessToken;

        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke r0.<twitter4j.http.OAuthAuthorization: void setOAuthAccessToken(twitter4j.http.AccessToken)>($r3);

        return;
    }

    public static java.lang.String normalizeAuthorizationHeaders(java.util.List)
    {
        java.util.List r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r0);

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encodeParameters(java.util.List)>(r0);

        return $r1;
    }

    public static java.lang.String normalizeRequestParameters(java.util.List)
    {
        java.util.List r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.List;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r0);

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encodeParameters(java.util.List)>(r0);

        return $r1;
    }

    public static java.lang.String normalizeRequestParameters(twitter4j.http.HttpParameter[])
    {
        twitter4j.http.HttpParameter[] $r0;
        java.util.List $r1;
        java.lang.String $r2;

        $r0 := @parameter0: twitter4j.http.HttpParameter[];

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.util.List toParamList(twitter4j.http.HttpParameter[])>($r0);

        $r2 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String normalizeRequestParameters(java.util.List)>($r1);

        return $r2;
    }

    private void parseGetParameters(java.lang.String, java.util.List)
    {
        java.lang.Throwable $r7;
        java.lang.String[] $r3, $r4;
        twitter4j.http.HttpParameter $r5, $r8;
        twitter4j.http.OAuthAuthorization r0;
        java.util.List r2;
        int i0, i1, $i2;
        java.lang.String $r1, $r6;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("?");

        if -1 == i0 goto label12;

        i0 = i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");

        i0 = lengthof $r3;

        i1 = 0;

     label01:
        if i1 >= i0 goto label12;

        $r1 = $r3[i1];

     label02:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

     label03:
        $i2 = lengthof $r4;

        if $i2 != 2 goto label08;

        $r8 = new twitter4j.http.HttpParameter;

        $r5 = $r8;

        $r1 = $r4[0];

     label04:
        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r1, "UTF-8");

     label05:
        $r6 = $r4[1];

     label06:
        $r6 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r1, $r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        $r8 = new twitter4j.http.HttpParameter;

        $r5 = $r8;

        $r1 = $r4[0];

     label09:
        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r1, "");

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

     label12:
        return;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label11;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label11;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    private void setConsumerKey(java.lang.String)
    {
        twitter4j.http.OAuthAuthorization r0;
        java.lang.String r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

     label1:
        r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey> = r1;

        return;

     label2:
        r1 = "";

        goto label1;
    }

    private void setConsumerSecret(java.lang.String)
    {
        twitter4j.http.OAuthAuthorization r0;
        java.lang.String r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

     label1:
        r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret> = r1;

        return;

     label2:
        r1 = "";

        goto label1;
    }

    public static java.util.List toParamList(twitter4j.http.HttpParameter[])
    {
        java.util.List $r2;
        twitter4j.http.HttpParameter[] $r0;
        int $i0;
        java.util.ArrayList r1;

        $r0 := @parameter0: twitter4j.http.HttpParameter[];

        r1 = new java.util.ArrayList;

        $i0 = lengthof $r0;

        specialinvoke r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        interfaceinvoke r1.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.http.OAuthToken $r5, $r6;
        twitter4j.http.OAuthAuthorization r0, r2;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof twitter4j.http.OAuthSupport;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (twitter4j.http.OAuthAuthorization) $r1;

        $r3 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        if $r3 == null goto label04;

        $r3 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        $r4 = r2.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label05;

     label03:
        return 0;

     label04:
        $r3 = r2.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        if $r3 != null goto label03;

     label05:
        $r3 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r3 == null goto label07;

        $r3 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        $r4 = r2.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label08;

     label06:
        return 0;

     label07:
        $r3 = r2.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r3 != null goto label06;

     label08:
        $r5 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        if $r5 == null goto label10;

        $r5 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r6 = r2.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $z0 = virtualinvoke $r5.<twitter4j.http.OAuthToken: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label11;

     label09:
        return 0;

     label10:
        $r5 = r2.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        if $r5 != null goto label09;

     label11:
        return 1;
    }

    java.lang.String generateAuthorizationHeader(java.lang.String, java.lang.String, twitter4j.http.HttpParameter[], java.lang.String, java.lang.String, twitter4j.http.OAuthToken)
    {
        twitter4j.http.HttpParameter $r9;
        java.util.ArrayList r6, r7;
        java.lang.StringBuffer $r12;
        int $i0, $i1;
        twitter4j.logging.Logger $r13;
        java.lang.String $r1, $r2, $r3, $r4, $r10;
        boolean $z0;
        twitter4j.http.OAuthToken $r5;
        twitter4j.http.OAuthAuthorization r0;
        java.util.List $r11;
        twitter4j.http.HttpParameter[] $r8;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r8 := @parameter2: twitter4j.http.HttpParameter[];

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: twitter4j.http.OAuthToken;

        if $r8 != null goto label1;

        $r8 = newarray (twitter4j.http.HttpParameter)[0];

     label1:
        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>(5);

        $r9 = new twitter4j.http.HttpParameter;

        $r10 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_consumer_key", $r10);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpParameter OAUTH_SIGNATURE_METHOD>;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_timestamp", $r4);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_nonce", $r3);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_version", "1.0");

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        if $r5 == null goto label2;

        $r9 = new twitter4j.http.HttpParameter;

        $r3 = virtualinvoke $r5.<twitter4j.http.OAuthToken: java.lang.String getToken()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_token", $r3);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

     label2:
        r7 = new java.util.ArrayList;

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $i1 = lengthof $r8;

        $i0 = $i0 + $i1;

        specialinvoke r7.<java.util.ArrayList: void <init>(int)>($i0);

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>(r6);

        $z0 = staticinvoke <twitter4j.http.HttpParameter: boolean containsFile(twitter4j.http.HttpParameter[])>($r8);

        if $z0 != 0 goto label3;

        $r11 = staticinvoke <twitter4j.http.OAuthAuthorization: java.util.List toParamList(twitter4j.http.HttpParameter[])>($r8);

        interfaceinvoke r7.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label3:
        specialinvoke r0.<twitter4j.http.OAuthAuthorization: void parseGetParameters(java.lang.String,java.util.List)>($r2, r7);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String constructRequestURL(java.lang.String)>($r2);

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String normalizeRequestParameters(java.util.List)>(r7);

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r1);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = <twitter4j.http.OAuthAuthorization: twitter4j.logging.Logger logger>;

        virtualinvoke $r13.<twitter4j.logging.Logger: void debug(java.lang.String,java.lang.String)>("OAuth base string: ", $r1);

        $r1 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,twitter4j.http.OAuthToken)>($r1, $r5);

        $r13 = <twitter4j.http.OAuthAuthorization: twitter4j.logging.Logger logger>;

        virtualinvoke $r13.<twitter4j.logging.Logger: void debug(java.lang.String,java.lang.String)>("OAuth signature: ", $r1);

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_signature", $r1);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("OAuth ");

        $r1 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encodeParameters(java.util.List,java.lang.String,boolean)>(r6, ",", 1);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    java.lang.String generateAuthorizationHeader(java.lang.String, java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.OAuthToken)
    {
        twitter4j.http.OAuthToken $r4;
        long l0, l1;
        java.util.Random $r5;
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.HttpParameter[] $r3;
        int $i2;
        java.lang.String $r1, $r2, $r6, $r7;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.http.HttpParameter[];

        $r4 := @parameter3: twitter4j.http.OAuthToken;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l1 / 1000L;

        $r5 = <twitter4j.http.OAuthAuthorization: java.util.Random RAND>;

        $i2 = virtualinvoke $r5.<java.util.Random: int nextInt()>();

        l0 = (long) $i2;

        l0 = l1 + l0;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1);

        $r1 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.http.HttpParameter[],java.lang.String,java.lang.String,twitter4j.http.OAuthToken)>($r1, $r2, $r3, $r6, $r7, $r4);

        return $r1;
    }

    java.lang.String generateSignature(java.lang.String)
    {
        twitter4j.http.OAuthAuthorization r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,twitter4j.http.OAuthToken)>($r1, null);

        return $r1;
    }

    java.lang.String generateSignature(java.lang.String, twitter4j.http.OAuthToken)
    {
        java.lang.Throwable r3, $r11;
        byte[] r4, $r9;
        twitter4j.http.OAuthToken $r2;
        javax.crypto.Mac $r5;
        javax.crypto.spec.SecretKeySpec r8, $r10;
        twitter4j.http.OAuthAuthorization r0;
        java.lang.StringBuffer $r6, $r12;
        java.security.InvalidKeyException $r13;
        java.lang.String $r1, $r7;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.OAuthToken;

        r4 = null;

     label01:
        $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

     label02:
        if $r2 != null goto label11;

        $r12 = new java.lang.StringBuffer;

        $r6 = $r12;

     label03:
        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

     label04:
        $r7 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

     label05:
        $r7 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        $r10 = new javax.crypto.spec.SecretKeySpec;

        r8 = $r10;

     label07:
        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, "HmacSHA1");

     label08:
        virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>(r8);

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r9 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r9);

     label09:
        r4 = $r9;

     label10:
        $r1 = staticinvoke <twitter4j.http.BASE64Encoder: java.lang.String encode(byte[])>(r4);

        return $r1;

     label11:
        $r10 = virtualinvoke $r2.<twitter4j.http.OAuthToken: javax.crypto.spec.SecretKeySpec getSecretKeySpec()>();

     label12:
        r8 = $r10;

        if $r10 != null goto label08;

        $r12 = new java.lang.StringBuffer;

        $r6 = $r12;

     label13:
        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

     label14:
        $r7 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

     label15:
        $r7 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r7 = virtualinvoke $r2.<twitter4j.http.OAuthToken: java.lang.String getTokenSecret()>();

        $r7 = staticinvoke <twitter4j.http.OAuthAuthorization: java.lang.String encode(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label16:
        $r10 = new javax.crypto.spec.SecretKeySpec;

        r8 = $r10;

     label17:
        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, "HmacSHA1");

        virtualinvoke $r2.<twitter4j.http.OAuthToken: void setSecretKeySpec(javax.crypto.spec.SecretKeySpec)>(r8);

     label18:
        goto label08;

     label19:
        r3 := @caughtexception;

        $r13 = (java.security.InvalidKeyException) r3;

        virtualinvoke $r13.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label10;

     label20:
        $r11 := @caughtexception;

        goto label10;

        catch java.security.InvalidKeyException from label01 to label02 with label19;
        catch java.security.InvalidKeyException from label03 to label04 with label19;
        catch java.security.InvalidKeyException from label05 to label06 with label19;
        catch java.security.InvalidKeyException from label07 to label09 with label19;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label20;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label20;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label20;
        catch java.security.NoSuchAlgorithmException from label07 to label09 with label20;
        catch java.security.InvalidKeyException from label11 to label12 with label19;
        catch java.security.InvalidKeyException from label13 to label14 with label19;
        catch java.security.InvalidKeyException from label15 to label16 with label19;
        catch java.security.InvalidKeyException from label17 to label18 with label19;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label20;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label20;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label20;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label20;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken() throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthToken $r7;
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        int $i0;
        twitter4j.TwitterException r1, $r8;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r2 = new twitter4j.http.AccessToken;

        $r3 = <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpClientWrapper http>;

        $r4 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf>;

     label1:
        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenURL()>();

        $r6 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, r0);

        specialinvoke $r2.<twitter4j.http.AccessToken: void <init>(twitter4j.http.HttpResponse)>($r6);

     label2:
        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r2;

        $r7 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r2 = (twitter4j.http.AccessToken) $r7;

        return $r2;

     label3:
        r1 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        $i0 = virtualinvoke r1.<twitter4j.TwitterException: int getStatusCode()>();

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception,int)>("The user has not given access to the account.", r1, $i0);

        throw $r8;

        catch twitter4j.TwitterException from label1 to label2 with label3;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthToken $r10;
        twitter4j.http.HttpParameter $r3;
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r4;
        twitter4j.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        int $i0;
        twitter4j.TwitterException r2, $r11;
        java.lang.String $r1, $r7;
        twitter4j.http.HttpClientWrapper $r5;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r4 = new twitter4j.http.AccessToken;

        $r5 = <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpClientWrapper http>;

        $r6 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf>;

     label1:
        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getOAuthAccessTokenURL()>();

     label2:
        $r8 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

     label3:
        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_verifier", $r1);

     label4:
        $r8[0] = $r3;

     label5:
        $r9 = virtualinvoke $r5.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, r0);

        specialinvoke $r4.<twitter4j.http.AccessToken: void <init>(twitter4j.http.HttpResponse)>($r9);

     label6:
        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r4;

        $r10 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r4 = (twitter4j.http.AccessToken) $r10;

        return $r4;

     label7:
        r2 := @caughtexception;

        $r11 = new twitter4j.TwitterException;

        $i0 = virtualinvoke r2.<twitter4j.TwitterException: int getStatusCode()>();

        specialinvoke $r11.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Exception,int)>("The user has not given access to the account.", r2, $i0);

        throw $r11;

        catch twitter4j.TwitterException from label1 to label2 with label7;
        catch twitter4j.TwitterException from label3 to label4 with label7;
        catch twitter4j.TwitterException from label5 to label6 with label7;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken) throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r2;
        twitter4j.http.RequestToken $r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.http.RequestToken;

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r1;

        $r2 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.AccessToken getOAuthAccessToken()>();

        return $r2;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r3;
        twitter4j.http.RequestToken $r1;
        java.lang.String $r2;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.http.RequestToken;

        $r2 := @parameter1: java.lang.String;

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r1;

        $r3 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String)>($r2);

        return $r3;
    }

    public twitter4j.http.RequestToken getOAuthRequestToken() throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.RequestToken $r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String)>(null);

        return $r1;
    }

    public twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.OAuthToken $r8;
        twitter4j.http.HttpParameter $r3;
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.RequestToken $r4;
        twitter4j.http.HttpResponse $r7;
        twitter4j.http.HttpParameter[] r2;
        twitter4j.conf.Configuration $r6;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper $r5;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label2;

        r2 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("oauth_callback", $r1);

        r2[0] = $r3;

     label1:
        $r4 = new twitter4j.http.RequestToken;

        $r5 = <twitter4j.http.OAuthAuthorization: twitter4j.http.HttpClientWrapper http>;

        $r6 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getOAuthRequestTokenURL()>();

        $r7 = virtualinvoke $r5.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, r2, r0);

        specialinvoke $r4.<twitter4j.http.RequestToken: void <init>(twitter4j.http.HttpResponse,twitter4j.http.OAuthSupport)>($r7, r0);

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r4;

        $r8 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r4 = (twitter4j.http.RequestToken) $r8;

        return $r4;

     label2:
        r2 = newarray (twitter4j.http.HttpParameter)[0];

        goto label1;
    }

    public int hashCode()
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.OAuthToken $r2;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $i0 = 0;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        if $r1 == null goto label4;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label1:
        $i1 = $i1 * 31;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        if $r1 == null goto label5;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

     label2:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r2 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        if $r2 == null goto label3;

        $r2 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $i0 = virtualinvoke $r2.<twitter4j.http.OAuthToken: int hashCode()>();

     label3:
        $i0 = $i1 + $i0;

        return $i0;

     label4:
        $i1 = 0;

        goto label1;

     label5:
        $i2 = 0;

        goto label2;
    }

    public boolean isEnabled()
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.OAuthToken $r1;
        boolean $z0;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        if $r1 == null goto label1;

        $r1 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $z0 = $r1 instanceof twitter4j.http.AccessToken;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setAuthorizationHeader(java.lang.String, java.lang.String, twitter4j.http.HttpParameter[], java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r4;
        twitter4j.http.OAuthToken $r5;
        twitter4j.http.OAuthAuthorization r0;
        java.lang.StringBuffer $r7;
        twitter4j.http.HttpParameter[] $r3;
        twitter4j.logging.Logger $r6;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.http.HttpParameter[];

        $r4 := @parameter3: java.net.HttpURLConnection;

        $r5 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r1 = virtualinvoke r0.<twitter4j.http.OAuthAuthorization: java.lang.String generateAuthorizationHeader(java.lang.String,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.OAuthToken)>($r1, $r2, $r3, $r5);

        $r6 = <twitter4j.http.OAuthAuthorization: twitter4j.logging.Logger logger>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Authorization: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<twitter4j.logging.Logger: void debug(java.lang.String)>($r2);

        virtualinvoke $r4.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Authorization", $r1);

        return;
    }

    public void setOAuthAccessToken(twitter4j.http.AccessToken)
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.AccessToken $r1;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 := @parameter0: twitter4j.http.AccessToken;

        r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        twitter4j.http.OAuthAuthorization r0;
        twitter4j.http.OAuthToken $r3;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        r0 := @this: twitter4j.http.OAuthAuthorization;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("OAuthAuthorization{consumerKey=\'");

        $r2 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerKey>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", consumerSecret=\'");

        $r2 = r0.<twitter4j.http.OAuthAuthorization: java.lang.String consumerSecret>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", oauthToken=");

        $r3 = r0.<twitter4j.http.OAuthAuthorization: twitter4j.http.OAuthToken oauthToken>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
