final class cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable extends java.lang.Object implements java.lang.Runnable
{
    private boolean mContinueRunning;
    private int mCurrentY;
    private final long mDuration;
    private final android.view.animation.Interpolator mInterpolator;
    private cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener;
    private final int mScrollFromY;
    private final int mScrollToY;
    private long mStartTime;
    final cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase this$0;

    public void <init>(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase, int, int, long, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener)
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable r0;
        android.view.animation.Interpolator $r3;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase $r1;
        int $i0, $i1;
        long $l2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener $r2;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable;

        $r1 := @parameter0: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 := @parameter3: long;

        $r2 := @parameter4: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: boolean mContinueRunning> = 1;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mStartTime> = -1L;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mCurrentY> = -1;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollFromY> = $i0;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollToY> = $i1;

        $r3 = staticinvoke <cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: android.view.animation.Interpolator access$200(cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase)>($r1);

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: android.view.animation.Interpolator mInterpolator> = $r3;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mDuration> = $l2;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener> = $r2;

        return;
    }

    public void run()
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable r0;
        android.view.animation.Interpolator $r2;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase $r1;
        long $l0, $l4;
        byte $b1;
        int $i2, $i3;
        float $f0, $f1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener $r3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable;

        $l0 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mStartTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label2;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mStartTime> = $l0;

     label1:
        $z0 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: boolean mContinueRunning>;

        if $z0 == 0 goto label3;

        $i2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollToY>;

        $i3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mCurrentY>;

        if $i2 == $i3 goto label3;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase this$0>;

        staticinvoke <cn.ffcs.lib.pulltorefresh.library.internal.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r1, r0);

        return;

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mStartTime>;

        $l0 = $l0 - $l4;

        $l0 = $l0 * 1000L;

        $l4 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: long mDuration>;

        $l0 = $l0 / $l4;

        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, 1000L);

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>($l0, 0L);

        $i2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollFromY>;

        $i3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollToY>;

        $i2 = $i2 - $i3;

        $f0 = (float) $i2;

        $r2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: android.view.animation.Interpolator mInterpolator>;

        $f1 = (float) $l0;

        $f1 = $f1 / 1000.0F;

        $f1 = interfaceinvoke $r2.<android.view.animation.Interpolator: float getInterpolation(float)>($f1);

        $f0 = $f0 * $f1;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mScrollFromY>;

        $i2 = $i3 - $i2;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mCurrentY> = $i2;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase this$0>;

        $i2 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: int mCurrentY>;

        virtualinvoke $r1.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: void setHeaderScroll(int)>($i2);

        goto label1;

     label3:
        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener>;

        if $r3 == null goto label4;

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener>;

        interfaceinvoke $r3.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener: void onSmoothScrollFinished()>();

     label4:
        return;
    }

    public void stop()
    {
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable r0;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase $r1;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable;

        r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: boolean mContinueRunning> = 0;

        $r1 = r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase this$0>;

        virtualinvoke $r1.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase: boolean removeCallbacks(java.lang.Runnable)>(r0);

        return;
    }
}
