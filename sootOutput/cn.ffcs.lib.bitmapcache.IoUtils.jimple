class cn.ffcs.lib.bitmapcache.IoUtils extends java.lang.Object
{

    void <init>()
    {
        cn.ffcs.lib.bitmapcache.IoUtils r0;

        r0 := @this: cn.ffcs.lib.bitmapcache.IoUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void closeStream(java.io.InputStream)
    {
        java.lang.Throwable r1;
        java.lang.String $r2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = <cn.ffcs.lib.bitmapcache.Constants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Failed to close InputStream", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void closeStream(java.io.OutputStream)
    {
        java.io.OutputStream $r0;
        java.lang.Throwable r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.OutputStream;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = <cn.ffcs.lib.bitmapcache.Constants: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "Failed to close OutputStream", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static long copy(java.io.File, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        long $l0;
        java.io.FileInputStream $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $l0 = staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: long copy(java.io.InputStream,java.io.OutputStream)>($r2, $r1);

        return $l0;
    }

    static long copy(java.io.InputStream, java.io.File) throws java.io.IOException
    {
        java.io.FileOutputStream $r2;
        long $l0;
        java.io.File $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.File;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        $l0 = staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: long copy(java.io.InputStream,java.io.OutputStream)>($r0, $r2);

        return $l0;
    }

    private static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        java.lang.Throwable $r3;
        byte[] r2;
        int $i0;
        long l1, $l2;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        r2 = newarray (byte)[4096];

        l1 = 0L;

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r2);

     label2:
        if -1 == $i0 goto label5;

     label3:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label4:
        $l2 = (long) $i0;

        l1 = l1 + $l2;

        goto label1;

     label5:
        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label6:
        staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: void closeStream(java.io.InputStream)>($r0);

        staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: void closeStream(java.io.OutputStream)>($r1);

        return l1;

     label7:
        $r3 := @caughtexception;

        staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: void closeStream(java.io.InputStream)>($r0);

        staticinvoke <cn.ffcs.lib.bitmapcache.IoUtils: void closeStream(java.io.OutputStream)>($r1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
