public class proguard.optimize.peephole.UnreachableCodeRemover extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.instruction.visitor.InstructionVisitor
{
    private static final boolean DEBUG;
    private final proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor;
    private final proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor;
    private final proguard.optimize.peephole.ReachableCodeMarker reachableCodeMarker;

    public void <init>()
    {
        proguard.optimize.peephole.UnreachableCodeRemover r0;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        specialinvoke r0.<proguard.optimize.peephole.UnreachableCodeRemover: void <init>(proguard.classfile.instruction.visitor.InstructionVisitor)>(null);

        return;
    }

    public void <init>(proguard.classfile.instruction.visitor.InstructionVisitor)
    {
        proguard.optimize.peephole.UnreachableCodeRemover r0;
        proguard.classfile.editor.CodeAttributeEditor $r3;
        proguard.optimize.peephole.ReachableCodeMarker $r2;
        proguard.classfile.instruction.visitor.InstructionVisitor $r1;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        $r1 := @parameter0: proguard.classfile.instruction.visitor.InstructionVisitor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r2 = new proguard.optimize.peephole.ReachableCodeMarker;

        specialinvoke $r2.<proguard.optimize.peephole.ReachableCodeMarker: void <init>()>();

        r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.optimize.peephole.ReachableCodeMarker reachableCodeMarker> = $r2;

        $r3 = new proguard.classfile.editor.CodeAttributeEditor;

        specialinvoke $r3.<proguard.classfile.editor.CodeAttributeEditor: void <init>()>();

        r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor> = $r3;

        r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor> = $r1;

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.optimize.peephole.UnreachableCodeRemover r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitAnyInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.Instruction)
    {
        proguard.optimize.peephole.UnreachableCodeRemover r0;
        proguard.classfile.editor.CodeAttributeEditor $r7;
        proguard.optimize.peephole.ReachableCodeMarker $r6;
        proguard.classfile.instruction.visitor.InstructionVisitor $r5;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.instruction.Instruction $r4;
        int $i0;
        proguard.classfile.Method $r2;
        boolean $z0;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.Instruction;

        $r6 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.optimize.peephole.ReachableCodeMarker reachableCodeMarker>;

        $z0 = virtualinvoke $r6.<proguard.optimize.peephole.ReachableCodeMarker: boolean isReachable(int)>($i0);

        if $z0 != 0 goto label1;

        $r7 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor>;

        virtualinvoke $r7.<proguard.classfile.editor.CodeAttributeEditor: void deleteInstruction(int)>($i0);

        $r5 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor>;

        if $r5 == null goto label1;

        $r5 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor>;

        virtualinvoke $r4.<proguard.classfile.instruction.Instruction: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor)>($r1, $r2, $r3, $i0, $r5);

     label1:
        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        java.io.PrintStream $r5;
        proguard.optimize.peephole.UnreachableCodeRemover r0;
        java.lang.RuntimeException $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        java.lang.StringBuffer $r6;
        proguard.classfile.Method $r2;
        java.lang.Class $r8;
        java.lang.String $r7;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

     label1:
        virtualinvoke r0.<proguard.optimize.peephole.UnreachableCodeRemover: void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Unexpected error while removing unreachable code:");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Class       = [");

        $r7 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Method      = [");

        $r7 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r7 = interfaceinvoke $r2.<proguard.classfile.Method: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Exception   = [");

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] (");

        $r7 = virtualinvoke $r4.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        throw $r4;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void visitCodeAttribute0(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.optimize.peephole.UnreachableCodeRemover r0;
        int $i0;
        proguard.classfile.editor.CodeAttributeEditor $r5;
        proguard.classfile.Method $r2;
        proguard.optimize.peephole.ReachableCodeMarker $r4;

        r0 := @this: proguard.optimize.peephole.UnreachableCodeRemover;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.optimize.peephole.ReachableCodeMarker reachableCodeMarker>;

        virtualinvoke $r4.<proguard.optimize.peephole.ReachableCodeMarker: void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

        $r5 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor>;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength>;

        virtualinvoke $r5.<proguard.classfile.editor.CodeAttributeEditor: void reset(int)>($i0);

        virtualinvoke $r3.<proguard.classfile.attribute.CodeAttribute: void instructionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.instruction.visitor.InstructionVisitor)>($r1, $r2, r0);

        $r5 = r0.<proguard.optimize.peephole.UnreachableCodeRemover: proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor>;

        virtualinvoke $r5.<proguard.classfile.editor.CodeAttributeEditor: void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute)>($r1, $r2, $r3);

        return;
    }
}
