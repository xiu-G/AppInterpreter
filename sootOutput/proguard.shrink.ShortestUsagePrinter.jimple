public class proguard.shrink.ShortestUsagePrinter extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor
{
    private final java.io.PrintStream ps;
    private final proguard.shrink.ShortestUsageMarker shortestUsageMarker;
    private final boolean verbose;

    public void <init>(proguard.shrink.ShortestUsageMarker)
    {
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.shrink.ShortestUsageMarker $r1;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.shrink.ShortestUsageMarker;

        specialinvoke r0.<proguard.shrink.ShortestUsagePrinter: void <init>(proguard.shrink.ShortestUsageMarker,boolean)>($r1, 1);

        return;
    }

    public void <init>(proguard.shrink.ShortestUsageMarker, boolean)
    {
        java.io.PrintStream $r2;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.shrink.ShortestUsageMarker $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.shrink.ShortestUsageMarker;

        $z0 := @parameter1: boolean;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<proguard.shrink.ShortestUsagePrinter: void <init>(proguard.shrink.ShortestUsageMarker,boolean,java.io.PrintStream)>($r1, $z0, $r2);

        return;
    }

    public void <init>(proguard.shrink.ShortestUsageMarker, boolean, java.io.PrintStream)
    {
        java.io.PrintStream $r2;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.shrink.ShortestUsageMarker $r1;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.shrink.ShortestUsageMarker;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.io.PrintStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.shrink.ShortestUsagePrinter: proguard.shrink.ShortestUsageMarker shortestUsageMarker> = $r1;

        r0.<proguard.shrink.ShortestUsagePrinter: boolean verbose> = $z0;

        r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps> = $r2;

        return;
    }

    private static java.lang.String lineNumberRange(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r1;
        java.lang.StringBuffer $r3;
        java.lang.String $r2;
        proguard.classfile.ProgramClass $r0;

        $r0 := @parameter0: proguard.classfile.ProgramClass;

        $r1 := @parameter1: proguard.classfile.ProgramMember;

        $r2 = virtualinvoke $r1.<proguard.classfile.ProgramMember: java.lang.String getLineNumberRange(proguard.classfile.Clazz)>($r0);

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label1:
        return "";
    }

    private void printReason(proguard.classfile.VisitorAccepter)
    {
        java.io.PrintStream $r4;
        proguard.classfile.VisitorAccepter $r1;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.shrink.ShortestUsageMarker $r2;
        java.lang.StringBuffer $r5;
        proguard.shrink.ShortestUsageMark $r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = r0.<proguard.shrink.ShortestUsagePrinter: proguard.shrink.ShortestUsageMarker shortestUsageMarker>;

        $z0 = virtualinvoke $r2.<proguard.shrink.ShortestUsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<proguard.shrink.ShortestUsagePrinter: proguard.shrink.ShortestUsageMarker shortestUsageMarker>;

        $r3 = virtualinvoke $r2.<proguard.shrink.ShortestUsageMarker: proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter)>($r1);

        $r4 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r6 = virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: java.lang.String getReason()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void print(java.lang.String)>($r6);

        virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: void acceptClassVisitor(proguard.classfile.visitor.ClassVisitor)>(r0);

        virtualinvoke $r3.<proguard.shrink.ShortestUsageMark: void acceptMemberVisitor(proguard.classfile.visitor.MemberVisitor)>(r0);

        return;

     label1:
        $r4 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("  is not being kept.\n");

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        java.io.PrintStream $r2;
        proguard.classfile.LibraryClass $r1;
        proguard.shrink.ShortestUsagePrinter r0;
        java.lang.String $r3;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r3 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r2 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("  is a library class.\n");

        return;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        java.io.PrintStream $r3;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.classfile.LibraryField $r2;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r6, $r8;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        $r4 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = r0.<proguard.shrink.ShortestUsagePrinter: boolean verbose>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>(0, $r4, $r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("  is a library field.\n");

        return;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        java.io.PrintStream $r3;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r6, $r8;
        proguard.classfile.LibraryMethod $r2;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r4 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = r0.<proguard.shrink.ShortestUsagePrinter: boolean verbose>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r7, 0, $r4, $r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("  is a library method.\n");

        return;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        java.io.PrintStream $r2;
        proguard.shrink.ShortestUsagePrinter r0;
        java.lang.String $r3;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r3 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        specialinvoke r0.<proguard.shrink.ShortestUsagePrinter: void printReason(proguard.classfile.VisitorAccepter)>($r1);

        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        java.io.PrintStream $r3;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        java.lang.StringBuffer $r6, $r8;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = r0.<proguard.shrink.ShortestUsagePrinter: boolean verbose>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>(0, $r4, $r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = staticinvoke <proguard.shrink.ShortestUsagePrinter: java.lang.String lineNumberRange(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember)>($r1, $r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        specialinvoke r0.<proguard.shrink.ShortestUsagePrinter: void printReason(proguard.classfile.VisitorAccepter)>($r2);

        return;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        java.io.PrintStream $r3;
        proguard.shrink.ShortestUsagePrinter r0;
        proguard.classfile.ProgramClass $r1;
        java.lang.StringBuffer $r6, $r8;
        proguard.classfile.ProgramMethod $r2;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: proguard.shrink.ShortestUsagePrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r3 = r0.<proguard.shrink.ShortestUsagePrinter: java.io.PrintStream ps>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = r0.<proguard.shrink.ShortestUsagePrinter: boolean verbose>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>($r7, 0, $r4, $r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = staticinvoke <proguard.shrink.ShortestUsagePrinter: java.lang.String lineNumberRange(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember)>($r1, $r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        specialinvoke r0.<proguard.shrink.ShortestUsagePrinter: void printReason(proguard.classfile.VisitorAccepter)>($r2);

        return;

     label2:
        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }
}
