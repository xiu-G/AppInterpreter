class com.baidu.autoupdatesdk.UICallback$1 extends java.lang.Object implements java.lang.Runnable
{
    final int a;
    final java.lang.String b;
    final java.lang.Object c;
    final com.baidu.autoupdatesdk.UICallback d;

    void <init>(com.baidu.autoupdatesdk.UICallback, int, java.lang.String, java.lang.Object)
    {
        com.baidu.autoupdatesdk.UICallback $r1;
        int $i0;
        com.baidu.autoupdatesdk.UICallback$1 r0;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: com.baidu.autoupdatesdk.UICallback$1;

        $r1 := @parameter0: com.baidu.autoupdatesdk.UICallback;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Object;

        r0.<com.baidu.autoupdatesdk.UICallback$1: com.baidu.autoupdatesdk.UICallback d> = $r1;

        r0.<com.baidu.autoupdatesdk.UICallback$1: int a> = $i0;

        r0.<com.baidu.autoupdatesdk.UICallback$1: java.lang.String b> = $r2;

        r0.<com.baidu.autoupdatesdk.UICallback$1: java.lang.Object c> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.baidu.autoupdatesdk.UICallback $r4;
        int $i0;
        com.baidu.autoupdatesdk.UICallback$1 r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.baidu.autoupdatesdk.ICallback $r3;
        java.lang.Exception $r5;

        r0 := @this: com.baidu.autoupdatesdk.UICallback$1;

     label1:
        $r4 = r0.<com.baidu.autoupdatesdk.UICallback$1: com.baidu.autoupdatesdk.UICallback d>;

        $r3 = staticinvoke <com.baidu.autoupdatesdk.UICallback: com.baidu.autoupdatesdk.ICallback a(com.baidu.autoupdatesdk.UICallback)>($r4);

        $i0 = r0.<com.baidu.autoupdatesdk.UICallback$1: int a>;

        $r1 = r0.<com.baidu.autoupdatesdk.UICallback$1: java.lang.String b>;

        $r2 = r0.<com.baidu.autoupdatesdk.UICallback$1: java.lang.Object c>;

        interfaceinvoke $r3.<com.baidu.autoupdatesdk.ICallback: void onCallback(int,java.lang.String,java.lang.Object)>($i0, $r1, $r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
