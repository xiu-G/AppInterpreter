public class cn.hi321.browser.utils.ImageUtil extends java.lang.Object
{
    public static int BITMAP_DENSITY;
    private static final java.lang.String TAG;
    private java.util.HashMap imgCache;

    static void <clinit>()
    {
        <cn.hi321.browser.utils.ImageUtil: java.lang.String TAG> = "ImageUtils";

        <cn.hi321.browser.utils.ImageUtil: int BITMAP_DENSITY> = 0;

        <cn.hi321.browser.utils.ImageUtil: int BITMAP_DENSITY> = 160;

        return;
    }

    public void <init>()
    {
        cn.hi321.browser.utils.ImageUtil r0;

        r0 := @this: cn.hi321.browser.utils.ImageUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void CopyStream(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] r2;
        int $i0, $i1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, 1024);

        $i1 = -1;

        if $i0 != $i1 goto label2;

        return;

     label2:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i0);

        goto label1;
    }

    public static android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getOpacity()>();

        $i3 = -1;

        if $i2 == $i3 goto label2;

        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r1);

        $r3 = new android.graphics.Canvas;

        specialinvoke $r3.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r3);

        return $r2;

     label2:
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label1;
    }

    public static void getImageFromNet(java.lang.String, java.io.File) throws java.io.IOException
    {
        java.net.HttpURLConnection r4;
        java.net.URL r2;
        java.net.URLConnection $r3;
        java.lang.String $r0;
        java.io.File $r1;
        java.io.InputStream $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        r2 = new java.net.URL;

        specialinvoke r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke r2.<java.net.URL: java.net.URLConnection openConnection()>();

        r4 = (java.net.HttpURLConnection) $r3;

        virtualinvoke r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(30000);

        virtualinvoke r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(30000);

        virtualinvoke r4.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(1);

        $r5 = virtualinvoke r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        staticinvoke <cn.hi321.browser.utils.ImageUtil: void saveImage(java.io.InputStream,java.io.File)>($r5, $r1);

        return;
    }

    public static android.graphics.Bitmap getImgCacheFromLocal(java.lang.String)
    {
        android.graphics.Bitmap $r5;
        java.lang.StringBuilder $r4;
        java.lang.String $r0;
        java.io.FileInputStream r3;
        java.lang.Exception r1;
        java.io.File r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r2 = new java.io.File;

     label1:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

     label2:
        if $z0 != 0 goto label3;

        return null;

     label3:
        r3 = new java.io.FileInputStream;

     label4:
        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

     label5:
        $r4 = new java.lang.StringBuilder;

     label6:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("fis==");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void i(java.lang.String,java.lang.String)>("ImageUtils", $r0);

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r3);

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label7:
        return $r5;

     label8:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        $r0 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void e(java.lang.String,java.lang.String)>("ImageUtils", $r0);

        return null;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static android.graphics.Bitmap imageCompression(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2, $i3;
        float f0, f1, $f2;
        android.graphics.Matrix r1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        f1 = (float) $i0;

        f0 = (float) $i2;

        f1 = f1 / f0;

        f0 = (float) $i1;

        $f2 = (float) $i3;

        f0 = f0 / $f2;

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f0);

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, $i2, $i3, r1, 1);

        return $r0;
    }

    public static void saveImage(java.io.InputStream, java.io.File) throws java.io.IOException
    {
        java.io.FileOutputStream r2;
        java.io.File $r1;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label1:
        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        staticinvoke <cn.hi321.browser.utils.ImageUtil: void CopyStream(java.io.InputStream,java.io.OutputStream)>($r0, r2);

        if r2 == null goto label2;

        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label2:
        if $r0 == null goto label3;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label3:
        return;
    }

    public static boolean saveImage(android.graphics.Bitmap, java.lang.String)
    {
        android.graphics.Bitmap $r0;
        java.io.FileOutputStream r3;
        java.lang.StringBuilder $r4;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r1, $r5;
        java.lang.Exception r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $r1 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("cunrubendihuancun");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void e(java.lang.String,java.lang.String)>("ImageUtils", $r5);

        r3 = new java.io.FileOutputStream;

     label1:
        specialinvoke r3.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label2:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

     label3:
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 100, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

        staticinvoke <java.lang.System: void gc()>();

     label4:
        $r4 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("cunrubendichenggong");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void e(java.lang.String,java.lang.String)>("ImageUtils", $r5);

     label6:
        return 1;

     label7:
        r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("cunrubendichengshibai");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void e(java.lang.String,java.lang.String)>("ImageUtils", $r1);

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        $r1 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <cn.hi321.browser.utils.LogUtil: void e(java.lang.String,java.lang.String)>("ImageUtils", $r1);

        return 0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static android.graphics.Bitmap setAlpha(android.graphics.Bitmap, int)
    {
        int[] r0;
        android.graphics.Bitmap $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap$Config $r2;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $i1 * $i2;

        r0 = newarray (int)[$i1];

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r1.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>(r0, 0, $i1, 0, 0, $i2, $i3);

        $i0 = $i0 * 255;

        $i0 = $i0 / 100;

        $i1 = 0;

     label1:
        $i2 = lengthof r0;

        if $i1 < $i2 goto label2;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r0, $i0, $i1, $r2);

        return $r1;

     label2:
        $i2 = r0[$i1];

        $i2 = $i2 & -16777216;

        if $i2 == 0 goto label3;

        $i2 = $i0 << 24;

        $i3 = r0[$i1];

        $i3 = $i3 & 16777215;

        $i2 = $i2 | $i3;

        r0[$i1] = $i2;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public java.util.HashMap getImgCache()
    {
        java.lang.Throwable r1;
        java.util.HashMap $r3, $r5;
        java.io.IOException $r6;
        java.io.File r2, $r4;
        cn.hi321.browser.utils.ImageUtil r0;
        boolean $z0;

        r0 := @this: cn.hi321.browser.utils.ImageUtil;

        $r3 = r0.<cn.hi321.browser.utils.ImageUtil: java.util.HashMap imgCache>;

        if $r3 != null goto label2;

        $r4 = new java.io.File;

        r2 = $r4;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("imgs.dat");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<cn.hi321.browser.utils.ImageUtil: java.util.HashMap imgCache> = $r5;

     label1:
        virtualinvoke r2.<java.io.File: boolean createNewFile()>();

     label2:
        $r3 = r0.<cn.hi321.browser.utils.ImageUtil: java.util.HashMap imgCache>;

        return $r3;

     label3:
        r1 := @caughtexception;

        $r6 = (java.io.IOException) r1;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        goto label2;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
