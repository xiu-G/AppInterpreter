public final class com.kingroot.sdk.bg extends java.lang.Object
{
    private static volatile com.kingroot.sdk.bg dd;
    private final java.util.concurrent.ConcurrentLinkedQueue de;
    private final java.util.concurrent.ConcurrentLinkedQueue df;
    private com.kingroot.sdk.gj dg;
    private com.kingroot.sdk.gj dh;

    static void <clinit>()
    {
        <com.kingroot.sdk.bg: com.kingroot.sdk.bg dd> = null;

        return;
    }

    private void <init>()
    {
        com.kingroot.sdk.bg$1 $r1;
        com.kingroot.sdk.bg$2 $r2;
        com.kingroot.sdk.bg r0;
        java.util.concurrent.ConcurrentLinkedQueue $r3;

        r0 := @this: com.kingroot.sdk.bg;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.kingroot.sdk.bg$1;

        specialinvoke $r1.<com.kingroot.sdk.bg$1: void <init>(com.kingroot.sdk.bg)>(r0);

        r0.<com.kingroot.sdk.bg: com.kingroot.sdk.gj dg> = $r1;

        $r2 = new com.kingroot.sdk.bg$2;

        specialinvoke $r2.<com.kingroot.sdk.bg$2: void <init>(com.kingroot.sdk.bg)>(r0);

        r0.<com.kingroot.sdk.bg: com.kingroot.sdk.gj dh> = $r2;

        $r3 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de> = $r3;

        $r3 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df> = $r3;

        return;
    }

    public static com.kingroot.sdk.bg Z()
    {
        java.lang.Throwable $r1;
        com.kingroot.sdk.bg $r0;

        $r0 = <com.kingroot.sdk.bg: com.kingroot.sdk.bg dd>;

        if $r0 != null goto label3;

        entermonitor class "Lcom/kingroot/sdk/bg;";

     label1:
        $r0 = <com.kingroot.sdk.bg: com.kingroot.sdk.bg dd>;

        if $r0 != null goto label2;

        $r0 = new com.kingroot.sdk.bg;

        specialinvoke $r0.<com.kingroot.sdk.bg: void <init>()>();

        <com.kingroot.sdk.bg: com.kingroot.sdk.bg dd> = $r0;

     label2:
        exitmonitor class "Lcom/kingroot/sdk/bg;";

     label3:
        $r0 = <com.kingroot.sdk.bg: com.kingroot.sdk.bg dd>;

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/kingroot/sdk/bg;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private com.kingroot.sdk.g a(java.lang.String, com.kingroot.sdk.d, int)
    {
        krsdk.RootShell $r6;
        com.kingroot.sdk.bj $r5;
        com.kingroot.sdk.d $r2;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r8;
        com.kingroot.sdk.g $r9;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r4;
        boolean $z0;
        java.util.concurrent.ConcurrentLinkedQueue $r7;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.kingroot.sdk.d;

        $i0 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("runAttackCloudCmd(), tipsId:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void g(java.lang.String)>($r4);

        if $r2 != null goto label1;

        return null;

     label1:
        $r5 = staticinvoke <com.kingroot.sdk.bh: com.kingroot.sdk.bj a(com.kingroot.sdk.d,java.lang.String)>($r2, $r1);

        if $r5 == null goto label4;

        $z0 = virtualinvoke $r5.<com.kingroot.sdk.bj: boolean ad()>();

        if $z0 == 0 goto label2;

        $r6 = staticinvoke <com.kingroot.sdk.bf: krsdk.RootShell c(boolean)>(1);

        if $r6 != null goto label2;

        $r7 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        $r8 = specialinvoke r0.<com.kingroot.sdk.bg: com.kingroot.sdk.f b(java.lang.String,com.kingroot.sdk.d,int)>($r1, $r2, $i0);

        virtualinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r8);

        return null;

     label2:
        $i1 = virtualinvoke $r5.<com.kingroot.sdk.bj: int ac()>();

        if $i1 == 1 goto label3;

        $r7 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        $r8 = specialinvoke r0.<com.kingroot.sdk.bg: com.kingroot.sdk.f b(java.lang.String,com.kingroot.sdk.d,int)>($r1, $r2, $i0);

        virtualinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r8);

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("mCloudInfoNeedsRootList.size() = ");

        $r7 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        $i0 = virtualinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("runAttackCloudCmd", $r4);

        $i0 = $r2.<com.kingroot.sdk.d: int h>;

        if $i0 == 350 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("runAttackCloudCmd, res:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void g(java.lang.String)>($r4);

        $i0 = $r2.<com.kingroot.sdk.d: int j>;

        $r9 = staticinvoke <com.kingroot.sdk.bk: com.kingroot.sdk.g a(java.lang.String,int,int,int,int,int)>($r1, $i0, 0, 3, 0, $i1);

        return $r9;

     label4:
        return null;
    }

    private com.kingroot.sdk.g a(java.lang.String, com.kingroot.sdk.d, com.kingroot.sdk.f)
    {
        java.util.List $r7;
        com.kingroot.sdk.d $r2;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r3;
        com.kingroot.sdk.g $r6;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.kingroot.sdk.d;

        $r3 := @parameter2: com.kingroot.sdk.f;

        if $r1 == null goto label6;

        if $r2 == null goto label6;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("tipSid:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";cmdid:");

        $i0 = $r2.<com.kingroot.sdk.d: int h>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("runGeneralCloudCmd", $r5);

        $i0 = $r2.<com.kingroot.sdk.d: int h>;

        lookupswitch($i0)
        {
            case 20: goto label5;
            case 24: goto label5;
            case 353: goto label3;
            case 354: goto label4;
            default: goto label2;
        };

     label2:
        $i0 = $r2.<com.kingroot.sdk.d: int j>;

        $r6 = staticinvoke <com.kingroot.sdk.bk: com.kingroot.sdk.g a(java.lang.String,int,int,int,int,int)>($r1, $i0, 0, 3, 0, 2);

        return $r6;

     label3:
        $r6 = staticinvoke <com.kingroot.sdk.bk: com.kingroot.sdk.g a(java.lang.String,com.kingroot.sdk.d)>($r1, $r2);

        return $r6;

     label4:
        $r6 = staticinvoke <com.kingroot.sdk.bk: com.kingroot.sdk.g b(java.lang.String,com.kingroot.sdk.d)>($r1, $r2);

        return $r6;

     label5:
        $r7 = staticinvoke <com.kingroot.sdk.bk: java.util.List c(java.lang.String,com.kingroot.sdk.d)>($r1, $r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("HaveNewGeneralCmd:");

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("runGeneralCloudCmd", $r1);

        specialinvoke r0.<com.kingroot.sdk.bg: void e(java.util.List)>($r7);

     label6:
        return null;
    }

    private java.util.ArrayList a(com.kingroot.sdk.t)
    {
        com.kingroot.sdk.t $r1;
        java.util.ArrayList $r2, $r3, $r6;
        com.kingroot.sdk.d $r7;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r5;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.t;

        $r3 = new java.util.ArrayList;

        $r2 = $r3;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r3 = $r1.<com.kingroot.sdk.t: java.util.ArrayList a>;

        if $r3 == null goto label7;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label7;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label7;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = (com.kingroot.sdk.f) $r4;

        if $r5 == null goto label2;

        $r6 = $r5.<com.kingroot.sdk.f: java.util.ArrayList p>;

        if $r6 != null goto label4;

     label2:
        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        $r6 = $r5.<com.kingroot.sdk.f: java.util.ArrayList p>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i1 == 0 goto label3;

        $r6 = $r5.<com.kingroot.sdk.f: java.util.ArrayList p>;

        $r4 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r7 = (com.kingroot.sdk.d) $r4;

        if $r7 == null goto label3;

        $z0 = specialinvoke r0.<com.kingroot.sdk.bg: boolean d(com.kingroot.sdk.f)>($r5);

        if $z0 != 0 goto label5;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        goto label3;

     label5:
        $i1 = $r7.<com.kingroot.sdk.d: int h>;

        lookupswitch($i1)
        {
            case 1: goto label6;
            case 3: goto label6;
            case 4: goto label6;
            case 6: goto label6;
            case 9: goto label6;
            case 350: goto label6;
            default: goto label3;
        };

     label6:
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        goto label3;

     label7:
        return $r2;
    }

    static java.util.List a(com.kingroot.sdk.bg, com.kingroot.sdk.f)
    {
        java.util.List $r2;
        com.kingroot.sdk.bg $r0;
        com.kingroot.sdk.f $r1;

        $r0 := @parameter0: com.kingroot.sdk.bg;

        $r1 := @parameter1: com.kingroot.sdk.f;

        $r2 = specialinvoke $r0.<com.kingroot.sdk.bg: java.util.List c(com.kingroot.sdk.f)>($r1);

        return $r2;
    }

    private java.util.List a(com.kingroot.sdk.f)
    {
        java.util.List $r2;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r1;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.f;

        if $r1 != null goto label1;

        return null;

     label1:
        $z0 = specialinvoke r0.<com.kingroot.sdk.bg: boolean d(com.kingroot.sdk.f)>($r1);

        if $z0 == 0 goto label2;

        $r2 = specialinvoke r0.<com.kingroot.sdk.bg: java.util.List b(com.kingroot.sdk.f)>($r1);

        return $r2;

     label2:
        return null;
    }

    static void a(com.kingroot.sdk.bg)
    {
        com.kingroot.sdk.bg $r0;

        $r0 := @parameter0: com.kingroot.sdk.bg;

        specialinvoke $r0.<com.kingroot.sdk.bg: void aa()>();

        return;
    }

    private void a(java.util.List, int)
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r2;
        com.kingroot.sdk.h $r9;
        java.util.List $r1;
        byte $b1;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r5;
        com.kingroot.sdk.g $r8;
        int $i0;
        java.lang.Object $r4;
        com.kingroot.sdk.c $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.kingroot.sdk.f) $r4;

        $b1 = 1;

        $z0 = specialinvoke r0.<com.kingroot.sdk.bg: boolean e(com.kingroot.sdk.f)>($r5);

        if $z0 != 0 goto label2;

        $b1 = 2;

     label2:
        $r6 = $r5.<com.kingroot.sdk.f: com.kingroot.sdk.c m>;

        $r7 = $r6.<com.kingroot.sdk.c: java.lang.String g>;

        $r8 = staticinvoke <com.kingroot.sdk.bk: com.kingroot.sdk.g a(java.lang.String,int,int,int,java.util.ArrayList,int)>($r7, 0, 0, 0, null, $b1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label3:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label4;

        $r9 = new com.kingroot.sdk.h;

        specialinvoke $r9.<com.kingroot.sdk.h: void <init>()>();

        $r9.<com.kingroot.sdk.h: java.util.ArrayList z> = $r2;

        staticinvoke <com.kingroot.sdk.be: void a(com.kingroot.sdk.h)>($r9);

     label4:
        return;
    }

    private void aa()
    {
        android.content.Context $r2;
        com.kingroot.sdk.t $r5;
        long $l1, $l2;
        com.kingroot.sdk.dg $r1;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.util.ArrayList $r6;
        com.kingroot.sdk.bg r0;
        int $i0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9;
        java.lang.String $r7, $r8;
        boolean $z0;
        java.util.concurrent.ConcurrentLinkedQueue $r10;

        r0 := @this: com.kingroot.sdk.bg;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "doCheckCloudCmd");

        $r1 = staticinvoke <com.kingroot.sdk.dg: com.kingroot.sdk.dg aK()>();

        $r2 = $r1.<com.kingroot.sdk.dg: android.content.Context ek>;

        if $r2 != null goto label1;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "null appContext");

        return;

     label1:
        $r3 = new java.util.concurrent.atomic.AtomicReference;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();

        $i0 = staticinvoke <com.kingroot.sdk.dy: int a(android.content.Context,java.util.concurrent.atomic.AtomicReference)>($r2, $r3);

        if $i0 != 0 goto label6;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "success");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        staticinvoke <com.kingroot.sdk.bc: void b(long)>($l1);

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.kingroot.sdk.t) $r4;

        if $r5 == null goto label7;

        $r6 = $r5.<com.kingroot.sdk.t: java.util.ArrayList a>;

        if $r6 == null goto label4;

        $r6 = $r5.<com.kingroot.sdk.t: java.util.ArrayList a>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label4;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "\u6709\u4e91\u6307\u4ee4\u4e0b\u53d1");

     label2:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = staticinvoke <com.kingroot.sdk.bc: long R()>();

        $l1 = $l1 + $l2;

        specialinvoke r0.<com.kingroot.sdk.bg: void e(long)>($l1);

        $r7 = $r5.<com.kingroot.sdk.t: java.lang.String aj>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label3;

        $r8 = staticinvoke <com.kingroot.sdk.bc: java.lang.String S()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label5;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("LastTipId:");

        $r8 = staticinvoke <com.kingroot.sdk.bc: java.lang.String S()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newTipId:");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void g(java.lang.String,java.lang.String)>("doCheckCloudCmd", $r7);

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "\u4e91\u6307\u4ee4\u5355\u53f7\u4e3a\u7a7a\u6216\u8005\u548c\u6700\u8fd1\u6267\u884c\u7684\u4e91\u6307\u4ee4\u5355\u53f7\u76f8\u540c\uff0c\u4e0d\u6267\u884c");

        return;

     label4:
        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "\u6728\u6709\u4e91\u6307\u4ee4\u4e0b\u53d1");

        goto label2;

     label5:
        $r6 = $r5.<com.kingroot.sdk.t: java.util.ArrayList a>;

        specialinvoke r0.<com.kingroot.sdk.bg: void a(java.util.List,int)>($r6, 0);

        staticinvoke <com.kingroot.sdk.bc: void y(java.lang.String)>($r7);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("newTipId:");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void g(java.lang.String,java.lang.String)>("doCheckCloudCmd", $r7);

        $r6 = specialinvoke r0.<com.kingroot.sdk.bg: java.util.ArrayList a(com.kingroot.sdk.t)>($r5);

        specialinvoke r0.<com.kingroot.sdk.bg: void d(java.util.List)>($r6);

        $r6 = $r5.<com.kingroot.sdk.t: java.util.ArrayList a>;

        specialinvoke r0.<com.kingroot.sdk.bg: void e(java.util.List)>($r6);

        $r10 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        if $r10 == null goto label7;

        $r10 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        $i0 = virtualinvoke $r10.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 <= 0 goto label7;

        virtualinvoke r0.<com.kingroot.sdk.bg: void e(boolean)>(0);

        return;

     label6:
        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("doCheckCloudCmd", "failed");

     label7:
        return;
    }

    private java.util.ArrayList ab()
    {
        java.lang.Object[] $r3;
        com.kingroot.sdk.bg r0;
        int $i0;
        java.lang.Object $r4;
        com.kingroot.sdk.bg$3 $r2;
        java.util.concurrent.ConcurrentLinkedQueue $r1;
        java.util.ArrayList $r5;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = new com.kingroot.sdk.bg$3;

        specialinvoke $r2.<com.kingroot.sdk.bg$3: void <init>(com.kingroot.sdk.bg)>(r0);

        $r3 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <com.kingroot.sdk.bi: java.lang.Object a(com.kingroot.sdk.bi$a,java.lang.Object[])>($r2, $r3);

        $r5 = (java.util.ArrayList) $r4;

        return $r5;

     label1:
        return null;
    }

    private com.kingroot.sdk.f b(java.lang.String, com.kingroot.sdk.d, int)
    {
        com.kingroot.sdk.u $r6;
        java.util.ArrayList $r4;
        com.kingroot.sdk.d $r2;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r3;
        int $i0;
        java.lang.String $r1;
        com.kingroot.sdk.c $r5;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.kingroot.sdk.d;

        $i0 := @parameter2: int;

        $r3 = new com.kingroot.sdk.f;

        specialinvoke $r3.<com.kingroot.sdk.f: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r3.<com.kingroot.sdk.f: java.util.ArrayList p> = $r4;

        $r4 = $r3.<com.kingroot.sdk.f: java.util.ArrayList p>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r5 = new com.kingroot.sdk.c;

        specialinvoke $r5.<com.kingroot.sdk.c: void <init>()>();

        $r3.<com.kingroot.sdk.f: com.kingroot.sdk.c m> = $r5;

        $r5 = $r3.<com.kingroot.sdk.f: com.kingroot.sdk.c m>;

        $r5.<com.kingroot.sdk.c: java.lang.String g> = $r1;

        $r6 = new com.kingroot.sdk.u;

        specialinvoke $r6.<com.kingroot.sdk.u: void <init>()>();

        $r3.<com.kingroot.sdk.f: com.kingroot.sdk.u n> = $r6;

        $r6 = $r3.<com.kingroot.sdk.f: com.kingroot.sdk.u n>;

        $r6.<com.kingroot.sdk.u: int al> = $i0;

        return $r3;
    }

    private java.util.List b(com.kingroot.sdk.f)
    {
        java.util.Iterator $r6;
        java.lang.Exception $r10;
        java.util.ArrayList $r4, $r5;
        com.kingroot.sdk.d $r8;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r1;
        com.kingroot.sdk.g $r9;
        int $i0;
        java.lang.Object $r7;
        java.lang.String $r2;
        com.kingroot.sdk.c $r3;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.f;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = $r1.<com.kingroot.sdk.f: com.kingroot.sdk.c m>;

        $r2 = $r3.<com.kingroot.sdk.c: java.lang.String g>;

        $r4 = $r1.<com.kingroot.sdk.f: java.util.ArrayList p>;

        if $r4 == null goto label9;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label9;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.kingroot.sdk.d) $r7;

     label3:
        $r9 = specialinvoke r0.<com.kingroot.sdk.bg: com.kingroot.sdk.g a(java.lang.String,com.kingroot.sdk.d,com.kingroot.sdk.f)>($r2, $r8, $r1);

     label4:
        if $r9 == null goto label2;

     label5:
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

     label6:
        goto label2;

     label7:
        $r10 := @caughtexception;

        staticinvoke <com.kingroot.sdk.at: void a(java.lang.Throwable)>($r10);

        goto label2;

     label8:
        return $r5;

     label9:
        return null;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    static java.util.concurrent.ConcurrentLinkedQueue b(com.kingroot.sdk.bg)
    {
        com.kingroot.sdk.bg $r0;
        java.util.concurrent.ConcurrentLinkedQueue r1;

        $r0 := @parameter0: com.kingroot.sdk.bg;

        r1 = $r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        return r1;
    }

    static java.util.ArrayList c(com.kingroot.sdk.bg)
    {
        com.kingroot.sdk.bg $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: com.kingroot.sdk.bg;

        $r1 = specialinvoke $r0.<com.kingroot.sdk.bg: java.util.ArrayList ab()>();

        return $r1;
    }

    private java.util.List c(com.kingroot.sdk.f)
    {
        java.util.Iterator $r5;
        com.kingroot.sdk.u $r9;
        java.lang.Exception $r11;
        java.util.ArrayList $r2, $r4;
        com.kingroot.sdk.d $r7;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r1;
        com.kingroot.sdk.g $r10;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r3;
        com.kingroot.sdk.c $r8;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.f;

        if $r1 != null goto label01;

        return null;

     label01:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = $r1.<com.kingroot.sdk.f: java.util.ArrayList p>;

        if $r4 == null goto label12;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label12;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.kingroot.sdk.d) $r6;

     label03:
        $r8 = $r1.<com.kingroot.sdk.f: com.kingroot.sdk.c m>;

        $r3 = $r8.<com.kingroot.sdk.c: java.lang.String g>;

        $r9 = $r1.<com.kingroot.sdk.f: com.kingroot.sdk.u n>;

     label04:
        if $r9 != null goto label10;

        $i0 = 0;

     label05:
        $r10 = specialinvoke r0.<com.kingroot.sdk.bg: com.kingroot.sdk.g a(java.lang.String,com.kingroot.sdk.d,int)>($r3, $r7, $i0);

     label06:
        if $r10 == null goto label02;

     label07:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label08:
        goto label02;

     label09:
        $r11 := @caughtexception;

        goto label02;

     label10:
        $r9 = $r1.<com.kingroot.sdk.f: com.kingroot.sdk.u n>;

        $i0 = $r9.<com.kingroot.sdk.u: int al>;

     label11:
        goto label05;

     label12:
        return $r2;

        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
    }

    private void d(java.util.List)
    {
        java.lang.Throwable $r4;
        java.util.List $r1;
        com.kingroot.sdk.bg r0;
        java.util.concurrent.ConcurrentLinkedQueue $r2, $r3;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.util.List;

        if $r1 == null goto label5;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        entermonitor $r2;

     label2:
        $r3 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        virtualinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: boolean addAll(java.util.Collection)>($r1);

        exitmonitor $r2;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean d(com.kingroot.sdk.f)
    {
        byte $b3;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.u $r2;
        com.kingroot.sdk.f $r1;
        int $i1;
        long $l0, $l2;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.f;

        $r2 = $r1.<com.kingroot.sdk.f: com.kingroot.sdk.u n>;

        $i1 = $r2.<com.kingroot.sdk.u: int al>;

        if $i1 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $l2 = (long) $i1;

        $b3 = $l0 cmp $l2;

        $i1 = (int) $b3;

        if $i1 > 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void e(long)
    {
        android.content.Context $r6;
        android.app.AlarmManager $r10;
        java.util.Date $r3;
        java.text.SimpleDateFormat $r1;
        long $l0;
        android.content.Intent $r7;
        com.kingroot.sdk.dg $r5;
        android.app.PendingIntent $r8;
        com.kingroot.sdk.bg r0;
        java.util.Locale $r2;
        java.lang.Object $r9;
        java.lang.String $r4;

        r0 := @this: com.kingroot.sdk.bg;

        $l0 := @parameter0: long;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd/MM/yyyy HH:mm:ss", $r2);

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l0);

        $r4 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("setNextRequireTime", $r4);

        $r5 = staticinvoke <com.kingroot.sdk.dg: com.kingroot.sdk.dg aK()>();

        $r6 = $r5.<com.kingroot.sdk.dg: android.content.Context ek>;

        if $r6 == null goto label1;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        virtualinvoke $r7.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("com.kingroot.kinguser.action.update");

        $r8 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r6, 0, $r7, 0);

        $r9 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r9;

        virtualinvoke $r10.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r8);

        virtualinvoke $r10.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(1, $l0, $r8);

     label1:
        staticinvoke <com.kingroot.sdk.bc: void d(long)>($l0);

        return;
    }

    private void e(java.util.List)
    {
        java.util.Iterator $r4;
        java.lang.Exception $r7;
        java.util.ArrayList $r2, $r3;
        com.kingroot.sdk.h $r8;
        java.util.List $r1;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r6;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: java.util.List;

        if $r1 == null goto label9;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 > 0 goto label1;

        return;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r1);

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.kingroot.sdk.f) $r5;

     label3:
        $r1 = specialinvoke r0.<com.kingroot.sdk.bg: java.util.List a(com.kingroot.sdk.f)>($r6);

     label4:
        if $r1 == null goto label2;

     label5:
        virtualinvoke $r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r1);

     label6:
        goto label2;

     label7:
        $r7 := @caughtexception;

        staticinvoke <com.kingroot.sdk.at: void a(java.lang.Throwable)>($r7);

        goto label2;

     label8:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label9;

        $r8 = new com.kingroot.sdk.h;

        specialinvoke $r8.<com.kingroot.sdk.h: void <init>()>();

        $r8.<com.kingroot.sdk.h: java.util.ArrayList z> = $r2;

        staticinvoke <com.kingroot.sdk.be: void a(com.kingroot.sdk.h)>($r8);

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private boolean e(com.kingroot.sdk.f)
    {
        com.kingroot.sdk.d $r4;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r1;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;
        java.util.ArrayList $r2;

        r0 := @this: com.kingroot.sdk.bg;

        $r1 := @parameter0: com.kingroot.sdk.f;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<com.kingroot.sdk.bg: boolean d(com.kingroot.sdk.f)>($r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke $r1.<com.kingroot.sdk.f: java.util.ArrayList a()>();

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label4;

     label3:
        return 0;

     label4:
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.kingroot.sdk.d) $r3;

        if $r4 != null goto label5;

        return 0;

     label5:
        return 1;
    }

    public final void d(boolean)
    {
        com.kingroot.sdk.bg r0;
        long $l0, $l1, $l2;
        com.kingroot.sdk.gj $r1;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.bg;

        $z0 := @parameter0: boolean;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("checkCloudCmd", "checkCloudCmd");

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = staticinvoke <com.kingroot.sdk.bc: long Q()>();

        $l2 = staticinvoke <com.kingroot.sdk.bc: long R()>();

        $z0 = staticinvoke <com.kingroot.sdk.util.r: boolean a(long,long,long)>($l1, $l0, $l2);

        if $z0 != 0 goto label1;

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("checkCloudCmd", "not the time");

        return;

     label1:
        $r1 = r0.<com.kingroot.sdk.bg: com.kingroot.sdk.gj dg>;

        virtualinvoke $r1.<com.kingroot.sdk.gj: boolean i(boolean)>(1);

        return;
    }

    public final void e(boolean)
    {
        java.util.Iterator $r4;
        com.kingroot.sdk.gj $r7;
        com.kingroot.sdk.bg r0;
        com.kingroot.sdk.f $r6;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r5;
        java.lang.String $r3;
        boolean $z0;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: com.kingroot.sdk.bg;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("executeCloudCmd after getting Root : ");

        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.ci: void h(java.lang.String,java.lang.String)>("executeCloudCmd", $r3);

        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        $r4 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.kingroot.sdk.f) $r5;

        if $r6 == null goto label1;

        $z0 = specialinvoke r0.<com.kingroot.sdk.bg: boolean d(com.kingroot.sdk.f)>($r6);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue df>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void clear()>();

     label3:
        $r2 = r0.<com.kingroot.sdk.bg: java.util.concurrent.ConcurrentLinkedQueue de>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: int size()>();

        if $i0 <= 0 goto label4;

        $r7 = r0.<com.kingroot.sdk.bg: com.kingroot.sdk.gj dh>;

        virtualinvoke $r7.<com.kingroot.sdk.gj: boolean i(boolean)>(1);

     label4:
        return;
    }
}
