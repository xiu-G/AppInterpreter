public final class it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ extends java.lang.Object
{
    final it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0;

    public void <init>(it.intelisoft.mobile.crypto.business.utils.UtilitiesLite)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite;

        r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Vector HashmapData2Vector(java.util.HashMap)
    {
        java.util.Iterator $r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.util.Set $r3;
        java.util.HashMap $r1;
        java.lang.Exception $r7;
        java.util.Vector r2;
        java.lang.Long r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.util.HashMap;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

     label1:
        $r3 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        if $r4 == null goto label8;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label4:
        if $z0 != 0 goto label5;

        return r2;

     label5:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r5;

        $r5 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r5);

     label6:
        goto label2;

     label7:
        $r7 := @caughtexception;

     label8:
        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.util.Vector HashmapKeys2Vector(java.util.HashMap)
    {
        java.util.Iterator $r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.util.Set $r3;
        java.util.HashMap $r1;
        java.lang.Exception $r7;
        java.util.Vector r2;
        java.lang.Long r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.util.HashMap;

        r2 = new java.util.Vector;

        specialinvoke r2.<java.util.Vector: void <init>()>();

     label1:
        $r3 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        if $r4 == null goto label8;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label4:
        if $z0 != 0 goto label5;

        return r2;

     label5:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r5;

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>(r6);

     label6:
        goto label2;

     label7:
        $r7 := @caughtexception;

     label8:
        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public boolean checkCollectionValue(java.lang.Object) throws java.lang.Exception
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.util.Collection $r3;
        java.lang.Object $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Collection");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("flex.messaging.io.ArrayCollection");

        if $z0 == 0 goto label3;

     label1:
        $r3 = (java.util.Collection) $r1;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean getBooleanValue(java.lang.String) throws java.lang.Exception
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        java.lang.Exception $r3;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TRUE");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FALSE");

        if $z0 != 0 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Valore del parametri boolean diverso da TRUE e da FALSE [");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TRUE");

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.Object getDataTypeFromString(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.Float $r8;
        java.lang.Double $r9;
        long $l1;
        java.lang.Integer $r6;
        java.util.Vector r5;
        java.lang.Long $r7;
        int $i0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r10;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        double $d0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_ $r11;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.sql.Timestamp $r12;
        java.lang.Exception $r13;
        float $f0;
        java.lang.StringBuilder $r14;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        if $r3 == null goto label9;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("String");

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Integer");

        if $z0 == 0 goto label2;

        $r6 = new java.lang.Integer;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i0);

        return $r6;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Long");

        if $z0 == 0 goto label3;

        $r7 = new java.lang.Long;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        specialinvoke $r7.<java.lang.Long: void <init>(long)>($l1);

        return $r7;

     label3:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Float");

        if $z0 == 0 goto label4;

        $r8 = new java.lang.Float;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

        specialinvoke $r8.<java.lang.Float: void <init>(float)>($f0);

        return $r8;

     label4:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Double");

        if $z0 == 0 goto label5;

        $r9 = new java.lang.Double;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        specialinvoke $r9.<java.lang.Double: void <init>(double)>($d0);

        return $r9;

     label5:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Vector");

        if $z0 == 0 goto label6;

        r5 = new java.util.Vector;

        specialinvoke r5.<java.util.Vector: void <init>()>();

        virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>($r3);

        return r5;

     label6:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Timestamp");

        if $z0 == 0 goto label8;

        if $r4 == null goto label7;

        $r10 = r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0>;

        $r11 = $r10.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_ DATE>;

        $r12 = virtualinvoke $r11.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>($r3, $r4);

        return $r12;

     label7:
        $r10 = r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0>;

        $r11 = $r10.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_ DATE>;

        $r12 = virtualinvoke $r11.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>($r3, "yyyy-MM-dd HH:mm:ss");

        return $r12;

     label8:
        $r13 = new java.lang.Exception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("L\'oggetto non \u00e8 covertibile nel tipo passato perch\u00e8 non riconosciuto o complesso  TYPE: [");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE: [");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r13;

     label9:
        return null;
    }

    public java.lang.Double getDoubleValue(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Float r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.lang.Double r4;
        java.lang.Integer r5;
        java.lang.Exception $r8;
        java.lang.Long r7;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r2;
        java.lang.Object r1;
        java.lang.StringBuilder $r9;
        java.lang.String $r3;
        boolean $z0;
        double $d0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label5;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Double");

        if $z0 == 0 goto label1;

        r4 = (java.lang.Double) r1;

        return r4;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Integer");

        if $z0 == 0 goto label2;

        r5 = (java.lang.Integer) r1;

        $d0 = virtualinvoke r5.<java.lang.Integer: double doubleValue()>();

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return r4;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Float");

        if $z0 == 0 goto label3;

        r6 = (java.lang.Float) r1;

        $d0 = virtualinvoke r6.<java.lang.Float: double doubleValue()>();

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return r4;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Long");

        if $z0 == 0 goto label4;

        r7 = (java.lang.Long) r1;

        $d0 = virtualinvoke r7.<java.lang.Long: double doubleValue()>();

        r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return r4;

     label4:
        $r8 = new java.lang.Exception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("L\'oggetto non \u00e8 covertibile in intero.  TYPE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        throw $r8;

     label5:
        r4 = new java.lang.Double;

        specialinvoke r4.<java.lang.Double: void <init>(double)>(0.0);

        return r4;
    }

    public java.lang.Float getFloatValue(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Float r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.lang.Double r6;
        java.lang.Integer r5;
        java.lang.Exception $r8;
        java.lang.Long r7;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r2;
        float $f0;
        java.lang.Object r1;
        java.lang.StringBuilder $r9;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label5;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Float");

        if $z0 == 0 goto label1;

        r4 = (java.lang.Float) r1;

        return r4;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Integer");

        if $z0 == 0 goto label2;

        r5 = (java.lang.Integer) r1;

        $f0 = virtualinvoke r5.<java.lang.Integer: float floatValue()>();

        r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return r4;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Double");

        if $z0 == 0 goto label3;

        r6 = (java.lang.Double) r1;

        $f0 = virtualinvoke r6.<java.lang.Double: float floatValue()>();

        r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return r4;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Long");

        if $z0 == 0 goto label4;

        r7 = (java.lang.Long) r1;

        $f0 = virtualinvoke r7.<java.lang.Long: float floatValue()>();

        r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return r4;

     label4:
        $r8 = new java.lang.Exception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("L\'oggetto non \u00e8 covertibile in intero.  TYPE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        throw $r8;

     label5:
        r4 = new java.lang.Float;

        specialinvoke r4.<java.lang.Float: void <init>(double)>(0.0);

        return r4;
    }

    public java.lang.String getFullObjType(java.lang.Object)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.Integer getIntValue(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Float r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.lang.Double r7;
        java.lang.Integer r4;
        java.lang.Exception $r8;
        java.lang.Long r5;
        int $i0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r2;
        java.lang.Object r1;
        java.lang.StringBuilder $r9;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label5;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Integer");

        if $z0 == 0 goto label1;

        r4 = (java.lang.Integer) r1;

        return r4;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Long");

        if $z0 == 0 goto label2;

        r5 = (java.lang.Long) r1;

        $i0 = virtualinvoke r5.<java.lang.Long: int intValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return r4;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Float");

        if $z0 == 0 goto label3;

        r6 = (java.lang.Float) r1;

        $i0 = virtualinvoke r6.<java.lang.Float: int intValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return r4;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Double");

        if $z0 == 0 goto label4;

        r7 = (java.lang.Double) r1;

        $i0 = virtualinvoke r7.<java.lang.Double: int intValue()>();

        r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return r4;

     label4:
        $r8 = new java.lang.Exception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("L\'oggetto non \u00e8 covertibile in intero.  TYPE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        throw $r8;

     label5:
        r4 = new java.lang.Integer;

        specialinvoke r4.<java.lang.Integer: void <init>(int)>(0);

        return r4;
    }

    public java.lang.Long getLongValue(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Float r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.lang.Double r7;
        long $l0;
        java.lang.Integer r5;
        java.lang.Exception $r8;
        java.lang.Long r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r2;
        java.lang.Object r1;
        java.lang.StringBuilder $r9;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label5;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Long");

        if $z0 == 0 goto label1;

        r4 = (java.lang.Long) r1;

        return r4;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Integer");

        if $z0 == 0 goto label2;

        r5 = (java.lang.Integer) r1;

        $l0 = virtualinvoke r5.<java.lang.Integer: long longValue()>();

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return r4;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Float");

        if $z0 == 0 goto label3;

        r6 = (java.lang.Float) r1;

        $l0 = virtualinvoke r6.<java.lang.Float: long longValue()>();

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return r4;

     label3:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Double");

        if $z0 == 0 goto label4;

        r7 = (java.lang.Double) r1;

        $l0 = virtualinvoke r7.<java.lang.Double: long longValue()>();

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return r4;

     label4:
        $r8 = new java.lang.Exception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("L\'oggetto non \u00e8 covertibile in intero.  TYPE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE: [");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        throw $r8;

     label5:
        r4 = new java.lang.Long;

        specialinvoke r4.<java.lang.Long: void <init>(long)>(0L);

        return r4;
    }

    public java.lang.String getObjType(java.lang.Object)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_ $r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        int $i0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r3;
        java.lang.Object $r1;
        java.lang.String[] $r5;
        java.lang.String $r2;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.Object;

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r4 = $r3.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_ STRINGHE>;

        $r5 = virtualinvoke $r4.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String[] split(java.lang.String,char)>($r2, 46);

        if $r5 == null goto label1;

        $i0 = lengthof $r5;

        $i0 = $i0 - 1;

        $r2 = $r5[$i0];

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getStringValue(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Float r6;
        byte[] r12;
        java.lang.Double r7;
        java.util.Date r9;
        java.lang.Integer r4;
        java.lang.Long r5;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r2;
        java.lang.Boolean r10;
        java.lang.String $r3;
        boolean $z0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        java.sql.Timestamp r8;
        java.util.Collection r13;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ $r11;
        java.lang.Object r1;
        java.lang.StringBuilder $r14;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label13;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.String");

        if $z0 == 0 goto label01;

        $r3 = (java.lang.String) r1;

        return $r3;

     label01:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Integer");

        if $z0 == 0 goto label02;

        r4 = (java.lang.Integer) r1;

        $r3 = virtualinvoke r4.<java.lang.Integer: java.lang.String toString()>();

        return $r3;

     label02:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Long");

        if $z0 == 0 goto label03;

        r5 = (java.lang.Long) r1;

        $r3 = virtualinvoke r5.<java.lang.Long: java.lang.String toString()>();

        return $r3;

     label03:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Float");

        if $z0 == 0 goto label04;

        r6 = (java.lang.Float) r1;

        $r3 = virtualinvoke r6.<java.lang.Float: java.lang.String toString()>();

        return $r3;

     label04:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Double");

        if $z0 == 0 goto label05;

        r7 = (java.lang.Double) r1;

        $r3 = virtualinvoke r7.<java.lang.Double: java.lang.String toString()>();

        return $r3;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.sql.Timestamp");

        if $z0 == 0 goto label06;

        r8 = (java.sql.Timestamp) r1;

        $r3 = virtualinvoke r8.<java.sql.Timestamp: java.lang.String toString()>();

        return $r3;

     label06:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.util.Date");

        if $z0 == 0 goto label07;

        r9 = (java.util.Date) r1;

        $r3 = virtualinvoke r9.<java.util.Date: java.lang.String toString()>();

        return $r3;

     label07:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.lang.Boolean");

        if $z0 == 0 goto label09;

        r10 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label08;

        return "1";

     label08:
        return "0";

     label09:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[B");

        if $z0 == 0 goto label10;

        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r11 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_ BYTE>;

        r12 = (byte[]) r1;

        $r3 = virtualinvoke $r11.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: java.lang.String bytes2String(byte[],java.lang.String,boolean)>(r12, "UTF-8", 0);

        return $r3;

     label10:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.util.Collection");

        if $z0 != 0 goto label11;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("flex.messaging.io.ArrayCollection");

        if $z0 == 0 goto label12;

     label11:
        $r2 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        r0 = $r2.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        r13 = (java.util.Collection) r1;

        $r3 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>(r13);

        return $r3;

     label12:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("tipo - ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -  NON \u00e8 attualmente convertibile in stringa");

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label13:
        return null;
    }

    public java.lang.String getType(java.lang.String) throws java.lang.Exception
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("@");

        if $i0 < 0 goto label1;

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r1;

     label1:
        return null;
    }

    public java.lang.String getValue(java.lang.String) throws java.lang.Exception
    {
        int $i0;
        java.lang.String $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("@");

        if $i0 < 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label1:
        return $r1;
    }

    public java.lang.String showCollectionParams(java.util.Collection) throws java.lang.Exception
    {
        java.util.Iterator $r2, $r10;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ r0, $r6;
        java.util.Collection $r1;
        java.util.Set $r9;
        java.util.HashMap $r8;
        int i0;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r5;
        java.lang.Object $r4;
        java.lang.StringBuilder $r11;
        java.lang.String r3, $r7;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_;

        $r1 := @parameter0: java.util.Collection;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        r3 = "";

        i0 = 0;

     label1:
        if $r2 == null goto label8;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return r3;

     label2:
        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r6 = $r5.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        $r7 = virtualinvoke $r6.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>($r4);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("java.util.HashMap");

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("flex.messaging.io.amf.ASObject");

        if $z0 == 0 goto label7;

     label3:
        $r8 = (java.util.HashMap) $r4;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        if $r10 == null goto label5;

        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label6;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $r4 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r4;

        $r4 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        $r11 = new java.lang.StringBuilder;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" COLLECTION ELEMENT [");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] TYPE [");

        $r5 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r6 = $r5.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_ DATATYPES>;

        r3 = virtualinvoke $r6.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getFullObjType(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] KEY [");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] VALUE [");

        $r7 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label7:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tipo di dato [");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] NON gestito per il dump dei valori");

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label8:
        return r3;
    }
}
