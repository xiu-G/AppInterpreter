public class hw.ats.common.ds.CategoriesParser extends java.lang.Object
{

    public void <init>()
    {
        hw.ats.common.ds.CategoriesParser r0;

        r0 := @this: hw.ats.common.ds.CategoriesParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List parse(java.lang.String)
    {
        byte[] $r11;
        java.net.URL r4, $r16;
        javax.xml.parsers.SAXParserFactory $r6;
        java.util.ArrayList r5, $r15;
        org.xml.sax.XMLReader $r8;
        java.net.URLConnection $r9;
        javax.xml.parsers.SAXParser $r7;
        int $i0;
        java.lang.String $r1, $r18;
        org.apache.http.util.ByteArrayBuffer r2, $r17;
        org.xml.sax.InputSource $r13, $r21;
        hw.ats.common.ds.CategoriesParser r0;
        hw.ats.common.ds.CategoriesParser$XmlHandler r3, $r19;
        java.lang.Exception $r12;
        java.io.StringReader $r14, $r20;
        java.io.InputStream $r10;

        r0 := @this: hw.ats.common.ds.CategoriesParser;

        $r1 := @parameter0: java.lang.String;

        r5 = null;

        $r16 = new java.net.URL;

        r4 = $r16;

     label01:
        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        $r9 = virtualinvoke r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label02:
        $r17 = new org.apache.http.util.ByteArrayBuffer;

        r2 = $r17;

     label03:
        specialinvoke $r17.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>(1000);

     label04:
        $r11 = newarray (byte)[1024];

     label05:
        $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r11);

     label06:
        if $i0 == -1 goto label11;

     label07:
        virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>($r11, 0, $i0);

     label08:
        goto label05;

     label09:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

     label10:
        if r5 != null goto label18;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        return $r15;

     label11:
        $r18 = new java.lang.String;

        $r1 = $r18;

     label12:
        $r11 = virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>();

        specialinvoke $r18.<java.lang.String: void <init>(byte[],java.lang.String)>($r11, "UTF-8");

     label13:
        $r19 = new hw.ats.common.ds.CategoriesParser$XmlHandler;

        r3 = $r19;

     label14:
        specialinvoke $r19.<hw.ats.common.ds.CategoriesParser$XmlHandler: void <init>(hw.ats.common.ds.CategoriesParser)>(r0);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

     label15:
        $r21 = new org.xml.sax.InputSource;

        $r13 = $r21;

        $r20 = new java.io.StringReader;

        $r14 = $r20;

     label16:
        specialinvoke $r20.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke $r21.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r14);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r13);

        $r15 = virtualinvoke r3.<hw.ats.common.ds.CategoriesParser$XmlHandler: java.util.ArrayList getItems()>();

     label17:
        r5 = $r15;

        goto label10;

     label18:
        return r5;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label12 to label13 with label09;
        catch java.lang.Exception from label14 to label15 with label09;
        catch java.lang.Exception from label16 to label17 with label09;
    }
}
