class cs.gson.internal.ConstructorConstructor$5 extends java.lang.Object implements cs.gson.internal.ObjectConstructor
{
    final cs.gson.internal.ConstructorConstructor this$0;
    private final java.lang.reflect.Type val$type;

    void <init>(cs.gson.internal.ConstructorConstructor, java.lang.reflect.Type)
    {
        cs.gson.internal.ConstructorConstructor$5 r0;
        cs.gson.internal.ConstructorConstructor $r1;
        java.lang.reflect.Type $r2;

        r0 := @this: cs.gson.internal.ConstructorConstructor$5;

        $r1 := @parameter0: cs.gson.internal.ConstructorConstructor;

        $r2 := @parameter1: java.lang.reflect.Type;

        r0.<cs.gson.internal.ConstructorConstructor$5: cs.gson.internal.ConstructorConstructor this$0> = $r1;

        r0.<cs.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object construct()
    {
        cs.gson.JsonIOException $r6;
        java.lang.reflect.ParameterizedType $r2;
        java.lang.reflect.Type $r1;
        java.lang.reflect.Type[] $r3;
        java.lang.Class r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        cs.gson.internal.ConstructorConstructor$5 r0;
        java.util.EnumSet $r5;
        boolean $z0;

        r0 := @this: cs.gson.internal.ConstructorConstructor$5;

        $r1 = r0.<cs.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>;

        $z0 = $r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label2;

        $r1 = r0.<cs.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>;

        $r2 = (java.lang.reflect.ParameterizedType) $r1;

        $r3 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r1 = $r3[0];

        $z0 = $r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        r4 = (java.lang.Class) $r1;

        $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(r4);

        return $r5;

     label1:
        $r6 = new cs.gson.JsonIOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid EnumSet type: ");

        $r1 = r0.<cs.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>;

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<cs.gson.JsonIOException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        $r6 = new cs.gson.JsonIOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid EnumSet type: ");

        $r1 = r0.<cs.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>;

        $r8 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<cs.gson.JsonIOException: void <init>(java.lang.String)>($r8);

        throw $r6;
    }
}
