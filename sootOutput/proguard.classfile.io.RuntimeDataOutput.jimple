final class proguard.classfile.io.RuntimeDataOutput extends java.lang.Object
{
    private final java.io.DataOutput dataOutput;

    public void <init>(java.io.DataOutput)
    {
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.DataOutput $r1;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: java.io.DataOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput> = $r1;

        return;
    }

    public void write(int)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void write(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[])
    {
        java.lang.Throwable $r4;
        byte[] $r1;
        java.io.DataOutput $r3;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r6;
        java.lang.String $r2;
        java.lang.RuntimeException $r5;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: byte[];

        $r3 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r3.<java.io.DataOutput: void write(byte[])>($r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = (java.io.IOException) $r4;

        $r2 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[], int, int)
    {
        java.lang.Throwable $r4;
        byte[] $r1;
        java.io.DataOutput $r3;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r6;
        java.lang.RuntimeException $r5;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r3.<java.io.DataOutput: void write(byte[],int,int)>($r1, 0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        $r6 = (java.io.IOException) $r4;

        $r2 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeBoolean(boolean)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        boolean $z0;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $z0 := @parameter0: boolean;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeBoolean(boolean)>($z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeByte(int)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeByte(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeBytes(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeBytes(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeChar(int)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeChar(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeChars(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeChars(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeDouble(double)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;
        double $d0;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $d0 := @parameter0: double;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeDouble(double)>($d0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeFloat(float)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        float $f0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $f0 := @parameter0: float;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeFloat(float)>($f0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeInt(int)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeInt(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeLong(long)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        long $l0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $l0 := @parameter0: long;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeLong(long)>($l0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeShort(int)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $i0 := @parameter0: int;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeShort(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeUTF(java.lang.String)
    {
        java.lang.Throwable $r3;
        java.io.DataOutput $r2;
        proguard.classfile.io.RuntimeDataOutput r0;
        java.io.IOException $r5;
        java.lang.String $r1;
        java.lang.RuntimeException $r4;

        r0 := @this: proguard.classfile.io.RuntimeDataOutput;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<proguard.classfile.io.RuntimeDataOutput: java.io.DataOutput dataOutput>;

     label1:
        interfaceinvoke $r2.<java.io.DataOutput: void writeUTF(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = (java.io.IOException) $r3;

        $r1 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
