public class org.achartengine.chart.ScatterChart extends org.achartengine.chart.XYChart
{
    private static final int SHAPE_WIDTH;
    private static final float SIZE;

    public void <init>(org.achartengine.model.XYMultipleSeriesDataset, org.achartengine.renderer.XYMultipleSeriesRenderer)
    {
        org.achartengine.model.XYMultipleSeriesDataset $r1;
        org.achartengine.chart.ScatterChart r0;
        org.achartengine.renderer.XYMultipleSeriesRenderer $r2;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: org.achartengine.model.XYMultipleSeriesDataset;

        $r2 := @parameter1: org.achartengine.renderer.XYMultipleSeriesRenderer;

        specialinvoke r0.<org.achartengine.chart.XYChart: void <init>(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer)>($r1, $r2);

        return;
    }

    private void drawCircle(android.graphics.Canvas, android.graphics.Paint, float, float)
    {
        float $f0, $f1;
        org.achartengine.chart.ScatterChart r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, 3.0F, $r2);

        return;
    }

    private void drawDiamond(android.graphics.Canvas, android.graphics.Paint, float[], float, float)
    {
        float $f0, $f1, $f2;
        org.achartengine.chart.ScatterChart r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        float[] $r3;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 := @parameter2: float[];

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r3[0] = $f0;

        $f2 = $f1 - 3.0F;

        $r3[1] = $f2;

        $f2 = $f0 - 3.0F;

        $r3[2] = $f2;

        $r3[3] = $f1;

        $r3[4] = $f0;

        $f2 = $f1 + 3.0F;

        $r3[5] = $f2;

        $f0 = $f0 + 3.0F;

        $r3[6] = $f0;

        $r3[7] = $f1;

        virtualinvoke r0.<org.achartengine.chart.ScatterChart: void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean)>($r1, $r3, $r2, 1);

        return;
    }

    private void drawSquare(android.graphics.Canvas, android.graphics.Paint, float, float)
    {
        float $f0, $f1, $f2, $f3;
        org.achartengine.chart.ScatterChart r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2 = $f0 - 3.0F;

        $f3 = $f1 - 3.0F;

        $f0 = $f0 + 3.0F;

        $f1 = $f1 + 3.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r2);

        return;
    }

    private void drawTriangle(android.graphics.Canvas, android.graphics.Paint, float[], float, float)
    {
        float $f0, $f1, $f2;
        org.achartengine.chart.ScatterChart r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        float[] $r3;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 := @parameter2: float[];

        $f0 := @parameter3: float;

        $f1 := @parameter4: float;

        $r3[0] = $f0;

        $f2 = $f1 - 3.0F;

        $f2 = $f2 - 1.5F;

        $r3[1] = $f2;

        $f2 = $f0 - 3.0F;

        $r3[2] = $f2;

        $f1 = $f1 + 3.0F;

        $r3[3] = $f1;

        $f0 = $f0 + 3.0F;

        $r3[4] = $f0;

        $f0 = $r3[3];

        $r3[5] = $f0;

        virtualinvoke r0.<org.achartengine.chart.ScatterChart: void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean)>($r1, $r3, $r2, 1);

        return;
    }

    private void drawX(android.graphics.Canvas, android.graphics.Paint, float, float)
    {
        org.achartengine.chart.ScatterChart r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $f2 = $f0 - 3.0F;

        $f3 = $f1 - 3.0F;

        $f4 = $f0 + 3.0F;

        $f5 = $f1 + 3.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f4, $f5, $r2);

        $f2 = $f0 + 3.0F;

        $f3 = $f1 - 3.0F;

        $f0 = $f0 - 3.0F;

        $f1 = $f1 + 3.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f2, $f3, $f0, $f1, $r2);

        return;
    }

    public void drawLegendShape(android.graphics.Canvas, org.achartengine.renderer.SimpleSeriesRenderer, float, float, android.graphics.Paint)
    {
        org.achartengine.chart.PointStyle $r7;
        org.achartengine.chart.ScatterChart r0;
        float[] $r8;
        org.achartengine.renderer.SimpleSeriesRenderer $r3;
        org.achartengine.renderer.XYSeriesRenderer $r4;
        android.graphics.Paint$Style $r5;
        int[] $r6;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        boolean $z0;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r3 := @parameter1: org.achartengine.renderer.SimpleSeriesRenderer;

        $f0 := @parameter2: float;

        $f1 := @parameter3: float;

        $r2 := @parameter4: android.graphics.Paint;

        $r4 = (org.achartengine.renderer.XYSeriesRenderer) $r3;

        $z0 = virtualinvoke $r4.<org.achartengine.renderer.XYSeriesRenderer: boolean isFillPoints()>();

        if $z0 == 0 goto label3;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

     label1:
        $r6 = <org.achartengine.chart.ScatterChart$1: int[] $SwitchMap$org$achartengine$chart$PointStyle>;

        $r4 = (org.achartengine.renderer.XYSeriesRenderer) $r3;

        $r7 = virtualinvoke $r4.<org.achartengine.renderer.XYSeriesRenderer: org.achartengine.chart.PointStyle getPointStyle()>();

        $i0 = virtualinvoke $r7.<org.achartengine.chart.PointStyle: int ordinal()>();

        $i0 = $r6[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label9;
            default: goto label2;
        };

     label2:
        return;

     label3:
        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r5);

        goto label1;

     label4:
        $f0 = $f0 + 10.0F;

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawX(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        return;

     label5:
        $f0 = $f0 + 10.0F;

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        return;

     label6:
        $r8 = newarray (float)[6];

        $f0 = $f0 + 10.0F;

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float)>($r1, $r2, $r8, $f0, $f1);

        return;

     label7:
        $f0 = $f0 + 10.0F;

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        return;

     label8:
        $r8 = newarray (float)[8];

        $f0 = $f0 + 10.0F;

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float)>($r1, $r2, $r8, $f0, $f1);

        return;

     label9:
        $f0 = $f0 + 10.0F;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>($f0, $f1, $r2);

        return;
    }

    public void drawSeries(android.graphics.Canvas, android.graphics.Paint, float[], org.achartengine.renderer.SimpleSeriesRenderer, float, int)
    {
        org.achartengine.chart.ScatterChart r0;
        float[] $r3, $r9;
        org.achartengine.renderer.XYSeriesRenderer $r5;
        android.graphics.Paint$Style $r6;
        int[] $r7;
        int $i0, $i1, $i2;
        android.graphics.Canvas $r1;
        boolean $z0;
        org.achartengine.chart.PointStyle $r8;
        org.achartengine.renderer.SimpleSeriesRenderer $r4;
        float $f0, $f1;
        android.graphics.Paint $r2;

        r0 := @this: org.achartengine.chart.ScatterChart;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Paint;

        $r3 := @parameter2: float[];

        $r4 := @parameter3: org.achartengine.renderer.SimpleSeriesRenderer;

        $f0 := @parameter4: float;

        $i0 := @parameter5: int;

        $r5 = (org.achartengine.renderer.XYSeriesRenderer) $r4;

        $i0 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: int getColor()>();

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $z0 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: boolean isFillPoints()>();

        if $z0 == 0 goto label03;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

     label01:
        $i0 = lengthof $r3;

        $r7 = <org.achartengine.chart.ScatterChart$1: int[] $SwitchMap$org$achartengine$chart$PointStyle>;

        $r8 = virtualinvoke $r5.<org.achartengine.renderer.XYSeriesRenderer: org.achartengine.chart.PointStyle getPointStyle()>();

        $i1 = virtualinvoke $r8.<org.achartengine.chart.PointStyle: int ordinal()>();

        $i1 = $r7[$i1];

        lookupswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label08;
            case 4: goto label10;
            case 5: goto label12;
            case 6: goto label14;
            default: goto label02;
        };

     label02:
        return;

     label03:
        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        goto label01;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label15;

        $f0 = $r3[$i1];

        $i2 = $i1 + 1;

        $f1 = $r3[$i2];

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawX(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        $i1 = $i1 + 2;

        goto label05;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label15;

        $f0 = $r3[$i1];

        $i2 = $i1 + 1;

        $f1 = $r3[$i2];

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        $i1 = $i1 + 2;

        goto label07;

     label08:
        $r9 = newarray (float)[6];

        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label15;

        $f0 = $r3[$i1];

        $i2 = $i1 + 1;

        $f1 = $r3[$i2];

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float)>($r1, $r2, $r9, $f0, $f1);

        $i1 = $i1 + 2;

        goto label09;

     label10:
        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label15;

        $f0 = $r3[$i1];

        $i2 = $i1 + 1;

        $f1 = $r3[$i2];

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float)>($r1, $r2, $f0, $f1);

        $i1 = $i1 + 2;

        goto label11;

     label12:
        $r9 = newarray (float)[8];

        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label15;

        $f0 = $r3[$i1];

        $i2 = $i1 + 1;

        $f1 = $r3[$i2];

        specialinvoke r0.<org.achartengine.chart.ScatterChart: void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float)>($r1, $r2, $r9, $f0, $f1);

        $i1 = $i1 + 2;

        goto label13;

     label14:
        virtualinvoke $r1.<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>($r3, $r2);

     label15:
        return;
    }

    public int getLegendShapeWidth()
    {
        org.achartengine.chart.ScatterChart r0;

        r0 := @this: org.achartengine.chart.ScatterChart;

        return 10;
    }

    public static void <clinit>()
    {
        <org.achartengine.chart.ScatterChart: float SIZE> = 3.0F;

        <org.achartengine.chart.ScatterChart: int SHAPE_WIDTH> = 10;

        return;
    }
}
