public class cs.utils.io.ImageLoadUtil extends java.lang.Object
{

    public void <init>()
    {
        cs.utils.io.ImageLoadUtil r0;

        r0 := @this: cs.utils.io.ImageLoadUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] getImageByte(java.io.InputStream)
    {
        java.lang.Throwable r3;
        byte[] r1;
        java.io.ByteArrayOutputStream r2, $r4;
        java.io.IOException $r5;
        int $i0, $i1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r4 = new java.io.ByteArrayOutputStream;

        r2 = $r4;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1);

     label2:
        $i1 = -1;

        if $i0 != $i1 goto label4;

     label3:
        r1 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return r1;

     label4:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label5:
        goto label1;

     label6:
        r3 := @caughtexception;

        $r5 = (java.io.IOException) r3;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        goto label3;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public static void loadImage(int, java.lang.String, cs.utils.io.ImageLoadUtil$LoadImageLisenter, android.content.Context)
    {
        android.content.Context $r2;
        cs.utils.io.ImageLoadUtil$LoadImageLisenter $r1;
        cs.utils.io.ImageLoadUtil$2 $r4;
        java.lang.Thread $r3;
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: cs.utils.io.ImageLoadUtil$LoadImageLisenter;

        $r2 := @parameter3: android.content.Context;

        staticinvoke <cs.utils.io.ImageBuffer: void init(android.content.Context)>($r2);

        $r3 = new java.lang.Thread;

        $r4 = new cs.utils.io.ImageLoadUtil$2;

        specialinvoke $r4.<cs.utils.io.ImageLoadUtil$2: void <init>(java.lang.String,cs.utils.io.ImageLoadUtil$LoadImageLisenter,int)>($r0, $r1, $i0);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    public static void preLoadImage(java.lang.String[], cs.utils.io.ImageLoadUtil$PreLoadImageLisenter, android.content.Context)
    {
        android.content.Context $r2;
        cs.utils.io.ImageLoadUtil$PreLoadImageLisenter $r1;
        cs.utils.io.ImageLoadUtil$1 $r4;
        java.lang.Thread $r3;
        java.lang.String[] $r0;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: cs.utils.io.ImageLoadUtil$PreLoadImageLisenter;

        $r2 := @parameter2: android.content.Context;

        staticinvoke <cs.utils.io.ImageBuffer: void init(android.content.Context)>($r2);

        $r3 = new java.lang.Thread;

        $r4 = new cs.utils.io.ImageLoadUtil$1;

        specialinvoke $r4.<cs.utils.io.ImageLoadUtil$1: void <init>(java.lang.String[],cs.utils.io.ImageLoadUtil$PreLoadImageLisenter)>($r0, $r1);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }
}
