public class cn.trinea.android.common.util.JSONUtils extends java.lang.Object
{

    public void <init>()
    {
        cn.trinea.android.common.util.JSONUtils r0;

        r0 := @this: cn.trinea.android.common.util.JSONUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean getBoolean(java.lang.String, java.lang.String, java.lang.Boolean)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r3;
        java.lang.Boolean $r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Boolean;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $z0 = staticinvoke <cn.trinea.android.common.util.JSONUtils: boolean getBoolean(org.json.JSONObject,java.lang.String,java.lang.Boolean)>($r3, $r1, $r2);

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static boolean getBoolean(org.json.JSONObject, java.lang.String, java.lang.Boolean)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r0;
        java.lang.Boolean $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Boolean;

        if $r0 == null goto label1;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label2:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>($r1);

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static double getDouble(java.lang.String, java.lang.String, double)
    {
        java.lang.Double $r2;
        java.lang.String $r0, $r1;
        double $d0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Double getDouble(java.lang.String,java.lang.String,java.lang.Double)>($r0, $r1, $r2);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public static double getDouble(org.json.JSONObject, java.lang.String, double)
    {
        org.json.JSONObject $r0;
        java.lang.Double $r2;
        java.lang.String $r1;
        double $d0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Double getDouble(org.json.JSONObject,java.lang.String,java.lang.Double)>($r0, $r1, $r2);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;
    }

    public static java.lang.Double getDouble(java.lang.String, java.lang.String, java.lang.Double)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.lang.Double $r2, $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Double;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Double getDouble(org.json.JSONObject,java.lang.String,java.lang.Double)>($r3, $r1, $r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.lang.Double getDouble(org.json.JSONObject, java.lang.String, java.lang.Double)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r0;
        java.lang.Double $r2, $r3;
        java.lang.String $r1;
        boolean $z0;
        double $d0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Double;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $d0 = virtualinvoke $r0.<org.json.JSONObject: double getDouble(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static int getInt(java.lang.String, java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0, $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Integer getInt(java.lang.String,java.lang.String,java.lang.Integer)>($r0, $r1, $r2);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static int getInt(org.json.JSONObject, java.lang.String, int)
    {
        org.json.JSONObject $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Integer $r2;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Integer getInt(org.json.JSONObject,java.lang.String,java.lang.Integer)>($r0, $r1, $r2);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static java.lang.Integer getInt(java.lang.String, java.lang.String, java.lang.Integer)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.lang.String $r0, $r1;
        java.lang.Integer $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Integer;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Integer getInt(org.json.JSONObject,java.lang.String,java.lang.Integer)>($r3, $r1, $r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.lang.Integer getInt(org.json.JSONObject, java.lang.String, java.lang.Integer)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r0;
        int $i0;
        java.lang.String $r1;
        java.lang.Integer $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Integer;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $i0 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static org.json.JSONArray getJSONArray(java.lang.String, java.lang.String, org.json.JSONArray)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.lang.String $r0, $r1;
        org.json.JSONArray $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONArray;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: org.json.JSONArray getJSONArray(org.json.JSONObject,java.lang.String,org.json.JSONArray)>($r3, $r1, $r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static org.json.JSONArray getJSONArray(org.json.JSONObject, java.lang.String, org.json.JSONArray)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r0;
        java.lang.String $r1;
        org.json.JSONArray $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONArray;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static org.json.JSONObject getJSONObject(java.lang.String, java.lang.String, org.json.JSONObject)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r2, $r3;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONObject;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r3 = staticinvoke <cn.trinea.android.common.util.JSONUtils: org.json.JSONObject getJSONObject(org.json.JSONObject,java.lang.String,org.json.JSONObject)>($r3, $r1, $r2);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static org.json.JSONObject getJSONObject(org.json.JSONObject, java.lang.String, org.json.JSONObject)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r0, $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.json.JSONObject;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r0 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r1);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static long getLong(java.lang.String, java.lang.String, long)
    {
        java.lang.Long $r2;
        long $l0;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Long getLong(java.lang.String,java.lang.String,java.lang.Long)>($r0, $r1, $r2);

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public static long getLong(org.json.JSONObject, java.lang.String, long)
    {
        org.json.JSONObject $r0;
        java.lang.Long $r2;
        long $l0;
        java.lang.String $r1;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Long getLong(org.json.JSONObject,java.lang.String,java.lang.Long)>($r0, $r1, $r2);

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public static java.lang.Long getLong(java.lang.String, java.lang.String, java.lang.Long)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.lang.Long $r2, $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Long;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.Long getLong(org.json.JSONObject,java.lang.String,java.lang.Long)>($r3, $r1, $r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.lang.Long getLong(org.json.JSONObject, java.lang.String, java.lang.Long)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r0;
        java.lang.Long $r2, $r3;
        long $l0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Long;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $l0 = virtualinvoke $r0.<org.json.JSONObject: long getLong(java.lang.String)>($r1);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.util.Map getMap(java.lang.String, java.lang.String)
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.util.Map $r4;
        int $i0;
        java.util.HashMap $r2;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        return $r2;

     label2:
        $r3 = new org.json.JSONObject;

     label3:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.util.Map getMap(org.json.JSONObject,java.lang.String)>($r3, $r1);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return null;

        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static java.util.Map getMap(org.json.JSONObject, java.lang.String)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r1 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String)>($r0, $r1, null);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.util.Map parseKeyAndValueToMap(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String getString(java.lang.String, java.lang.String, java.lang.String)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r3;
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String)>($r3, $r1, $r2);

     label3:
        return $r0;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.lang.String getString(org.json.JSONObject, java.lang.String, java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 == null goto label4;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

     label4:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static java.lang.String[] getStringArray(java.lang.String, java.lang.String, java.lang.String[])
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r3;
        java.lang.String[] $r2, $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.String[] getStringArray(org.json.JSONObject,java.lang.String,java.lang.String[])>($r3, $r1, $r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

        return $r2;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.lang.String[] getStringArray(org.json.JSONObject, java.lang.String, java.lang.String[])
    {
        java.lang.String[] $r2, $r4;
        org.json.JSONException $r5;
        org.json.JSONObject $r0;
        int $i0, $i1;
        java.lang.String $r1;
        org.json.JSONArray $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        if $r0 == null goto label10;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label01;

        return $r2;

     label01:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r1);

     label02:
        if $r3 == null goto label10;

     label03:
        $i0 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label04:
        $r4 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label05:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

     label06:
        if $i0 < $i1 goto label07;

        return $r4;

     label07:
        $r1 = virtualinvoke $r3.<org.json.JSONArray: java.lang.String getString(int)>($i0);

     label08:
        $r4[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label05;

     label09:
        $r5 := @caughtexception;

        virtualinvoke $r5.<org.json.JSONException: void printStackTrace()>();

     label10:
        return $r2;

        catch org.json.JSONException from label01 to label02 with label09;
        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
    }

    public static java.util.Map parseKeyAndValueToMap(java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        java.util.Map $r2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new org.json.JSONObject;

     label2:
        specialinvoke $r1.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.util.Map parseKeyAndValueToMap(org.json.JSONObject)>($r1);

     label3:
        return $r2;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

        return null;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static java.util.Map parseKeyAndValueToMap(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.util.Iterator $r2;
        java.util.HashMap $r1;
        java.lang.Object $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        return $r1;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <cn.trinea.android.common.util.JSONUtils: java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String)>($r0, $r4, "");

        staticinvoke <cn.trinea.android.common.util.MapUtils: boolean putMapNotEmptyKey(java.util.Map,java.lang.String,java.lang.String)>($r1, $r4, $r5);

        goto label2;
    }
}
