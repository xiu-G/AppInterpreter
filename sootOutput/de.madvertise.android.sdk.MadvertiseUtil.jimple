public class de.madvertise.android.sdk.MadvertiseUtil extends java.lang.Object
{
    static final java.lang.String AD_PROVIDER_TEXT;
    static final java.lang.String ANIMATION_TYPE_DEFAULT;
    static final java.lang.String ANIMATION_TYPE_FADE;
    static final java.lang.String ANIMATION_TYPE_LEFT_TO_RIGHT;
    static final java.lang.String ANIMATION_TYPE_TOP_DOWN;
    static final int BACKGROUND_COLOR_DEFAULT;
    static final int BANNER_HEIGHT_DEFAULT;
    static final java.lang.String BANNER_TYPE_ALL;
    static final java.lang.String BANNER_TYPE_DEFAULT;
    static final java.lang.String BANNER_TYPE_FULLSCREEN;
    static final java.lang.String BANNER_TYPE_LANDSCAPE;
    static final java.lang.String BANNER_TYPE_LEADERBOARD;
    static final java.lang.String BANNER_TYPE_MEDIUM_RECTANGLE;
    static final java.lang.String BANNER_TYPE_MMA;
    static final java.lang.String BANNER_TYPE_PORTRAIT;
    static final java.lang.String BANNER_TYPE_RICH_MEDIA;
    static final java.lang.String BANNER_TYPE_RICH_MEDIA_SHORT;
    static final int BANNER_WIDTH_DEFAULT;
    static final int CONNECTION_TIMEOUT;
    static final boolean DELIVER_ONLY_TEXT_DEFAULT;
    static final java.lang.String ENCODING;
    static final int FULLSCREEN_BANNER_HEIGHT;
    static final int FULLSCREEN_BANNER_WIDTH;
    static final int LANDSCAPE_BANNER_HEIGHT;
    static final int LANDSCAPE_BANNER_WIDTH;
    static final int LEADERBOARD_BANNER_HEIGHT;
    static final int LEADERBOARD_BANNER_WIDTH;
    static final java.lang.String LOG;
    private static final java.lang.String MADVERTISE_SITE_TOKEN;
    static final java.lang.String MAD_SERVER;
    static final int MAX_NUMBER_OF_CACHED_ADS;
    static final int MEDIUM_RECTANGLE_BANNER_HEIGHT;
    static final int MEDIUM_RECTANGLE_BANNER_WIDTH;
    static final int MMA_BANNER_HEIGHT;
    static final int MMA_BANNER_WIDTH;
    public static final int PLACEMENT_TYPE_INLINE;
    public static final int PLACEMENT_TYPE_INTERSTITIAL;
    static final int PORTRAIT_BANNER_HEIGHT;
    static final int PORTRAIT_BANNER_WIDTH;
    static final boolean PRINT_LOG;
    static final int SECONDS_TO_REFRESH_AD_DEFAULT;
    static final int SECONDS_TO_REFRESH_LOCATION;
    static final int TEXT_COLOR_DEFAULT;
    static final int TEXT_SIZE_DEFAULT;
    static final int TEXT_SIZE_PROVIDER;
    private static android.location.Location sCurrentLocation;
    private static long sLocationUpdateTimestamp;
    private static java.lang.String sUA;

    static void <clinit>()
    {
        <de.madvertise.android.sdk.MadvertiseUtil: int TEXT_SIZE_PROVIDER> = 10;

        <de.madvertise.android.sdk.MadvertiseUtil: int TEXT_SIZE_DEFAULT> = 18;

        <de.madvertise.android.sdk.MadvertiseUtil: int TEXT_COLOR_DEFAULT> = -1;

        <de.madvertise.android.sdk.MadvertiseUtil: int SECONDS_TO_REFRESH_LOCATION> = 900;

        <de.madvertise.android.sdk.MadvertiseUtil: int SECONDS_TO_REFRESH_AD_DEFAULT> = 45;

        <de.madvertise.android.sdk.MadvertiseUtil: boolean PRINT_LOG> = 1;

        <de.madvertise.android.sdk.MadvertiseUtil: int PORTRAIT_BANNER_WIDTH> = 766;

        <de.madvertise.android.sdk.MadvertiseUtil: int PORTRAIT_BANNER_HEIGHT> = 66;

        <de.madvertise.android.sdk.MadvertiseUtil: int PLACEMENT_TYPE_INTERSTITIAL> = 1;

        <de.madvertise.android.sdk.MadvertiseUtil: int PLACEMENT_TYPE_INLINE> = 0;

        <de.madvertise.android.sdk.MadvertiseUtil: int MMA_BANNER_WIDTH> = 320;

        <de.madvertise.android.sdk.MadvertiseUtil: int MMA_BANNER_HEIGHT> = 53;

        <de.madvertise.android.sdk.MadvertiseUtil: int MEDIUM_RECTANGLE_BANNER_WIDTH> = 300;

        <de.madvertise.android.sdk.MadvertiseUtil: int MEDIUM_RECTANGLE_BANNER_HEIGHT> = 250;

        <de.madvertise.android.sdk.MadvertiseUtil: int MAX_NUMBER_OF_CACHED_ADS> = 4;

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String MAD_SERVER> = "http://ad.madvertise.de";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String MADVERTISE_SITE_TOKEN> = "madvertise_site_token";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String LOG> = "MAD_LOG";

        <de.madvertise.android.sdk.MadvertiseUtil: int LEADERBOARD_BANNER_WIDTH> = 728;

        <de.madvertise.android.sdk.MadvertiseUtil: int LEADERBOARD_BANNER_HEIGHT> = 90;

        <de.madvertise.android.sdk.MadvertiseUtil: int LANDSCAPE_BANNER_WIDTH> = 1024;

        <de.madvertise.android.sdk.MadvertiseUtil: int LANDSCAPE_BANNER_HEIGHT> = 66;

        <de.madvertise.android.sdk.MadvertiseUtil: int FULLSCREEN_BANNER_WIDTH> = 768;

        <de.madvertise.android.sdk.MadvertiseUtil: int FULLSCREEN_BANNER_HEIGHT> = 768;

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String ENCODING> = "UTF-8";

        <de.madvertise.android.sdk.MadvertiseUtil: boolean DELIVER_ONLY_TEXT_DEFAULT> = 0;

        <de.madvertise.android.sdk.MadvertiseUtil: int CONNECTION_TIMEOUT> = 5000;

        <de.madvertise.android.sdk.MadvertiseUtil: int BANNER_WIDTH_DEFAULT> = 320;

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_RICH_MEDIA_SHORT> = "rm";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_RICH_MEDIA> = "rich_media";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_PORTRAIT> = "portrait";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_MMA> = "mma";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_MEDIUM_RECTANGLE> = "medium_rectangle";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_LEADERBOARD> = "leaderboard";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_LANDSCAPE> = "landscape";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_FULLSCREEN> = "fullscreen";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_DEFAULT> = "mma";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String BANNER_TYPE_ALL> = "all";

        <de.madvertise.android.sdk.MadvertiseUtil: int BANNER_HEIGHT_DEFAULT> = 53;

        <de.madvertise.android.sdk.MadvertiseUtil: int BACKGROUND_COLOR_DEFAULT> = 0;

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String ANIMATION_TYPE_TOP_DOWN> = "top_down";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String ANIMATION_TYPE_LEFT_TO_RIGHT> = "left_to_right";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String ANIMATION_TYPE_FADE> = "fade";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String ANIMATION_TYPE_DEFAULT> = "fade";

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String AD_PROVIDER_TEXT> = "ad by madvertise";

        <de.madvertise.android.sdk.MadvertiseUtil: long sLocationUpdateTimestamp> = 0L;

        <de.madvertise.android.sdk.MadvertiseUtil: android.location.Location sCurrentLocation> = null;

        return;
    }

    public void <init>()
    {
        de.madvertise.android.sdk.MadvertiseUtil r0;

        r0 := @this: de.madvertise.android.sdk.MadvertiseUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$0(android.location.Location)
    {
        android.location.Location $r0;

        $r0 := @parameter0: android.location.Location;

        <de.madvertise.android.sdk.MadvertiseUtil: android.location.Location sCurrentLocation> = $r0;

        return;
    }

    static void access$1(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        <de.madvertise.android.sdk.MadvertiseUtil: long sLocationUpdateTimestamp> = $l0;

        return;
    }

    private static void checkEmptyJson(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONException $r2;
        org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r2 = new org.json.JSONException;

        specialinvoke $r2.<org.json.JSONException: void <init>(java.lang.String)>("Empty JSON or key");

        throw $r2;

     label2:
        return;
    }

    public static boolean checkForBrowserDeclaration(android.content.Context)
    {
        android.content.Context $r0;
        java.util.List $r3;
        android.content.pm.PackageManager $r2;
        int $i0;
        android.content.Intent r1;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r1 = new android.content.Intent;

        specialinvoke r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, class "Lde/madvertise/android/sdk/MadvertiseActivity;");

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r1, 0);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkPermissionGranted(java.lang.String, android.content.Context)
    {
        int $i0;
        android.content.Context $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $i0 = virtualinvoke $r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r0);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String convertStreamToString(java.io.InputStream)
    {
        java.lang.Throwable r5, r6, $r7, r8, r9;
        java.io.IOException $r13;
        java.io.InputStreamReader $r10;
        java.lang.StringBuilder r2, $r4, $r12;
        java.io.BufferedReader r1, $r11;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r11 = new java.io.BufferedReader;

        r1 = $r11;

        $r10 = new java.io.InputStreamReader;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

        $r4 = new java.lang.StringBuilder;

        r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r3 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if $r3 != null goto label05;

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label04:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label05:
        $r12 = new java.lang.StringBuilder;

     label06:
        $r4 = $r12;

     label07:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label08:
        goto label01;

     label09:
        r5 := @caughtexception;

     label10:
        $r13 = (java.io.IOException) r5;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        goto label04;

     label13:
        r6 := @caughtexception;

        $r13 = (java.io.IOException) r6;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label14:
        $r7 := @caughtexception;

     label15:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label16:
        throw $r7;

     label17:
        r8 := @caughtexception;

        $r13 = (java.io.IOException) r8;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label16;

     label18:
        r9 := @caughtexception;

        $r13 = (java.io.IOException) r9;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        goto label04;

        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label15 to label16 with label17;
    }

    public static java.lang.String getAllHeadersAsString(org.apache.http.Header[])
    {
        org.apache.http.Header[] $r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        org.apache.http.Header $r3;

        $r0 := @parameter0: org.apache.http.Header[];

        r1 = "";

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<< ");

        $r3 = $r0[i0];

        r1 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r3 = $r0[i0];

        r1 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >>");

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;
    }

    public static java.lang.String getApplicationName(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        java.lang.CharSequence $r5;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

        $r5 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r4);

        $r3 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        $r6 = (android.content.pm.PackageManager$NameNotFoundException) r1;

        virtualinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getApplicationVersion(android.content.Context)
    {
        java.lang.Throwable r1;
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

     label2:
        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r3;

     label3:
        r1 := @caughtexception;

        $r5 = (android.content.pm.PackageManager$NameNotFoundException) r1;

        virtualinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getHash(java.lang.String, de.madvertise.android.sdk.MadvertiseUtil$HashType)
    {
        java.lang.Throwable r2, $r8;
        byte[] $r6;
        java.security.MessageDigest $r5;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r3, $r9;
        int i0, $i1;
        java.lang.String $r0, $r4;
        de.madvertise.android.sdk.MadvertiseUtil$HashType $r1;
        java.security.NoSuchAlgorithmException $r11;
        java.lang.StringBuilder $r7, $r10;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: de.madvertise.android.sdk.MadvertiseUtil$HashType;

        entermonitor class "Lde/madvertise/android/sdk/MadvertiseUtil;";

     label01:
        $r4 = virtualinvoke $r1.<de.madvertise.android.sdk.MadvertiseUtil$HashType: java.lang.String toString()>();

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4);

     label02:
        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r6);

        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r9 = new java.lang.StringBuffer;

        r3 = $r9;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label03:
        $i1 = lengthof $r6;

        if i0 < $i1 goto label07;

        $r0 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        exitmonitor class "Lde/madvertise/android/sdk/MadvertiseUtil;";

        return $r0;

     label05:
        r2 := @caughtexception;

     label06:
        $r11 = (java.security.NoSuchAlgorithmException) r2;

        virtualinvoke $r11.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Could not create hash value");

        $r0 = "";

        goto label04;

     label07:
        $b2 = $r6[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r4 = $r0;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= 2 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label09:
        i0 = i0 + 1;

        goto label03;

     label10:
        $r8 := @caughtexception;

        exitmonitor class "Lde/madvertise/android/sdk/MadvertiseUtil;";

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label04 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
    }

    public static java.lang.String getHashedAndroidID(android.content.Context, de.madvertise.android.sdk.MadvertiseUtil$HashType)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r2;
        java.lang.String $r3;
        de.madvertise.android.sdk.MadvertiseUtil$HashType $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: de.madvertise.android.sdk.MadvertiseUtil$HashType;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r2, "android_id");

        if $r3 != null goto label1;

        return "";

     label1:
        $r3 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String getHash(java.lang.String,de.madvertise.android.sdk.MadvertiseUtil$HashType)>($r3, $r1);

        return $r3;
    }

    public static java.lang.String getHashedMacAddress(android.content.Context, de.madvertise.android.sdk.MadvertiseUtil$HashType)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager r4;
        android.net.wifi.WifiInfo $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        de.madvertise.android.sdk.MadvertiseUtil$HashType $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: de.madvertise.android.sdk.MadvertiseUtil$HashType;

        r2 = null;

        $z0 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: boolean checkPermissionGranted(java.lang.String,android.content.Context)>("android.permission.ACCESS_WIFI_STATE", $r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        r4 = (android.net.wifi.WifiManager) $r3;

        $r5 = virtualinvoke r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        r2 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label1:
        if r2 != null goto label2;

        return "";

     label2:
        r2 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String getHash(java.lang.String,de.madvertise.android.sdk.MadvertiseUtil$HashType)>(r2, $r1);

        return r2;
    }

    private static java.util.ArrayList getInstalledApps(boolean, android.content.Context)
    {
        android.content.Context $r0;
        java.lang.CharSequence $r9;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo r6;
        android.graphics.drawable.Drawable $r10;
        java.util.ArrayList r2;
        de.madvertise.android.sdk.MadvertiseUtil$PInfo r1;
        java.util.List $r4;
        int i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r7;
        android.content.pm.ApplicationInfo $r8;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: android.content.Context;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

        return r2;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (android.content.pm.PackageInfo) $r5;

        if $z0 != 0 goto label4;

        $r7 = r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r7 != null goto label4;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        r1 = new de.madvertise.android.sdk.MadvertiseUtil$PInfo;

        specialinvoke r1.<de.madvertise.android.sdk.MadvertiseUtil$PInfo: void <init>()>();

        $r8 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = virtualinvoke $r8.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r3);

        $r7 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$1(de.madvertise.android.sdk.MadvertiseUtil$PInfo,java.lang.String)>(r1, $r7);

        $r7 = r6.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$2(de.madvertise.android.sdk.MadvertiseUtil$PInfo,java.lang.String)>(r1, $r7);

        $r7 = r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$3(de.madvertise.android.sdk.MadvertiseUtil$PInfo,java.lang.String)>(r1, $r7);

        $i1 = r6.<android.content.pm.PackageInfo: int versionCode>;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$4(de.madvertise.android.sdk.MadvertiseUtil$PInfo,int)>(r1, $i1);

        $r8 = r6.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r10 = virtualinvoke $r8.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>($r3);

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$5(de.madvertise.android.sdk.MadvertiseUtil$PInfo,android.graphics.drawable.Drawable)>(r1, $r10);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label3;
    }

    public static org.json.JSONArray getJSONArray(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        org.json.JSONArray $r2;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void checkEmptyJson(org.json.JSONObject,java.lang.String)>($r0, "tracking");

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("tracking");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("tracking");

        return $r2;

     label1:
        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        return $r2;
    }

    public static boolean getJSONBoolean(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void checkEmptyJson(org.json.JSONObject,java.lang.String)>($r0, "mraid");

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("mraid");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("mraid");

        return $z0;

     label1:
        return 0;
    }

    public static org.json.JSONObject getJSONObject(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void checkEmptyJson(org.json.JSONObject,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r1);

        return $r0;

     label1:
        return null;
    }

    public static java.lang.String getJSONValue(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void checkEmptyJson(org.json.JSONObject,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r1);

        return $r1;

     label1:
        return "";
    }

    public static java.lang.String getLocalIpAddress(de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener)
    {
        java.lang.Throwable r1;
        de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener $r0;
        java.util.Enumeration $r2, $r5;
        java.net.NetworkInterface r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.Exception $r9;
        java.net.InetAddress r6;
        java.net.SocketException $r10;
        java.lang.Object $r3;
        java.lang.String $r7;
        boolean $z0;

        $r0 := @parameter0: de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener;

     label01:
        $r2 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        if $r0 == null goto label05;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Couldn\'t obtain the local ip address");

        interfaceinvoke $r0.<de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener: void onError(java.lang.Exception)>($r8);

     label05:
        return "";

     label06:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

     label07:
        r4 = (java.net.NetworkInterface) $r3;

     label08:
        $r5 = virtualinvoke r4.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label09:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

     label10:
        if $z0 == 0 goto label02;

     label11:
        $r3 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

     label12:
        r6 = (java.net.InetAddress) $r3;

     label13:
        $z0 = virtualinvoke r6.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label14:
        if $z0 != 0 goto label09;

        $z0 = r6 instanceof java.net.Inet4Address;

        if $z0 == 0 goto label09;

     label15:
        $r7 = virtualinvoke r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toString()>();

     label16:
        return $r7;

     label17:
        r1 := @caughtexception;

        if $r0 == null goto label18;

        $r9 = (java.lang.Exception) r1;

        interfaceinvoke $r0.<de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener: void onError(java.lang.Exception)>($r9);

     label18:
        $r10 = (java.net.SocketException) r1;

        virtualinvoke $r10.<java.net.SocketException: void printStackTrace()>();

        goto label04;

        catch java.net.SocketException from label01 to label03 with label17;
        catch java.net.SocketException from label06 to label07 with label17;
        catch java.net.SocketException from label08 to label10 with label17;
        catch java.net.SocketException from label11 to label12 with label17;
        catch java.net.SocketException from label13 to label14 with label17;
        catch java.net.SocketException from label15 to label16 with label17;
    }

    public static android.location.Location getLocation()
    {
        android.location.Location r0;

        r0 = <de.madvertise.android.sdk.MadvertiseUtil: android.location.Location sCurrentLocation>;

        return r0;
    }

    public static java.util.ArrayList getPackages(android.content.Context)
    {
        android.content.Context $r0;
        de.madvertise.android.sdk.MadvertiseUtil$PInfo $r3;
        int $i0, i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: java.util.ArrayList getInstalledApps(boolean,android.content.Context)>(0, $r0);

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 < $i0 goto label2;

        return $r1;

     label2:
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r3 = (de.madvertise.android.sdk.MadvertiseUtil$PInfo) $r2;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil$PInfo: void access$0(de.madvertise.android.sdk.MadvertiseUtil$PInfo)>($r3);

        i1 = i1 + 1;

        goto label1;
    }

    public static java.lang.String getToken(android.content.Context, de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener)
    {
        android.content.Context $r0;
        android.os.Bundle $r7;
        de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener $r1;
        android.content.pm.PackageManager $r4;
        java.lang.IllegalArgumentException $r8;
        java.lang.Exception r2;
        java.lang.String r3, $r5;
        android.content.pm.ApplicationInfo $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener;

        r3 = null;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, 128);

        $r7 = $r6.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r5 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>("madvertise_site_token");

     label2:
        r3 = $r5;

     label3:
        if r3 != null goto label5;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Could not fetch \"madvertise_site_token\" from AndroidManifest.xml");

        if $r1 == null goto label5;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not fetch \"madvertise_site_token\" from AndroidManifest.xml");

        interfaceinvoke $r1.<de.madvertise.android.sdk.MadvertiseView$MadvertiseViewCallbackListener: void onError(java.lang.Exception)>($r8);

        return r3;

     label4:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        goto label3;

     label5:
        return r3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.String getUA()
    {
        java.lang.Object[] $r3;
        java.lang.StringBuffer r0;
        java.util.Locale $r2;
        int $i0;
        java.lang.String r1;

        r1 = <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String sUA>;

        if r1 == null goto label1;

        r1 = <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String sUA>;

        return r1;

     label1:
        r0 = new java.lang.StringBuffer;

        specialinvoke r0.<java.lang.StringBuffer: void <init>()>();

        r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label2:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = virtualinvoke $r2.<java.util.Locale: java.lang.String getLanguage()>();

        if r1 == null goto label7;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r1 = virtualinvoke $r2.<java.util.Locale: java.lang.String getCountry()>();

        if r1 == null goto label3;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label3:
        r1 = <android.os.Build: java.lang.String MODEL>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label4:
        r1 = <android.os.Build: java.lang.String ID>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Build/");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label5:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Mozilla/5.0 (Linux; U; Android %s) AppleWebKit/525.10+ (KHTML, like Gecko) Version/3.0.4 Mobile Safari/523.12.2", $r3);

        <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String sUA> = r1;

        r1 = <de.madvertise.android.sdk.MadvertiseUtil: java.lang.String sUA>;

        return r1;

     label6:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("1.0");

        goto label2;

     label7:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("de");

        goto label3;
    }

    public static void logMessage(java.lang.String, int, java.lang.String)
    {
        java.lang.StackTraceElement[] $r4;
        java.lang.Thread $r3;
        int $i0, $i1;
        java.lang.StackTraceElement $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r0, $r1, r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        r2 = "MAD_LOG";

        if $r1 != null goto label1;

        $r1 = "";

     label1:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r5 = $r4[3];

        $r0 = virtualinvoke $r5.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i1 = $i1 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r5 = $r4[3];

        $i1 = virtualinvoke $r5.<java.lang.StackTraceElement: int getLineNumber()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") : ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, r2, $r0);

        return;
    }

    public static java.lang.String printRequestParameters(java.util.List)
    {
        java.util.Iterator $r2;
        java.util.List r0;
        java.lang.StringBuilder r1, $r6;
        java.lang.Object $r4;
        java.lang.String $r3;
        org.apache.http.NameValuePair r5;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.http.NameValuePair) $r4;

        $r6 = new java.lang.StringBuilder;

        $r3 = interfaceinvoke r5.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = interfaceinvoke r5.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;
    }

    public static void refreshCoordinates(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        de.madvertise.android.sdk.MadvertiseUtil$1 $r8;
        android.location.Criteria r1, $r7;
        long $l0, $l1;
        byte $b2;
        android.os.Looper $r6;
        int $i3;
        java.lang.Object $r3;
        java.lang.String r5;
        android.location.LocationManager r4;
        boolean $z0, $z1;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Trying to refresh location");

        if $r0 != null goto label01;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Context not set - quit location refresh");

        return;

     label01:
        $l0 = <de.madvertise.android.sdk.MadvertiseUtil: long sLocationUpdateTimestamp>;

        $l0 = $l0 + 900000L;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label02;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "It\'s not time yet for refreshing the location");

        return;

     label02:
        entermonitor $r0;

     label03:
        $l0 = <de.madvertise.android.sdk.MadvertiseUtil: long sLocationUpdateTimestamp>;

        $l0 = $l0 + 900000L;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label07;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Another thread updated the loation already");

        exitmonitor $r0;

     label04:
        return;

     label05:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r2;

     label07:
        $z0 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: boolean checkPermissionGranted(java.lang.String,android.content.Context)>("android.permission.ACCESS_COARSE_LOCATION", $r0);

        $z1 = staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: boolean checkPermissionGranted(java.lang.String,android.content.Context)>("android.permission.ACCESS_FINE_LOCATION", $r0);

        if $z0 != 0 goto label09;

        if $z1 != 0 goto label09;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "No permissions for requesting the location");

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        r4 = (android.location.LocationManager) $r3;

        if r4 != null goto label11;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Unable to fetch a location manger");

        exitmonitor $r0;

     label10:
        return;

     label11:
        r5 = null;

        $r7 = new android.location.Criteria;

        r1 = $r7;

        specialinvoke $r7.<android.location.Criteria: void <init>()>();

        virtualinvoke r1.<android.location.Criteria: void setCostAllowed(boolean)>(0);

        if $z0 == 0 goto label12;

        virtualinvoke r1.<android.location.Criteria: void setAccuracy(int)>(2);

        r5 = virtualinvoke r4.<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>(r1, 1);

     label12:
        if r5 != null goto label15;

        if $z1 == 0 goto label13;

        virtualinvoke r1.<android.location.Criteria: void setAccuracy(int)>(1);

        r5 = virtualinvoke r4.<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>(r1, 1);

     label13:
        if r5 != null goto label15;

        staticinvoke <de.madvertise.android.sdk.MadvertiseUtil: void logMessage(java.lang.String,int,java.lang.String)>(null, 3, "Unable to fetch a location provider");

        exitmonitor $r0;

     label14:
        return;

     label15:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <de.madvertise.android.sdk.MadvertiseUtil: long sLocationUpdateTimestamp> = $l0;

        $r8 = new de.madvertise.android.sdk.MadvertiseUtil$1;

        specialinvoke $r8.<de.madvertise.android.sdk.MadvertiseUtil$1: void <init>(android.location.LocationManager)>(r4);

        $r6 = virtualinvoke $r0.<android.content.Context: android.os.Looper getMainLooper()>();

        virtualinvoke r4.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>(r5, 0L, 0.0F, $r8, $r6);

        exitmonitor $r0;

     label16:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label07 to label08 with label05;
        catch java.lang.Throwable from label09 to label10 with label05;
        catch java.lang.Throwable from label11 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
    }
}
