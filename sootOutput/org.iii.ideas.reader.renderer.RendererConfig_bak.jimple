public class org.iii.ideas.reader.renderer.RendererConfig_bak extends java.lang.Object
{
    public static final java.lang.String annImgFile;
    public static final java.lang.String bmImgDir;
    public static final int[] fontSizes;
    public static final int hMargin;
    public static final int[] headerSizes;
    public static boolean isVertical;
    public static final int[] lineSpaces;
    public static final int screenHeight;
    public static final int screenWidth;
    public static final int statusBarHeight;
    public static final int toLeft;
    public static final int toTop;
    public static final int wMargin;

    static void <clinit>()
    {
        int[] $r0;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int wMargin> = 32;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int toTop> = 25;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int toLeft> = 16;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int statusBarHeight> = 40;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int screenWidth> = 600;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int screenHeight> = 800;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int hMargin> = 81;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: java.lang.String bmImgDir> = "imgs";

        <org.iii.ideas.reader.renderer.RendererConfig_bak: java.lang.String annImgFile> = "ann.png";

        <org.iii.ideas.reader.renderer.RendererConfig_bak: boolean isVertical> = 0;

        $r0 = newarray (int)[6];

        $r0[0] = 20;

        $r0[1] = 23;

        $r0[2] = 28;

        $r0[3] = 30;

        $r0[4] = 35;

        $r0[5] = 38;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] fontSizes> = $r0;

        $r0 = newarray (int)[6];

        $r0[0] = 10;

        $r0[1] = 12;

        $r0[2] = 14;

        $r0[3] = 15;

        $r0[4] = 18;

        $r0[5] = 20;

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] lineSpaces> = $r0;

        $r0 = newarray (int)[0];

        <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] headerSizes> = $r0;

        return;
    }

    public void <init>()
    {
        org.iii.ideas.reader.renderer.RendererConfig_bak r0;

        r0 := @this: org.iii.ideas.reader.renderer.RendererConfig_bak;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getFontSize(int)
    {
        int $i0;
        int[] $r0;

        $i0 := @parameter0: int;

        $r0 = <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] fontSizes>;

        $i0 = $r0[$i0];

        return $i0;
    }

    public static int getHeaderFontSize(int, int)
    {
        int $i0, $i1;
        int[] $r0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 <= 2 goto label1;

        $r0 = <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] fontSizes>;

        $i0 = $r0[$i0];

        $i0 = $i0 + 2;

        return $i0;

     label1:
        $r0 = <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] fontSizes>;

        $i0 = $r0[$i0];

        $i0 = $i0 + 4;

        return $i0;
    }

    public static int getLineSpace(int)
    {
        int $i0;
        int[] $r0;

        $i0 := @parameter0: int;

        $r0 = <org.iii.ideas.reader.renderer.RendererConfig_bak: int[] lineSpaces>;

        $i0 = $r0[$i0];

        return $i0;
    }

    public static int getLinkColor()
    {
        return -16776961;
    }

    public static int getTextColor()
    {
        return -16777216;
    }

    public static int getUnderlineOffset()
    {
        return 2;
    }

    public static boolean isLinkUnderlined()
    {
        return 1;
    }
}
