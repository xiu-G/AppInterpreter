public class org.dom4j.io.SAXValidator extends java.lang.Object
{
    private org.xml.sax.ErrorHandler errorHandler;
    private org.xml.sax.XMLReader xmlReader;

    public void <init>()
    {
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = $r1;

        return;
    }

    protected void configureReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.helpers.DefaultHandler $r3;
        org.xml.sax.XMLReader $r2;
        org.xml.sax.ContentHandler $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        $r1 = interfaceinvoke $r2.<org.xml.sax.XMLReader: org.xml.sax.ContentHandler getContentHandler()>();

        if $r1 != null goto label1;

        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r3);

     label1:
        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", 1);

        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 0);

        return;
    }

    protected org.xml.sax.XMLReader createXMLReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 = staticinvoke <org.dom4j.io.SAXHelper: org.xml.sax.XMLReader createXMLReader(boolean)>(1);

        return $r1;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xml.sax.ErrorHandler r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        return r1;
    }

    public org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader createXMLReader()>();

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = $r1;

        virtualinvoke r0.<org.dom4j.io.SAXValidator: void configureReader()>();

     label1:
        $r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        return $r1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xml.sax.ErrorHandler $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler> = $r1;

        return;
    }

    public void setXMLReader(org.xml.sax.XMLReader) throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = $r1;

        virtualinvoke r0.<org.dom4j.io.SAXValidator: void configureReader()>();

        return;
    }

    public void validate(org.dom4j.Document) throws org.xml.sax.SAXException
    {
        java.lang.Throwable r2;
        org.dom4j.Document $r1;
        java.lang.RuntimeException $r6;
        org.xml.sax.XMLReader $r3;
        org.xml.sax.ErrorHandler $r4;
        java.lang.StringBuffer $r7;
        org.dom4j.io.DocumentInputSource $r5;
        java.lang.String $r8;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 := @parameter0: org.dom4j.Document;

        if $r1 == null goto label5;

        $r3 = virtualinvoke r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader getXMLReader()>();

        $r4 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        if $r4 == null goto label1;

        $r4 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r4);

     label1:
        $r5 = new org.dom4j.io.DocumentInputSource;

     label2:
        specialinvoke $r5.<org.dom4j.io.DocumentInputSource: void <init>(org.dom4j.Document)>($r1);

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r5);

     label3:
        return;

     label4:
        r2 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught and exception that should never happen: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
