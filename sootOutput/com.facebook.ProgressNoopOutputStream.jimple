class com.facebook.ProgressNoopOutputStream extends java.io.OutputStream implements com.facebook.RequestOutputStream
{
    private int batchMax;
    private final android.os.Handler callbackHandler;
    private com.facebook.Request currentRequest;
    private com.facebook.RequestProgress currentRequestProgress;
    private final java.util.Map progressMap;

    void <init>(android.os.Handler)
    {
        java.util.HashMap $r2;
        com.facebook.ProgressNoopOutputStream r0;
        android.os.Handler $r1;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.facebook.ProgressNoopOutputStream: java.util.Map progressMap> = $r2;

        r0.<com.facebook.ProgressNoopOutputStream: android.os.Handler callbackHandler> = $r1;

        return;
    }

    void addProgress(long)
    {
        long $l0, $l2;
        com.facebook.ProgressNoopOutputStream r0;
        com.facebook.RequestProgress $r1;
        android.os.Handler $r2;
        java.util.Map $r4;
        com.facebook.Request $r3;
        int $i1;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $l0 := @parameter0: long;

        $r1 = r0.<com.facebook.ProgressNoopOutputStream: com.facebook.RequestProgress currentRequestProgress>;

        if $r1 != null goto label1;

        $r1 = new com.facebook.RequestProgress;

        $r2 = r0.<com.facebook.ProgressNoopOutputStream: android.os.Handler callbackHandler>;

        $r3 = r0.<com.facebook.ProgressNoopOutputStream: com.facebook.Request currentRequest>;

        specialinvoke $r1.<com.facebook.RequestProgress: void <init>(android.os.Handler,com.facebook.Request)>($r2, $r3);

        r0.<com.facebook.ProgressNoopOutputStream: com.facebook.RequestProgress currentRequestProgress> = $r1;

        $r4 = r0.<com.facebook.ProgressNoopOutputStream: java.util.Map progressMap>;

        $r3 = r0.<com.facebook.ProgressNoopOutputStream: com.facebook.Request currentRequest>;

        $r1 = r0.<com.facebook.ProgressNoopOutputStream: com.facebook.RequestProgress currentRequestProgress>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

     label1:
        $r1 = r0.<com.facebook.ProgressNoopOutputStream: com.facebook.RequestProgress currentRequestProgress>;

        virtualinvoke $r1.<com.facebook.RequestProgress: void addToMax(long)>($l0);

        $i1 = r0.<com.facebook.ProgressNoopOutputStream: int batchMax>;

        $l2 = (long) $i1;

        $l0 = $l2 + $l0;

        $i1 = (int) $l0;

        r0.<com.facebook.ProgressNoopOutputStream: int batchMax> = $i1;

        return;
    }

    int getMaxProgress()
    {
        int i0;
        com.facebook.ProgressNoopOutputStream r0;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        i0 = r0.<com.facebook.ProgressNoopOutputStream: int batchMax>;

        return i0;
    }

    java.util.Map getProgressMap()
    {
        com.facebook.ProgressNoopOutputStream r0;
        java.util.Map r1;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        r1 = r0.<com.facebook.ProgressNoopOutputStream: java.util.Map progressMap>;

        return r1;
    }

    public void setCurrentRequest(com.facebook.Request)
    {
        com.facebook.RequestProgress $r4;
        java.util.Map $r3;
        com.facebook.Request $r1;
        java.lang.Object $r2;
        com.facebook.ProgressNoopOutputStream r0;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $r1 := @parameter0: com.facebook.Request;

        r0.<com.facebook.ProgressNoopOutputStream: com.facebook.Request currentRequest> = $r1;

        if $r1 == null goto label2;

        $r3 = r0.<com.facebook.ProgressNoopOutputStream: java.util.Map progressMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.facebook.RequestProgress) $r2;

     label1:
        r0.<com.facebook.ProgressNoopOutputStream: com.facebook.RequestProgress currentRequestProgress> = $r4;

        return;

     label2:
        $r4 = null;

        goto label1;
    }

    public void write(int)
    {
        int $i0;
        com.facebook.ProgressNoopOutputStream r0;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.facebook.ProgressNoopOutputStream: void addProgress(long)>(1L);

        return;
    }

    public void write(byte[])
    {
        byte[] $r1;
        int $i0;
        long $l1;
        com.facebook.ProgressNoopOutputStream r0;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        virtualinvoke r0.<com.facebook.ProgressNoopOutputStream: void addProgress(long)>($l1);

        return;
    }

    public void write(byte[], int, int)
    {
        byte[] $r1;
        int $i0, $i1;
        long $l2;
        com.facebook.ProgressNoopOutputStream r0;

        r0 := @this: com.facebook.ProgressNoopOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $l2 = (long) $i1;

        virtualinvoke r0.<com.facebook.ProgressNoopOutputStream: void addProgress(long)>($l2);

        return;
    }
}
