public class oauth.signpost.basic.DefaultOAuthConsumer extends oauth.signpost.AbstractOAuthConsumer
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String)
    {
        oauth.signpost.basic.DefaultOAuthConsumer r0;
        java.lang.String $r1, $r2;

        r0 := @this: oauth.signpost.basic.DefaultOAuthConsumer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<oauth.signpost.AbstractOAuthConsumer: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected oauth.signpost.http.HttpRequest wrap(java.lang.Object)
    {
        oauth.signpost.basic.DefaultOAuthConsumer r0;
        java.net.HttpURLConnection $r4;
        java.lang.Object $r1;
        oauth.signpost.basic.HttpURLConnectionRequestAdapter $r3;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: oauth.signpost.basic.DefaultOAuthConsumer;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.net.HttpURLConnection;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The default consumer expects requests of type java.net.HttpURLConnection");

        throw $r2;

     label1:
        $r3 = new oauth.signpost.basic.HttpURLConnectionRequestAdapter;

        $r4 = (java.net.HttpURLConnection) $r1;

        specialinvoke $r3.<oauth.signpost.basic.HttpURLConnectionRequestAdapter: void <init>(java.net.HttpURLConnection)>($r4);

        return $r3;
    }

    public static void <clinit>()
    {
        <oauth.signpost.basic.DefaultOAuthConsumer: long serialVersionUID> = 1L;

        return;
    }
}
