public abstract class giil.ido.util.md5 extends java.lang.Object
{
    private static final java.lang.String ALGORITHM;

    public void <init>()
    {
        giil.ido.util.md5 r0;

        r0 := @this: giil.ido.util.md5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] getHash(java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r2, $r6, $r7;
        byte[] $r3;
        java.io.BufferedInputStream r1, r4;
        java.io.FileInputStream $r5;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        r4 = null;

     label01:
        r1 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label02:
        $r3 = staticinvoke <giil.ido.util.md5: byte[] getHash(java.io.InputStream)>(r1);

     label03:
        if r1 == null goto label13;

     label04:
        virtualinvoke r1.<java.io.BufferedInputStream: void close()>();

     label05:
        return $r3;

     label06:
        $r6 := @caughtexception;

     label07:
        if r4 == null goto label09;

     label08:
        virtualinvoke r4.<java.io.BufferedInputStream: void close()>();

     label09:
        throw $r6;

     label10:
        $r2 := @caughtexception;

        goto label09;

     label11:
        $r7 := @caughtexception;

        return $r3;

     label12:
        $r6 := @caughtexception;

        r4 = r1;

        goto label07;

     label13:
        return $r3;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static byte[] getHash(java.io.InputStream) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        byte[] r1;
        java.security.MessageDigest $r2;
        java.io.IOException $r7;
        java.security.NoSuchAlgorithmException $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        r1 = newarray (byte)[1024];

     label3:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>(r1);

     label4:
        $i1 = -1;

        if $i0 != $i1 goto label7;

     label5:
        r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label6:
        return r1;

     label7:
        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, 0, $i0);

     label8:
        goto label3;

     label9:
        $r3 := @caughtexception;

        $r7 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("MD5 Algorithm Not Found -> ");

        $r8 = (java.security.NoSuchAlgorithmException) $r3;

        $r5 = virtualinvoke $r8.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label9;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label9;
        catch java.security.NoSuchAlgorithmException from label7 to label8 with label9;
    }

    public static byte[] getHash(byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r2;
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.io.IOException $r6;
        java.security.NoSuchAlgorithmException $r7;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r6 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("MD5 Algorithm Not Found -> ");

        $r7 = (java.security.NoSuchAlgorithmException) $r2;

        $r4 = virtualinvoke $r7.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String getHashHexString(java.io.File) throws java.io.IOException
    {
        byte[] $r2;
        java.io.File $r0;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r1, $r4;
        int $i0, $i1;
        java.lang.String $r3;

        $r0 := @parameter0: java.io.File;

        $r2 = staticinvoke <giil.ido.util.md5: byte[] getHash(java.io.File)>($r0);

        $r4 = new java.lang.StringBuffer;

        r1 = $r4;

        $i0 = lengthof $r2;

        $i0 = $i0 * 2;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label2:
        $b2 = $r2[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 240;

        $i1 = (int) $s3;

        $i1 = $i1 >> 4;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $b2 = $r2[$i0];

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static java.lang.String getHashHexString(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r1, $r4;
        int $i0, $i1;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <giil.ido.util.md5: byte[] getHash(java.io.InputStream)>($r0);

        $r4 = new java.lang.StringBuffer;

        r1 = $r4;

        $i0 = lengthof $r2;

        $i0 = $i0 * 2;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label2:
        $b2 = $r2[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 240;

        $i1 = (int) $s3;

        $i1 = $i1 >> 4;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $b2 = $r2[$i0];

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static java.lang.String getHashHexString(java.lang.String) throws java.io.IOException
    {
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <giil.ido.util.md5: java.lang.String getHashHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String getHashHexString(byte[]) throws java.io.IOException
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        java.lang.StringBuffer r1, $r3;
        int i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <giil.ido.util.md5: byte[] getHash(byte[])>($r0);

        $r3 = new java.lang.StringBuffer;

        r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $b2 = $r0[i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 240;

        $i1 = (int) $s3;

        $i1 = $i1 >> 4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $b2 = $r0[i0];

        $b2 = $b2 & 15;

        $i1 = (int) $b2;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        i0 = i0 + 1;

        goto label1;
    }

    public static void <clinit>()
    {
        <giil.ido.util.md5: java.lang.String ALGORITHM> = "MD5";

        return;
    }
}
