public class com.kingroot.sdk.util.h extends java.lang.Object implements java.util.Queue
{
    private int gi;
    java.util.Queue gj;

    public void <init>(int)
    {
        com.kingroot.sdk.util.h r0;
        int $i0;
        java.util.LinkedList $r1;

        r0 := @this: com.kingroot.sdk.util.h;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.kingroot.sdk.util.h: java.util.Queue gj> = $r1;

        r0.<com.kingroot.sdk.util.h: int gi> = 100;

        return;
    }

    public boolean add(java.lang.Object)
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Collection $r1;
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean addAll(java.util.Collection)>($r1);

        return $z0;
    }

    public void clear()
    {
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r1;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        interfaceinvoke $r1.<java.util.Queue: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collection $r1;
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean containsAll(java.util.Collection)>($r1);

        return $z0;
    }

    public java.lang.Object element()
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object element()>();

        return $r1;
    }

    public boolean isEmpty()
    {
        com.kingroot.sdk.util.h r0;
        int $i0;
        java.util.Queue $r1;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r2;
        java.util.Iterator $r1;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

        return $r1;
    }

    public boolean offer(java.lang.Object)
    {
        com.kingroot.sdk.util.h r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $i1 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        $i0 = r0.<com.kingroot.sdk.util.h: int gi>;

        if $i1 < $i0 goto label1;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

     label1:
        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean offer(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object peek()
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        return $r1;
    }

    public java.lang.Object poll()
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        return $r1;
    }

    public java.lang.Object remove()
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object remove()>();

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object $r1;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean remove(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collection $r1;
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean removeAll(java.util.Collection)>($r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Collection $r1;
        com.kingroot.sdk.util.h r0;
        java.util.Queue $r2;
        boolean $z0;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean retainAll(java.util.Collection)>($r1);

        return $z0;
    }

    public int size()
    {
        com.kingroot.sdk.util.h r0;
        int $i0;
        java.util.Queue $r1;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>();

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object[] $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object[] toArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.kingroot.sdk.util.h r0;
        java.lang.Object[] $r1;
        java.util.Queue $r2;

        r0 := @this: com.kingroot.sdk.util.h;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<com.kingroot.sdk.util.h: java.util.Queue gj>;

        $r1 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }
}
