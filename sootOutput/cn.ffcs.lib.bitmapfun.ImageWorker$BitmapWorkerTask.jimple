class cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask extends cn.ffcs.lib.bitmapfun.AsyncTask
{
    private java.lang.Object data;
    private final java.lang.ref.WeakReference imageViewReference;
    final cn.ffcs.lib.bitmapfun.ImageWorker this$0;

    public void <init>(cn.ffcs.lib.bitmapfun.ImageWorker, android.widget.ImageView)
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0;
        cn.ffcs.lib.bitmapfun.ImageWorker $r1;
        android.widget.ImageView $r2;
        java.lang.ref.WeakReference $r3;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 := @parameter0: cn.ffcs.lib.bitmapfun.ImageWorker;

        $r2 := @parameter1: android.widget.ImageView;

        r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0> = $r1;

        specialinvoke r0.<cn.ffcs.lib.bitmapfun.AsyncTask: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: java.lang.ref.WeakReference imageViewReference> = $r3;

        return;
    }

    static java.lang.Object access$000(cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask)
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask $r0;
        java.lang.Object r1;

        $r0 := @parameter0: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        r1 = $r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: java.lang.Object data>;

        return r1;
    }

    private android.widget.ImageView getAttachedImageView()
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0, $r4;
        android.widget.ImageView r3;
        java.lang.Object $r2;
        java.lang.ref.WeakReference $r1;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: java.lang.ref.WeakReference imageViewReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r3 = (android.widget.ImageView) $r2;

        $r4 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask access$400(android.widget.ImageView)>(r3);

        if r0 != $r4 goto label1;

        return r3;

     label1:
        return null;
    }

    protected transient android.graphics.Bitmap doInBackground(java.lang.Object[])
    {
        java.lang.Object[] $r1;
        android.widget.ImageView $r7;
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0;
        cn.ffcs.lib.bitmapfun.ImageWorker $r5;
        cn.ffcs.lib.bitmapfun.ImageCache $r6;
        android.graphics.Bitmap r4;
        java.lang.Object $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = $r1[0];

        r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: java.lang.Object data> = $r2;

        $r2 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: java.lang.Object data>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        r4 = null;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $r6 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: cn.ffcs.lib.bitmapfun.ImageCache access$100(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        if $r6 == null goto label1;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        $r7 = specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: android.widget.ImageView getAttachedImageView()>();

        if $r7 == null goto label1;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $z0 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: boolean access$200(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        if $z0 != 0 goto label1;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $r6 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: cn.ffcs.lib.bitmapfun.ImageCache access$100(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        r4 = virtualinvoke $r6.<cn.ffcs.lib.bitmapfun.ImageCache: android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String)>($r3);

     label1:
        if r4 != null goto label2;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: boolean isCancelled()>();

        if $z0 != 0 goto label2;

        $r7 = specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: android.widget.ImageView getAttachedImageView()>();

        if $r7 == null goto label2;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $z0 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: boolean access$200(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        if $z0 != 0 goto label2;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $r2 = $r1[0];

        r4 = virtualinvoke $r5.<cn.ffcs.lib.bitmapfun.ImageWorker: android.graphics.Bitmap processBitmap(java.lang.Object)>($r2);

     label2:
        if r4 == null goto label3;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $r6 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: cn.ffcs.lib.bitmapfun.ImageCache access$100(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        if $r6 == null goto label3;

        $r5 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $r6 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: cn.ffcs.lib.bitmapfun.ImageCache access$100(cn.ffcs.lib.bitmapfun.ImageWorker)>($r5);

        virtualinvoke $r6.<cn.ffcs.lib.bitmapfun.ImageCache: void addBitmapToCache(java.lang.String,android.graphics.Bitmap)>($r3, r4);

     label3:
        return r4;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0;
        java.lang.Object[] $r1;
        android.graphics.Bitmap $r2;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: android.graphics.Bitmap doInBackground(java.lang.Object[])>($r1);

        return $r2;
    }

    protected void onPostExecute(android.graphics.Bitmap)
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0;
        cn.ffcs.lib.bitmapfun.ImageWorker $r2;
        android.graphics.Bitmap $r1;
        android.widget.ImageView $r3;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 := @parameter0: android.graphics.Bitmap;

        $z0 = virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        $z0 = staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: boolean access$200(cn.ffcs.lib.bitmapfun.ImageWorker)>($r2);

        if $z0 == 0 goto label2;

     label1:
        $r1 = null;

     label2:
        $r3 = specialinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: android.widget.ImageView getAttachedImageView()>();

        if $r1 == null goto label3;

        if $r3 == null goto label3;

        $r2 = r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: cn.ffcs.lib.bitmapfun.ImageWorker this$0>;

        staticinvoke <cn.ffcs.lib.bitmapfun.ImageWorker: void access$300(cn.ffcs.lib.bitmapfun.ImageWorker,android.widget.ImageView,android.graphics.Bitmap)>($r2, $r3, $r1);

     label3:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask r0;
        java.lang.Object $r1;
        android.graphics.Bitmap $r2;

        r0 := @this: cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) $r1;

        virtualinvoke r0.<cn.ffcs.lib.bitmapfun.ImageWorker$BitmapWorkerTask: void onPostExecute(android.graphics.Bitmap)>($r2);

        return;
    }
}
