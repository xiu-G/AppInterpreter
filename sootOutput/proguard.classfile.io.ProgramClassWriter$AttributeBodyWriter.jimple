class proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.attribute.visitor.InnerClassesInfoVisitor, proguard.classfile.attribute.visitor.ExceptionInfoVisitor, proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor, proguard.classfile.attribute.visitor.LineNumberInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor, proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor
{
    private final proguard.classfile.io.ProgramClassWriter this$0;

    private void <init>(proguard.classfile.io.ProgramClassWriter)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0> = $r1;

        return;
    }

    void <init>(proguard.classfile.io.ProgramClassWriter, proguard.classfile.io.ProgramClassWriter$1)
    {
        proguard.classfile.io.ProgramClassWriter$1 $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.io.ProgramClassWriter $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.io.ProgramClassWriter;

        $r2 := @parameter1: proguard.classfile.io.ProgramClassWriter$1;

        specialinvoke r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: void <init>(proguard.classfile.io.ProgramClassWriter)>($r1);

        return;
    }

    public void visitAnnotation(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.io.ProgramClassWriter $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2typeIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2elementValuesCount>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.Annotation: void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, r0);

        return;
    }

    public void visitAnnotationDefaultAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute)
    {
        proguard.classfile.attribute.'annotation'.ElementValue $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute;

        $r4 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: proguard.classfile.attribute.'annotation'.ElementValue defaultValue>;

        virtualinvoke $r4.<proguard.classfile.attribute.'annotation'.ElementValue: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, null, r0);

        return;
    }

    public void visitAnyAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.AnnotationsAttribute)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, r0);

        return;
    }

    public void visitAnyElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ElementValue)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r4;
        proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter $r6;
        proguard.classfile.attribute.'annotation'.ElementValue $r3;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

     label1:
        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ElementValue: int getTag()>();

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeByte(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter access$700(proguard.classfile.io.ProgramClassWriter)>($r4);

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ElementValue: void accept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, $r2, $r6);

        return;
    }

    public void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r4;
        proguard.classfile.attribute.'annotation'.Annotation[][] $r8;
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.attribute.'annotation'.Annotation[] $r9;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int[] $r7;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeByte(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        if $i0 >= $i1 goto label4;

        $r7 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int[] u2parameterAnnotationsCount>;

        $i1 = $r7[$i0];

        $r8 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations>;

        $r9 = $r8[$i0];

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        $r4 = $r9[$i2];

        virtualinvoke r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r4);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return;
    }

    public void visitAnyStackMapFrame(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.StackMapFrame)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.attribute.preverification.StackMapFrame $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter $r7;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.StackMapFrame;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i1 = virtualinvoke $r4.<proguard.classfile.attribute.preverification.StackMapFrame: int getTag()>();

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeByte(int)>($i1);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r7 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter access$600(proguard.classfile.io.ProgramClassWriter)>($r5);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.StackMapFrame: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)>($r1, $r2, $r3, $i0, $r7);

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        byte[] $r6;
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxStack>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2maxLocals>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeInt(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $r6 = $r3.<proguard.classfile.attribute.CodeAttribute: byte[] code>;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u4codeLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void write(byte[],int,int)>($r6, 0, $i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2exceptionTableLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r3.<proguard.classfile.attribute.CodeAttribute: void exceptionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.ExceptionInfoVisitor)>($r1, $r2, r0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        virtualinvoke $r3.<proguard.classfile.attribute.CodeAttribute: void attributesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitConstantValueAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.ConstantValueAttribute)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.ConstantValueAttribute $r3;
        proguard.classfile.io.ProgramClassWriter $r5;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.ConstantValueAttribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r3.<proguard.classfile.attribute.ConstantValueAttribute: int u2constantValueIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitDeprecatedAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.DeprecatedAttribute)
    {
        proguard.classfile.attribute.DeprecatedAttribute $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.DeprecatedAttribute;

        return;
    }

    public void visitEnclosingMethodAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.EnclosingMethodAttribute)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.io.ProgramClassWriter $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.EnclosingMethodAttribute;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2classIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2nameAndTypeIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitExceptionInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.ExceptionInfo)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.ExceptionInfo $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.ExceptionInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2startPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2endPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2handlerPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.ExceptionInfo: int u2catchType>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitExceptionsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.ExceptionsAttribute)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int[] $r6;
        proguard.classfile.attribute.ExceptionsAttribute $r3;
        int $i0, $i1;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.ExceptionsAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2exceptionIndexTableLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2exceptionIndexTableLength>;

        if $i0 >= $i1 goto label2;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $r6 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int[] u2exceptionIndexTable>;

        $i1 = $r6[$i0];

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitInnerClassesAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesAttribute)
    {
        proguard.classfile.attribute.InnerClassesAttribute $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2classesCount>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesAttribute: void innerClassEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)>($r1, r0);

        return;
    }

    public void visitInnerClassesInfo(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesInfo)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.attribute.InnerClassesInfo $r2;
        proguard.classfile.io.ProgramClassWriter $r3;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesInfo;

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerClassIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2outerClassIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerNameIndex>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r3 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r3);

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerClassAccessFlags>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitLineNumberInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LineNumberInfo)
    {
        proguard.classfile.attribute.LineNumberInfo $r4;
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LineNumberInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LineNumberInfo: int u2startPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LineNumberInfo: int u2lineNumber>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitLineNumberTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LineNumberTableAttribute)
    {
        proguard.classfile.attribute.LineNumberTableAttribute $r4;
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LineNumberTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i0 = $r4.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r4.<proguard.classfile.attribute.LineNumberTableAttribute: void lineNumbersAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LineNumberInfoVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitLocalVariableInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableInfo)
    {
        proguard.classfile.attribute.LocalVariableInfo $r4;
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2startPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2length>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2nameIndex>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2descriptorIndex>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2index>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitLocalVariableTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTableAttribute)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTableAttribute $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2localVariableTableLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableInfoVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitLocalVariableTypeInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeInfo)
    {
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.attribute.LocalVariableTypeInfo $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeInfo;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2startPC>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2length>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2nameIndex>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2signatureIndex>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2index>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeTableAttribute)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTypeTableAttribute $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2localVariableTypeTableLength>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitSignatureAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SignatureAttribute)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.attribute.SignatureAttribute $r2;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SignatureAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.attribute.SignatureAttribute: int u2signatureIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitSourceDirAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceDirAttribute)
    {
        proguard.classfile.attribute.SourceDirAttribute $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceDirAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.attribute.SourceDirAttribute: int u2sourceDirIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitSourceFileAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceFileAttribute)
    {
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.SourceFileAttribute $r2;
        int $i0;
        proguard.classfile.io.RuntimeDataOutput $r3;
        proguard.classfile.io.ProgramClassWriter $r4;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceFileAttribute;

        $r4 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r3 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r4);

        $i0 = $r2.<proguard.classfile.attribute.SourceFileAttribute: int u2sourceFileIndex>;

        virtualinvoke $r3.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        return;
    }

    public void visitStackMapAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapAttribute)
    {
        proguard.classfile.attribute.preverification.StackMapAttribute $r4;
        proguard.classfile.io.RuntimeDataOutput $r6;
        proguard.classfile.io.ProgramClassWriter $r5;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter $r7;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapAttribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r6 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2stackMapFramesCount>;

        virtualinvoke $r6.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r7 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter access$600(proguard.classfile.io.ProgramClassWriter)>($r5);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: void stackMapFramesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)>($r1, $r2, $r3, $r7);

        return;
    }

    public void visitStackMapTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapTableAttribute)
    {
        proguard.classfile.io.RuntimeDataOutput $r5;
        proguard.classfile.io.ProgramClassWriter $r6;
        proguard.classfile.attribute.preverification.StackMapTableAttribute $r4;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapTableAttribute;

        $r6 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r5 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r6);

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: int u2stackMapFramesCount>;

        virtualinvoke $r5.<proguard.classfile.io.RuntimeDataOutput: void writeShort(int)>($i0);

        virtualinvoke $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: void stackMapFramesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitSyntheticAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SyntheticAttribute)
    {
        proguard.classfile.attribute.SyntheticAttribute $r2;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SyntheticAttribute;

        return;
    }

    public void visitUnknownAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.UnknownAttribute)
    {
        byte[] $r3;
        proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.io.RuntimeDataOutput $r4;
        proguard.classfile.attribute.UnknownAttribute $r2;
        proguard.classfile.io.ProgramClassWriter $r5;

        r0 := @this: proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.UnknownAttribute;

        $r5 = r0.<proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter: proguard.classfile.io.ProgramClassWriter this$0>;

        $r4 = staticinvoke <proguard.classfile.io.ProgramClassWriter: proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter)>($r5);

        $r3 = $r2.<proguard.classfile.attribute.UnknownAttribute: byte[] info>;

        virtualinvoke $r4.<proguard.classfile.io.RuntimeDataOutput: void write(byte[])>($r3);

        return;
    }
}
