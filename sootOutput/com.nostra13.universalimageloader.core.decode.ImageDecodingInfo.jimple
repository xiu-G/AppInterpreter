public class com.nostra13.universalimageloader.core.decode.ImageDecodingInfo extends java.lang.Object
{
    private final boolean considerExifParams;
    private final android.graphics.BitmapFactory$Options decodingOptions;
    private final com.nostra13.universalimageloader.core.download.ImageDownloader downloader;
    private final java.lang.Object extraForDownloader;
    private final java.lang.String imageKey;
    private final com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType;
    private final java.lang.String imageUri;
    private final java.lang.String originalImageUri;
    private final com.nostra13.universalimageloader.core.assist.ImageSize targetSize;
    private final com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, com.nostra13.universalimageloader.core.assist.ImageSize, com.nostra13.universalimageloader.core.assist.ViewScaleType, com.nostra13.universalimageloader.core.download.ImageDownloader, com.nostra13.universalimageloader.core.DisplayImageOptions)
    {
        com.nostra13.universalimageloader.core.assist.ImageSize $r4;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r7;
        com.nostra13.universalimageloader.core.download.ImageDownloader $r6;
        com.nostra13.universalimageloader.core.assist.ViewScaleType $r5;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        java.lang.Object $r10;
        java.lang.String $r1, $r2, $r3;
        com.nostra13.universalimageloader.core.assist.ImageScaleType $r9;
        android.graphics.BitmapFactory$Options $r8, $r11;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.nostra13.universalimageloader.core.assist.ImageSize;

        $r5 := @parameter4: com.nostra13.universalimageloader.core.assist.ViewScaleType;

        $r6 := @parameter5: com.nostra13.universalimageloader.core.download.ImageDownloader;

        $r7 := @parameter6: com.nostra13.universalimageloader.core.DisplayImageOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String imageKey> = $r1;

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String imageUri> = $r2;

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String originalImageUri> = $r3;

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ImageSize targetSize> = $r4;

        $r9 = virtualinvoke $r7.<com.nostra13.universalimageloader.core.DisplayImageOptions: com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType()>();

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType> = $r9;

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType> = $r5;

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.download.ImageDownloader downloader> = $r6;

        $r10 = virtualinvoke $r7.<com.nostra13.universalimageloader.core.DisplayImageOptions: java.lang.Object getExtraForDownloader()>();

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.Object extraForDownloader> = $r10;

        $z0 = virtualinvoke $r7.<com.nostra13.universalimageloader.core.DisplayImageOptions: boolean isConsiderExifParams()>();

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: boolean considerExifParams> = $z0;

        $r8 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r8.<android.graphics.BitmapFactory$Options: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: android.graphics.BitmapFactory$Options decodingOptions> = $r8;

        $r11 = virtualinvoke $r7.<com.nostra13.universalimageloader.core.DisplayImageOptions: android.graphics.BitmapFactory$Options getDecodingOptions()>();

        $r8 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: android.graphics.BitmapFactory$Options decodingOptions>;

        specialinvoke r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options)>($r11, $r8);

        return;
    }

    private void copyOptions(android.graphics.BitmapFactory$Options, android.graphics.BitmapFactory$Options)
    {
        byte[] $r4;
        int $i0;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        android.graphics.Bitmap$Config $r3;
        android.graphics.BitmapFactory$Options $r1, $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r1 := @parameter0: android.graphics.BitmapFactory$Options;

        $r2 := @parameter1: android.graphics.BitmapFactory$Options;

        $i0 = $r1.<android.graphics.BitmapFactory$Options: int inDensity>;

        $r2.<android.graphics.BitmapFactory$Options: int inDensity> = $i0;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inDither>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inDither> = $z0;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inInputShareable>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inInputShareable> = $z0;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = $z0;

        $r3 = $r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig>;

        $r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r3;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inPurgeable>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inPurgeable> = $z0;

        $i0 = $r1.<android.graphics.BitmapFactory$Options: int inSampleSize>;

        $r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i0;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inScaled>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inScaled> = $z0;

        $i0 = $r1.<android.graphics.BitmapFactory$Options: int inScreenDensity>;

        $r2.<android.graphics.BitmapFactory$Options: int inScreenDensity> = $i0;

        $i0 = $r1.<android.graphics.BitmapFactory$Options: int inTargetDensity>;

        $r2.<android.graphics.BitmapFactory$Options: int inTargetDensity> = $i0;

        $r4 = $r1.<android.graphics.BitmapFactory$Options: byte[] inTempStorage>;

        $r2.<android.graphics.BitmapFactory$Options: byte[] inTempStorage> = $r4;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 10 goto label1;

        specialinvoke r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options)>($r1, $r2);

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label2;

        specialinvoke r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options)>($r1, $r2);

     label2:
        return;
    }

    private void copyOptions10(android.graphics.BitmapFactory$Options, android.graphics.BitmapFactory$Options)
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        android.graphics.BitmapFactory$Options $r1, $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r1 := @parameter0: android.graphics.BitmapFactory$Options;

        $r2 := @parameter1: android.graphics.BitmapFactory$Options;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inPreferQualityOverSpeed>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inPreferQualityOverSpeed> = $z0;

        return;
    }

    private void copyOptions11(android.graphics.BitmapFactory$Options, android.graphics.BitmapFactory$Options)
    {
        android.graphics.Bitmap $r3;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        android.graphics.BitmapFactory$Options $r1, $r2;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        $r1 := @parameter0: android.graphics.BitmapFactory$Options;

        $r2 := @parameter1: android.graphics.BitmapFactory$Options;

        $r3 = $r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap>;

        $r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap inBitmap> = $r3;

        $z0 = $r1.<android.graphics.BitmapFactory$Options: boolean inMutable>;

        $r2.<android.graphics.BitmapFactory$Options: boolean inMutable> = $z0;

        return;
    }

    public android.graphics.BitmapFactory$Options getDecodingOptions()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        android.graphics.BitmapFactory$Options r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: android.graphics.BitmapFactory$Options decodingOptions>;

        return r1;
    }

    public com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        com.nostra13.universalimageloader.core.download.ImageDownloader r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.download.ImageDownloader downloader>;

        return r1;
    }

    public java.lang.Object getExtraForDownloader()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        java.lang.Object r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.Object extraForDownloader>;

        return r1;
    }

    public java.lang.String getImageKey()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        java.lang.String r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String imageKey>;

        return r1;
    }

    public com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        com.nostra13.universalimageloader.core.assist.ImageScaleType r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType>;

        return r1;
    }

    public java.lang.String getImageUri()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        java.lang.String r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String imageUri>;

        return r1;
    }

    public java.lang.String getOriginalImageUri()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        java.lang.String r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: java.lang.String originalImageUri>;

        return r1;
    }

    public com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize()
    {
        com.nostra13.universalimageloader.core.assist.ImageSize r1;
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ImageSize targetSize>;

        return r1;
    }

    public com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        com.nostra13.universalimageloader.core.assist.ViewScaleType r1;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        r1 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType>;

        return r1;
    }

    public boolean shouldConsiderExifParams()
    {
        com.nostra13.universalimageloader.core.decode.ImageDecodingInfo r0;
        boolean z0;

        r0 := @this: com.nostra13.universalimageloader.core.decode.ImageDecodingInfo;

        z0 = r0.<com.nostra13.universalimageloader.core.decode.ImageDecodingInfo: boolean considerExifParams>;

        return z0;
    }
}
