final class com.astep.pay.plugin.g extends java.lang.Object implements java.lang.Runnable
{
    final android.content.Context a;
    final com.astep.pay.plugin.d b;
    final com.astep.pay.plugin.f c;

    void <init>(com.astep.pay.plugin.f, android.content.Context, com.astep.pay.plugin.d)
    {
        android.content.Context $r2;
        com.astep.pay.plugin.d $r3;
        com.astep.pay.plugin.f $r1;
        com.astep.pay.plugin.g r0;

        r0 := @this: com.astep.pay.plugin.g;

        $r1 := @parameter0: com.astep.pay.plugin.f;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: com.astep.pay.plugin.d;

        r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c> = $r1;

        r0.<com.astep.pay.plugin.g: android.content.Context a> = $r2;

        r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.d b> = $r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void run()
    {
        java.lang.Throwable $r13, $r15, $r16, $r17, $r18;
        android.content.Context $r2;
        java.lang.Object[] $r10;
        java.lang.NoSuchMethodException $r23;
        com.astep.pay.plugin.g r0;
        android.content.pm.PackageInfo $r4;
        java.lang.InstantiationException $r20;
        java.lang.String $r12;
        java.lang.reflect.Method $r9;
        dalvik.system.DexClassLoader $r6;
        boolean $z0;
        java.lang.IllegalAccessException $r21;
        java.lang.Class[] $r8;
        java.lang.IllegalArgumentException $r19;
        java.lang.reflect.InvocationTargetException $r22;
        com.astep.pay.plugin.d $r11;
        com.astep.pay.plugin.f $r1;
        java.lang.Class $r7;
        java.lang.ClassNotFoundException $r14;
        java.lang.ClassLoader $r5;
        android.content.res.Resources $r3;

        r0 := @this: com.astep.pay.plugin.g;

        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        $r2 = r0.<com.astep.pay.plugin.g: android.content.Context a>;

        $z0 = staticinvoke <com.astep.pay.plugin.f: boolean a(com.astep.pay.plugin.f,android.content.Context)>($r1, $r2);

        if $z0 == 0 goto label16;

        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        $r2 = r0.<com.astep.pay.plugin.g: android.content.Context a>;

     label01:
        staticinvoke <com.astep.pay.plugin.f: void b(com.astep.pay.plugin.f,android.content.Context)>($r1, $r2);

     label02:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

     label03:
        $r3 = staticinvoke <com.astep.pay.plugin.f: android.content.res.Resources a(com.astep.pay.plugin.f)>($r1);

     label04:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

     label05:
        $r4 = staticinvoke <com.astep.pay.plugin.f: android.content.pm.PackageInfo b(com.astep.pay.plugin.f)>($r1);

     label06:
        $r2 = r0.<com.astep.pay.plugin.g: android.content.Context a>;

     label07:
        $r5 = virtualinvoke $r2.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

     label08:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

     label09:
        $r6 = staticinvoke <com.astep.pay.plugin.f: dalvik.system.DexClassLoader c(com.astep.pay.plugin.f)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.astep.pay.impl.PluginBundle");

     label10:
        $r8 = newarray (java.lang.Class)[3];

        $r8[0] = class "Landroid/content/res/Resources;";

        $r8[1] = class "Landroid/content/pm/PackageInfo;";

        $r8[2] = class "Ljava/lang/ClassLoader;";

     label11:
        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setInstance", $r8);

     label12:
        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = $r3;

        $r10[1] = $r4;

        $r10[2] = $r5;

     label13:
        virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r10);

     label14:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

     label15:
        staticinvoke <com.astep.pay.plugin.f: boolean d(com.astep.pay.plugin.f)>($r1);

     label16:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        $z0 = staticinvoke <com.astep.pay.plugin.f: boolean e(com.astep.pay.plugin.f)>($r1);

        if $z0 == 0 goto label24;

        $r11 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.d b>;

        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        $r12 = staticinvoke <com.astep.pay.plugin.f: java.lang.String f(com.astep.pay.plugin.f)>($r1);

        interfaceinvoke $r11.<com.astep.pay.plugin.d: void a(int,java.lang.String)>(1, $r12);

     label17:
        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        staticinvoke <com.astep.pay.plugin.f: boolean g(com.astep.pay.plugin.f)>($r1);

        return;

     label18:
        $r13 := @caughtexception;

        $r19 = (java.lang.IllegalArgumentException) $r13;

        virtualinvoke $r19.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label16;

     label19:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.ClassNotFoundException: void printStackTrace()>();

        goto label16;

     label20:
        $r15 := @caughtexception;

        $r20 = (java.lang.InstantiationException) $r15;

        virtualinvoke $r20.<java.lang.InstantiationException: void printStackTrace()>();

        goto label16;

     label21:
        $r16 := @caughtexception;

        $r21 = (java.lang.IllegalAccessException) $r16;

        virtualinvoke $r21.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label16;

     label22:
        $r17 := @caughtexception;

        $r22 = (java.lang.reflect.InvocationTargetException) $r17;

        virtualinvoke $r22.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label16;

     label23:
        $r18 := @caughtexception;

        $r23 = (java.lang.NoSuchMethodException) $r18;

        virtualinvoke $r23.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label16;

     label24:
        $r11 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.d b>;

        $r1 = r0.<com.astep.pay.plugin.g: com.astep.pay.plugin.f c>;

        $r12 = staticinvoke <com.astep.pay.plugin.f: java.lang.String f(com.astep.pay.plugin.f)>($r1);

        interfaceinvoke $r11.<com.astep.pay.plugin.d: void a(int,java.lang.String)>(0, $r12);

        goto label17;

        catch java.lang.IllegalArgumentException from label01 to label02 with label18;
        catch java.lang.IllegalArgumentException from label03 to label04 with label18;
        catch java.lang.IllegalArgumentException from label05 to label06 with label18;
        catch java.lang.IllegalArgumentException from label07 to label08 with label18;
        catch java.lang.IllegalArgumentException from label09 to label10 with label18;
        catch java.lang.IllegalArgumentException from label11 to label12 with label18;
        catch java.lang.IllegalArgumentException from label13 to label14 with label18;
        catch java.lang.IllegalArgumentException from label15 to label16 with label18;
        catch java.lang.ClassNotFoundException from label01 to label02 with label19;
        catch java.lang.ClassNotFoundException from label03 to label04 with label19;
        catch java.lang.ClassNotFoundException from label05 to label06 with label19;
        catch java.lang.ClassNotFoundException from label07 to label08 with label19;
        catch java.lang.ClassNotFoundException from label09 to label10 with label19;
        catch java.lang.ClassNotFoundException from label11 to label12 with label19;
        catch java.lang.ClassNotFoundException from label13 to label14 with label19;
        catch java.lang.ClassNotFoundException from label15 to label16 with label19;
        catch java.lang.InstantiationException from label01 to label02 with label20;
        catch java.lang.InstantiationException from label03 to label04 with label20;
        catch java.lang.InstantiationException from label05 to label06 with label20;
        catch java.lang.InstantiationException from label07 to label08 with label20;
        catch java.lang.InstantiationException from label09 to label10 with label20;
        catch java.lang.InstantiationException from label11 to label12 with label20;
        catch java.lang.InstantiationException from label13 to label14 with label20;
        catch java.lang.InstantiationException from label15 to label16 with label20;
        catch java.lang.IllegalAccessException from label01 to label02 with label21;
        catch java.lang.IllegalAccessException from label03 to label04 with label21;
        catch java.lang.IllegalAccessException from label05 to label06 with label21;
        catch java.lang.IllegalAccessException from label07 to label08 with label21;
        catch java.lang.IllegalAccessException from label09 to label10 with label21;
        catch java.lang.IllegalAccessException from label11 to label12 with label21;
        catch java.lang.IllegalAccessException from label13 to label14 with label21;
        catch java.lang.IllegalAccessException from label15 to label16 with label21;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label22;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label22;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label22;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label22;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label22;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label22;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label22;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label22;
        catch java.lang.NoSuchMethodException from label01 to label02 with label23;
        catch java.lang.NoSuchMethodException from label03 to label04 with label23;
        catch java.lang.NoSuchMethodException from label05 to label06 with label23;
        catch java.lang.NoSuchMethodException from label07 to label08 with label23;
        catch java.lang.NoSuchMethodException from label09 to label10 with label23;
        catch java.lang.NoSuchMethodException from label11 to label12 with label23;
        catch java.lang.NoSuchMethodException from label13 to label14 with label23;
        catch java.lang.NoSuchMethodException from label15 to label16 with label23;
    }
}
