public class com.astep.pay.TheActivity extends android.app.Activity
{
    static final java.lang.String a;
    private com.astep.pay.plugin.f b;
    private java.lang.Class c;
    private java.lang.Object d;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    public void <init>()
    {
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r18;
        java.lang.reflect.Constructor $r4;
        com.astep.pay.TheActivity r0;
        java.lang.InstantiationException $r16;
        java.lang.String $r8;
        java.lang.IllegalAccessException $r17;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r19;
        java.lang.reflect.InvocationTargetException $r20;
        com.astep.pay.plugin.f $r9;
        com.astep.pay.plugin.a $r1;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r15;

        r0 := @this: com.astep.pay.TheActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

     label01:
        $r1 = staticinvoke <com.astep.pay.plugin.a: com.astep.pay.plugin.a a()>();

        $r2 = virtualinvoke $r1.<com.astep.pay.plugin.a: java.lang.Class b()>();

     label02:
        r0.<com.astep.pay.TheActivity: java.lang.Class c> = $r2;

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        if $r2 == null goto label11;

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/app/Activity;";

     label03:
        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

     label04:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r0;

     label05:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

     label06:
        r0.<com.astep.pay.TheActivity: java.lang.Object d> = $r6;

        $r15 = new java.lang.StringBuilder;

        $r7 = $r15;

     label07:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("mClass name");

     label08:
        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

     label09:
        $r8 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r9 = staticinvoke <com.astep.pay.plugin.f: com.astep.pay.plugin.f a()>();

        r0.<com.astep.pay.TheActivity: com.astep.pay.plugin.f b> = $r9;

        return;

     label11:
        virtualinvoke r0.<com.astep.pay.TheActivity: void finish()>();

     label12:
        goto label10;

     label13:
        $r10 := @caughtexception;

        $r16 = (java.lang.InstantiationException) $r10;

        virtualinvoke $r16.<java.lang.InstantiationException: void printStackTrace()>();

        goto label10;

     label14:
        $r11 := @caughtexception;

        $r17 = (java.lang.IllegalAccessException) $r11;

        virtualinvoke $r17.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label10;

     label15:
        $r12 := @caughtexception;

        $r18 = (java.lang.NoSuchMethodException) $r12;

        virtualinvoke $r18.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label10;

     label16:
        $r13 := @caughtexception;

        $r19 = (java.lang.IllegalArgumentException) $r13;

        virtualinvoke $r19.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label10;

     label17:
        $r14 := @caughtexception;

        $r20 = (java.lang.reflect.InvocationTargetException) $r14;

        virtualinvoke $r20.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        goto label10;

        catch java.lang.InstantiationException from label01 to label02 with label13;
        catch java.lang.InstantiationException from label03 to label04 with label13;
        catch java.lang.InstantiationException from label05 to label06 with label13;
        catch java.lang.InstantiationException from label07 to label08 with label13;
        catch java.lang.InstantiationException from label09 to label10 with label13;
        catch java.lang.IllegalAccessException from label01 to label02 with label14;
        catch java.lang.IllegalAccessException from label03 to label04 with label14;
        catch java.lang.IllegalAccessException from label05 to label06 with label14;
        catch java.lang.IllegalAccessException from label07 to label08 with label14;
        catch java.lang.IllegalAccessException from label09 to label10 with label14;
        catch java.lang.NoSuchMethodException from label01 to label02 with label15;
        catch java.lang.NoSuchMethodException from label03 to label04 with label15;
        catch java.lang.NoSuchMethodException from label05 to label06 with label15;
        catch java.lang.NoSuchMethodException from label07 to label08 with label15;
        catch java.lang.NoSuchMethodException from label09 to label10 with label15;
        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.IllegalArgumentException from label03 to label04 with label16;
        catch java.lang.IllegalArgumentException from label05 to label06 with label16;
        catch java.lang.IllegalArgumentException from label07 to label08 with label16;
        catch java.lang.IllegalArgumentException from label09 to label10 with label16;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label17;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label17;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label17;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label17;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label17;
        catch java.lang.InstantiationException from label11 to label12 with label13;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
        catch java.lang.NoSuchMethodException from label11 to label12 with label15;
        catch java.lang.IllegalArgumentException from label11 to label12 with label16;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label17;
    }

    protected void attachBaseContext(android.content.Context)
    {
        android.content.Context $r1;
        android.content.pm.PackageInfo $r5;
        com.astep.pay.plugin.e $r3;
        com.astep.pay.plugin.f $r2;
        com.astep.pay.TheActivity r0;
        java.lang.ClassLoader $r6;
        boolean $z0;
        android.content.res.Resources $r4;

        r0 := @this: com.astep.pay.TheActivity;

        $r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.astep.pay.TheActivity: com.astep.pay.plugin.f b>;

        if $r2 == null goto label1;

        $r2 = r0.<com.astep.pay.TheActivity: com.astep.pay.plugin.f b>;

        $z0 = virtualinvoke $r2.<com.astep.pay.plugin.f: boolean e()>();

        if $z0 == 0 goto label1;

        $r3 = new com.astep.pay.plugin.e;

        $r2 = r0.<com.astep.pay.TheActivity: com.astep.pay.plugin.f b>;

        $r4 = virtualinvoke $r2.<com.astep.pay.plugin.f: android.content.res.Resources b()>();

        $r2 = r0.<com.astep.pay.TheActivity: com.astep.pay.plugin.f b>;

        $r5 = virtualinvoke $r2.<com.astep.pay.plugin.f: android.content.pm.PackageInfo d()>();

        $r6 = virtualinvoke $r1.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r3.<com.astep.pay.plugin.e: void <init>(android.content.Context,android.content.res.Resources,android.content.pm.PackageInfo,java.lang.ClassLoader)>($r1, $r4, $r5, $r6);

        specialinvoke r0.<android.app.Activity: void attachBaseContext(android.content.Context)>($r3);

        return;

     label1:
        specialinvoke r0.<android.app.Activity: void attachBaseContext(android.content.Context)>($r1);

        virtualinvoke r0.<com.astep.pay.TheActivity: void finish()>();

        return;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        java.lang.Throwable $r9, $r10, $r11, $r12;
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r16;
        android.content.Intent $r1;
        java.lang.Integer $r8;
        com.astep.pay.TheActivity r0;
        int $i0, $i1;
        java.lang.reflect.Method $r5;
        java.lang.IllegalAccessException $r14;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r13;
        java.lang.reflect.InvocationTargetException $r15;
        java.lang.Class $r2, $r4;
        java.lang.Object $r6;

        r0 := @this: com.astep.pay.TheActivity;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.content.Intent;

        $r1 = virtualinvoke r0.<com.astep.pay.TheActivity: android.content.Intent getIntent()>();

        specialinvoke r0.<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>($i0, $i1, $r1);

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[3];

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r3[2] = class "Landroid/content/Intent;";

     label01:
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onActivityResult", $r3);

     label02:
        $r6 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r7 = newarray (java.lang.Object)[3];

     label03:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r7[0] = $r8;

     label05:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

     label06:
        $r7[1] = $r8;

        $r7[2] = $r1;

     label07:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label08:
        return;

     label09:
        $r9 := @caughtexception;

        $r13 = (java.lang.IllegalArgumentException) $r9;

        virtualinvoke $r13.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label10:
        $r10 := @caughtexception;

        $r14 = (java.lang.IllegalAccessException) $r10;

        virtualinvoke $r14.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label11:
        $r11 := @caughtexception;

        $r15 = (java.lang.reflect.InvocationTargetException) $r11;

        virtualinvoke $r15.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label12:
        $r12 := @caughtexception;

        $r16 = (java.lang.NoSuchMethodException) $r12;

        virtualinvoke $r16.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label09;
        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
    }

    public void onAttachedToWindow()
    {
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.lang.IllegalAccessException $r11;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r13;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r10;
        java.lang.reflect.InvocationTargetException $r12;
        com.astep.pay.TheActivity r0;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: com.astep.pay.TheActivity;

        specialinvoke r0.<android.app.Activity: void onAttachedToWindow()>();

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[0];

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onAttachedToWindow", $r3);

     label2:
        $r4 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r5 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r10 = (java.lang.IllegalArgumentException) $r6;

        virtualinvoke $r10.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r7 := @caughtexception;

        $r11 = (java.lang.IllegalAccessException) $r7;

        virtualinvoke $r11.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label7:
        $r8 := @caughtexception;

        $r12 = (java.lang.reflect.InvocationTargetException) $r8;

        virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label8:
        $r9 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r9;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label8;
        catch java.lang.NoSuchMethodException from label3 to label4 with label8;
    }

    protected void onCreate(android.os.Bundle)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.lang.IllegalAccessException $r12;
        android.os.Bundle $r1;
        java.lang.Object[] $r6;
        java.lang.NoSuchMethodException $r14;
        java.lang.Class[] $r4;
        java.lang.IllegalArgumentException $r11;
        java.lang.reflect.InvocationTargetException $r13;
        com.astep.pay.TheActivity r0;
        java.lang.Class $r3;
        java.lang.Object $r5;
        java.lang.reflect.Method $r2;

        r0 := @this: com.astep.pay.TheActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        $r3 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Landroid/os/Bundle;";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onCreate", $r4);

     label2:
        $r5 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r1;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r6);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r11 = (java.lang.IllegalArgumentException) $r7;

        virtualinvoke $r11.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r8 := @caughtexception;

        $r12 = (java.lang.IllegalAccessException) $r8;

        virtualinvoke $r12.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label7:
        $r9 := @caughtexception;

        $r13 = (java.lang.reflect.InvocationTargetException) $r9;

        virtualinvoke $r13.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label8:
        $r10 := @caughtexception;

        $r14 = (java.lang.NoSuchMethodException) $r10;

        virtualinvoke $r14.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label8;
        catch java.lang.NoSuchMethodException from label3 to label4 with label8;
    }

    protected void onDestroy()
    {
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.lang.IllegalAccessException $r11;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r13;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r10;
        java.lang.reflect.InvocationTargetException $r12;
        com.astep.pay.TheActivity r0;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: com.astep.pay.TheActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[0];

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onDestroy", $r3);

     label2:
        $r4 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r5 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r10 = (java.lang.IllegalArgumentException) $r6;

        virtualinvoke $r10.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r7 := @caughtexception;

        $r11 = (java.lang.IllegalAccessException) $r7;

        virtualinvoke $r11.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label7:
        $r8 := @caughtexception;

        $r12 = (java.lang.reflect.InvocationTargetException) $r8;

        virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label8:
        $r9 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r9;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label8;
        catch java.lang.NoSuchMethodException from label3 to label4 with label8;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        java.lang.Throwable $r10, $r11, $r12, $r13;
        android.view.KeyEvent $r1;
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r17;
        java.lang.Integer $r8;
        com.astep.pay.TheActivity r0;
        int $i0;
        java.lang.Boolean $r9;
        java.lang.reflect.Method $r5;
        boolean $z0;
        java.lang.IllegalAccessException $r15;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r14;
        java.lang.reflect.InvocationTargetException $r16;
        java.lang.Class $r2, $r4;
        java.lang.Object $r6;

        r0 := @this: com.astep.pay.TheActivity;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[2];

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r3[1] = class "Landroid/view/KeyEvent;";

     label01:
        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onKeyDown", $r3);

     label02:
        $r6 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r7 = newarray (java.lang.Object)[2];

     label03:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label04:
        $r7[0] = $r8;

        $r7[1] = $r1;

     label05:
        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label06:
        $r9 = (java.lang.Boolean) $r6;

     label07:
        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

     label08:
        if $z0 != 0 goto label13;

        $z0 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label09:
        $r10 := @caughtexception;

        $r14 = (java.lang.IllegalArgumentException) $r10;

        virtualinvoke $r14.<java.lang.IllegalArgumentException: void printStackTrace()>();

        $z0 = 0;

        goto label08;

     label10:
        $r11 := @caughtexception;

        $r15 = (java.lang.IllegalAccessException) $r11;

        virtualinvoke $r15.<java.lang.IllegalAccessException: void printStackTrace()>();

        $z0 = 0;

        goto label08;

     label11:
        $r12 := @caughtexception;

        $r16 = (java.lang.reflect.InvocationTargetException) $r12;

        virtualinvoke $r16.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        $z0 = 0;

        goto label08;

     label12:
        $r13 := @caughtexception;

        $r17 = (java.lang.NoSuchMethodException) $r13;

        virtualinvoke $r17.<java.lang.NoSuchMethodException: void printStackTrace()>();

        $z0 = 0;

        goto label08;

     label13:
        return $z0;

        catch java.lang.IllegalArgumentException from label01 to label02 with label09;
        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label12;
        catch java.lang.NoSuchMethodException from label03 to label04 with label12;
        catch java.lang.NoSuchMethodException from label05 to label06 with label12;
        catch java.lang.NoSuchMethodException from label07 to label08 with label12;
    }

    protected void onPause()
    {
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.lang.IllegalAccessException $r11;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r13;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r10;
        java.lang.reflect.InvocationTargetException $r12;
        com.astep.pay.TheActivity r0;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: com.astep.pay.TheActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[0];

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onPause", $r3);

     label2:
        $r4 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r5 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r10 = (java.lang.IllegalArgumentException) $r6;

        virtualinvoke $r10.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r7 := @caughtexception;

        $r11 = (java.lang.IllegalAccessException) $r7;

        virtualinvoke $r11.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label7:
        $r8 := @caughtexception;

        $r12 = (java.lang.reflect.InvocationTargetException) $r8;

        virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label8:
        $r9 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r9;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label8;
        catch java.lang.NoSuchMethodException from label3 to label4 with label8;
    }

    protected void onResume()
    {
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.lang.IllegalAccessException $r11;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r13;
        java.lang.Class[] $r3;
        java.lang.IllegalArgumentException $r10;
        java.lang.reflect.InvocationTargetException $r12;
        com.astep.pay.TheActivity r0;
        java.lang.Class $r2;
        java.lang.Object $r4;
        java.lang.reflect.Method $r1;

        r0 := @this: com.astep.pay.TheActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r2 = r0.<com.astep.pay.TheActivity: java.lang.Class c>;

        $r3 = newarray (java.lang.Class)[0];

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("onResume", $r3);

     label2:
        $r4 = r0.<com.astep.pay.TheActivity: java.lang.Object d>;

        $r5 = newarray (java.lang.Object)[0];

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r10 = (java.lang.IllegalArgumentException) $r6;

        virtualinvoke $r10.<java.lang.IllegalArgumentException: void printStackTrace()>();

        return;

     label6:
        $r7 := @caughtexception;

        $r11 = (java.lang.IllegalAccessException) $r7;

        virtualinvoke $r11.<java.lang.IllegalAccessException: void printStackTrace()>();

        return;

     label7:
        $r8 := @caughtexception;

        $r12 = (java.lang.reflect.InvocationTargetException) $r8;

        virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        return;

     label8:
        $r9 := @caughtexception;

        $r13 = (java.lang.NoSuchMethodException) $r9;

        virtualinvoke $r13.<java.lang.NoSuchMethodException: void printStackTrace()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label1 to label2 with label8;
        catch java.lang.NoSuchMethodException from label3 to label4 with label8;
    }

    public void startActivityForResult(android.content.Intent, int)
    {
        int $i0;
        android.content.Intent $r1;
        com.astep.pay.TheActivity r0;

        r0 := @this: com.astep.pay.TheActivity;

        $r1 := @parameter0: android.content.Intent;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.astep.pay.TheActivity: android.content.Intent getIntent()>();

        specialinvoke r0.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>($r1, $i0);

        return;
    }

    public android.content.Intent getIntent()
    {
        android.content.Intent $r0;
        com.astep.pay.TheActivity this;

        this := @this: com.astep.pay.TheActivity;

        $r0 = this.<com.astep.pay.TheActivity: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        android.content.Intent parameter0;
        com.astep.pay.TheActivity this;

        this := @this: com.astep.pay.TheActivity;

        parameter0 := @parameter0: android.content.Intent;

        this.<com.astep.pay.TheActivity: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        int parameter0;
        android.content.Intent parameter1;
        com.astep.pay.TheActivity this;

        this := @this: com.astep.pay.TheActivity;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<com.astep.pay.TheActivity: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }

    public static void <clinit>()
    {
        <com.astep.pay.TheActivity: java.lang.String a> = "TheActivity";

        return;
    }
}
