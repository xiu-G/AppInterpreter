public abstract class com.seventeenmiles.sketch.cloud.a extends java.lang.Object
{
    public static final java.util.concurrent.Executor a;
    public static final java.util.concurrent.Executor b;
    public static final java.util.concurrent.Executor c;
    private static final java.util.concurrent.ThreadFactory d;
    private static final java.util.concurrent.BlockingQueue e;
    private static final com.seventeenmiles.sketch.cloud.f f;
    private static volatile java.util.concurrent.Executor g;
    private static int[] m;
    private final com.seventeenmiles.sketch.cloud.j h;
    private final java.util.concurrent.FutureTask i;
    private volatile com.seventeenmiles.sketch.cloud.i j;
    private final java.util.concurrent.atomic.AtomicBoolean k;
    private final java.util.concurrent.atomic.AtomicBoolean l;

    static void <clinit>()
    {
        com.seventeenmiles.sketch.cloud.b $r6;
        java.util.concurrent.Executor $r5;
        java.util.concurrent.ThreadPoolExecutor $r9;
        com.seventeenmiles.sketch.cloud.g $r10;
        com.seventeenmiles.sketch.cloud.f $r11;
        java.util.concurrent.BlockingQueue $r1;
        java.util.concurrent.LinkedBlockingQueue $r7;
        java.util.concurrent.TimeUnit $r0;
        int $i0;
        java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy $r8;
        java.lang.Object $r3;
        java.util.concurrent.ThreadFactory $r2;
        java.util.concurrent.ExecutorService $r4;
        boolean $z0;

        $r6 = new com.seventeenmiles.sketch.cloud.b;

        specialinvoke $r6.<com.seventeenmiles.sketch.cloud.b: void <init>()>();

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.ThreadFactory d> = $r6;

        $r7 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(10);

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.BlockingQueue e> = $r7;

        $r9 = new java.util.concurrent.ThreadPoolExecutor;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r1 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.BlockingQueue e>;

        $r2 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.ThreadFactory d>;

        $r8 = new java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy;

        specialinvoke $r8.<java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy: void <init>()>();

        specialinvoke $r9.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)>(5, 128, 1L, $r0, $r1, $r2, $r8);

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor a> = $r9;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label3;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label4;

        $r10 = new com.seventeenmiles.sketch.cloud.g;

        $r3 = $r10;

        specialinvoke $r10.<com.seventeenmiles.sketch.cloud.g: void <init>(byte)>(0);

     label2:
        $r5 = (java.util.concurrent.Executor) $r3;

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor b> = $r5;

        $r2 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.ThreadFactory d>;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int,java.util.concurrent.ThreadFactory)>(2, $r2);

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor c> = $r4;

        $r11 = new com.seventeenmiles.sketch.cloud.f;

        specialinvoke $r11.<com.seventeenmiles.sketch.cloud.f: void <init>(byte)>(0);

        <com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.f f> = $r11;

        $r5 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor b>;

        <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor g> = $r5;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $r2 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.ThreadFactory d>;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r2);

        goto label2;
    }

    public void <init>()
    {
        com.seventeenmiles.sketch.cloud.d $r5;
        com.seventeenmiles.sketch.cloud.c $r4;
        com.seventeenmiles.sketch.cloud.a r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        com.seventeenmiles.sketch.cloud.j $r1;
        com.seventeenmiles.sketch.cloud.i $r2;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i a>;

        r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.i j> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean k> = $r3;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean l> = $r3;

        $r4 = new com.seventeenmiles.sketch.cloud.c;

        specialinvoke $r4.<com.seventeenmiles.sketch.cloud.c: void <init>(com.seventeenmiles.sketch.cloud.a)>(r0);

        r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.j h> = $r4;

        $r5 = new com.seventeenmiles.sketch.cloud.d;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.j h>;

        specialinvoke $r5.<com.seventeenmiles.sketch.cloud.d: void <init>(com.seventeenmiles.sketch.cloud.a,java.util.concurrent.Callable)>(r0, $r1);

        r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.FutureTask i> = $r5;

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean a(com.seventeenmiles.sketch.cloud.a)
    {
        java.util.concurrent.atomic.AtomicBoolean r1;
        com.seventeenmiles.sketch.cloud.a $r0;

        $r0 := @parameter0: com.seventeenmiles.sketch.cloud.a;

        r1 = $r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean l>;

        return r1;
    }

    static void a(com.seventeenmiles.sketch.cloud.a, java.lang.Object)
    {
        com.seventeenmiles.sketch.cloud.a $r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.lang.Object $r1;
        com.seventeenmiles.sketch.cloud.i $r3;
        boolean $z0;

        $r0 := @parameter0: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter1: java.lang.Object;

        $r2 = $r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean k>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<com.seventeenmiles.sketch.cloud.a: void b(java.lang.Object)>($r1);

     label1:
        $r3 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i c>;

        $r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.i j> = $r3;

        return;

     label2:
        virtualinvoke $r0.<com.seventeenmiles.sketch.cloud.a: void a(java.lang.Object)>($r1);

        goto label1;
    }

    static java.lang.Object b(com.seventeenmiles.sketch.cloud.a, java.lang.Object)
    {
        java.lang.Object $r1;
        com.seventeenmiles.sketch.cloud.a $r0;

        $r0 := @parameter0: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter1: java.lang.Object;

        $r1 = specialinvoke $r0.<com.seventeenmiles.sketch.cloud.a: java.lang.Object c(java.lang.Object)>($r1);

        return $r1;
    }

    private java.lang.Object c(java.lang.Object)
    {
        com.seventeenmiles.sketch.cloud.a r0;
        java.lang.Object[] $r3;
        android.os.Message $r4;
        com.seventeenmiles.sketch.cloud.f $r5;
        com.seventeenmiles.sketch.cloud.e $r2;
        java.lang.Object $r1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object;

        $r5 = <com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.f f>;

        $r2 = new com.seventeenmiles.sketch.cloud.e;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        specialinvoke $r2.<com.seventeenmiles.sketch.cloud.e: void <init>(com.seventeenmiles.sketch.cloud.a,java.lang.Object[])>(r0, $r3);

        $r4 = virtualinvoke $r5.<com.seventeenmiles.sketch.cloud.f: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r2);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return $r1;
    }

    static void c(com.seventeenmiles.sketch.cloud.a, java.lang.Object)
    {
        com.seventeenmiles.sketch.cloud.a $r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter1: java.lang.Object;

        $r2 = $r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean l>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.seventeenmiles.sketch.cloud.a: java.lang.Object c(java.lang.Object)>($r1);

     label1:
        return;
    }

    private static int[] c()
    {
        java.lang.NoSuchFieldError $r3, $r4, $r5;
        int[] $r0;
        com.seventeenmiles.sketch.cloud.i[] $r1;
        int $i0;
        com.seventeenmiles.sketch.cloud.i $r2;

        $r0 = <com.seventeenmiles.sketch.cloud.a: int[] m>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i[] values()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i c>;

        $i0 = virtualinvoke $r2.<com.seventeenmiles.sketch.cloud.i: int ordinal()>();

     label03:
        $r0[$i0] = 3;

     label04:
        $r2 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i a>;

        $i0 = virtualinvoke $r2.<com.seventeenmiles.sketch.cloud.i: int ordinal()>();

     label05:
        $r0[$i0] = 1;

     label06:
        $r2 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i b>;

        $i0 = virtualinvoke $r2.<com.seventeenmiles.sketch.cloud.i: int ordinal()>();

     label07:
        $r0[$i0] = 2;

     label08:
        <com.seventeenmiles.sketch.cloud.a: int[] m> = $r0;

        return $r0;

     label09:
        $r3 := @caughtexception;

        goto label08;

     label10:
        $r4 := @caughtexception;

        goto label06;

     label11:
        $r5 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label11;
        catch java.lang.NoSuchFieldError from label04 to label05 with label10;
        catch java.lang.NoSuchFieldError from label06 to label07 with label09;
    }

    public final transient com.seventeenmiles.sketch.cloud.a a(java.util.concurrent.Executor, java.lang.Object[])
    {
        java.lang.IllegalStateException $r8;
        com.seventeenmiles.sketch.cloud.a r0;
        java.lang.Object[] $r2;
        java.util.concurrent.Executor $r1;
        java.util.concurrent.FutureTask $r7;
        com.seventeenmiles.sketch.cloud.j $r6;
        com.seventeenmiles.sketch.cloud.i $r3, $r4;
        int[] $r5;
        int $i0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.util.concurrent.Executor;

        $r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.i j>;

        $r4 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i a>;

        if $r3 == $r4 goto label1;

        $r5 = staticinvoke <com.seventeenmiles.sketch.cloud.a: int[] c()>();

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.i j>;

        $i0 = virtualinvoke $r3.<com.seventeenmiles.sketch.cloud.i: int ordinal()>();

        $i0 = $r5[$i0];

        lookupswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = <com.seventeenmiles.sketch.cloud.i: com.seventeenmiles.sketch.cloud.i b>;

        r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.i j> = $r3;

        $r6 = r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.j h>;

        $r6.<com.seventeenmiles.sketch.cloud.j: java.lang.Object[] b> = $r2;

        $r7 = r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.FutureTask i>;

        interfaceinvoke $r1.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        return r0;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task is already running.");

        throw $r8;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot execute task: the task has already been executed (a task can be executed only once)");

        throw $r8;
    }

    protected abstract transient java.lang.Object a(java.lang.Object[]);

    protected void a(java.lang.Object)
    {
        java.lang.Object $r1;
        com.seventeenmiles.sketch.cloud.a r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    public final boolean a()
    {
        java.util.concurrent.atomic.AtomicBoolean $r1;
        com.seventeenmiles.sketch.cloud.a r0;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean k>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    protected void b(java.lang.Object)
    {
        java.lang.Object $r1;
        com.seventeenmiles.sketch.cloud.a r0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object;

        return;
    }

    protected transient void b(java.lang.Object[])
    {
        com.seventeenmiles.sketch.cloud.a r0;
        java.lang.Object[] $r1;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object[];

        return;
    }

    public final boolean b()
    {
        com.seventeenmiles.sketch.cloud.a r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.util.concurrent.FutureTask $r2;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 = r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean k>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r2 = r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.FutureTask i>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.FutureTask: boolean cancel(boolean)>(1);

        return $z0;
    }

    public final transient com.seventeenmiles.sketch.cloud.a c(java.lang.Object[])
    {
        com.seventeenmiles.sketch.cloud.a r0;
        java.lang.Object[] $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = <com.seventeenmiles.sketch.cloud.a: java.util.concurrent.Executor g>;

        r0 = virtualinvoke r0.<com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.a a(java.util.concurrent.Executor,java.lang.Object[])>($r2, $r1);

        return r0;
    }

    protected final transient void d(java.lang.Object[])
    {
        com.seventeenmiles.sketch.cloud.a r0;
        java.lang.Object[] $r1;
        android.os.Message $r5;
        com.seventeenmiles.sketch.cloud.f $r4;
        com.seventeenmiles.sketch.cloud.e $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        boolean $z0;

        r0 := @this: com.seventeenmiles.sketch.cloud.a;

        $r1 := @parameter0: java.lang.Object[];

        $r3 = r0.<com.seventeenmiles.sketch.cloud.a: java.util.concurrent.atomic.AtomicBoolean k>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 != 0 goto label1;

        $r4 = <com.seventeenmiles.sketch.cloud.a: com.seventeenmiles.sketch.cloud.f f>;

        $r2 = new com.seventeenmiles.sketch.cloud.e;

        specialinvoke $r2.<com.seventeenmiles.sketch.cloud.e: void <init>(com.seventeenmiles.sketch.cloud.a,java.lang.Object[])>(r0, $r1);

        $r5 = virtualinvoke $r4.<com.seventeenmiles.sketch.cloud.f: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r2);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

     label1:
        return;
    }
}
