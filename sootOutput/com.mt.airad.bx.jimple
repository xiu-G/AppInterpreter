final class com.mt.airad.bx extends java.lang.Object
{

    void <init>()
    {
        com.mt.airad.bx r0;

        r0 := @this: com.mt.airad.bx;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static int a()
    {
        int $i1;
        long $l0;
        java.io.File $r0;

        $r0 = staticinvoke <com.mt.airad.bx: java.io.File c()>();

        if $r0 != null goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $i1 = (int) $l0;

        return $i1;
    }

    private static java.lang.String a(java.io.File[], int)
    {
        java.lang.Throwable $r6;
        java.lang.Float $r5;
        long $l2, $l3;
        byte $b4;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0;
        java.io.File $r1, $r2;
        java.lang.Exception $r7;
        float $f0, $f1;
        java.lang.StringBuilder $r4, $r8;
        java.io.File[] $r0;

        $r0 := @parameter0: java.io.File[];

        $i0 := @parameter1: int;

        $r1 = null;

        if $r0 != null goto label01;

        return ".0000001";

     label01:
        $i1 = lengthof $r0;

     label02:
        $i1 = $i1 + -1;

     label03:
        if $i1 >= 0 goto label05;

     label04:
        if $r1 != null goto label11;

        return ".0000001";

     label05:
        $r2 = $r0[$i1];

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $z0 = staticinvoke <com.mt.airad.bx: boolean b(java.lang.String)>($r3);

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r1 = $r0[$i1];

     label08:
        goto label04;

     label09:
        $r2 = $r0[$i1];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label10:
        $i1 = $i1 + -1;

        goto label03;

     label11:
        $l2 = virtualinvoke $r1.<java.io.File: long length()>();

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

        $b4 = $l2 cmp 500000L;

        $i0 = (int) $b4;

        if $i0 > 0 goto label12;

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        return $r3;

     label12:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $f0 = 0.0F;

     label13:
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r3);

        $f1 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

     label14:
        $f0 = $f1;

     label15:
        $f0 = $f0 * 1.0E7F;

        $f0 = $f0 + 1.0F;

        $f0 = $f0 / 1.0E7F;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>(1);

        return $r3;

     label16:
        $r6 := @caughtexception;

        goto label15;

     label17:
        $r7 := @caughtexception;

        goto label04;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.NumberFormatException from label13 to label14 with label16;
    }

    protected static java.lang.String b()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.mt.airad.bx: java.lang.String d()>();

        return $r0;
    }

    private static boolean b(java.lang.String)
    {
        java.lang.Throwable $r2;
        int $i0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r0;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 8 goto label5;

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

     label2:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label3:
        return 1;

     label4:
        $r2 := @caughtexception;

        $r4 = (java.lang.Exception) $r2;

        staticinvoke <com.mt.airad.ag: void a(java.lang.Exception)>($r4);

     label5:
        return 0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private static java.io.File c()
    {
        java.io.File $r1, $r3;
        java.lang.Exception $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        java.io.File[] $r4;
        boolean $z0;

        $r0 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.AirAD/tempFile/.cache/");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r1 = new java.io.File;

     label03:
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label04:
        if $z0 != 0 goto label06;

        $r3 = new java.io.File;

     label05:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label06:
        $r4 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

     label07:
        if $r4 != null goto label08;

        return null;

     label08:
        $i0 = 0;

     label09:
        $i1 = lengthof $r4;

     label10:
        if $i0 >= $i1 goto label18;

     label11:
        $r1 = $r4[$i0];

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = staticinvoke <com.mt.airad.bx: boolean b(java.lang.String)>($r2);

     label12:
        if $z0 == 0 goto label15;

     label13:
        $r1 = $r4[$i0];

     label14:
        return $r1;

     label15:
        $r1 = $r4[$i0];

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label16:
        $i0 = $i0 + 1;

        goto label09;

     label17:
        $r5 := @caughtexception;

     label18:
        return null;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label07 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    private static java.lang.String d()
    {
        java.io.FileInputStream $r3;
        java.io.InputStreamReader $r4;
        java.io.File $r2;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r5;
        java.io.BufferedReader $r0;
        java.lang.String $r1;
        boolean $z0;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label01;

        staticinvoke <com.mt.airad.ag: void b()>();

        return "";

     label01:
        $r2 = staticinvoke <com.mt.airad.bx: java.io.File c()>();

     label02:
        if $r2 == null goto label17;

        $r3 = new java.io.FileInputStream;

     label03:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label04:
        $r0 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

     label05:
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label06:
        $r5 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label08:
        $r1 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r1 != null goto label15;

     label10:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label11:
        $r1 = new java.lang.String;

     label12:
        specialinvoke $r1.<java.lang.String: void <init>(java.lang.StringBuilder)>($r5);

     label13:
        return $r1;

     label14:
        $r6 := @caughtexception;

        staticinvoke <com.mt.airad.ag: void a(java.lang.Exception)>($r6);

        return "";

     label15:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label16:
        goto label08;

     label17:
        return "";

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label14;
    }

    protected final void a(java.lang.String)
    {
        java.lang.Throwable $r12;
        byte[] $r10;
        java.io.FileOutputStream $r9;
        com.mt.airad.bx r0;
        java.io.File $r4, $r6;
        java.lang.Exception $r11;
        java.io.BufferedOutputStream $r8;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r5;
        java.io.File[] $r7;
        boolean $z0;

        r0 := @this: com.mt.airad.bx;

        $r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label03;

        staticinvoke <com.mt.airad.ag: void b()>();

     label02:
        exitmonitor r0;

        return;

     label03:
        $r3 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.AirAD/tempFile/.cache/");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r4 = new java.io.File;

     label06:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r4.<java.io.File: boolean isDirectory()>();

     label07:
        if $z0 != 0 goto label09;

     label08:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label09:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label10:
        if $z0 != 0 goto label12;

        $r6 = new java.io.File;

     label11:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r5);

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

     label12:
        $r7 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r2 = staticinvoke <com.mt.airad.bx: java.lang.String a(java.io.File[],int)>($r7, $i0);

     label13:
        $r4 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

     label14:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r2);

     label15:
        $r8 = new java.io.BufferedOutputStream;

        $r9 = new java.io.FileOutputStream;

     label16:
        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r4, 1);

        specialinvoke $r8.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r9);

     label17:
        $r3 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r8.<java.io.BufferedOutputStream: void write(byte[])>($r10);

        virtualinvoke $r8.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke $r8.<java.io.BufferedOutputStream: void close()>();

     label19:
        goto label02;

     label20:
        $r11 := @caughtexception;

     label21:
        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label22:
        goto label02;

     label23:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label10 with label20;
        catch java.lang.Exception from label11 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label03 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
    }
}
