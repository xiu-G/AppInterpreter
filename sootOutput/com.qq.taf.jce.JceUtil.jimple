public final class com.qq.taf.jce.JceUtil extends java.lang.Object
{
    private static final byte[] highDigits;
    private static final int iConstant;
    private static final int iTotal;
    private static final byte[] lowDigits;

    static void <clinit>()
    {
        byte[] r0, r1, r2;
        byte $b2;
        int i0, $i1;

        <com.qq.taf.jce.JceUtil: int iTotal> = 17;

        <com.qq.taf.jce.JceUtil: int iConstant> = 37;

        r0 = newarray (byte)[16];

        r0[0] = 48;

        r0[1] = 49;

        r0[2] = 50;

        r0[3] = 51;

        r0[4] = 52;

        r0[5] = 53;

        r0[6] = 54;

        r0[7] = 55;

        r0[8] = 56;

        r0[9] = 57;

        r0[10] = 65;

        r0[11] = 66;

        r0[12] = 67;

        r0[13] = 68;

        r0[14] = 69;

        r0[15] = 70;

        r1 = newarray (byte)[256];

        r2 = newarray (byte)[256];

        i0 = 0;

     label1:
        if i0 >= 256 goto label2;

        $i1 = i0 >>> 4;

        $b2 = r0[$i1];

        r1[i0] = $b2;

        $i1 = i0 & 15;

        $b2 = r0[$i1];

        r2[i0] = $b2;

        i0 = i0 + 1;

        goto label1;

     label2:
        <com.qq.taf.jce.JceUtil: byte[] highDigits> = r1;

        <com.qq.taf.jce.JceUtil: byte[] lowDigits> = r2;

        return;
    }

    public void <init>()
    {
        com.qq.taf.jce.JceUtil r0;

        r0 := @this: com.qq.taf.jce.JceUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int compareTo(byte, byte)
    {
        byte $b0, $b1;
        int $i2, $i3;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $i2 = (int) $b0;

        $i3 = (int) $b1;

        if $i2 >= $i3 goto label1;

        $i2 = -1;

        return $i2;

     label1:
        $i2 = (int) $b0;

        $i3 = (int) $b1;

        if $i2 <= $i3 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(char, char)
    {
        int $i2, $i3;
        char $c0, $c1;

        $c0 := @parameter0: char;

        $c1 := @parameter1: char;

        $i2 = (int) $c0;

        $i3 = (int) $c1;

        if $i2 >= $i3 goto label1;

        $i2 = -1;

        return $i2;

     label1:
        $i2 = (int) $c0;

        $i3 = (int) $c1;

        if $i2 <= $i3 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(double, double)
    {
        byte $b0;
        int $i1;
        double $d0, $d1;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $b0 = $d0 cmpg $d1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $i1 = -1;

        return $i1;

     label1:
        $b0 = $d0 cmpl $d1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $i1 = -1;

        return $i1;

     label1:
        $b0 = $f0 cmpl $f1;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= $i1 goto label1;

        $i0 = -1;

        return $i0;

     label1:
        if $i0 <= $i1 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(long, long)
    {
        byte $b2;
        int $i3;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        $i3 = -1;

        return $i3;

     label1:
        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable r0, r1;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        return $i0;
    }

    public static int compareTo(java.util.List, java.util.List)
    {
        java.util.Iterator $r2, $r3;
        java.util.List r0, r1;
        int $i0;
        java.lang.Object $r4;
        java.lang.Comparable $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Comparable) $r4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $i0 = interfaceinvoke $r5.<java.lang.Comparable: int compareTo(java.lang.Object)>($r4);

        if $i0 == 0 goto label1;

        return $i0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(boolean,boolean)>($z0, $z1);

        return $i0;
    }

    public static int compareTo(short, short)
    {
        short $s0, $s1;
        int $i2, $i3;

        $s0 := @parameter0: short;

        $s1 := @parameter1: short;

        $i2 = (int) $s0;

        $i3 = (int) $s1;

        if $i2 >= $i3 goto label1;

        $i2 = -1;

        return $i2;

     label1:
        $i2 = (int) $s0;

        $i3 = (int) $s1;

        if $i2 <= $i3 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int compareTo(boolean, boolean)
    {
        int $i0;
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = 1;

        if $z0 == 0 goto label3;

        $z0 = 1;

     label1:
        if $z1 == 0 goto label4;

     label2:
        $i0 = $z0 - $z2;

        return $i0;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        $z2 = 0;

        goto label2;
    }

    public static int compareTo(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b3, $b4;
        int i0, i1, $i2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $b3 = $r0[i0];

        $b4 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(byte,byte)>($b3, $b4);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(char[], char[])
    {
        int i0, i1, $i2;
        char[] $r0, $r1;
        char $c3, $c4;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: char[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $c3 = $r0[i0];

        $c4 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(char,char)>($c3, $c4);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(double[], double[])
    {
        double[] $r0, $r1;
        int $i0, i1, $i2;
        double $d0, $d1;

        $r0 := @parameter0: double[];

        $r1 := @parameter1: double[];

        $i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $d1 = $r0[$i0];

        $d0 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(double,double)>($d1, $d0);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        $i0 = $i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i1 = lengthof $r0;

        $i0 = lengthof $r1;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i1, $i0);

        return $i0;
    }

    public static int compareTo(float[], float[])
    {
        int i0, i1, $i2;
        float $f0, $f1;
        float[] $r0, $r1;

        $r0 := @parameter0: float[];

        $r1 := @parameter1: float[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $f0 = $r0[i0];

        $f1 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(float,float)>($f0, $f1);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(int[], int[])
    {
        int[] $r0, $r1;
        int i0, i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $i2 = $r0[i0];

        $i3 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>($i2, $i3);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(long[], long[])
    {
        long[] $r0, $r1;
        int $i0, i2, $i3;
        long $l1, $l4;

        $r0 := @parameter0: long[];

        $r1 := @parameter1: long[];

        $i0 = 0;

        i2 = 0;

     label1:
        $i3 = lengthof $r0;

        if $i0 >= $i3 goto label3;

        $i3 = lengthof $r1;

        if i2 >= $i3 goto label3;

        $l4 = $r0[$i0];

        $l1 = $r1[i2];

        $i3 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(long,long)>($l4, $l1);

        if $i3 == 0 goto label2;

        return $i3;

     label2:
        $i0 = $i0 + 1;

        i2 = i2 + 1;

        goto label1;

     label3:
        i2 = lengthof $r0;

        $i0 = lengthof $r1;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i2, $i0);

        return $i0;
    }

    public static int compareTo(java.lang.Comparable[], java.lang.Comparable[])
    {
        int i0, i1, $i2;
        java.lang.Comparable $r2, $r3;
        java.lang.Comparable[] r0, r1;

        r0 := @parameter0: java.lang.Comparable[];

        r1 := @parameter1: java.lang.Comparable[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof r1;

        if i1 >= $i2 goto label3;

        $r2 = r0[i0];

        $r3 = r1[i1];

        $i2 = interfaceinvoke $r2.<java.lang.Comparable: int compareTo(java.lang.Object)>($r3);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof r0;

        i1 = lengthof r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(short[], short[])
    {
        short $s3, $s4;
        int i0, i1, $i2;
        short[] $r0, $r1;

        $r0 := @parameter0: short[];

        $r1 := @parameter1: short[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $s3 = $r0[i0];

        $s4 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(short,short)>($s3, $s4);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static int compareTo(boolean[], boolean[])
    {
        boolean[] $r0, $r1;
        int i0, i1, $i2;
        boolean $z0, $z1;

        $r0 := @parameter0: boolean[];

        $r1 := @parameter1: boolean[];

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i0 >= $i2 goto label3;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $z0 = $r0[i0];

        $z1 = $r1[i1];

        $i2 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(boolean,boolean)>($z0, $z1);

        if $i2 == 0 goto label2;

        return $i2;

     label2:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        i0 = lengthof $r0;

        i1 = lengthof $r1;

        i0 = staticinvoke <com.qq.taf.jce.JceUtil: int compareTo(int,int)>(i0, i1);

        return i0;
    }

    public static boolean equals(byte, byte)
    {
        byte $b0, $b1;
        int $i2, $i3;

        $b0 := @parameter0: byte;

        $b1 := @parameter1: byte;

        $i2 = (int) $b0;

        $i3 = (int) $b1;

        if $i2 != $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(char, char)
    {
        int $i2, $i3;
        char $c0, $c1;

        $c0 := @parameter0: char;

        $c1 := @parameter1: char;

        $i2 = (int) $c0;

        $i3 = (int) $c1;

        if $i2 != $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(double, double)
    {
        byte $b0;
        double $d0, $d1;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(float, float)
    {
        float $f0, $f1;
        byte $b0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(long, long)
    {
        long $l0, $l1;
        byte $b2;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean equals(short, short)
    {
        short $s0, $s1;
        int $i2, $i3;

        $s0 := @parameter0: short;

        $s1 := @parameter1: short;

        $i2 = (int) $s0;

        $i3 = (int) $s1;

        if $i2 != $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean equals(boolean, boolean)
    {
        boolean $z0, $z1;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        if $z0 != $z1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String getHexdump(java.nio.ByteBuffer)
    {
        byte[] $r2;
        char $c4;
        java.nio.ByteBuffer $r0;
        short s3;
        byte $b2;
        java.lang.StringBuffer r1, $r4;
        int $i0, $i1, $i5;
        java.lang.String $r3;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int remaining()>();

        if $i0 != 0 goto label1;

        return "empty";

     label1:
        $r4 = new java.lang.StringBuffer;

        r1 = $r4;

        $i1 = virtualinvoke $r0.<java.nio.ByteBuffer: int remaining()>();

        $i1 = $i1 * 3;

        $i5 = -1;

        $i1 = $i1 + $i5;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i1 = virtualinvoke $r0.<java.nio.ByteBuffer: int position()>();

        $b2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte get()>();

        s3 = (short) $b2;

        s3 = s3 & 255;

        $r2 = <com.qq.taf.jce.JceUtil: byte[] highDigits>;

        $i5 = (int) s3;

        $b2 = $r2[$i5];

        $c4 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $r2 = <com.qq.taf.jce.JceUtil: byte[] lowDigits>;

        $i5 = (int) s3;

        $b2 = $r2[$i5];

        $c4 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $i5 = -1;

        $i0 = $i0 + $i5;

     label2:
        if $i0 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $b2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte get()>();

        s3 = (short) $b2;

        s3 = s3 & 255;

        $r2 = <com.qq.taf.jce.JceUtil: byte[] highDigits>;

        $i5 = (int) s3;

        $b2 = $r2[$i5];

        $c4 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $r2 = <com.qq.taf.jce.JceUtil: byte[] lowDigits>;

        $i5 = (int) s3;

        $b2 = $r2[$i5];

        $c4 = (char) $b2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $i5 = -1;

        $i0 = $i0 + $i5;

        goto label2;

     label3:
        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getHexdump(byte[])
    {
        byte[] $r0;
        java.lang.String $r2;
        java.nio.ByteBuffer $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r0);

        $r2 = staticinvoke <com.qq.taf.jce.JceUtil: java.lang.String getHexdump(java.nio.ByteBuffer)>($r1);

        return $r2;
    }

    public static byte[] getJceBufArray(java.nio.ByteBuffer)
    {
        byte[] r1, $r2;
        int $i0;
        java.nio.ByteBuffer $r0;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int position()>();

        r1 = newarray (byte)[$i0];

        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i0);

        return r1;
    }

    public static int hashCode(byte)
    {
        int $i1;
        byte $b0;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        $i1 = $i1 + 629;

        return $i1;
    }

    public static int hashCode(char)
    {
        int $i1;
        char $c0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        $i1 = $i1 + 629;

        return $i1;
    }

    public static int hashCode(double)
    {
        int $i1;
        long $l0;
        double $d0;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $i1 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(long)>($l0);

        return $i1;
    }

    public static int hashCode(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i0 = $i0 + 629;

        return $i0;
    }

    public static int hashCode(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 + 629;

        return $i0;
    }

    public static int hashCode(long)
    {
        int $i2;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 >> 32;

        $l0 = $l1 ^ $l0;

        $i2 = (int) $l0;

        $i2 = $i2 + 629;

        return $i2;
    }

    public static int hashCode(java.lang.Object)
    {
        byte[] r6;
        java.lang.Object[] r11;
        double[] r7;
        boolean[] r9;
        com.qq.taf.jce.JceStruct[] r10;
        float[] r8;
        long[] r2;
        int[] r3;
        int $i0;
        char[] r5;
        java.lang.Object r0;
        java.lang.Class $r1;
        short[] r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 629;

     label01:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label11;

        $z0 = r0 instanceof long[];

        if $z0 == 0 goto label02;

        r2 = (long[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(long[])>(r2);

        return $i0;

     label02:
        $z0 = r0 instanceof int[];

        if $z0 == 0 goto label03;

        r3 = (int[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(int[])>(r3);

        return $i0;

     label03:
        $z0 = r0 instanceof short[];

        if $z0 == 0 goto label04;

        r4 = (short[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(short[])>(r4);

        return $i0;

     label04:
        $z0 = r0 instanceof char[];

        if $z0 == 0 goto label05;

        r5 = (char[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(char[])>(r5);

        return $i0;

     label05:
        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label06;

        r6 = (byte[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(byte[])>(r6);

        return $i0;

     label06:
        $z0 = r0 instanceof double[];

        if $z0 == 0 goto label07;

        r7 = (double[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(double[])>(r7);

        return $i0;

     label07:
        $z0 = r0 instanceof float[];

        if $z0 == 0 goto label08;

        r8 = (float[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(float[])>(r8);

        return $i0;

     label08:
        $z0 = r0 instanceof boolean[];

        if $z0 == 0 goto label09;

        r9 = (boolean[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(boolean[])>(r9);

        return $i0;

     label09:
        $z0 = r0 instanceof com.qq.taf.jce.JceStruct[];

        if $z0 == 0 goto label10;

        r10 = (com.qq.taf.jce.JceStruct[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(com.qq.taf.jce.JceStruct[])>(r10);

        return $i0;

     label10:
        r11 = (java.lang.Object[]) r0;

        $i0 = staticinvoke <com.qq.taf.jce.JceUtil: int hashCode(java.lang.Object)>(r11);

        return $i0;

     label11:
        $z0 = r0 instanceof com.qq.taf.jce.JceStruct;

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;

     label12:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i0 = $i0 + 629;

        return $i0;
    }

    public static int hashCode(short)
    {
        int $i1;
        short $s0;

        $s0 := @parameter0: short;

        $i1 = (int) $s0;

        $i1 = $i1 + 629;

        return $i1;
    }

    public static int hashCode(boolean)
    {
        int $i0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $z0 = 0;

     label1:
        $i0 = $z0 + 629;

        return $i0;

     label2:
        $z0 = 1;

        goto label1;
    }

    public static int hashCode(byte[])
    {
        byte[] $r0;
        byte $b0;
        int i1, i2, $i3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return 629;

     label1:
        i1 = 17;

        i2 = 0;

     label2:
        $i3 = lengthof $r0;

        if i2 >= $i3 goto label3;

        i1 = i1 * 37;

        $b0 = $r0[i2];

        $i3 = (int) $b0;

        i1 = i1 + $i3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(char[])
    {
        int i1, i2, $i3;
        char[] $r0;
        char $c0;

        $r0 := @parameter0: char[];

        if $r0 != null goto label1;

        return 629;

     label1:
        i1 = 17;

        i2 = 0;

     label2:
        $i3 = lengthof $r0;

        if i2 >= $i3 goto label3;

        i1 = i1 * 37;

        $c0 = $r0[i2];

        $i3 = (int) $c0;

        i1 = i1 + $i3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(double[])
    {
        double[] $r0;
        int i0, i1, $i2;
        long $l3, $l4;
        double $d0;

        $r0 := @parameter0: double[];

        if $r0 != null goto label1;

        return 629;

     label1:
        i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label3;

        i0 = i0 * 37;

        $d0 = $r0[i1];

        $l3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = $r0[i1];

        $l4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l4 = $l4 >> 32;

        $l3 = $l3 ^ $l4;

        $i2 = (int) $l3;

        i0 = i0 + $i2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return i0;
    }

    public static int hashCode(float[])
    {
        int $i0, i1, $i2;
        float $f0;
        float[] $r0;

        $r0 := @parameter0: float[];

        if $r0 != null goto label1;

        return 629;

     label1:
        $i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label3;

        $i2 = $i0 * 37;

        $f0 = $r0[i1];

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i0 = $i2 + $i0;

        i1 = i1 + 1;

        goto label2;

     label3:
        return $i0;
    }

    public static int hashCode(int[])
    {
        int[] $r0;
        int $i0, i1, $i2;

        $r0 := @parameter0: int[];

        if $r0 != null goto label1;

        return 629;

     label1:
        $i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label3;

        $i2 = $i0 * 37;

        $i0 = $r0[i1];

        $i0 = $i2 + $i0;

        i1 = i1 + 1;

        goto label2;

     label3:
        return $i0;
    }

    public static int hashCode(long[])
    {
        long[] $r0;
        int i0, i1, $i2;
        long $l3, $l4;

        $r0 := @parameter0: long[];

        if $r0 != null goto label1;

        return 629;

     label1:
        i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label3;

        i0 = i0 * 37;

        $l3 = $r0[i1];

        $l4 = $r0[i1];

        $l4 = $l4 >> 32;

        $l3 = $l3 ^ $l4;

        $i2 = (int) $l3;

        i0 = i0 + $i2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return i0;
    }

    public static int hashCode(com.qq.taf.jce.JceStruct[])
    {
        com.qq.taf.jce.JceStruct[] $r0;
        int $i0, i1, $i2;
        com.qq.taf.jce.JceStruct $r1;

        $r0 := @parameter0: com.qq.taf.jce.JceStruct[];

        if $r0 != null goto label1;

        return 629;

     label1:
        $i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label3;

        $i2 = $i0 * 37;

        $r1 = $r0[i1];

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i0 = $i2 + $i0;

        i1 = i1 + 1;

        goto label2;

     label3:
        return $i0;
    }

    public static int hashCode(short[])
    {
        short $s0;
        int i1, i2, $i3;
        short[] $r0;

        $r0 := @parameter0: short[];

        if $r0 != null goto label1;

        return 629;

     label1:
        i1 = 17;

        i2 = 0;

     label2:
        $i3 = lengthof $r0;

        if i2 >= $i3 goto label3;

        i1 = i1 * 37;

        $s0 = $r0[i2];

        $i3 = (int) $s0;

        i1 = i1 + $i3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    public static int hashCode(boolean[])
    {
        boolean[] $r0;
        int $i0, i1, $i2;
        boolean $z0;

        $r0 := @parameter0: boolean[];

        if $r0 != null goto label1;

        return 629;

     label1:
        $i0 = 17;

        i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label5;

        $i0 = $i0 * 37;

        $z0 = $r0[i1];

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $i0 = $i0 + $z0;

        i1 = i1 + 1;

        goto label2;

     label4:
        $z0 = 1;

        goto label3;

     label5:
        return $i0;
    }
}
