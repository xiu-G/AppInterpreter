public class jp.Adlantis.Android.AdlantisAd extends java.util.HashMap implements java.util.Map, java.io.Serializable
{
    public static final int ADTYPE_BANNER;
    public static final int ADTYPE_TEXT;
    private static final long IMPRESSION_COUNT_INTERVAL_NANOSECONDS;
    private static final java.lang.String LOG_TAG;
    private static final long NANOSECOND;
    private static final long serialVersionUID;
    protected android.os.Handler _impressionHandler;
    protected boolean _isBeingViewed;
    protected boolean _sendImpressionCountFailed;
    protected boolean _sendingCountExpand;
    protected boolean _sendingImpressionCount;
    protected boolean _sentCountExpand;
    protected boolean _sentImpressionCount;
    protected long _viewStartTime;
    protected long _viewedTime;

    public void <init>(java.util.HashMap)
    {
        java.util.HashMap $r1;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.util.HashMap: void <init>(java.util.Map)>($r1);

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendImpressionCountFailed> = 0;

        return;
    }

    public void <init>(org.json.JSONObject)
    {
        java.util.HashMap $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        org.json.JSONObject $r1;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.util.HashMap jsonObjectToHashMap(org.json.JSONObject)>($r1);

        specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: void <init>(java.util.HashMap)>($r2);

        return;
    }

    static void access$000(jp.Adlantis.Android.AdlantisAd, boolean)
    {
        jp.Adlantis.Android.AdlantisAd $r0;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<jp.Adlantis.Android.AdlantisAd: void setSendingImpressionCount(boolean)>(0);

        return;
    }

    static void access$100(jp.Adlantis.Android.AdlantisAd, boolean)
    {
        jp.Adlantis.Android.AdlantisAd $r0;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<jp.Adlantis.Android.AdlantisAd: void setSentImpressionCount(boolean)>(1);

        return;
    }

    static void access$200(jp.Adlantis.Android.AdlantisAd, boolean)
    {
        jp.Adlantis.Android.AdlantisAd $r0;
        boolean $z0;

        $r0 := @parameter0: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<jp.Adlantis.Android.AdlantisAd: void setSendImpressionCountFailed(boolean)>(1);

        return;
    }

    public static jp.Adlantis.Android.AdlantisAd[] adsFromJSONInputStream(java.io.InputStream)
    {
        jp.Adlantis.Android.AdlantisAd[] $r2;
        java.lang.String $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <jp.Adlantis.Android.AdlantisUtils: java.lang.String convertInputToString(java.io.InputStream)>($r0);

        $r2 = staticinvoke <jp.Adlantis.Android.AdlantisAd: jp.Adlantis.Android.AdlantisAd[] adsFromJSONString(java.lang.String)>($r1);

        return $r2;
    }

    public static jp.Adlantis.Android.AdlantisAd[] adsFromJSONString(java.lang.String)
    {
        jp.Adlantis.Android.AdlantisAd $r3;
        java.lang.Exception $r5;
        jp.Adlantis.Android.AdlantisAd[] $r1;
        org.json.JSONObject $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r0;
        org.json.JSONArray $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

     label01:
        $r2 = staticinvoke <jp.Adlantis.Android.AdlantisAd: org.json.JSONArray extractJSONAdArray(java.lang.String)>($r0);

     label02:
        if $r2 == null goto label09;

     label03:
        $i0 = virtualinvoke $r2.<org.json.JSONArray: int length()>();

        $r1 = newarray (jp.Adlantis.Android.AdlantisAd)[$i0];

     label04:
        $i0 = 0;

     label05:
        $i1 = virtualinvoke $r2.<org.json.JSONArray: int length()>();

     label06:
        if $i0 >= $i1 goto label12;

        $r3 = new jp.Adlantis.Android.AdlantisAd;

     label07:
        $r4 = virtualinvoke $r2.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        specialinvoke $r3.<jp.Adlantis.Android.AdlantisAd: void <init>(org.json.JSONObject)>($r4);

        $r1[$i0] = $r3;

     label08:
        $i0 = $i0 + 1;

        goto label05;

     label09:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AdlantisAd", "Adlantis: no ads received (this is not an error)");

     label10:
        return null;

     label11:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception parsing JSON data ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logError(java.lang.String)>($r0);

     label12:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private android.net.Uri buildURIFrom(android.content.Context, java.lang.String)
    {
        jp.Adlantis.Android.AdNetworkConnection $r5;
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        android.net.Uri $r3;
        java.lang.String $r2;
        android.net.Uri$Builder $r6;
        jp.Adlantis.Android.AdManager $r4;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        $r4 = staticinvoke <jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdManager getInstance()>();

        $r5 = virtualinvoke $r4.<jp.Adlantis.Android.AdManager: jp.Adlantis.Android.AdNetworkConnection getAdNetworkConnection()>();

        $r6 = virtualinvoke $r5.<jp.Adlantis.Android.AdNetworkConnection: android.net.Uri$Builder defaultRequestBuilder(android.content.Context,android.net.Uri)>(null, $r3);

        $r3 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r3;
    }

    private android.net.Uri buildURIFromProperty(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        android.net.Uri $r4;
        java.lang.Object $r3;
        java.lang.String $r2;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>($r2);

        $r2 = (java.lang.String) $r3;

        $r4 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: android.net.Uri buildURIFrom(android.content.Context,java.lang.String)>(null, $r2);

        return $r4;
    }

    private int currentOrientation(android.view.View)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        android.content.res.Configuration $r3;
        int i0;
        android.view.View $r1;
        android.content.res.Resources $r2;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = $r3.<android.content.res.Configuration: int orientation>;

        return i0;
    }

    private static java.lang.String expandedAdOrientationKey(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.lang.String orientationKey(int)>($i0);

        return $r0;
    }

    private static org.json.JSONArray extractJSONAdArray(java.lang.String)
    {
        org.json.JSONException $r4, $r5;
        org.json.JSONObject $r3;
        java.lang.String $r0;
        org.json.JSONArray $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = new org.json.JSONArray;

     label1:
        specialinvoke $r2.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

     label2:
        if $r2 != null goto label7;

        $r3 = new org.json.JSONObject;

     label3:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("ads");

     label4:
        return $r1;

     label5:
        $r4 := @caughtexception;

        $r2 = null;

        goto label2;

     label6:
        $r5 := @caughtexception;

     label7:
        return $r2;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label6;
    }

    private boolean hasHighResolutionDisplay(android.content.Context)
    {
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.content.Context;

        $z0 = staticinvoke <jp.Adlantis.Android.AdlantisUtils: boolean hasHighResolutionDisplay(android.content.Context)>($r1);

        return $z0;
    }

    private static java.lang.String iphone_orientationKey(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <jp.Adlantis.Android.AdlantisAd: boolean orientationIsLandscape(int)>($i0);

        if $z0 == 0 goto label1;

        return "iphone_landscape";

     label1:
        return "iphone_portrait";
    }

    protected static java.util.HashMap jsonObjectToHashMap(org.json.JSONObject)
    {
        java.util.Iterator $r2;
        java.util.HashMap $r1, $r7;
        org.json.JSONException $r8;
        org.json.JSONObject $r0, $r6;
        java.lang.Object $r3, $r5;
        java.lang.StringBuilder $r9;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

     label2:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

     label3:
        $r5 = $r3;

        $z0 = $r3 instanceof org.json.JSONObject;

        if $z0 == 0 goto label6;

        $r6 = (org.json.JSONObject) $r3;

     label4:
        $r7 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.util.HashMap jsonObjectToHashMap(org.json.JSONObject)>($r6);

     label5:
        $r5 = $r7;

     label6:
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label7:
        goto label1;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception parsing object ex = ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logDebug(java.lang.String)>($r4);

        goto label1;

     label9:
        return $r1;

        catch org.json.JSONException from label2 to label3 with label8;
        catch org.json.JSONException from label4 to label5 with label8;
        catch org.json.JSONException from label6 to label7 with label8;
    }

    protected static void logDebug(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdlantisAd", $r0);

        return;
    }

    protected static void logError(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdlantisAd", $r0);

        return;
    }

    protected static void logWarn(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AdlantisAd", "viewingEnded() called without matching viewingStarted()");

        return;
    }

    private static boolean orientationIsLandscape(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static java.lang.String orientationKey(int)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 = staticinvoke <jp.Adlantis.Android.AdlantisAd: boolean orientationIsLandscape(int)>($i0);

        if $z0 == 0 goto label1;

        return "landscape";

     label1:
        return "portrait";
    }

    private void setSendImpressionCountFailed(boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter0: boolean;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendImpressionCountFailed> = 1;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendingImpressionCount> = 0;

        return;
    }

    private void setSendingImpressionCount(boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter0: boolean;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendingImpressionCount> = $z0;

        return;
    }

    private void setSentImpressionCount(boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter0: boolean;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sentImpressionCount> = 1;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendingImpressionCount> = 0;

        return;
    }

    public int adType()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r1, $r3;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("type");

        $r3 = (java.lang.String) $r2;

        $r1 = "sp_banner";

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 2;
    }

    public java.lang.String altTextString(int)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map bannerInfoForOrientation(int)>($i0);

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("alt");

        $r3 = (java.lang.String) $r2;

        if $r3 == null goto label2;

        $r3 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r3);

        return $r3;

     label1:
        return null;

     label2:
        return $r3;
    }

    public java.lang.String altTextString(android.view.View)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r2;
        android.view.View $r1;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map bannerInfoForCurrentOrientation(android.view.View)>($r1);

        if $r2 == null goto label1;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("alt");

        $r4 = (java.lang.String) $r3;

        if $r4 == null goto label2;

        $r4 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r4);

        return $r4;

     label1:
        return null;

     label2:
        return $r4;
    }

    public java.util.Map bannerInfoForCurrentOrientation(android.view.View)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r2;
        int $i0;
        android.view.View $r1;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i0 != 1 goto label1;

        $i0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: int currentOrientation(android.view.View)>($r1);

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map bannerInfoForOrientation(int)>($i0);

        return $r2;

     label1:
        return null;
    }

    public java.util.Map bannerInfoForOrientation(int)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r3;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i1 != 1 goto label2;

        $r1 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.lang.String orientationKey(int)>($i0);

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>($r1);

        $r2 = (java.util.Map) $r2;

        if $r2 != null goto label1;

        $r1 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.lang.String iphone_orientationKey(int)>($i0);

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>($r1);

     label1:
        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label2;

        $r3 = (java.util.Map) $r2;

        return $r3;

     label2:
        return null;
    }

    public java.lang.String bannerURLForCurrentOrientation(android.view.View)
    {
        android.content.Context $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0;
        android.view.View $r1;
        java.lang.String $r3;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: int currentOrientation(android.view.View)>($r1);

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String bannerURLForOrientation(int,android.content.Context)>($i0, $r2);

        return $r3;
    }

    public java.lang.String bannerURLForOrientation(int, android.content.Context)
    {
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.content.Context;

        $z0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean hasHighResolutionDisplay(android.content.Context)>($r1);

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String bannerURLForOrientation(int,boolean)>($i0, $z0);

        return $r2;
    }

    public java.lang.String bannerURLForOrientation(int, boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = null;

        $i1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i1 != 1 goto label2;

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map bannerInfoForOrientation(int)>($i0);

        if $r2 == null goto label2;

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("src_2x");

        $r1 = (java.lang.String) $r3;

     label1:
        if $r1 != null goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("src");

        $r1 = (java.lang.String) $r3;

        return $r1;

     label2:
        return null;

     label3:
        return $r1;
    }

    protected void clearImpressionHandler()
    {
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        r0.<jp.Adlantis.Android.AdlantisAd: android.os.Handler _impressionHandler> = null;

        return;
    }

    public android.net.Uri countExpandUri(android.content.Context)
    {
        android.net.Uri $r2;
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: android.net.Uri buildURIFromProperty(android.content.Context,java.lang.String)>($r1, "count_expand");

        return $r2;
    }

    public android.net.Uri countImpressionUri(android.content.Context)
    {
        android.net.Uri $r2;
        android.content.Context $r1;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: android.net.Uri buildURIFromProperty(android.content.Context,java.lang.String)>($r1, "count_impression");

        return $r2;
    }

    protected void doSendImpressionCountThread()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        jp.Adlantis.Android.AdlantisAd$2 $r1;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = new jp.Adlantis.Android.AdlantisAd$2;

        specialinvoke $r1.<jp.Adlantis.Android.AdlantisAd$2: void <init>(jp.Adlantis.Android.AdlantisAd)>(r0);

        virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd$2: void start()>();

        return;
    }

    public java.util.Map expandedContentForOrientation(int)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r4;
        int $i0;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("has_expand");

        $r2 = (java.lang.Boolean) $r1;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <jp.Adlantis.Android.AdlantisAd: java.lang.String expandedAdOrientationKey(int)>($i0);

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("expand_content");

        $r4 = (java.util.Map) $r1;

        if $r4 == null goto label1;

        $r1 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r4 = (java.util.Map) $r1;

        return $r4;

     label1:
        return null;
    }

    public java.lang.String expandedContentImageURLForOrientation(int, boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map expandedContentForOrientation(int)>($i0);

        $r2 = null;

        if $r1 == null goto label2;

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("src_2x");

        $r2 = (java.lang.String) $r3;

     label1:
        if $r2 != null goto label3;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("src");

        $r2 = (java.lang.String) $r3;

        return $r2;

     label2:
        return null;

     label3:
        return $r2;
    }

    public java.lang.String expandedContentImageURLForView(android.view.View)
    {
        android.content.Context $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0;
        android.view.View $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: int currentOrientation(android.view.View)>($r1);

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $z0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean hasHighResolutionDisplay(android.content.Context)>($r2);

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String expandedContentImageURLForOrientation(int,boolean)>($i0, $z0);

        return $r3;
    }

    public boolean hasAdForOrientation(int)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r1;
        int $i0, $i1;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i1 != 2 goto label1;

        return 1;

     label1:
        $i1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i1 != 1 goto label2;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.util.Map bannerInfoForOrientation(int)>($i0);

        if $r1 != null goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public java.util.HashMap hashMapRepresentation()
    {
        java.util.HashMap $r1;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>(r0);

        return $r1;
    }

    protected org.apache.http.impl.client.AbstractHttpClient httpClientFactory()
    {
        org.apache.http.impl.client.DefaultHttpClient $r1;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        return $r1;
    }

    public java.lang.String iconURL(android.view.View)
    {
        android.content.Context $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        android.view.View $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $z0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean hasHighResolutionDisplay(android.content.Context)>($r2);

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String iconURL(boolean)>($z0);

        return $r3;
    }

    public java.lang.String iconURL(boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 := @parameter0: boolean;

        $r1 = null;

        $i0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i0 != 2 goto label3;

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("iphone_icon");

        $r3 = (java.util.Map) $r2;

        if $r3 == null goto label3;

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("src_2x");

        $r1 = (java.lang.String) $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("src");

        $r1 = (java.lang.String) $r2;

     label2:
        return $r1;

     label3:
        return null;
    }

    public java.lang.String imageURL(int, boolean)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: int adType()>();

        if $i1 != 2 goto label1;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String iconURL(boolean)>($z0);

        return $r1;

     label1:
        if $i1 != 1 goto label2;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String bannerURLForOrientation(int,boolean)>($i0, $z0);

        return $r1;

     label2:
        return null;
    }

    public java.lang.String imageURL(android.view.View)
    {
        android.content.Context $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0;
        android.view.View $r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: android.view.View;

        $i0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: int currentOrientation(android.view.View)>($r1);

        $r2 = virtualinvoke $r1.<android.view.View: android.content.Context getContext()>();

        $z0 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean hasHighResolutionDisplay(android.content.Context)>($r2);

        $r3 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String bannerURLForOrientation(int,boolean)>($i0, $z0);

        return $r3;
    }

    protected long impressionCountIntervalMilliseconds()
    {
        java.util.concurrent.TimeUnit $r1;
        long $l0;
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(2000000000L);

        return $l0;
    }

    protected long impressionCountIntervalNanoseconds()
    {
        jp.Adlantis.Android.AdlantisAd r0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        return 2000000000L;
    }

    protected boolean impressionCountIntervalPassed()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        byte $b2;
        int $i3;
        long $l0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $l0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: long viewedTime()>();

        $b2 = $l0 cmp 2000000000L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isRedirectingUrl(java.lang.String)
    {
        jp.Adlantis.Android.AdlantisAd r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUrlString()>();

        $z0 = staticinvoke <jp.Adlantis.Android.ADLStringUtils: boolean isHttpUrl(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("url=");

        $i1 = -1;

        if $i0 == $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isWebLink()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = "web";

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String linkType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.String linkType()
    {
        java.lang.Object $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r2;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("link_type");

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    void sendCountExpandedAdOpened()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        jp.Adlantis.Android.AdlantisAd$3 $r1;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendingCountExpand>;

        if $z0 != 0 goto label2;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _sentCountExpand>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new jp.Adlantis.Android.AdlantisAd$3;

        specialinvoke $r1.<jp.Adlantis.Android.AdlantisAd$3: void <init>(jp.Adlantis.Android.AdlantisAd)>(r0);

        virtualinvoke $r1.<jp.Adlantis.Android.AdlantisAd$3: void start()>();

     label2:
        return;
    }

    protected void sendImpressionCount()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean shouldSendImpressionCount()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: void setSendingImpressionCount(boolean)>(1);

        virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: void doSendImpressionCountThread()>();

        return;
    }

    protected boolean sendRequestForProperty(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9, $r10;
        android.net.Uri $r3;
        org.apache.http.StatusLine $r7;
        int $i0;
        org.apache.http.impl.client.AbstractHttpClient $r5;
        java.lang.String $r1, $r2;
        jp.Adlantis.Android.AdlantisAd r0;
        java.net.MalformedURLException $r14;
        java.io.IOException $r15;
        org.apache.http.client.methods.HttpGet $r4, $r12;
        org.apache.http.HttpResponse $r6;
        java.lang.StringBuilder $r8, $r13;
        java.lang.OutOfMemoryError $r11;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        $r3 = specialinvoke r0.<jp.Adlantis.Android.AdlantisAd: android.net.Uri buildURIFromProperty(android.content.Context,java.lang.String)>(null, $r1);

        $r1 = virtualinvoke $r3.<android.net.Uri: java.lang.String toString()>();

     label02:
        if $r1 != null goto label03;

        return 0;

     label03:
        $r12 = new org.apache.http.client.methods.HttpGet;

     label04:
        $r4 = $r12;

     label05:
        specialinvoke $r12.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: org.apache.http.impl.client.AbstractHttpClient httpClientFactory()>();

        $r6 = virtualinvoke $r5.<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r4);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r7.<org.apache.http.StatusLine: int getStatusCode()>();

     label06:
        if $i0 < 200 goto label07;

        if $i0 >= 400 goto label07;

        return 1;

     label07:
        $r13 = new java.lang.StringBuilder;

     label08:
        $r8 = $r13;

     label09:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logError(java.lang.String)>($r1);

     label10:
        return 0;

     label11:
        $r9 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception=");

        $r14 = (java.net.MalformedURLException) $r9;

        $r1 = virtualinvoke $r14.<java.net.MalformedURLException: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logError(java.lang.String)>($r1);

        return 0;

     label12:
        $r10 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception=");

        $r15 = (java.io.IOException) $r10;

        $r1 = virtualinvoke $r15.<java.io.IOException: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logError(java.lang.String)>($r1);

        return 0;

     label13:
        $r11 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OutOfMemoryError=");

        $r1 = virtualinvoke $r11.<java.lang.OutOfMemoryError: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logError(java.lang.String)>($r1);

        return 0;

        catch java.net.MalformedURLException from label01 to label02 with label11;
        catch java.net.MalformedURLException from label05 to label06 with label11;
        catch java.net.MalformedURLException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.OutOfMemoryError from label01 to label02 with label13;
        catch java.lang.OutOfMemoryError from label03 to label04 with label13;
        catch java.lang.OutOfMemoryError from label05 to label06 with label13;
        catch java.lang.OutOfMemoryError from label07 to label08 with label13;
        catch java.lang.OutOfMemoryError from label09 to label10 with label13;
    }

    public boolean shouldHandleRedirect()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUrlString()>();

        $z0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean isRedirectingUrl(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r1 = "appstore";

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String linkType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r1 = "itunes";

        $r2 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String linkType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected boolean shouldSendImpressionCount()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _sentImpressionCount>;

        if $z0 != 0 goto label1;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendingImpressionCount>;

        if $z0 != 0 goto label1;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _sendImpressionCountFailed>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String tapUriRedirect()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        android.net.Uri $r2;
        java.lang.String $r1;
        android.net.Uri$Builder $r3;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUrlString()>();

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("adlDoRedirect", "1");

        $r1 = virtualinvoke $r3.<android.net.Uri$Builder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String tapUrlString()
    {
        java.lang.Object $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r2;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("href");

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public java.lang.String textAdString()
    {
        java.lang.Object $r1;
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r2;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.Object get(java.lang.Object)>("string");

        $r2 = (java.lang.String) $r1;

        $r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r2);

        return $r2;
    }

    public java.lang.String urlString()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        java.lang.String $r1;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $r1 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: java.lang.String tapUrlString()>();

        return $r1;
    }

    protected long viewedTime()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        long $l0, $l1, $l2;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _isBeingViewed>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = r0.<jp.Adlantis.Android.AdlantisAd: long _viewedTime>;

        $l2 = r0.<jp.Adlantis.Android.AdlantisAd: long _viewStartTime>;

        $l2 = $l0 - $l2;

        $l1 = $l1 + $l2;

        r0.<jp.Adlantis.Android.AdlantisAd: long _viewedTime> = $l1;

        r0.<jp.Adlantis.Android.AdlantisAd: long _viewStartTime> = $l0;

     label1:
        $l0 = r0.<jp.Adlantis.Android.AdlantisAd: long _viewedTime>;

        return $l0;
    }

    public void viewingEnded()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        boolean $z0;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $z0 = r0.<jp.Adlantis.Android.AdlantisAd: boolean _isBeingViewed>;

        if $z0 != 0 goto label1;

        staticinvoke <jp.Adlantis.Android.AdlantisAd: void logWarn(java.lang.String)>("viewingEnded() called without matching viewingStarted()");

     label1:
        r0.<jp.Adlantis.Android.AdlantisAd: boolean _isBeingViewed> = 0;

        virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: void clearImpressionHandler()>();

        $z0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean impressionCountIntervalPassed()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: void sendImpressionCount()>();

     label2:
        return;
    }

    public void viewingStarted()
    {
        jp.Adlantis.Android.AdlantisAd r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        long $l0;
        boolean $z0;
        jp.Adlantis.Android.AdlantisAd$1 $r3;

        r0 := @this: jp.Adlantis.Android.AdlantisAd;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<jp.Adlantis.Android.AdlantisAd: long _viewStartTime> = $l0;

        r0.<jp.Adlantis.Android.AdlantisAd: boolean _isBeingViewed> = 1;

        $z0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: boolean shouldSendImpressionCount()>();

        if $z0 == 0 goto label1;

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        r0.<jp.Adlantis.Android.AdlantisAd: android.os.Handler _impressionHandler> = $r1;

        $r3 = new jp.Adlantis.Android.AdlantisAd$1;

        specialinvoke $r3.<jp.Adlantis.Android.AdlantisAd$1: void <init>(jp.Adlantis.Android.AdlantisAd)>(r0);

        $r1 = r0.<jp.Adlantis.Android.AdlantisAd: android.os.Handler _impressionHandler>;

        $l0 = virtualinvoke r0.<jp.Adlantis.Android.AdlantisAd: long impressionCountIntervalMilliseconds()>();

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, $l0);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <jp.Adlantis.Android.AdlantisAd: long serialVersionUID> = -94783938293849L;

        <jp.Adlantis.Android.AdlantisAd: long NANOSECOND> = 1000000000L;

        <jp.Adlantis.Android.AdlantisAd: java.lang.String LOG_TAG> = "AdlantisAd";

        <jp.Adlantis.Android.AdlantisAd: long IMPRESSION_COUNT_INTERVAL_NANOSECONDS> = 2000000000L;

        <jp.Adlantis.Android.AdlantisAd: int ADTYPE_TEXT> = 2;

        <jp.Adlantis.Android.AdlantisAd: int ADTYPE_BANNER> = 1;

        return;
    }
}
