public final class com.google.gson.JsonStreamParser extends java.lang.Object implements java.util.Iterator
{
    private final java.lang.Object lock;
    private final com.google.gson.stream.JsonReader parser;

    public void <init>(java.io.Reader)
    {
        java.lang.Object $r3;
        java.io.Reader $r1;
        com.google.gson.JsonStreamParser r0;
        com.google.gson.stream.JsonReader $r2;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.google.gson.stream.JsonReader;

        specialinvoke $r2.<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>($r1);

        r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser> = $r2;

        $r2 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

        virtualinvoke $r2.<com.google.gson.stream.JsonReader: void setLenient(boolean)>(1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.JsonStreamParser: java.lang.Object lock> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        java.io.StringReader $r2;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.StringReader;

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<com.google.gson.JsonStreamParser: void <init>(java.io.Reader)>($r2);

        return;
    }

    public boolean hasNext()
    {
        java.lang.Throwable $r7, r8;
        com.google.gson.JsonSyntaxException $r6;
        com.google.gson.stream.JsonReader $r4;
        com.google.gson.stream.MalformedJsonException r5;
        com.google.gson.stream.JsonToken $r2, $r3;
        com.google.gson.JsonIOException $r9;
        java.lang.Object $r1;
        com.google.gson.JsonStreamParser r0;
        boolean $z0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = r0.<com.google.gson.JsonStreamParser: java.lang.Object lock>;

        entermonitor $r1;

     label01:
        $r4 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label02:
        $r3 = virtualinvoke $r4.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

     label03:
        $r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT>;

     label04:
        if $r3 == $r2 goto label07;

        $z0 = 1;

     label05:
        exitmonitor $r1;

     label06:
        return $z0;

     label07:
        $z0 = 0;

        goto label05;

     label08:
        r5 := @caughtexception;

        $r6 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r5);

        throw $r6;

     label09:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label10:
        throw $r7;

     label11:
        r8 := @caughtexception;

     label12:
        $r9 = new com.google.gson.JsonIOException;

        specialinvoke $r9.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>(r8);

        throw $r9;

     label13:
        nop;

        catch com.google.gson.stream.MalformedJsonException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label10 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public com.google.gson.JsonElement next() throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonParseException $r5, $r10;
        java.lang.Throwable $r8;
        java.lang.StackOverflowError r4;
        com.google.gson.stream.JsonReader $r2;
        com.google.gson.JsonElement $r3;
        java.lang.Object r7;
        java.util.NoSuchElementException $r1, $r9;
        com.google.gson.JsonStreamParser r0;
        java.lang.OutOfMemoryError r6;
        boolean $z0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $z0 = virtualinvoke r0.<com.google.gson.JsonStreamParser: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser>;

     label2:
        $r3 = staticinvoke <com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>($r2);

     label3:
        return $r3;

     label4:
        r4 := @caughtexception;

        $r10 = new com.google.gson.JsonParseException;

        specialinvoke $r10.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", r4);

        throw $r10;

     label5:
        r6 := @caughtexception;

        $r10 = new com.google.gson.JsonParseException;

        specialinvoke $r10.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>("Failed parsing JSON source to Json", r6);

        throw $r10;

     label6:
        r7 := @caughtexception;

        $r5 = (com.google.gson.JsonParseException) r7;

        $r8 = virtualinvoke $r5.<com.google.gson.JsonParseException: java.lang.Throwable getCause()>();

        $z0 = $r8 instanceof java.io.EOFException;

        if $z0 == 0 goto label7;

        $r1 = new java.util.NoSuchElementException;

        r7 = $r1;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

     label7:
        $r8 = (java.lang.Throwable) r7;

        throw $r8;

        catch java.lang.StackOverflowError from label2 to label3 with label4;
        catch java.lang.OutOfMemoryError from label2 to label3 with label5;
        catch com.google.gson.JsonParseException from label2 to label3 with label6;
    }

    public volatile java.lang.Object next()
    {
        com.google.gson.JsonElement $r1;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = virtualinvoke r0.<com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()>();

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.gson.JsonStreamParser r0;

        r0 := @this: com.google.gson.JsonStreamParser;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }
}
