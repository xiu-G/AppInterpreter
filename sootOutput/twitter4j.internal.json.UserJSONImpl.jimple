final class twitter4j.internal.json.UserJSONImpl extends twitter4j.internal.json.TwitterResponseImpl implements java.io.Serializable, twitter4j.User
{
    private static final long serialVersionUID;
    private java.util.Date createdAt;
    private java.lang.String description;
    private twitter4j.URLEntity[] descriptionURLEntities;
    private int favouritesCount;
    private int followersCount;
    private int friendsCount;
    private long id;
    private boolean isContributorsEnabled;
    private boolean isFollowRequestSent;
    private boolean isGeoEnabled;
    private boolean isProtected;
    private boolean isVerified;
    private java.lang.String lang;
    private int listedCount;
    private java.lang.String location;
    private java.lang.String name;
    private java.lang.String profileBackgroundColor;
    private java.lang.String profileBackgroundImageUrl;
    private java.lang.String profileBackgroundImageUrlHttps;
    private boolean profileBackgroundTiled;
    private java.lang.String profileBannerImageUrl;
    private java.lang.String profileImageUrl;
    private java.lang.String profileImageUrlHttps;
    private java.lang.String profileLinkColor;
    private java.lang.String profileSidebarBorderColor;
    private java.lang.String profileSidebarFillColor;
    private java.lang.String profileTextColor;
    private boolean profileUseBackgroundImage;
    private java.lang.String screenName;
    private boolean showAllInlineMedia;
    private twitter4j.Status status;
    private int statusesCount;
    private java.lang.String timeZone;
    private boolean translator;
    private java.lang.String url;
    private twitter4j.URLEntity urlEntity;
    private int utcOffset;

    void <init>()
    {
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        specialinvoke r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>()>();

        return;
    }

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration)
    {
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        twitter4j.internal.org.json.JSONObject $r3;
        boolean $z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.conf.Configuration;

        specialinvoke r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>(twitter4j.internal.http.HttpResponse)>($r1);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label1:
        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r3);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>(r0, $r3);

     label2:
        return;
    }

    void <init>(twitter4j.internal.org.json.JSONObject)
    {
        twitter4j.internal.json.UserJSONImpl r0;
        twitter4j.internal.org.json.JSONObject $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

        specialinvoke r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>()>();

        specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: void init(twitter4j.internal.org.json.JSONObject)>($r1);

        return;
    }

    static twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration)
    {
        twitter4j.internal.org.json.JSONException $r7;
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONArray $r5;
        twitter4j.TwitterException $r8;
        twitter4j.internal.json.UserJSONImpl $r3;
        twitter4j.internal.org.json.JSONObject $r4, $r6;
        twitter4j.internal.json.PagableResponseListImpl $r2;
        boolean $z0;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

     label01:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label02:
        if $z0 == 0 goto label04;

     label03:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label04:
        $r4 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r5 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("users");

        $i0 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONArray: int length()>();

     label05:
        $r2 = new twitter4j.internal.json.PagableResponseListImpl;

     label06:
        specialinvoke $r2.<twitter4j.internal.json.PagableResponseListImpl: void <init>(int,twitter4j.internal.org.json.JSONObject,twitter4j.internal.http.HttpResponse)>($i0, $r4, $r0);

     label07:
        $i1 = 0;

     label08:
        if $i1 < $i0 goto label13;

     label09:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label10:
        if $z0 == 0 goto label22;

     label11:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r2, $r4);

     label12:
        return $r2;

     label13:
        $r6 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i1);

     label14:
        $r3 = new twitter4j.internal.json.UserJSONImpl;

     label15:
        specialinvoke $r3.<twitter4j.internal.json.UserJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r6);

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label16:
        if $z0 == 0 goto label18;

     label17:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r3, $r6);

     label18:
        interfaceinvoke $r2.<twitter4j.PagableResponseList: boolean add(java.lang.Object)>($r3);

     label19:
        $i1 = $i1 + 1;

        goto label08;

     label20:
        $r7 := @caughtexception;

        $r8 = new twitter4j.TwitterException;

        specialinvoke $r8.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r7);

        throw $r8;

     label21:
        $r8 := @caughtexception;

        throw $r8;

     label22:
        return $r2;

        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label20;
        catch twitter4j.internal.org.json.JSONException from label03 to label05 with label20;
        catch twitter4j.internal.org.json.JSONException from label06 to label07 with label20;
        catch twitter4j.internal.org.json.JSONException from label09 to label10 with label20;
        catch twitter4j.internal.org.json.JSONException from label11 to label12 with label20;
        catch twitter4j.internal.org.json.JSONException from label13 to label14 with label20;
        catch twitter4j.internal.org.json.JSONException from label15 to label16 with label20;
        catch twitter4j.internal.org.json.JSONException from label17 to label19 with label20;
        catch twitter4j.TwitterException from label01 to label02 with label21;
        catch twitter4j.TwitterException from label03 to label05 with label21;
        catch twitter4j.TwitterException from label06 to label07 with label21;
        catch twitter4j.TwitterException from label09 to label10 with label21;
        catch twitter4j.TwitterException from label11 to label12 with label21;
        catch twitter4j.TwitterException from label13 to label14 with label21;
        catch twitter4j.TwitterException from label15 to label16 with label21;
        catch twitter4j.TwitterException from label17 to label19 with label21;
    }

    static twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration)
    {
        twitter4j.internal.http.HttpResponse $r0;
        twitter4j.conf.Configuration $r1;
        twitter4j.internal.org.json.JSONArray $r2;
        twitter4j.ResponseList $r3;

        $r0 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r1 := @parameter1: twitter4j.conf.Configuration;

        $r2 = virtualinvoke $r0.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONArray asJSONArray()>();

        $r3 = staticinvoke <twitter4j.internal.json.UserJSONImpl: twitter4j.ResponseList createUserList(twitter4j.internal.org.json.JSONArray,twitter4j.internal.http.HttpResponse,twitter4j.conf.Configuration)>($r2, $r0, $r1);

        return $r3;
    }

    static twitter4j.ResponseList createUserList(twitter4j.internal.org.json.JSONArray, twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration)
    {
        twitter4j.internal.org.json.JSONException $r6;
        twitter4j.internal.json.ResponseListImpl $r3;
        twitter4j.internal.http.HttpResponse $r1;
        twitter4j.conf.Configuration $r2;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONArray $r0;
        twitter4j.TwitterException $r7;
        twitter4j.internal.json.UserJSONImpl $r4;
        twitter4j.internal.org.json.JSONObject $r5;
        boolean $z0;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONArray;

        $r1 := @parameter1: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter2: twitter4j.conf.Configuration;

     label01:
        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label02:
        if $z0 == 0 goto label04;

     label03:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label04:
        $i0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: int length()>();

     label05:
        $r3 = new twitter4j.internal.json.ResponseListImpl;

     label06:
        specialinvoke $r3.<twitter4j.internal.json.ResponseListImpl: void <init>(int,twitter4j.internal.http.HttpResponse)>($i0, $r1);

     label07:
        $i1 = 0;

     label08:
        if $i1 < $i0 goto label13;

     label09:
        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label10:
        if $z0 == 0 goto label21;

     label11:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r3, $r0);

     label12:
        return $r3;

     label13:
        $r5 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i1);

     label14:
        $r4 = new twitter4j.internal.json.UserJSONImpl;

     label15:
        specialinvoke $r4.<twitter4j.internal.json.UserJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r5);

        interfaceinvoke $r3.<twitter4j.ResponseList: boolean add(java.lang.Object)>($r4);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label16:
        if $z0 == 0 goto label18;

     label17:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r5);

     label18:
        $i1 = $i1 + 1;

        goto label08;

     label19:
        $r6 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

     label20:
        $r7 := @caughtexception;

        throw $r7;

     label21:
        return $r3;

        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label19;
        catch twitter4j.internal.org.json.JSONException from label03 to label05 with label19;
        catch twitter4j.internal.org.json.JSONException from label06 to label07 with label19;
        catch twitter4j.internal.org.json.JSONException from label09 to label10 with label19;
        catch twitter4j.internal.org.json.JSONException from label11 to label12 with label19;
        catch twitter4j.internal.org.json.JSONException from label13 to label14 with label19;
        catch twitter4j.internal.org.json.JSONException from label15 to label16 with label19;
        catch twitter4j.internal.org.json.JSONException from label17 to label18 with label19;
        catch twitter4j.TwitterException from label01 to label02 with label20;
        catch twitter4j.TwitterException from label03 to label05 with label20;
        catch twitter4j.TwitterException from label06 to label07 with label20;
        catch twitter4j.TwitterException from label09 to label10 with label20;
        catch twitter4j.TwitterException from label11 to label12 with label20;
        catch twitter4j.TwitterException from label13 to label14 with label20;
        catch twitter4j.TwitterException from label15 to label16 with label20;
        catch twitter4j.TwitterException from label17 to label18 with label20;
    }

    private static twitter4j.URLEntity[] getURLEntitiesFromJSON(twitter4j.internal.org.json.JSONObject, java.lang.String)
    {
        twitter4j.URLEntity[] $r4;
        twitter4j.internal.json.URLEntityJSONImpl $r2;
        int $i0, $i1;
        twitter4j.internal.org.json.JSONArray $r3;
        twitter4j.internal.org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: twitter4j.internal.org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("entities");

        if $z0 != 0 goto label3;

        $r0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("entities");

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>($r1);

        if $z0 != 0 goto label3;

        $r0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>($r1);

        $z0 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("urls");

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r0.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("urls");

        $i0 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONArray: int length()>();

        $r4 = newarray (twitter4j.URLEntity)[$i0];

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r4;

     label2:
        $r2 = new twitter4j.internal.json.URLEntityJSONImpl;

        $r0 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONArray: twitter4j.internal.org.json.JSONObject getJSONObject(int)>($i1);

        specialinvoke $r2.<twitter4j.internal.json.URLEntityJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r0);

        $r4[$i1] = $r2;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return null;
    }

    private void init(twitter4j.internal.org.json.JSONObject)
    {
        twitter4j.URLEntity[] $r3;
        twitter4j.internal.org.json.JSONException $r8;
        twitter4j.internal.json.StatusJSONImpl $r7;
        java.util.Date $r5;
        long $l0;
        twitter4j.URLEntity $r4;
        int $i1;
        twitter4j.TwitterException $r9;
        java.lang.StringBuilder $r10;
        twitter4j.internal.json.UserJSONImpl r0;
        twitter4j.internal.org.json.JSONObject $r1, $r6;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: twitter4j.internal.org.json.JSONObject;

     label01:
        $l0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: long getLong(java.lang.String,twitter4j.internal.org.json.JSONObject)>("id", $r1);

     label02:
        r0.<twitter4j.internal.json.UserJSONImpl: long id> = $l0;

     label03:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("name", $r1);

     label04:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String name> = $r2;

     label05:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("screen_name", $r1);

     label06:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String screenName> = $r2;

     label07:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("location", $r1);

     label08:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String location> = $r2;

     label09:
        $r3 = staticinvoke <twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] getURLEntitiesFromJSON(twitter4j.internal.org.json.JSONObject,java.lang.String)>($r1, "description");

     label10:
        r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities> = $r3;

        $r3 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities>;

        if $r3 != null goto label82;

        $r3 = newarray (twitter4j.URLEntity)[0];

     label11:
        r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities> = $r3;

     label12:
        $r3 = staticinvoke <twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] getURLEntitiesFromJSON(twitter4j.internal.org.json.JSONObject,java.lang.String)>($r1, "url");

     label13:
        if $r3 == null goto label14;

        $i1 = lengthof $r3;

        if $i1 <= 0 goto label14;

        $r4 = $r3[0];

        r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity urlEntity> = $r4;

     label14:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("description", $r1);

     label15:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description> = $r2;

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description>;

        if $r2 == null goto label18;

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description>;

        $r3 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities>;

     label16:
        $r2 = staticinvoke <twitter4j.internal.json.HTMLEntity: java.lang.String unescapeAndSlideEntityIncdices(java.lang.String,twitter4j.UserMentionEntity[],twitter4j.URLEntity[],twitter4j.HashtagEntity[],twitter4j.MediaEntity[])>($r2, null, $r3, null, null);

     label17:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description> = $r2;

     label18:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("contributors_enabled", $r1);

     label19:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean isContributorsEnabled> = $z0;

     label20:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_image_url", $r1);

     label21:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl> = $r2;

     label22:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_image_url_https", $r1);

     label23:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps> = $r2;

     label24:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("url", $r1);

     label25:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String url> = $r2;

     label26:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("protected", $r1);

     label27:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean isProtected> = $z0;

     label28:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("geo_enabled", $r1);

     label29:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean isGeoEnabled> = $z0;

     label30:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("verified", $r1);

     label31:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean isVerified> = $z0;

     label32:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("is_translator", $r1);

     label33:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean translator> = $z0;

     label34:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("followers_count", $r1);

     label35:
        r0.<twitter4j.internal.json.UserJSONImpl: int followersCount> = $i1;

     label36:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_background_color", $r1);

     label37:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundColor> = $r2;

     label38:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_text_color", $r1);

     label39:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileTextColor> = $r2;

     label40:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_link_color", $r1);

     label41:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileLinkColor> = $r2;

     label42:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_sidebar_fill_color", $r1);

     label43:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarFillColor> = $r2;

     label44:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_sidebar_border_color", $r1);

     label45:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarBorderColor> = $r2;

     label46:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_use_background_image", $r1);

     label47:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean profileUseBackgroundImage> = $z0;

     label48:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("show_all_inline_media", $r1);

     label49:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean showAllInlineMedia> = $z0;

     label50:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("friends_count", $r1);

     label51:
        r0.<twitter4j.internal.json.UserJSONImpl: int friendsCount> = $i1;

     label52:
        $r5 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.util.Date getDate(java.lang.String,twitter4j.internal.org.json.JSONObject,java.lang.String)>("created_at", $r1, "EEE MMM dd HH:mm:ss z yyyy");

     label53:
        r0.<twitter4j.internal.json.UserJSONImpl: java.util.Date createdAt> = $r5;

     label54:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("favourites_count", $r1);

     label55:
        r0.<twitter4j.internal.json.UserJSONImpl: int favouritesCount> = $i1;

     label56:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("utc_offset", $r1);

     label57:
        r0.<twitter4j.internal.json.UserJSONImpl: int utcOffset> = $i1;

     label58:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("time_zone", $r1);

     label59:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String timeZone> = $r2;

     label60:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_background_image_url", $r1);

     label61:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrl> = $r2;

     label62:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_background_image_url_https", $r1);

     label63:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrlHttps> = $r2;

     label64:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_banner_url", $r1);

     label65:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl> = $r2;

     label66:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("profile_background_tile", $r1);

     label67:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean profileBackgroundTiled> = $z0;

     label68:
        $r2 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: java.lang.String getRawString(java.lang.String,twitter4j.internal.org.json.JSONObject)>("lang", $r1);

     label69:
        r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String lang> = $r2;

     label70:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("statuses_count", $r1);

     label71:
        r0.<twitter4j.internal.json.UserJSONImpl: int statusesCount> = $i1;

     label72:
        $i1 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("listed_count", $r1);

     label73:
        r0.<twitter4j.internal.json.UserJSONImpl: int listedCount> = $i1;

     label74:
        $z0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: boolean getBoolean(java.lang.String,twitter4j.internal.org.json.JSONObject)>("follow_request_sent", $r1);

     label75:
        r0.<twitter4j.internal.json.UserJSONImpl: boolean isFollowRequestSent> = $z0;

     label76:
        $z0 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("status");

     label77:
        if $z0 != 0 goto label84;

     label78:
        $r6 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("status");

     label79:
        $r7 = new twitter4j.internal.json.StatusJSONImpl;

     label80:
        specialinvoke $r7.<twitter4j.internal.json.StatusJSONImpl: void <init>(twitter4j.internal.org.json.JSONObject)>($r6);

     label81:
        r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.Status status> = $r7;

        return;

     label82:
        $r3 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities>;

        goto label11;

     label83:
        $r8 := @caughtexception;

        $r9 = new twitter4j.TwitterException;

        $r10 = new java.lang.StringBuilder;

        $r2 = virtualinvoke $r8.<twitter4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = virtualinvoke $r1.<twitter4j.internal.org.json.JSONObject: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<twitter4j.TwitterException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r8);

        throw $r9;

     label84:
        return;

        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label83;
        catch twitter4j.internal.org.json.JSONException from label03 to label04 with label83;
        catch twitter4j.internal.org.json.JSONException from label05 to label06 with label83;
        catch twitter4j.internal.org.json.JSONException from label07 to label08 with label83;
        catch twitter4j.internal.org.json.JSONException from label09 to label10 with label83;
        catch twitter4j.internal.org.json.JSONException from label12 to label13 with label83;
        catch twitter4j.internal.org.json.JSONException from label14 to label15 with label83;
        catch twitter4j.internal.org.json.JSONException from label16 to label17 with label83;
        catch twitter4j.internal.org.json.JSONException from label18 to label19 with label83;
        catch twitter4j.internal.org.json.JSONException from label20 to label21 with label83;
        catch twitter4j.internal.org.json.JSONException from label22 to label23 with label83;
        catch twitter4j.internal.org.json.JSONException from label24 to label25 with label83;
        catch twitter4j.internal.org.json.JSONException from label26 to label27 with label83;
        catch twitter4j.internal.org.json.JSONException from label28 to label29 with label83;
        catch twitter4j.internal.org.json.JSONException from label30 to label31 with label83;
        catch twitter4j.internal.org.json.JSONException from label32 to label33 with label83;
        catch twitter4j.internal.org.json.JSONException from label34 to label35 with label83;
        catch twitter4j.internal.org.json.JSONException from label36 to label37 with label83;
        catch twitter4j.internal.org.json.JSONException from label38 to label39 with label83;
        catch twitter4j.internal.org.json.JSONException from label40 to label41 with label83;
        catch twitter4j.internal.org.json.JSONException from label42 to label43 with label83;
        catch twitter4j.internal.org.json.JSONException from label44 to label45 with label83;
        catch twitter4j.internal.org.json.JSONException from label46 to label47 with label83;
        catch twitter4j.internal.org.json.JSONException from label48 to label49 with label83;
        catch twitter4j.internal.org.json.JSONException from label50 to label51 with label83;
        catch twitter4j.internal.org.json.JSONException from label52 to label53 with label83;
        catch twitter4j.internal.org.json.JSONException from label54 to label55 with label83;
        catch twitter4j.internal.org.json.JSONException from label56 to label57 with label83;
        catch twitter4j.internal.org.json.JSONException from label58 to label59 with label83;
        catch twitter4j.internal.org.json.JSONException from label60 to label61 with label83;
        catch twitter4j.internal.org.json.JSONException from label62 to label63 with label83;
        catch twitter4j.internal.org.json.JSONException from label64 to label65 with label83;
        catch twitter4j.internal.org.json.JSONException from label66 to label67 with label83;
        catch twitter4j.internal.org.json.JSONException from label68 to label69 with label83;
        catch twitter4j.internal.org.json.JSONException from label70 to label71 with label83;
        catch twitter4j.internal.org.json.JSONException from label72 to label73 with label83;
        catch twitter4j.internal.org.json.JSONException from label74 to label75 with label83;
        catch twitter4j.internal.org.json.JSONException from label76 to label77 with label83;
        catch twitter4j.internal.org.json.JSONException from label78 to label79 with label83;
        catch twitter4j.internal.org.json.JSONException from label80 to label81 with label83;
    }

    private java.lang.String toResizedURL(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>("_");

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $r3 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        if $i1 <= $i2 goto label2;

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;

     label2:
        return $r2;
    }

    public final volatile int compareTo(java.lang.Object)
    {
        int $i0;
        twitter4j.User $r2;
        java.lang.Object $r1;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (twitter4j.User) $r1;

        $i0 = virtualinvoke r0.<twitter4j.internal.json.UserJSONImpl: int compareTo(twitter4j.User)>($r2);

        return $i0;
    }

    public final int compareTo(twitter4j.User)
    {
        twitter4j.User $r1;
        int $i2;
        long $l0, $l1;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: twitter4j.User;

        $l1 = r0.<twitter4j.internal.json.UserJSONImpl: long id>;

        $l0 = interfaceinvoke $r1.<twitter4j.User: long getId()>();

        $l0 = $l1 - $l0;

        $i2 = (int) $l0;

        return $i2;
    }

    public final boolean equals(java.lang.Object)
    {
        byte $b2;
        twitter4j.User $r2;
        long $l0, $l1;
        java.lang.Object $r1;
        twitter4j.internal.json.UserJSONImpl r0;
        boolean $z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        return 0;

     label1:
        if r0 != $r1 goto label2;

        return 1;

     label2:
        $z0 = $r1 instanceof twitter4j.User;

        if $z0 == 0 goto label3;

        $r2 = (twitter4j.User) $r1;

        $l1 = interfaceinvoke $r2.<twitter4j.User: long getId()>();

        $l0 = r0.<twitter4j.internal.json.UserJSONImpl: long id>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public final java.lang.String getBiggerProfileImageURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "_bigger");

        return $r1;
    }

    public final java.lang.String getBiggerProfileImageURLHttps()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "_bigger");

        return $r1;
    }

    public final java.util.Date getCreatedAt()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.util.Date r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.util.Date createdAt>;

        return r1;
    }

    public final java.lang.String getDescription()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description>;

        return r1;
    }

    public final twitter4j.URLEntity[] getDescriptionURLEntities()
    {
        twitter4j.URLEntity[] r1;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity[] descriptionURLEntities>;

        return r1;
    }

    public final int getFavouritesCount()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int favouritesCount>;

        return i0;
    }

    public final int getFollowersCount()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int followersCount>;

        return i0;
    }

    public final int getFriendsCount()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int friendsCount>;

        return i0;
    }

    public final long getId()
    {
        long l0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        l0 = r0.<twitter4j.internal.json.UserJSONImpl: long id>;

        return l0;
    }

    public final java.lang.String getLang()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String lang>;

        return r1;
    }

    public final int getListedCount()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int listedCount>;

        return i0;
    }

    public final java.lang.String getLocation()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String location>;

        return r1;
    }

    public final java.lang.String getMiniProfileImageURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "_mini");

        return $r1;
    }

    public final java.lang.String getMiniProfileImageURLHttps()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "_mini");

        return $r1;
    }

    public final java.lang.String getName()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String name>;

        return r1;
    }

    public final java.lang.String getOriginalProfileImageURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "");

        return $r1;
    }

    public final java.lang.String getOriginalProfileImageURLHttps()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

        $r1 = specialinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String toResizedURL(java.lang.String,java.lang.String)>($r1, "");

        return $r1;
    }

    public final java.lang.String getProfileBackgroundColor()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundColor>;

        return r1;
    }

    public final java.lang.String getProfileBackgroundImageURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrl>;

        return r1;
    }

    public final java.lang.String getProfileBackgroundImageUrl()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = virtualinvoke r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String getProfileBackgroundImageURL()>();

        return $r1;
    }

    public final java.lang.String getProfileBackgroundImageUrlHttps()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrlHttps>;

        return r1;
    }

    public final java.lang.String getProfileBannerIPadRetinaURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ipad_retina");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileBannerIPadURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ipad");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileBannerMobileRetinaURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mobile_retina");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileBannerMobileURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mobile");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileBannerRetinaURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/web_retina");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileBannerURL()
    {
        java.lang.StringBuilder $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBannerImageUrl>;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/web");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        return null;
    }

    public final java.lang.String getProfileImageURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl>;

        return r1;
    }

    public final java.lang.String getProfileImageURLHttps()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

        return r1;
    }

    public final java.net.URL getProfileImageUrlHttps()
    {
        java.lang.Throwable $r3;
        java.net.URL $r2;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r2 = new java.net.URL;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

     label1:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public final java.lang.String getProfileLinkColor()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileLinkColor>;

        return r1;
    }

    public final java.lang.String getProfileSidebarBorderColor()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarBorderColor>;

        return r1;
    }

    public final java.lang.String getProfileSidebarFillColor()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarFillColor>;

        return r1;
    }

    public final java.lang.String getProfileTextColor()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileTextColor>;

        return r1;
    }

    public final java.lang.String getScreenName()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String screenName>;

        return r1;
    }

    public final twitter4j.Status getStatus()
    {
        twitter4j.Status r1;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.Status status>;

        return r1;
    }

    public final int getStatusesCount()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int statusesCount>;

        return i0;
    }

    public final java.lang.String getTimeZone()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String timeZone>;

        return r1;
    }

    public final java.lang.String getURL()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String r1;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        r1 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String url>;

        return r1;
    }

    public final twitter4j.URLEntity getURLEntity()
    {
        twitter4j.URLEntity $r1;
        twitter4j.internal.json.URLEntityJSONImpl $r3;
        int $i0;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r2;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity urlEntity>;

        if $r1 != null goto label2;

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String url>;

        if $r2 != null goto label3;

        $r2 = "";

     label1:
        $r3 = new twitter4j.internal.json.URLEntityJSONImpl;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        specialinvoke $r3.<twitter4j.internal.json.URLEntityJSONImpl: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String)>(0, $i0, $r2, $r2, $r2);

        r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity urlEntity> = $r3;

     label2:
        $r1 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.URLEntity urlEntity>;

        return $r1;

     label3:
        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String url>;

        goto label1;
    }

    public final int getUtcOffset()
    {
        int i0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        i0 = r0.<twitter4j.internal.json.UserJSONImpl: int utcOffset>;

        return i0;
    }

    public final int hashCode()
    {
        int $i1;
        long $l0;
        twitter4j.internal.json.UserJSONImpl r0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $l0 = r0.<twitter4j.internal.json.UserJSONImpl: long id>;

        $i1 = (int) $l0;

        return $i1;
    }

    public final boolean isContributorsEnabled()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isContributorsEnabled>;

        return z0;
    }

    public final boolean isFollowRequestSent()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isFollowRequestSent>;

        return z0;
    }

    public final boolean isGeoEnabled()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isGeoEnabled>;

        return z0;
    }

    public final boolean isProfileBackgroundTiled()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean profileBackgroundTiled>;

        return z0;
    }

    public final boolean isProfileUseBackgroundImage()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean profileUseBackgroundImage>;

        return z0;
    }

    public final boolean isProtected()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isProtected>;

        return z0;
    }

    public final boolean isShowAllInlineMedia()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean showAllInlineMedia>;

        return z0;
    }

    public final boolean isTranslator()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean translator>;

        return z0;
    }

    public final boolean isVerified()
    {
        twitter4j.internal.json.UserJSONImpl r0;
        boolean z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isVerified>;

        return z0;
    }

    public final java.lang.String toString()
    {
        java.util.Date $r4;
        long $l0;
        int $i1;
        twitter4j.Status $r3;
        java.lang.StringBuilder $r1;
        twitter4j.internal.json.UserJSONImpl r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.internal.json.UserJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("UserJSONImpl{id=");

        $l0 = r0.<twitter4j.internal.json.UserJSONImpl: long id>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", screenName=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String screenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String location>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String description>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isContributorsEnabled=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isContributorsEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileImageUrl=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileImageUrlHttps=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileImageUrlHttps>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", url=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String url>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isProtected=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isProtected>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", followersCount=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int followersCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=");

        $r3 = r0.<twitter4j.internal.json.UserJSONImpl: twitter4j.Status status>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileBackgroundColor=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileTextColor=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileTextColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileLinkColor=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileLinkColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileSidebarFillColor=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarFillColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileSidebarBorderColor=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileSidebarBorderColor>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileUseBackgroundImage=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean profileUseBackgroundImage>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", showAllInlineMedia=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean showAllInlineMedia>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", friendsCount=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int friendsCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", createdAt=");

        $r4 = r0.<twitter4j.internal.json.UserJSONImpl: java.util.Date createdAt>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", favouritesCount=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int favouritesCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", utcOffset=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int utcOffset>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeZone=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String timeZone>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileBackgroundImageUrl=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrl>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileBackgroundImageUrlHttps=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String profileBackgroundImageUrlHttps>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profileBackgroundTiled=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean profileBackgroundTiled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lang=\'");

        $r2 = r0.<twitter4j.internal.json.UserJSONImpl: java.lang.String lang>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", statusesCount=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int statusesCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isGeoEnabled=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isGeoEnabled>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isVerified=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isVerified>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", translator=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean translator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", listedCount=");

        $i1 = r0.<twitter4j.internal.json.UserJSONImpl: int listedCount>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isFollowRequestSent=");

        $z0 = r0.<twitter4j.internal.json.UserJSONImpl: boolean isFollowRequestSent>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.UserJSONImpl: long serialVersionUID> = -6345893237975349030L;

        return;
    }
}
