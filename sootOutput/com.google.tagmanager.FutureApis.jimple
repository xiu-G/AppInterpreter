class com.google.tagmanager.FutureApis extends java.lang.Object
{

    private void <init>()
    {
        com.google.tagmanager.FutureApis r0;

        r0 := @this: com.google.tagmanager.FutureApis;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean setOwnerOnlyReadWrite(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <com.google.tagmanager.FutureApis: int version()>();

        if $i0 >= 9 goto label1;

        return 0;

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke $r1.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0);

        virtualinvoke $r1.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0);

        virtualinvoke $r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1);

        virtualinvoke $r1.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1);

        return 1;
    }

    public static int version()
    {
        java.lang.Throwable $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;

        $r0 = <android.os.Build$VERSION: java.lang.String SDK>;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid version number: ");

        $r0 = <android.os.Build$VERSION: java.lang.String SDK>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.tagmanager.Log: void e(java.lang.String)>($r0);

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
