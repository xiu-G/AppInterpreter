public abstract class com.mobisage.android.ads.msg.AbsValueObject extends java.lang.Object
{

    public void <init>()
    {
        com.mobisage.android.ads.msg.AbsValueObject r0;

        r0 := @this: com.mobisage.android.ads.msg.AbsValueObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object[] $r12;
        java.lang.reflect.Method[] $r5;
        java.lang.reflect.Constructor[] $r7;
        com.mobisage.android.ads.msg.AbsValueObject r0;
        java.lang.StringBuffer $r10;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r9;
        java.lang.reflect.Method $r6;
        boolean $z0;
        java.lang.Class[] $r8;
        java.lang.Exception $r13;
        java.lang.Object $r1, $r4, $r11;
        java.lang.Class $r2;

        r0 := @this: com.mobisage.android.ads.msg.AbsValueObject;

        $r1 = null;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label01:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

     label02:
        $r1 = $r4;

     label03:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r5;

     label06:
        if $i0 < $i1 goto label07;

        return $r4;

     label07:
        $r6 = $r5[$i0];

        $r3 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("get");

     label08:
        if $z0 == 0 goto label13;

     label09:
        $r6 = $r5[$i0];

        $r2 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r7 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i1 = lengthof $r7;

     label10:
        if $i1 == 0 goto label13;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

     label12:
        if $z0 == 0 goto label14;

     label13:
        $i0 = $i0 + 1;

        goto label05;

     label14:
        $r6 = $r5[$i0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r8;

     label15:
        if $i1 > 0 goto label13;

     label16:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("getClass");

     label17:
        if $z0 != 0 goto label13;

        $i1 = 0;

     label18:
        $i2 = lengthof $r5;

     label19:
        if $i1 >= $i2 goto label13;

     label20:
        $r6 = $r5[$i1];

        $r9 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("set");

     label21:
        if $z0 != 0 goto label23;

     label22:
        $i1 = $i1 + 1;

        goto label18;

     label23:
        $r10 = new java.lang.StringBuffer;

     label24:
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("g");

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label25:
        if $z0 == 0 goto label22;

     label26:
        $r6 = $r5[$i0];

        $r11 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

     label27:
        $r12 = newarray (java.lang.Object)[1];

     label28:
        $r12[0] = $r11;

        $r6 = $r5[$i1];

        virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r12);

     label29:
        goto label22;

     label30:
        $r13 := @caughtexception;

        return $r1;

        catch java.lang.Exception from label01 to label02 with label30;
        catch java.lang.Exception from label03 to label04 with label30;
        catch java.lang.Exception from label05 to label06 with label30;
        catch java.lang.Exception from label07 to label08 with label30;
        catch java.lang.Exception from label09 to label10 with label30;
        catch java.lang.Exception from label11 to label12 with label30;
        catch java.lang.Exception from label14 to label15 with label30;
        catch java.lang.Exception from label16 to label17 with label30;
        catch java.lang.Exception from label18 to label19 with label30;
        catch java.lang.Exception from label20 to label21 with label30;
        catch java.lang.Exception from label24 to label25 with label30;
        catch java.lang.Exception from label26 to label27 with label30;
        catch java.lang.Exception from label28 to label29 with label30;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.reflect.Method[] $r4;
        java.lang.reflect.Constructor[] $r11;
        com.mobisage.android.ads.msg.AbsValueObject r0;
        int $i0, $i1, $i2;
        java.lang.String $r10;
        java.lang.reflect.Method $r9;
        boolean $z0, $z1;
        java.lang.Class[] $r12;
        java.lang.reflect.Field $r6;
        java.lang.Exception $r13, $r14;
        java.lang.reflect.Field[] $r5;
        java.lang.Object $r1, $r7, $r8;
        java.lang.Class $r2, $r3;

        r0 := @this: com.mobisage.android.ads.msg.AbsValueObject;

        $r1 := @parameter0: java.lang.Object;

        $z0 = 1;

        $i0 = 0;

        if $r1 != null goto label01;

        return 0;

     label01:
        if r0 == $r1 goto label33;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field[] getFields()>();

        $i1 = 0;

     label03:
        if $z0 == 0 goto label34;

        $i2 = lengthof $r4;

        if $i1 < $i2 goto label10;

     label04:
        if $z0 == 0 goto label34;

        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label34;

     label05:
        $r6 = $r5[$i0];

        $r7 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = $r5[$i0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

     label06:
        if $r7 == null goto label28;

     label07:
        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label08:
        $z0 = $z1;

     label09:
        $i0 = $i0 + 1;

        goto label04;

     label10:
        $r9 = $r4[$i1];

        $r10 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("get");

     label11:
        if $z1 == 0 goto label16;

     label12:
        $r9 = $r4[$i1];

        $r2 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r11 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i2 = lengthof $r11;

     label13:
        if $i2 == 0 goto label16;

     label14:
        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

     label15:
        if $z1 == 0 goto label17;

     label16:
        $i1 = $i1 + 1;

        goto label03;

     label17:
        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("getClass");

     label18:
        if $z1 != 0 goto label16;

     label19:
        $r9 = $r4[$i1];

        $r12 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r12;

     label20:
        if $i2 > 0 goto label16;

     label21:
        $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(3);

        $r9 = $r4[$i1];

        $r7 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

        $r9 = $r4[$i1];

        $r8 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, null);

     label22:
        if $r7 == null goto label25;

     label23:
        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

     label24:
        $z0 = $z1;

        goto label16;

     label25:
        if $r8 == null goto label16;

     label26:
        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

     label27:
        $z0 = $z1;

        goto label16;

     label28:
        if $r8 == null goto label09;

     label29:
        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

     label30:
        $z0 = $z1;

        goto label09;

     label31:
        $r13 := @caughtexception;

        goto label09;

     label32:
        $r14 := @caughtexception;

        goto label16;

     label33:
        return 1;

     label34:
        return $z0;

        catch java.lang.Exception from label05 to label06 with label31;
        catch java.lang.Exception from label07 to label08 with label31;
        catch java.lang.Exception from label10 to label11 with label32;
        catch java.lang.Exception from label12 to label13 with label32;
        catch java.lang.Exception from label14 to label15 with label32;
        catch java.lang.Exception from label17 to label18 with label32;
        catch java.lang.Exception from label19 to label20 with label32;
        catch java.lang.Exception from label21 to label22 with label32;
        catch java.lang.Exception from label23 to label24 with label32;
        catch java.lang.Exception from label26 to label27 with label32;
        catch java.lang.Exception from label29 to label30 with label31;
    }

    public java.lang.String toString()
    {
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Constructor[] $r6;
        com.mobisage.android.ads.msg.AbsValueObject r0;
        java.util.Calendar $r11;
        java.lang.StringBuffer $r1, $r12;
        int $i0, $i1;
        java.lang.String $r4, $r9;
        java.lang.reflect.Method $r5;
        boolean $z0;
        java.lang.Class[] $r7;
        java.lang.Exception $r13;
        java.lang.Class $r2;
        java.lang.StringBuilder $r8;
        java.lang.Object $r10;

        r0 := @this: com.mobisage.android.ads.msg.AbsValueObject;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $r1 = new java.lang.StringBuffer;

        $r4 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = {\r\n");

        $i0 = 0;

     label01:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label02;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\r\n");

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;

     label02:
        $r5 = $r3[$i0];

        $r4 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("get");

     label03:
        if $z0 == 0 goto label08;

     label04:
        $r5 = $r3[$i0];

        $r2 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        $i1 = lengthof $r6;

     label05:
        if $i1 == 0 goto label08;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInterface()>();

     label07:
        if $z0 == 0 goto label09;

     label08:
        $i0 = $i0 + 1;

        goto label01;

     label09:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("getClass");

     label10:
        if $z0 != 0 goto label08;

     label11:
        $r5 = $r3[$i0];

        $r7 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r7;

     label12:
        if $i1 > 0 goto label08;

     label13:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(3);

     label14:
        $r8 = new java.lang.StringBuilder;

     label15:
        $r9 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = $r3[$i0];

        $r10 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

     label16:
        $z0 = $r10 instanceof java.util.Calendar;

        if $z0 == 0 goto label20;

     label17:
        $r11 = (java.util.Calendar) $r10;

        $r9 = virtualinvoke $r11.<java.util.Calendar: java.lang.String toString()>();

        $r12 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label18:
        goto label08;

     label19:
        $r13 := @caughtexception;

        goto label08;

     label20:
        $r12 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label21:
        goto label08;

        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label19;
    }
}
