class b.q.f0 extends b.q.e0
{
    private static java.lang.reflect.Method e;
    private static boolean f;
    private static java.lang.reflect.Method g;
    private static boolean h;

    void <init>()
    {
        b.q.f0 r0;

        r0 := @this: b.q.f0;

        specialinvoke r0.<b.q.e0: void <init>()>();

        return;
    }

    private void j()
    {
        java.lang.Throwable $r4;
        b.q.f0 r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: b.q.f0;

        $z0 = <b.q.f0: boolean f>;

        if $z0 != 0 goto label7;

        $r2 = class "Landroid/view/View;";

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/graphics/Matrix;";

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("transformMatrixToGlobal", $r3);

     label2:
        <b.q.f0: java.lang.reflect.Method e> = $r1;

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi21", "Failed to retrieve transformMatrixToGlobal method", $r4);

     label6:
        <b.q.f0: boolean f> = 1;

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    private void k()
    {
        java.lang.Throwable $r4;
        b.q.f0 r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;
        boolean $z0;

        r0 := @this: b.q.f0;

        $z0 = <b.q.f0: boolean h>;

        if $z0 != 0 goto label7;

        $r2 = class "Landroid/view/View;";

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/graphics/Matrix;";

     label1:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("transformMatrixToLocal", $r3);

     label2:
        <b.q.f0: java.lang.reflect.Method g> = $r1;

     label3:
        virtualinvoke $r1.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewUtilsApi21", "Failed to retrieve transformMatrixToLocal method", $r4);

     label6:
        <b.q.f0: boolean h> = 1;

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label3 to label4 with label5;
    }

    public void f(android.view.View, android.graphics.Matrix)
    {
        java.lang.Throwable $r2, $r3;
        java.lang.Object[] $r6;
        b.q.f0 r0;
        java.lang.RuntimeException $r7;
        java.lang.reflect.InvocationTargetException $r8;
        android.view.View $r4;
        android.graphics.Matrix $r5;
        java.lang.reflect.Method $r1;

        r0 := @this: b.q.f0;

        $r4 := @parameter0: android.view.View;

        $r5 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<b.q.f0: void j()>();

        $r1 = <b.q.f0: java.lang.reflect.Method e>;

        if $r1 == null goto label5;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r5;

     label1:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r6);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = (java.lang.reflect.InvocationTargetException) $r2;

        $r2 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r7;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public void g(android.view.View, android.graphics.Matrix)
    {
        java.lang.Throwable $r2, $r3;
        java.lang.Object[] $r6;
        b.q.f0 r0;
        java.lang.RuntimeException $r7;
        java.lang.reflect.InvocationTargetException $r8;
        android.view.View $r4;
        android.graphics.Matrix $r5;
        java.lang.reflect.Method $r1;

        r0 := @this: b.q.f0;

        $r4 := @parameter0: android.view.View;

        $r5 := @parameter1: android.graphics.Matrix;

        specialinvoke r0.<b.q.f0: void k()>();

        $r1 = <b.q.f0: java.lang.reflect.Method g>;

        if $r1 == null goto label5;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r5;

     label1:
        virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r6);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = (java.lang.reflect.InvocationTargetException) $r2;

        $r2 = virtualinvoke $r8.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r7;

     label4:
        $r3 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }
}
