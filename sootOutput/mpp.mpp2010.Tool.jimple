public class mpp.mpp2010.Tool extends java.lang.Object
{
    static final java.lang.String url;

    public void <init>()
    {
        mpp.mpp2010.Tool r0;

        r0 := @this: mpp.mpp2010.Tool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] Bitmap2Bytes(android.graphics.Bitmap)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream r1;
        android.graphics.Bitmap $r0;
        android.graphics.Bitmap$CompressFormat $r3;

        $r0 := @parameter0: android.graphics.Bitmap;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 100, r1);

        $r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static android.graphics.Bitmap Bytes2Bimap(byte[])
    {
        int $i0;
        byte[] $r0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        if $i0 == 0 goto label1;

        $i0 = lengthof $r0;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r0, 0, $i0);

        return $r1;

     label1:
        return null;
    }

    public static byte[] ContextToByte(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        byte[] r2;
        android.os.ParcelFileDescriptor $r5;
        android.net.Uri $r1;
        long $l0;
        java.lang.Exception $r6;
        android.content.ContentResolver $r3;
        int $i1;
        java.io.InputStream $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        r2 = null;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r1);

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke $r3.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>($r1, "r");

        $l0 = virtualinvoke $r5.<android.os.ParcelFileDescriptor: long getStatSize()>();

     label2:
        $i1 = (int) $l0;

     label3:
        r2 = newarray (byte)[$i1];

     label4:
        $i1 = (int) $l0;

     label5:
        virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, $i1);

     label6:
        return r2;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String[] ProcessUri(android.content.Context, android.net.Uri) throws java.lang.Exception
    {
        android.content.Context $r0;
        byte[] $r3;
        mpp.mpp2010.net.SendImage r2;
        android.net.Uri $r1;
        java.lang.String[] $r7;
        java.lang.StringBuilder $r5;
        java.lang.String r4, $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        r2 = new mpp.mpp2010.net.SendImage;

        specialinvoke r2.<mpp.mpp2010.net.SendImage: void <init>(java.lang.String)>("http://www.csie.ntu.edu.tw/~b97115/mpp/uploadfile.php");

        $r3 = staticinvoke <mpp.mpp2010.Tool: byte[] ContextToByte(android.content.Context,android.net.Uri)>($r0, $r1);

        virtualinvoke r2.<mpp.mpp2010.net.SendImage: void addByteParameter(java.lang.String,byte[])>("file0", $r3);

        $r3 = virtualinvoke r2.<mpp.mpp2010.net.SendImage: byte[] send()>();

        r4 = new java.lang.String;

        specialinvoke r4.<java.lang.String: void <init>(byte[])>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("result=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r6);

        $r7 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" |\n");

        return $r7;
    }

    public static android.graphics.Bitmap UrlToBitmap(java.lang.String)
    {
        byte[] $r1;
        java.lang.String $r0;
        android.graphics.Bitmap $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <mpp.mpp2010.Tool: byte[] UrlToByte(java.lang.String)>($r0);

        $r2 = staticinvoke <mpp.mpp2010.Tool: android.graphics.Bitmap Bytes2Bimap(byte[])>($r1);

        return $r2;
    }

    public static byte[] UrlToByte(java.lang.String)
    {
        java.lang.Throwable $r6, $r7;
        byte[] $r5;
        java.io.ByteArrayOutputStream r1, $r9;
        java.net.MalformedURLException $r10;
        java.net.URL $r2, $r8;
        java.io.IOException $r11;
        java.net.URLConnection $r3;
        int $i0, $i1;
        java.lang.String $r0;
        java.io.InputStream $r4;

        $r0 := @parameter0: java.lang.String;

        $r8 = new java.net.URL;

        $r2 = $r8;

     label01:
        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = virtualinvoke $r3.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label02:
        $r9 = new java.io.ByteArrayOutputStream;

        r1 = $r9;

     label03:
        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read()>();

     label05:
        $i1 = -1;

        if $i0 != $i1 goto label08;

     label06:
        $r5 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label07:
        return $r5;

     label08:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label09:
        goto label04;

     label10:
        $r6 := @caughtexception;

        $r10 = (java.net.MalformedURLException) $r6;

        virtualinvoke $r10.<java.net.MalformedURLException: void printStackTrace()>();

     label11:
        return null;

     label12:
        $r7 := @caughtexception;

        $r11 = (java.io.IOException) $r7;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        goto label11;

        catch java.net.MalformedURLException from label01 to label02 with label10;
        catch java.net.MalformedURLException from label03 to label05 with label10;
        catch java.net.MalformedURLException from label06 to label07 with label10;
        catch java.net.MalformedURLException from label08 to label09 with label10;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label08 to label09 with label12;
    }

    public static android.graphics.drawable.Drawable UrlToDrawable(java.lang.String)
    {
        java.lang.Throwable $r5, $r6;
        java.net.MalformedURLException $r8;
        java.net.URL $r1, $r7;
        java.io.IOException $r9;
        android.graphics.drawable.Drawable $r4;
        java.lang.Object $r2;
        java.lang.String $r0;
        java.io.InputStream r3;

        $r0 := @parameter0: java.lang.String;

        $r7 = new java.net.URL;

        $r1 = $r7;

     label1:
        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.Object getContent()>();

     label2:
        r3 = (java.io.InputStream) $r2;

     label3:
        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>(r3, "caseviewer photo");

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r8 = (java.net.MalformedURLException) $r5;

        $r0 = virtualinvoke $r8.<java.net.MalformedURLException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r0);

        $r8 = (java.net.MalformedURLException) $r5;

        virtualinvoke $r8.<java.net.MalformedURLException: void printStackTrace()>();

        return null;

     label6:
        $r6 := @caughtexception;

        $r9 = (java.io.IOException) $r6;

        $r0 = virtualinvoke $r9.<java.io.IOException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("debug", $r0);

        $r9 = (java.io.IOException) $r6;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    public static java.io.InputStream UrlToInputStream(java.lang.String)
    {
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.lang.String $r0;
        java.lang.Exception $r4;
        java.io.InputStream $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.net.URL;

     label1:
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean checkNetworkStatus(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <mpp.mpp2010.Tool: java.lang.String url> = "http://www.csie.ntu.edu.tw/~b97115/mpp/uploadfile.php";

        return;
    }
}
