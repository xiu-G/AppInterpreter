public class org.kobjects.xml.XmlReader extends java.lang.Object
{
    static final int CDSECT;
    public static final int END_DOCUMENT;
    public static final int END_TAG;
    static final int ENTITY_REF;
    private static final int LEGACY;
    public static final int START_DOCUMENT;
    public static final int START_TAG;
    public static final int TEXT;
    private static final java.lang.String UNEXPECTED_EOF;
    private java.lang.String[] TYPES;
    private int attributeCount;
    private java.lang.String[] attributes;
    private int column;
    private boolean degenerated;
    private int depth;
    private java.lang.String[] elementStack;
    private java.util.Hashtable entityMap;
    private boolean eof;
    private boolean isWhitespace;
    private int line;
    private java.lang.String name;
    private int peek0;
    private int peek1;
    private java.io.Reader reader;
    public boolean relaxed;
    private char[] srcBuf;
    private int srcCount;
    private int srcPos;
    private java.lang.String text;
    private char[] txtBuf;
    private int txtPos;
    private int type;

    public void <init>(java.io.Reader) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.Runtime $r3;
        java.lang.String[] $r2;
        long $l0;
        java.io.Reader $r1;
        short $s2;
        byte $b1;
        int $i3, $i4;
        char[] $r4;
        java.util.Hashtable $r5, $r6;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (java.lang.String)[4];

        r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack> = $r2;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r3.<java.lang.Runtime: long freeMemory()>();

        $b1 = $l0 cmp 1048576L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label3;

        $s2 = 8192;

     label1:
        $r4 = newarray (char)[$s2];

        r0.<org.kobjects.xml.XmlReader: char[] srcBuf> = $r4;

        $r4 = newarray (char)[128];

        r0.<org.kobjects.xml.XmlReader: char[] txtBuf> = $r4;

        $r2 = newarray (java.lang.String)[16];

        r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes> = $r2;

        $r2 = newarray (java.lang.String)[5];

        $r2[0] = "Start Document";

        $r2[1] = "End Document";

        $r2[2] = "Start Tag";

        $r2[3] = "End Tag";

        $r2[4] = "Text";

        r0.<org.kobjects.xml.XmlReader: java.lang.String[] TYPES> = $r2;

        r0.<org.kobjects.xml.XmlReader: java.io.Reader reader> = $r1;

        $i3 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.kobjects.xml.XmlReader: int peek0> = $i3;

        $i3 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.kobjects.xml.XmlReader: int peek1> = $i3;

        $i3 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        $i4 = -1;

        if $i3 != $i4 goto label4;

        $z0 = 1;

     label2:
        r0.<org.kobjects.xml.XmlReader: boolean eof> = $z0;

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap> = $r6;

        $r5 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("amp", "&");

        $r5 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("apos", "\'");

        $r5 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("gt", ">");

        $r5 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("lt", "<");

        $r5 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("quot", "\"");

        r0.<org.kobjects.xml.XmlReader: int line> = 1;

        r0.<org.kobjects.xml.XmlReader: int column> = 1;

        return;

     label3:
        $s2 = 128;

        goto label1;

     label4:
        $z0 = 0;

        goto label2;
    }

    private static final java.lang.String[] ensureCapacity(java.lang.String[], int)
    {
        int $i0, $i1;
        java.lang.String[] r0, r1;

        r1 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        $i1 = lengthof r1;

        if $i1 < $i0 goto label1;

        return r1;

     label1:
        $i0 = $i0 + 16;

        r0 = newarray (java.lang.String)[$i0];

        $i0 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r0, 0, $i0);

        return r0;
    }

    private final void exception(java.lang.String) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;

        r0 := @this: org.kobjects.xml.XmlReader;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos: ");

        $r1 = virtualinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String getPositionDescription()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    private final void parseDoctype() throws java.io.IOException
    {
        int $i0, i1;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i1 = 1;

     label1:
        $i0 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        lookupswitch($i0)
        {
            case -1: goto label3;
            case 60: goto label4;
            case 62: goto label5;
            default: goto label2;
        };

     label2:
        goto label1;

     label3:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("Unexpected EOF");

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $i0 = -1;

        i1 = i1 + $i0;

        if i1 != 0 goto label1;

        return;
    }

    private final void parseEndTag() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.String[] $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String readName()>();

        r0.<org.kobjects.xml.XmlReader: java.lang.String name> = $r1;

        $i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        if $i0 != 0 goto label1;

        $z0 = r0.<org.kobjects.xml.XmlReader: boolean relaxed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("element stack empty");

     label1:
        $r1 = r0.<org.kobjects.xml.XmlReader: java.lang.String name>;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack>;

        $i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<org.kobjects.xml.XmlReader: int depth> = $i0;

     label2:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void read(char)>(62);

        return;

     label3:
        $z0 = r0.<org.kobjects.xml.XmlReader: boolean relaxed>;

        if $z0 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: ");

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack>;

        $i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        $r1 = $r2[$i0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>($r1);

        goto label2;
    }

    private final void parseLegacy(boolean) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        char $c3;
        byte b1;
        int $i0, $i2;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.kobjects.xml.XmlReader;

        $z0 := @parameter0: boolean;

        r1 = "";

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        $i0 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        if $i0 != 63 goto label03;

        b1 = 63;

     label01:
        $i0 = 0;

     label02:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= $i2 goto label07;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i0);

        specialinvoke r0.<org.kobjects.xml.XmlReader: void read(char)>($c3);

        $i0 = $i0 + 1;

        goto label02;

     label03:
        if $i0 != 33 goto label05;

        $i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if $i0 != 45 goto label04;

        r1 = "--";

        b1 = 45;

        goto label01;

     label04:
        r1 = "DOCTYPE";

        b1 = -1;

        goto label01;

     label05:
        if $i0 == 91 goto label06;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cantreachme: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>(r1);

     label06:
        r1 = "CDATA[";

        b1 = 93;

        goto label01;

     label07:
        $i0 = -1;

        if b1 != $i0 goto label08;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void parseDoctype()>();

        return;

     label08:
        $z1 = r0.<org.kobjects.xml.XmlReader: boolean eof>;

        if $z1 == 0 goto label09;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("Unexpected EOF");

     label09:
        $i0 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        if $z0 == 0 goto label10;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>($i0);

     label10:
        if b1 == 63 goto label11;

        if $i0 != b1 goto label08;

     label11:
        $i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if $i0 != b1 goto label08;

        $i0 = r0.<org.kobjects.xml.XmlReader: int peek1>;

        if $i0 != 62 goto label08;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        if $z0 == 0 goto label12;

        if b1 == 63 goto label12;

        $i0 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        $i2 = -1;

        $i0 = $i0 + $i2;

        specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String pop(int)>($i0);

     label12:
        return;
    }

    private final void parseStartTag() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.String[] $r2;
        char $c3;
        int i0, i1, i2;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String readName()>();

        r0.<org.kobjects.xml.XmlReader: java.lang.String name> = $r1;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack>;

        i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        i0 = i0 + 1;

        $r2 = staticinvoke <org.kobjects.xml.XmlReader: java.lang.String[] ensureCapacity(java.lang.String[],int)>($r2, i0);

        r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack> = $r2;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] elementStack>;

        i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        i1 = i0 + 1;

        r0.<org.kobjects.xml.XmlReader: int depth> = i1;

        $r1 = r0.<org.kobjects.xml.XmlReader: java.lang.String name>;

        $r2[i0] = $r1;

     label1:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if i0 != 47 goto label2;

        r0.<org.kobjects.xml.XmlReader: boolean degenerated> = 1;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void read(char)>(62);

        return;

     label2:
        if i0 != 62 goto label3;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        return;

     label3:
        i1 = -1;

        if i0 != i1 goto label4;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("Unexpected EOF");

     label4:
        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String readName()>();

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 != 0 goto label5;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("attr name expected");

     label5:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void read(char)>(61);

        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        i1 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        i0 = i1;

        if i1 == 39 goto label7;

        if i1 == 34 goto label7;

        $z0 = r0.<org.kobjects.xml.XmlReader: boolean relaxed>;

        if $z0 != 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r4 = r0.<org.kobjects.xml.XmlReader: java.lang.String name>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">: invalid delimiter: ");

        $c3 = (char) i1;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>($r4);

     label6:
        i0 = 32;

     label7:
        i1 = r0.<org.kobjects.xml.XmlReader: int attributeCount>;

        i2 = i1 + 1;

        r0.<org.kobjects.xml.XmlReader: int attributeCount> = i2;

        i1 = i1 << 1;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        i2 = i1 + 4;

        $r2 = staticinvoke <org.kobjects.xml.XmlReader: java.lang.String[] ensureCapacity(java.lang.String[],int)>($r2, i2);

        r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes> = $r2;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        i2 = i1 + 1;

        $r2[i1] = $r1;

        i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        specialinvoke r0.<org.kobjects.xml.XmlReader: boolean pushText(int)>(i0);

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String pop(int)>(i1);

        $r2[i2] = $r1;

        if i0 == 32 goto label1;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        goto label1;
    }

    private final int peekType()
    {
        int $i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        lookupswitch($i0)
        {
            case -1: goto label2;
            case 38: goto label3;
            case 60: goto label4;
            default: goto label1;
        };

     label1:
        return 4;

     label2:
        return 1;

     label3:
        return 6;

     label4:
        $i0 = r0.<org.kobjects.xml.XmlReader: int peek1>;

        lookupswitch($i0)
        {
            case 33: goto label8;
            case 47: goto label6;
            case 63: goto label8;
            case 91: goto label7;
            default: goto label5;
        };

     label5:
        return 2;

     label6:
        return 3;

     label7:
        return 5;

     label8:
        return 999;
    }

    private final java.lang.String pop(int)
    {
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1;
        char[] $r2;
        java.lang.String r1;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        r1 = new java.lang.String;

        $r2 = r0.<org.kobjects.xml.XmlReader: char[] txtBuf>;

        $i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        $i1 = $i1 - $i0;

        specialinvoke r1.<java.lang.String: void <init>(char[],int,int)>($r2, $i0, $i1);

        r0.<org.kobjects.xml.XmlReader: int txtPos> = $i0;

        return r1;
    }

    private final void push(int)
    {
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1, $i2;
        char[] r1, $r2;
        char $c3;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        r1 = r0.<org.kobjects.xml.XmlReader: char[] txtBuf>;

        $i2 = lengthof r1;

        if $i1 != $i2 goto label2;

        $i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        $i1 = $i1 * 4;

        $i1 = $i1 / 3;

        $i1 = $i1 + 4;

        r1 = newarray (char)[$i1];

        $r2 = r0.<org.kobjects.xml.XmlReader: char[] txtBuf>;

        $i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        r0.<org.kobjects.xml.XmlReader: char[] txtBuf> = r1;

     label2:
        r1 = r0.<org.kobjects.xml.XmlReader: char[] txtBuf>;

        $i1 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        $i2 = $i1 + 1;

        r0.<org.kobjects.xml.XmlReader: int txtPos> = $i2;

        $c3 = (char) $i0;

        r1[$i1] = $c3;

        return;
    }

    private final boolean pushText(int) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        int $i0, i1;
        boolean z0, $z1;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        z0 = 1;

        i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

     label1:
        $z1 = r0.<org.kobjects.xml.XmlReader: boolean eof>;

        if $z1 != 0 goto label6;

        if i1 == $i0 goto label6;

        if $i0 != 32 goto label2;

        if i1 <= 32 goto label6;

        if i1 != 62 goto label2;

        return z0;

     label2:
        if i1 != 38 goto label4;

        $z1 = virtualinvoke r0.<org.kobjects.xml.XmlReader: boolean pushEntity()>();

        if $z1 != 0 goto label3;

        z0 = 0;

     label3:
        i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        goto label1;

     label4:
        if i1 <= 32 goto label5;

        z0 = 0;

     label5:
        i1 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>(i1);

        goto label3;

     label6:
        return z0;
    }

    private final int read() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        char $c3;
        java.io.Reader $r1;
        int i0, $i1, $i2;
        char[] $r2, $r3;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        $i1 = r0.<org.kobjects.xml.XmlReader: int peek1>;

        r0.<org.kobjects.xml.XmlReader: int peek0> = $i1;

        $i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        $i2 = -1;

        if $i1 != $i2 goto label1;

        r0.<org.kobjects.xml.XmlReader: boolean eof> = 1;

        return i0;

     label1:
        if i0 == 10 goto label2;

        if i0 != 13 goto label3;

     label2:
        $i1 = r0.<org.kobjects.xml.XmlReader: int line>;

        $i1 = $i1 + 1;

        r0.<org.kobjects.xml.XmlReader: int line> = $i1;

        r0.<org.kobjects.xml.XmlReader: int column> = 0;

        if i0 != 13 goto label3;

        $i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if $i1 != 10 goto label3;

        r0.<org.kobjects.xml.XmlReader: int peek0> = 0;

     label3:
        $i1 = r0.<org.kobjects.xml.XmlReader: int column>;

        $i1 = $i1 + 1;

        r0.<org.kobjects.xml.XmlReader: int column> = $i1;

        $i1 = r0.<org.kobjects.xml.XmlReader: int srcPos>;

        $i2 = r0.<org.kobjects.xml.XmlReader: int srcCount>;

        if $i1 < $i2 goto label5;

        $r1 = r0.<org.kobjects.xml.XmlReader: java.io.Reader reader>;

        $r2 = r0.<org.kobjects.xml.XmlReader: char[] srcBuf>;

        $r3 = r0.<org.kobjects.xml.XmlReader: char[] srcBuf>;

        $i1 = lengthof $r3;

        $i1 = virtualinvoke $r1.<java.io.Reader: int read(char[],int,int)>($r2, 0, $i1);

        r0.<org.kobjects.xml.XmlReader: int srcCount> = $i1;

        $i1 = r0.<org.kobjects.xml.XmlReader: int srcCount>;

        if $i1 > 0 goto label4;

        $i1 = -1;

        r0.<org.kobjects.xml.XmlReader: int peek1> = $i1;

        return i0;

     label4:
        r0.<org.kobjects.xml.XmlReader: int srcPos> = 0;

     label5:
        $r2 = r0.<org.kobjects.xml.XmlReader: char[] srcBuf>;

        $i1 = r0.<org.kobjects.xml.XmlReader: int srcPos>;

        $i2 = $i1 + 1;

        r0.<org.kobjects.xml.XmlReader: int srcPos> = $i2;

        $c3 = $r2[$i1];

        $i1 = (int) $c3;

        r0.<org.kobjects.xml.XmlReader: int peek1> = $i1;

        return i0;
    }

    private final void read(char) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        char $c0;
        int $i1, $i2;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $c0 := @parameter0: char;

        $i1 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        $i2 = (int) $c0;

        if $i1 == $i2 goto label2;

        $z0 = r0.<org.kobjects.xml.XmlReader: boolean relaxed>;

        if $z0 == 0 goto label1;

        $i1 = (int) $c0;

        if $i1 > 32 goto label2;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void skip()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: \'");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>($r2);

     label2:
        return;
    }

    private final java.lang.String readName() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        int i0, i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

        i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if i1 < 97 goto label1;

        if i1 <= 122 goto label3;

     label1:
        if i1 < 65 goto label2;

        if i1 <= 90 goto label3;

     label2:
        if i1 == 95 goto label3;

        if i1 == 58 goto label3;

        $z0 = r0.<org.kobjects.xml.XmlReader: boolean relaxed>;

        if $z0 != 0 goto label3;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>("name expected");

     label3:
        i1 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>(i1);

        i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if i1 < 97 goto label4;

        if i1 <= 122 goto label3;

     label4:
        if i1 < 65 goto label5;

        if i1 <= 90 goto label3;

     label5:
        if i1 < 48 goto label6;

        if i1 <= 57 goto label3;

     label6:
        if i1 == 95 goto label3;

        if i1 == 45 goto label3;

        if i1 == 58 goto label3;

        if i1 == 46 goto label3;

        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String pop(int)>(i0);

        return $r1;
    }

    private final void skip() throws java.io.IOException
    {
        int $i0;
        org.kobjects.xml.XmlReader r0;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

     label1:
        $z0 = r0.<org.kobjects.xml.XmlReader: boolean eof>;

        if $z0 != 0 goto label2;

        $i0 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if $i0 > 32 goto label2;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        goto label1;

     label2:
        return;
    }

    public void defineCharacterEntity(java.lang.String, java.lang.String)
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.String $r1, $r2;
        java.util.Hashtable $r3;

        r0 := @this: org.kobjects.xml.XmlReader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public int getAttributeCount()
    {
        int i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int attributeCount>;

        return i0;
    }

    public java.lang.String getAttributeName(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        $i1 = r0.<org.kobjects.xml.XmlReader: int attributeCount>;

        if $i0 < $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        $i0 = $i0 << 1;

        $r3 = $r2[$i0];

        return $r3;
    }

    public java.lang.String getAttributeValue(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        $i1 = r0.<org.kobjects.xml.XmlReader: int attributeCount>;

        if $i0 < $i1 goto label1;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label1:
        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        $i0 = $i0 << 1;

        $i0 = $i0 + 1;

        $r3 = $r2[$i0];

        return $r3;
    }

    public java.lang.String getAttributeValue(java.lang.String)
    {
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.kobjects.xml.XmlReader: int attributeCount>;

        $i0 = $i0 << 1;

        $i1 = -2;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] attributes>;

        $i0 = $i0 + 1;

        $r1 = $r2[$i0];

        return $r1;

     label2:
        $i1 = -2;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        return null;
    }

    public int getColumnNumber()
    {
        int i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int column>;

        return i0;
    }

    public int getDepth()
    {
        int i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        return i0;
    }

    public int getLineNumber()
    {
        int i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int line>;

        return i0;
    }

    public java.lang.String getName()
    {
        java.lang.String r1;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        r1 = r0.<org.kobjects.xml.XmlReader: java.lang.String name>;

        return r1;
    }

    public java.lang.String getPositionDescription()
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.String[] $r2;
        java.lang.StringBuffer r1;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        r1 = new java.lang.StringBuffer;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] TYPES>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label5;

        $r2 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] TYPES>;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        $r3 = $r2[$i0];

     label1:
        specialinvoke r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @");

        $i0 = r0.<org.kobjects.xml.XmlReader: int line>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<org.kobjects.xml.XmlReader: int column>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 == 2 goto label2;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 != 3 goto label6;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 != 3 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

     label3:
        $r3 = r0.<org.kobjects.xml.XmlReader: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label5:
        $r3 = "Other";

        goto label1;

     label6:
        $z0 = r0.<org.kobjects.xml.XmlReader: boolean isWhitespace>;

        if $z0 == 0 goto label7;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[whitespace]");

        goto label4;

     label7:
        $r3 = virtualinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String getText()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label4;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $r1 = r0.<org.kobjects.xml.XmlReader: java.lang.String text>;

        if $r1 != null goto label1;

        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String pop(int)>(0);

        r0.<org.kobjects.xml.XmlReader: java.lang.String text> = $r1;

     label1:
        $r1 = r0.<org.kobjects.xml.XmlReader: java.lang.String text>;

        return $r1;
    }

    public int getType()
    {
        int i0;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        return i0;
    }

    public boolean isEmptyElementTag()
    {
        org.kobjects.xml.XmlReader r0;
        boolean z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        z0 = r0.<org.kobjects.xml.XmlReader: boolean degenerated>;

        return z0;
    }

    public boolean isWhitespace()
    {
        org.kobjects.xml.XmlReader r0;
        boolean z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        z0 = r0.<org.kobjects.xml.XmlReader: boolean isWhitespace>;

        return z0;
    }

    public int next() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.kobjects.xml.XmlReader;

        $z0 = 1;

        $z1 = r0.<org.kobjects.xml.XmlReader: boolean degenerated>;

        if $z1 == 0 goto label01;

        r0.<org.kobjects.xml.XmlReader: int type> = 3;

        r0.<org.kobjects.xml.XmlReader: boolean degenerated> = 0;

        $i0 = r0.<org.kobjects.xml.XmlReader: int depth>;

        $i1 = -1;

        $i0 = $i0 + $i1;

        r0.<org.kobjects.xml.XmlReader: int depth> = $i0;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        return $i0;

     label01:
        r0.<org.kobjects.xml.XmlReader: int txtPos> = 0;

        r0.<org.kobjects.xml.XmlReader: boolean isWhitespace> = 1;

     label02:
        r0.<org.kobjects.xml.XmlReader: int attributeCount> = 0;

        r0.<org.kobjects.xml.XmlReader: java.lang.String name> = null;

        r0.<org.kobjects.xml.XmlReader: java.lang.String text> = null;

        $i0 = specialinvoke r0.<org.kobjects.xml.XmlReader: int peekType()>();

        r0.<org.kobjects.xml.XmlReader: int type> = $i0;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        lookupswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label07;
            default: goto label03;
        };

     label03:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void parseLegacy(boolean)>(0);

     label04:
        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 > 4 goto label02;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 != 4 goto label05;

        $i0 = specialinvoke r0.<org.kobjects.xml.XmlReader: int peekType()>();

        if $i0 >= 4 goto label02;

     label05:
        $z1 = r0.<org.kobjects.xml.XmlReader: boolean isWhitespace>;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 != 4 goto label12;

     label06:
        $z0 = $z0 & $z1;

        r0.<org.kobjects.xml.XmlReader: boolean isWhitespace> = $z0;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        return $i0;

     label07:
        $z1 = r0.<org.kobjects.xml.XmlReader: boolean isWhitespace>;

        $z2 = virtualinvoke r0.<org.kobjects.xml.XmlReader: boolean pushEntity()>();

        $z1 = $z1 & $z2;

        r0.<org.kobjects.xml.XmlReader: boolean isWhitespace> = $z1;

        r0.<org.kobjects.xml.XmlReader: int type> = 4;

        goto label04;

     label08:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void parseStartTag()>();

        goto label04;

     label09:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void parseEndTag()>();

        goto label04;

     label10:
        $z1 = r0.<org.kobjects.xml.XmlReader: boolean isWhitespace>;

        $z2 = specialinvoke r0.<org.kobjects.xml.XmlReader: boolean pushText(int)>(60);

        $z1 = $z1 & $z2;

        r0.<org.kobjects.xml.XmlReader: boolean isWhitespace> = $z1;

        goto label04;

     label11:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void parseLegacy(boolean)>(1);

        r0.<org.kobjects.xml.XmlReader: boolean isWhitespace> = 0;

        r0.<org.kobjects.xml.XmlReader: int type> = 4;

        goto label04;

     label12:
        $z0 = 0;

        goto label06;
    }

    public final boolean pushEntity() throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        char $c2;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6;
        java.lang.String $r1, r4;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        i0 = r0.<org.kobjects.xml.XmlReader: int txtPos>;

     label01:
        $z0 = r0.<org.kobjects.xml.XmlReader: boolean eof>;

        if $z0 != 0 goto label02;

        $i1 = r0.<org.kobjects.xml.XmlReader: int peek0>;

        if $i1 == 59 goto label02;

        $i1 = specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>($i1);

        goto label01;

     label02:
        $r1 = specialinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String pop(int)>(i0);

        specialinvoke r0.<org.kobjects.xml.XmlReader: int read()>();

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i0 <= 0 goto label06;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        i0 = (int) $c2;

        if i0 != 35 goto label06;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(1);

        i0 = (int) $c2;

        if i0 != 120 goto label04;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);

     label03:
        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>(i0);

        if i0 > 32 goto label05;

        return 1;

     label04:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        goto label03;

     label05:
        return 0;

     label06:
        $r2 = r0.<org.kobjects.xml.XmlReader: java.util.Hashtable entityMap>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        $z0 = 1;

        if r4 != null goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        i0 = 0;

     label08:
        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if i0 >= $i1 goto label10;

        $c2 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i0);

        $i1 = (int) $c2;

        if $i1 <= 32 goto label09;

        $z0 = 0;

     label09:
        $i1 = (int) $c2;

        specialinvoke r0.<org.kobjects.xml.XmlReader: void push(int)>($i1);

        i0 = i0 + 1;

        goto label08;

     label10:
        return $z0;
    }

    public java.lang.String readText() throws java.io.IOException
    {
        int $i0;
        java.lang.String $r1;
        org.kobjects.xml.XmlReader r0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 == 4 goto label1;

        return "";

     label1:
        $r1 = virtualinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String getText()>();

        virtualinvoke r0.<org.kobjects.xml.XmlReader: int next()>();

        return $r1;
    }

    public void require(int, java.lang.String) throws java.io.IOException
    {
        org.kobjects.xml.XmlReader r0;
        java.lang.String[] $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.kobjects.xml.XmlReader;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i1 != 4 goto label1;

        if $i0 == 4 goto label1;

        $z0 = virtualinvoke r0.<org.kobjects.xml.XmlReader: boolean isWhitespace()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.kobjects.xml.XmlReader: int next()>();

     label1:
        $i1 = r0.<org.kobjects.xml.XmlReader: int type>;

        if $i0 != $i1 goto label2;

        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.<org.kobjects.xml.XmlReader: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: ");

        $r4 = r0.<org.kobjects.xml.XmlReader: java.lang.String[] TYPES>;

        $r2 = $r4[$i0];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.kobjects.xml.XmlReader: void exception(java.lang.String)>($r1);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.kobjects.xml.XmlReader: java.lang.String UNEXPECTED_EOF> = "Unexpected EOF";

        <org.kobjects.xml.XmlReader: int TEXT> = 4;

        <org.kobjects.xml.XmlReader: int START_TAG> = 2;

        <org.kobjects.xml.XmlReader: int START_DOCUMENT> = 0;

        <org.kobjects.xml.XmlReader: int LEGACY> = 999;

        <org.kobjects.xml.XmlReader: int ENTITY_REF> = 6;

        <org.kobjects.xml.XmlReader: int END_TAG> = 3;

        <org.kobjects.xml.XmlReader: int END_DOCUMENT> = 1;

        <org.kobjects.xml.XmlReader: int CDSECT> = 5;

        return;
    }
}
