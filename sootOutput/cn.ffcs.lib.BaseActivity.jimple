public class cn.ffcs.lib.BaseActivity extends android.app.Activity
{
    private boolean allowDestroy;
    private boolean allowFullScreen;
    private android.view.View view;

    public void <init>()
    {
        cn.ffcs.lib.BaseActivity r0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<cn.ffcs.lib.BaseActivity: boolean allowFullScreen> = 1;

        r0.<cn.ffcs.lib.BaseActivity: boolean allowDestroy> = 1;

        return;
    }

    public boolean isAllowFullScreen()
    {
        cn.ffcs.lib.BaseActivity r0;
        boolean z0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        z0 = r0.<cn.ffcs.lib.BaseActivity: boolean allowFullScreen>;

        return z0;
    }

    protected void onCreate(android.os.Bundle)
    {
        cn.ffcs.lib.AppManager $r2;
        android.os.Bundle $r1;
        cn.ffcs.lib.BaseActivity r0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>($r1);

        r0.<cn.ffcs.lib.BaseActivity: boolean allowFullScreen> = 1;

        virtualinvoke r0.<cn.ffcs.lib.BaseActivity: boolean requestWindowFeature(int)>(1);

        $r2 = staticinvoke <cn.ffcs.lib.AppManager: cn.ffcs.lib.AppManager getAppManager()>();

        virtualinvoke $r2.<cn.ffcs.lib.AppManager: void addActivity(android.app.Activity)>(r0);

        return;
    }

    protected void onDestroy()
    {
        cn.ffcs.lib.AppManager $r1;
        cn.ffcs.lib.BaseActivity r0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = staticinvoke <cn.ffcs.lib.AppManager: cn.ffcs.lib.AppManager getAppManager()>();

        virtualinvoke $r1.<cn.ffcs.lib.AppManager: void finishActivity(android.app.Activity)>(r0);

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        cn.ffcs.lib.BaseActivity r0;
        int $i0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label1;

        $r2 = r0.<cn.ffcs.lib.BaseActivity: android.view.View view>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.ffcs.lib.BaseActivity: android.view.View view>;

        virtualinvoke $r2.<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        $z0 = r0.<cn.ffcs.lib.BaseActivity: boolean allowDestroy>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;
    }

    public void setAllowDestroy(boolean)
    {
        cn.ffcs.lib.BaseActivity r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        $z0 := @parameter0: boolean;

        r0.<cn.ffcs.lib.BaseActivity: boolean allowDestroy> = $z0;

        return;
    }

    public void setAllowDestroy(boolean, android.view.View)
    {
        android.view.View $r1;
        cn.ffcs.lib.BaseActivity r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.view.View;

        r0.<cn.ffcs.lib.BaseActivity: boolean allowDestroy> = $z0;

        r0.<cn.ffcs.lib.BaseActivity: android.view.View view> = $r1;

        return;
    }

    public void setAllowFullScreen(boolean)
    {
        cn.ffcs.lib.BaseActivity r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.BaseActivity;

        $z0 := @parameter0: boolean;

        r0.<cn.ffcs.lib.BaseActivity: boolean allowFullScreen> = $z0;

        return;
    }
}
