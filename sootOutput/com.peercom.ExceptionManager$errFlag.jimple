public final enum class com.peercom.ExceptionManager$errFlag extends java.lang.Enum
{
    private static final com.peercom.ExceptionManager$errFlag[] ENUM$VALUES;
    public static final enum com.peercom.ExceptionManager$errFlag d;
    public static final enum com.peercom.ExceptionManager$errFlag e;
    public static final enum com.peercom.ExceptionManager$errFlag i;
    public static final enum com.peercom.ExceptionManager$errFlag v;
    public static final enum com.peercom.ExceptionManager$errFlag w;

    static void <clinit>()
    {
        com.peercom.ExceptionManager$errFlag[] $r1;
        com.peercom.ExceptionManager$errFlag $r0;

        $r0 = new com.peercom.ExceptionManager$errFlag;

        specialinvoke $r0.<com.peercom.ExceptionManager$errFlag: void <init>(java.lang.String,int)>("e", 0);

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag e> = $r0;

        $r0 = new com.peercom.ExceptionManager$errFlag;

        specialinvoke $r0.<com.peercom.ExceptionManager$errFlag: void <init>(java.lang.String,int)>("w", 1);

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag w> = $r0;

        $r0 = new com.peercom.ExceptionManager$errFlag;

        specialinvoke $r0.<com.peercom.ExceptionManager$errFlag: void <init>(java.lang.String,int)>("i", 2);

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag i> = $r0;

        $r0 = new com.peercom.ExceptionManager$errFlag;

        specialinvoke $r0.<com.peercom.ExceptionManager$errFlag: void <init>(java.lang.String,int)>("d", 3);

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag d> = $r0;

        $r0 = new com.peercom.ExceptionManager$errFlag;

        specialinvoke $r0.<com.peercom.ExceptionManager$errFlag: void <init>(java.lang.String,int)>("v", 4);

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag v> = $r0;

        $r1 = newarray (com.peercom.ExceptionManager$errFlag)[5];

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag e>;

        $r1[0] = $r0;

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag w>;

        $r1[1] = $r0;

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag i>;

        $r1[2] = $r0;

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag d>;

        $r1[3] = $r0;

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag v>;

        $r1[4] = $r0;

        <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag[] ENUM$VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        com.peercom.ExceptionManager$errFlag r0;
        java.lang.String $r1;

        r0 := @this: com.peercom.ExceptionManager$errFlag;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.peercom.ExceptionManager$errFlag valueOf(java.lang.String)
    {
        java.lang.String $r1;
        com.peercom.ExceptionManager$errFlag $r2;
        java.lang.Enum $r0;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/peercom/ExceptionManager$errFlag;", $r1);

        $r2 = (com.peercom.ExceptionManager$errFlag) $r0;

        return $r2;
    }

    public static com.peercom.ExceptionManager$errFlag[] values()
    {
        int $i0;
        com.peercom.ExceptionManager$errFlag[] $r0, $r1;

        $r0 = <com.peercom.ExceptionManager$errFlag: com.peercom.ExceptionManager$errFlag[] ENUM$VALUES>;

        $i0 = lengthof $r0;

        $r1 = newarray (com.peercom.ExceptionManager$errFlag)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }
}
