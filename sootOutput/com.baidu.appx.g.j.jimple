public class com.baidu.appx.g.j extends java.lang.Object
{
    private static org.apache.http.client.HttpClient a;
    private static java.util.concurrent.ExecutorService b;

    static void <clinit>()
    {
        <com.baidu.appx.g.j: org.apache.http.client.HttpClient a> = null;

        <com.baidu.appx.g.j: java.util.concurrent.ExecutorService b> = null;

        return;
    }

    public static org.apache.http.client.HttpClient a()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.conn.scheme.PlainSocketFactory $r3;
        org.apache.http.conn.scheme.SchemeRegistry r2;
        org.apache.http.params.BasicHttpParams r1;
        com.baidu.appx.g.j$2 $r7;
        com.baidu.appx.g.j$1 $r4;
        org.apache.http.conn.scheme.Scheme $r5;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r6;

        r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>(r1, 15000L);

        $r4 = new com.baidu.appx.g.j$1;

        specialinvoke $r4.<com.baidu.appx.g.j$1: void <init>()>();

        staticinvoke <org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>(r1, $r4);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r1, 15000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r1, 15000);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>(r1, 0);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>(r1, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>(r1, 8192);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>(r1, 1);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>(r1, 1);

        r2 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r2.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r5 = new org.apache.http.conn.scheme.Scheme;

        $r3 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r5.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r3, 80);

        virtualinvoke r2.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r5);

        r0 = new org.apache.http.impl.client.DefaultHttpClient;

        $r6 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke $r6.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r1, r2);

        specialinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r6, r1);

        $r7 = new com.baidu.appx.g.j$2;

        specialinvoke $r7.<com.baidu.appx.g.j$2: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)>($r7);

        return r0;
    }

    public static void a(org.apache.http.client.HttpClient)
    {
        org.apache.http.client.HttpClient $r0;
        org.apache.http.params.HttpParams $r2;
        int $i0;
        java.lang.String $r3;
        org.apache.http.HttpHost r1;
        boolean $z0;

        $r0 := @parameter0: org.apache.http.client.HttpClient;

        $r2 = interfaceinvoke $r0.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $z0 = staticinvoke <com.baidu.appx.g.j: boolean h()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $i0 = staticinvoke <android.net.Proxy: int getDefaultPort()>();

        r1 = new org.apache.http.HttpHost;

        specialinvoke r1.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r3, $i0);

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r1);

        return;

     label1:
        interfaceinvoke $r2.<org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>("http.route.default-proxy");

        return;
    }

    public static boolean b()
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 = staticinvoke <com.baidu.appx.g.a: android.content.Context a()>();

        if $r0 != null goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        if r2 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label3;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 != 0 goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }

    public static org.apache.http.client.HttpClient c()
    {
        org.apache.http.client.HttpClient $r0;

        $r0 = <com.baidu.appx.g.j: org.apache.http.client.HttpClient a>;

        if $r0 != null goto label1;

        $r0 = staticinvoke <com.baidu.appx.g.j: org.apache.http.client.HttpClient a()>();

        <com.baidu.appx.g.j: org.apache.http.client.HttpClient a> = $r0;

     label1:
        $r0 = <com.baidu.appx.g.j: org.apache.http.client.HttpClient a>;

        staticinvoke <com.baidu.appx.g.j: void a(org.apache.http.client.HttpClient)>($r0);

        $r0 = <com.baidu.appx.g.j: org.apache.http.client.HttpClient a>;

        return $r0;
    }

    public static java.util.concurrent.ExecutorService d()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = <com.baidu.appx.g.j: java.util.concurrent.ExecutorService b>;

        if $r0 != null goto label1;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        <com.baidu.appx.g.j: java.util.concurrent.ExecutorService b> = $r0;

     label1:
        $r0 = <com.baidu.appx.g.j: java.util.concurrent.ExecutorService b>;

        return $r0;
    }

    public static void e()
    {
        staticinvoke <com.baidu.appx.g.j: org.apache.http.client.HttpClient c()>();

        staticinvoke <com.baidu.appx.g.j: java.util.concurrent.ExecutorService d()>();

        return;
    }

    public static int f()
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager r2;
        int $i0;
        java.lang.Object $r1;

        $r0 = staticinvoke <com.baidu.appx.g.a: android.content.Context a()>();

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r2 = (android.telephony.TelephonyManager) $r1;

        $i0 = virtualinvoke r2.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 4: goto label3;
            case 13: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 8;
    }

    public static int g()
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        android.telephony.TelephonyManager r6;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r4, $r5;
        boolean $z0;

        $r0 = staticinvoke <com.baidu.appx.g.a: android.content.Context a()>();

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label7;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $r5 = "WIFI";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r5 = "MOBILE";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label7;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r6 = (android.telephony.TelephonyManager) $r1;

        $i0 = virtualinvoke r6.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label5;
            case 9: goto label5;
            case 10: goto label5;
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label6;
            case 14: goto label5;
            case 15: goto label5;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        return 2;

     label5:
        return 3;

     label6:
        return 4;

     label7:
        return 0;
    }

    private static boolean h()
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        int $i0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 = staticinvoke <com.baidu.appx.g.a: android.content.Context a()>();

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label2;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 == 1 goto label2;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 0 goto label2;

        $z0 = staticinvoke <com.baidu.appx.g.j: boolean i()>();

        return $z0;

     label2:
        return 0;
    }

    private static boolean i()
    {
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <android.net.Proxy: int getDefaultPort()>();

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
