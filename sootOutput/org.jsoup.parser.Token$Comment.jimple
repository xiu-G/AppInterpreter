class org.jsoup.parser.Token$Comment extends org.jsoup.parser.Token
{
    boolean bogus;
    final java.lang.StringBuilder data;

    void <init>()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r1;
        org.jsoup.parser.Token$TokenType $r2;

        r0 := @this: org.jsoup.parser.Token$Comment;

        specialinvoke r0.<org.jsoup.parser.Token: void <init>(org.jsoup.parser.Token$1)>(null);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data> = $r1;

        r0.<org.jsoup.parser.Token$Comment: boolean bogus> = 0;

        $r2 = <org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType Comment>;

        r0.<org.jsoup.parser.Token$Comment: org.jsoup.parser.Token$TokenType type> = $r2;

        return;
    }

    java.lang.String getData()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.Token$Comment;

        $r2 = r0.<org.jsoup.parser.Token$Comment: java.lang.StringBuilder data>;

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        org.jsoup.parser.Token$Comment r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.jsoup.parser.Token$Comment;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!--");

        $r2 = virtualinvoke r0.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
