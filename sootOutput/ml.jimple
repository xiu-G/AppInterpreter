public final class ml extends java.lang.Object
{
    public mj a;
    public java.util.ArrayList b;

    public void <init>(java.lang.String)
    {
        org.iii.ideas.reader.opf.OPFParseHandler $r5;
        javax.xml.parsers.SAXParserFactory $r2;
        java.lang.Exception $r7, $r9;
        org.xml.sax.XMLReader $r4;
        javax.xml.parsers.SAXParser $r3;
        java.lang.StringBuilder $r11;
        java.lang.String $r1, $r10;
        kf $r8;
        mj $r6;
        ml r0;

        r0 := @this: ml;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label01:
        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label02:
        $r5 = new org.iii.ideas.reader.opf.OPFParseHandler;

     label03:
        specialinvoke $r5.<org.iii.ideas.reader.opf.OPFParseHandler: void <init>()>();

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r5);

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void parse(java.lang.String)>($r1);

        $r6 = $r5.<org.iii.ideas.reader.opf.OPFParseHandler: mj a>;

        r0.<ml: mj a> = $r6;

        specialinvoke r0.<ml: void a()>();

     label04:
        return;

     label05:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OPFReader", "Tagsoup");

        $r8 = new kf;

     label06:
        specialinvoke $r8.<kf: void <init>()>();

     label07:
        $r5 = new org.iii.ideas.reader.opf.OPFParseHandler;

     label08:
        specialinvoke $r5.<org.iii.ideas.reader.opf.OPFParseHandler: void <init>()>();

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r5);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(java.lang.String)>($r1);

        $r6 = $r5.<org.iii.ideas.reader.opf.OPFParseHandler: mj a>;

        r0.<ml: mj a> = $r6;

        specialinvoke r0.<ml: void a()>();

     label09:
        return;

     label10:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OPFReader", $r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path:");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("OPFReader", $r1);

        return;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private void a()
    {
        java.util.HashMap $r3;
        java.util.ArrayList $r1, $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        mj $r2;
        ml r0;

        r0 := @this: ml;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ml: java.util.ArrayList b> = $r1;

        $r2 = r0.<ml: mj a>;

        $r1 = $r2.<mj: java.util.ArrayList p>;

        $r2 = r0.<ml: mj a>;

        $r3 = $r2.<mj: java.util.HashMap o>;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r4 = r0.<ml: java.util.ArrayList b>;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
