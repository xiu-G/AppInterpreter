class vStudio.Android.Camera360.GBugTracker$LogWriterThread extends java.lang.Thread
{
    private boolean mIsTaskFinish;
    final vStudio.Android.Camera360.GBugTracker this$0;

    void <init>(vStudio.Android.Camera360.GBugTracker)
    {
        vStudio.Android.Camera360.GBugTracker$LogWriterThread r0;
        vStudio.Android.Camera360.GBugTracker $r1;

        r0 := @this: vStudio.Android.Camera360.GBugTracker$LogWriterThread;

        $r1 := @parameter0: vStudio.Android.Camera360.GBugTracker;

        r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: vStudio.Android.Camera360.GBugTracker this$0> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: boolean mIsTaskFinish> = 0;

        return;
    }

    public boolean hasFinishTask()
    {
        vStudio.Android.Camera360.GBugTracker$LogWriterThread r0;
        boolean z0;

        r0 := @this: vStudio.Android.Camera360.GBugTracker$LogWriterThread;

        z0 = r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: boolean mIsTaskFinish>;

        return z0;
    }

    public void run()
    {
        java.lang.Throwable $r5, $r6;
        vStudio.Android.Camera360.GBugTracker$LogWriterThread r0;
        long l0, $l1, l2, $l3;
        byte $b4;
        vStudio.Android.Camera360.GBugTracker $r2;
        int $i5;
        java.lang.String $r3;
        boolean $z0;
        java.io.File r1, $r7;
        java.lang.StringBuilder $r4, $r8;

        r0 := @this: vStudio.Android.Camera360.GBugTracker$LogWriterThread;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: boolean mIsTaskFinish> = 0;

        $r7 = new java.io.File;

        r1 = $r7;

        $r2 = r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: vStudio.Android.Camera360.GBugTracker this$0>;

        $r3 = staticinvoke <vStudio.Android.Camera360.GBugTracker: java.lang.String access$0(vStudio.Android.Camera360.GBugTracker)>($r2);

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        $r2 = r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: vStudio.Android.Camera360.GBugTracker this$0>;

        $r3 = staticinvoke <vStudio.Android.Camera360.GBugTracker: java.lang.String access$0(vStudio.Android.Camera360.GBugTracker)>($r2);

        staticinvoke <vStudio.Android.Camera360.GLogManager: void saveLogToFile(java.lang.String)>($r3);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = l0 + 30000L;

        l2 = -112L;

     label2:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b4 = l0 cmp $l3;

        $i5 = (int) $b4;

        if $i5 > 0 goto label4;

     label3:
        staticinvoke <vStudio.Android.Camera360.GLogManager: void ClearLog()>();

        r0.<vStudio.Android.Camera360.GBugTracker$LogWriterThread: boolean mIsTaskFinish> = 1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("LogWriterThread has run. delta time = ");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = l0 - $l1;

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <vStudio.Android.GPhoto.MyLog: void i(java.lang.String)>($r3);

        return;

     label4:
        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label5:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label6;

        $l3 = virtualinvoke r1.<java.io.File: long length()>();

        $b4 = l2 cmp $l3;

        if $b4 == 0 goto label3;

        l2 = virtualinvoke r1.<java.io.File: long length()>();

        goto label2;

     label6:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label7:
        goto label2;

     label8:
        $r5 := @caughtexception;

        goto label2;

     label9:
        $r6 := @caughtexception;

        goto label5;

        catch java.lang.InterruptedException from label4 to label5 with label9;
        catch java.lang.InterruptedException from label6 to label7 with label8;
    }
}
