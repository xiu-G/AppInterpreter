class njl.feh.uaj.a.n extends java.lang.Object
{
    private java.io.InputStream a;
    private java.io.OutputStream b;
    private final int c;
    private final int d;
    private final int e;
    private final byte[] f;
    private int g;
    private int h;

    public void <init>(java.io.InputStream, int, int)
    {
        njl.feh.uaj.a.n r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<njl.feh.uaj.a.n: void <init>(java.io.InputStream,java.io.OutputStream,int,int)>($r1, null, 10240, 512);

        return;
    }

    private void <init>(java.io.InputStream, java.io.OutputStream, int, int)
    {
        java.io.OutputStream $r2;
        byte[] $r3;
        njl.feh.uaj.a.n r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<njl.feh.uaj.a.n: java.io.InputStream a> = $r1;

        r0.<njl.feh.uaj.a.n: java.io.OutputStream b> = null;

        r0.<njl.feh.uaj.a.n: int c> = 10240;

        r0.<njl.feh.uaj.a.n: int d> = 512;

        $i1 = r0.<njl.feh.uaj.a.n: int c>;

        $i0 = r0.<njl.feh.uaj.a.n: int d>;

        $i0 = $i1 / $i0;

        r0.<njl.feh.uaj.a.n: int e> = $i0;

        $i0 = r0.<njl.feh.uaj.a.n: int c>;

        $r3 = newarray (byte)[$i0];

        r0.<njl.feh.uaj.a.n: byte[] f> = $r3;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        if $r1 == null goto label1;

        r0.<njl.feh.uaj.a.n: int g> = -1;

        $i0 = r0.<njl.feh.uaj.a.n: int e>;

        r0.<njl.feh.uaj.a.n: int h> = $i0;

        return;

     label1:
        r0.<njl.feh.uaj.a.n: int g> = 0;

        r0.<njl.feh.uaj.a.n: int h> = 0;

        return;
    }

    private boolean e()
    {
        byte[] $r3;
        java.io.IOException $r2;
        long $l3, $l5;
        byte $b4;
        njl.feh.uaj.a.n r0;
        int $i0, $i1, $i2;
        java.io.InputStream $r1;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("reading from an output buffer");

        throw $r2;

     label1:
        r0.<njl.feh.uaj.a.n: int h> = 0;

        $i1 = r0.<njl.feh.uaj.a.n: int c>;

        $i2 = 0;

     label2:
        if $i1 <= 0 goto label4;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        $r3 = r0.<njl.feh.uaj.a.n: byte[] f>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r3, $i2, $i1);

        $l3 = (long) $i0;

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label5;

        if $i2 != 0 goto label3;

        return 0;

     label3:
        $r3 = r0.<njl.feh.uaj.a.n: byte[] f>;

        $i1 = $i1 + $i2;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r3, $i2, $i1, 0);

     label4:
        $i2 = r0.<njl.feh.uaj.a.n: int g>;

        $i2 = $i2 + 1;

        r0.<njl.feh.uaj.a.n: int g> = $i2;

        return 1;

     label5:
        $l5 = (long) $i2;

        $l5 = $l5 + $l3;

        $i2 = (int) $l5;

        $l5 = (long) $i1;

        $l5 = $l5 - $l3;

        $i1 = (int) $l5;

        goto label2;
    }

    private void f()
    {
        java.io.OutputStream $r1;
        byte[] $r3;
        njl.feh.uaj.a.n r0;
        int $i0;
        java.io.IOException $r2;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("writing to an input buffer");

        throw $r2;

     label1:
        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        $r3 = r0.<njl.feh.uaj.a.n: byte[] f>;

        $i0 = r0.<njl.feh.uaj.a.n: int c>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        r0.<njl.feh.uaj.a.n: int h> = 0;

        $i0 = r0.<njl.feh.uaj.a.n: int g>;

        $i0 = $i0 + 1;

        r0.<njl.feh.uaj.a.n: int g> = $i0;

        $r3 = r0.<njl.feh.uaj.a.n: byte[] f>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r3, 0);

        return;
    }

    public int a()
    {
        njl.feh.uaj.a.n r0;
        int i0;

        r0 := @this: njl.feh.uaj.a.n;

        i0 = r0.<njl.feh.uaj.a.n: int d>;

        return i0;
    }

    public boolean a(byte[])
    {
        byte[] $r1;
        byte $b0;
        njl.feh.uaj.a.n r0;
        int $i1, $i2;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 := @parameter0: byte[];

        $i1 = virtualinvoke r0.<njl.feh.uaj.a.n: int a()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $b0 = $r1[$i2];

        if $b0 == 0 goto label2;

        return 0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public byte[] b()
    {
        java.io.OutputStream $r2;
        byte[] $r4, $r5;
        java.io.IOException $r3;
        njl.feh.uaj.a.n r0;
        int $i0, $i1;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        if $r1 != null goto label2;

        $r2 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        if $r2 != null goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("input buffer is closed");

        throw $r3;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("reading from an output buffer");

        throw $r3;

     label2:
        $i0 = r0.<njl.feh.uaj.a.n: int h>;

        $i1 = r0.<njl.feh.uaj.a.n: int e>;

        if $i0 < $i1 goto label3;

        $z0 = specialinvoke r0.<njl.feh.uaj.a.n: boolean e()>();

        if $z0 != 0 goto label3;

        return null;

     label3:
        $i0 = r0.<njl.feh.uaj.a.n: int d>;

        $r4 = newarray (byte)[$i0];

        $r5 = r0.<njl.feh.uaj.a.n: byte[] f>;

        $i0 = r0.<njl.feh.uaj.a.n: int h>;

        $i1 = r0.<njl.feh.uaj.a.n: int d>;

        $i1 = $i0 * $i1;

        $i0 = r0.<njl.feh.uaj.a.n: int d>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i1, $r4, 0, $i0);

        $i0 = r0.<njl.feh.uaj.a.n: int h>;

        $i0 = $i0 + 1;

        r0.<njl.feh.uaj.a.n: int h> = $i0;

        return $r4;
    }

    void c()
    {
        java.io.OutputStream $r1;
        njl.feh.uaj.a.n r0;
        int $i0;
        java.io.IOException $r2;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("writing to an input buffer");

        throw $r2;

     label1:
        $i0 = r0.<njl.feh.uaj.a.n: int h>;

        if $i0 <= 0 goto label2;

        specialinvoke r0.<njl.feh.uaj.a.n: void f()>();

     label2:
        return;
    }

    public void d()
    {
        java.io.OutputStream $r1;
        java.io.PrintStream $r2;
        njl.feh.uaj.a.n r0;
        java.io.InputStream $r3, $r4;

        r0 := @this: njl.feh.uaj.a.n;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        if $r1 == null goto label1;

        virtualinvoke r0.<njl.feh.uaj.a.n: void c()>();

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        if $r1 == $r2 goto label3;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        if $r1 == $r2 goto label3;

        $r1 = r0.<njl.feh.uaj.a.n: java.io.OutputStream b>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        r0.<njl.feh.uaj.a.n: java.io.OutputStream b> = null;

        return;

     label1:
        $r3 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        if $r3 == null goto label3;

        $r3 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        $r4 = <java.lang.System: java.io.InputStream in>;

        if $r3 == $r4 goto label2;

        $r3 = r0.<njl.feh.uaj.a.n: java.io.InputStream a>;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label2:
        r0.<njl.feh.uaj.a.n: java.io.InputStream a> = null;

     label3:
        return;
    }
}
