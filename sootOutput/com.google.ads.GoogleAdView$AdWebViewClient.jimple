class com.google.ads.GoogleAdView$AdWebViewClient extends android.webkit.WebViewClient
{
    private boolean mStartedAdFetch;
    private java.util.Random random;
    final com.google.ads.GoogleAdView this$0;

    void <init>(com.google.ads.GoogleAdView)
    {
        java.util.Random $r2;
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        com.google.ads.GoogleAdView $r1;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: com.google.ads.GoogleAdView;

        r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0.<com.google.ads.GoogleAdView$AdWebViewClient: java.util.Random random> = $r2;

        return;
    }

    static void access$100(com.google.ads.GoogleAdView$AdWebViewClient)
    {
        com.google.ads.GoogleAdView$AdWebViewClient $r0;

        $r0 := @parameter0: com.google.ads.GoogleAdView$AdWebViewClient;

        specialinvoke $r0.<com.google.ads.GoogleAdView$AdWebViewClient: void reset()>();

        return;
    }

    private java.lang.String getClickString(android.net.Uri)
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.net.Uri;

        $z0 = virtualinvoke $r1.<android.net.Uri: boolean isHierarchical()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("ai");

        return $r2;
    }

    private boolean isAdFetchFailure(java.lang.String, android.net.Uri)
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        android.net.Uri $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.net.Uri;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("http://__NO_MATCHING_AD__");

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GoogleAdView", "DoubleClick could not fill the ad request.");

        return 1;

     label1:
        return 0;
    }

    private boolean isBlacklisted(android.net.Uri)
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        android.net.Uri $r1;
        java.lang.String[] $r3;
        int i0, $i1;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        i0 = 0;

     label1:
        $r3 = staticinvoke <com.google.ads.GoogleAdView: java.lang.String[] access$500()>();

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r3 = staticinvoke <com.google.ads.GoogleAdView: java.lang.String[] access$500()>();

        $r4 = $r3[i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isRedirect(android.net.Uri)
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        android.net.Uri $r1;
        java.lang.String[] $r3;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getHost()>();

        $r3 = staticinvoke <com.google.ads.GoogleAdView: java.lang.String[] access$600()>();

        $i0 = lengthof $r3;

        $i1 = -1;

        $i0 = $i0 + $i1;

     label1:
        if $i0 < 0 goto label3;

        $r3 = staticinvoke <com.google.ads.GoogleAdView: java.lang.String[] access$600()>();

        $r4 = $r3[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label1;

     label3:
        return 0;
    }

    private void patchDoubleClickBug()
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        android.webkit.WebView $r1;
        com.google.ads.GoogleAdView $r2;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r2 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r1 = staticinvoke <com.google.ads.GoogleAdView: android.webkit.WebView access$700(com.google.ads.GoogleAdView)>($r2);

        virtualinvoke $r1.<android.webkit.WebView: void loadUrl(java.lang.String)>("javascript: document.body.style.margin = 0;");

        return;
    }

    private void reset()
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean mStartedAdFetch> = 0;

        return;
    }

    public void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        com.google.ads.AdViewListener $r5;
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        com.google.ads.GoogleAdView $r3;
        java.lang.String $r2;
        com.google.ads.LatencyTracker $r4;
        android.webkit.WebView $r1;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.ads.GoogleAdView$AdWebViewClient: void patchDoubleClickBug()>();

        specialinvoke r0.<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>($r1, $r2);

        $z0 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean mStartedAdFetch>;

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean mStartedAdFetch> = 0;

        $r3 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        virtualinvoke $r3.<com.google.ads.GoogleAdView: void setDisplayedChild(int)>(1);

        $r3 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r4 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.LatencyTracker access$200(com.google.ads.GoogleAdView)>($r3);

        virtualinvoke $r4.<com.google.ads.LatencyTracker: void onAdFetchFinished()>();

        $r3 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r5 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r3);

        if $r5 == null goto label1;

        $r3 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r5 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r3);

        interfaceinvoke $r5.<com.google.ads.AdViewListener: void onFinishFetchAd()>();

     label1:
        return;
    }

    public void onPageStarted(android.webkit.WebView, java.lang.String, android.graphics.Bitmap)
    {
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        com.google.ads.GoogleAdView $r4;
        com.google.ads.AdViewListener $r6;
        android.graphics.Bitmap $r3;
        java.lang.String $r2;
        com.google.ads.LatencyTracker $r5;
        android.webkit.WebView $r1;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.graphics.Bitmap;

        specialinvoke r0.<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>($r1, $r2, $r3);

        $z0 = staticinvoke <android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean mStartedAdFetch> = 1;

        $r4 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r5 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.LatencyTracker access$200(com.google.ads.GoogleAdView)>($r4);

        virtualinvoke $r5.<com.google.ads.LatencyTracker: void onAdFetchStart()>();

        $r4 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r6 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r4);

        if $r6 == null goto label1;

        $r4 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r6 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r4);

        interfaceinvoke $r6.<com.google.ads.AdViewListener: void onStartFetchAd()>();

     label1:
        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        java.lang.Throwable r3;
        android.content.Context $r10;
        com.google.ads.AdViewCommunicator $r7;
        com.google.ads.GoogleAdView$AdWebViewClient r0;
        com.google.ads.GoogleAdView $r6;
        android.net.Uri $r5;
        android.content.Intent r4, $r11;
        com.google.ads.AdViewListener $r8;
        android.content.ActivityNotFoundException $r12;
        java.lang.String $r2;
        com.google.ads.LatencyTracker $r9;
        android.webkit.WebView $r1;
        boolean $z0;

        r0 := @this: com.google.ads.GoogleAdView$AdWebViewClient;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        $z0 = staticinvoke <com.google.ads.AdViewCommunicator: boolean isMessage(android.net.Uri)>($r5);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r7 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewCommunicator access$400(com.google.ads.GoogleAdView)>($r6);

        virtualinvoke $r7.<com.google.ads.AdViewCommunicator: boolean testAndForwardMessage(android.net.Uri)>($r5);

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean isBlacklisted(android.net.Uri)>($r5);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $z0 = specialinvoke r0.<com.google.ads.GoogleAdView$AdWebViewClient: boolean isAdFetchFailure(java.lang.String,android.net.Uri)>($r2, $r5);

        if $z0 == 0 goto label3;

        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r8 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r6);

        if $r8 == null goto label8;

        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r8 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r6);

        interfaceinvoke $r8.<com.google.ads.AdViewListener: void onAdFetchFailure()>();

        return 1;

     label3:
        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r8 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r6);

        if $r8 == null goto label4;

        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r8 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.AdViewListener access$300(com.google.ads.GoogleAdView)>($r6);

        interfaceinvoke $r8.<com.google.ads.AdViewListener: void onClickAd()>();

     label4:
        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

        $r9 = staticinvoke <com.google.ads.GoogleAdView: com.google.ads.LatencyTracker access$200(com.google.ads.GoogleAdView)>($r6);

        $r2 = specialinvoke r0.<com.google.ads.GoogleAdView$AdWebViewClient: java.lang.String getClickString(android.net.Uri)>($r5);

        virtualinvoke $r9.<com.google.ads.LatencyTracker: void onAdClickStart(java.lang.String)>($r2);

        $r5 = staticinvoke <com.google.ads.AFMAUtil: android.net.Uri a(android.net.Uri)>($r5);

        $r11 = new android.content.Intent;

        r4 = $r11;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r5);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.BROWSABLE");

        $r6 = r0.<com.google.ads.GoogleAdView$AdWebViewClient: com.google.ads.GoogleAdView this$0>;

     label5:
        $r10 = virtualinvoke $r6.<com.google.ads.GoogleAdView: android.content.Context getContext()>();

        virtualinvoke $r10.<android.content.Context: void startActivity(android.content.Intent)>(r4);

     label6:
        return 1;

     label7:
        r3 := @caughtexception;

        $r12 = (android.content.ActivityNotFoundException) r3;

        $r2 = virtualinvoke $r12.<android.content.ActivityNotFoundException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GoogleAdView", $r2, r3);

     label8:
        return 1;

        catch android.content.ActivityNotFoundException from label5 to label6 with label7;
    }
}
