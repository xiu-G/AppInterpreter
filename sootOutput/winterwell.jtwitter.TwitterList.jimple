public class winterwell.jtwitter.TwitterList extends java.util.AbstractList
{
    static final boolean $assertionsDisabled;
    private boolean _private;
    private long cursor;
    private java.lang.String description;
    private final winterwell.jtwitter.Twitter$IHttpClient http;
    private long id;
    private final winterwell.jtwitter.Twitter jtwit;
    private int memberCount;
    private java.lang.String name;
    private winterwell.jtwitter.Twitter$User owner;
    private java.lang.String slug;
    private int subscriberCount;
    private final java.util.List users;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "Lwinterwell/jtwitter/TwitterList;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <winterwell.jtwitter.TwitterList: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>(java.lang.String, java.lang.String, winterwell.jtwitter.Twitter)
    {
        java.lang.AssertionError $r6;
        java.util.ArrayList $r5;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r3;
        winterwell.jtwitter.Twitter$IHttpClient $r4;
        int $i0;
        java.lang.String $r1, $r2;
        winterwell.jtwitter.Twitter$User $r7;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: winterwell.jtwitter.Twitter;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<winterwell.jtwitter.TwitterList: java.util.List users> = $r5;

        r0.<winterwell.jtwitter.TwitterList: long cursor> = -1L;

        $i0 = -1;

        r0.<winterwell.jtwitter.TwitterList: int memberCount> = $i0;

        $z0 = <winterwell.jtwitter.TwitterList: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        if $r3 != null goto label2;

     label1:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit> = $r3;

        $r7 = new winterwell.jtwitter.Twitter$User;

        specialinvoke $r7.<winterwell.jtwitter.Twitter$User: void <init>(java.lang.String)>($r1);

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner> = $r7;

        r0.<winterwell.jtwitter.TwitterList: java.lang.String name> = $r2;

        r0.<winterwell.jtwitter.TwitterList: java.lang.String slug> = $r2;

        $r4 = virtualinvoke $r3.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$IHttpClient getHttpClient()>();

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http> = $r4;

        return;
    }

    public void <init>(java.lang.String, winterwell.jtwitter.Twitter, boolean, java.lang.String)
    {
        java.lang.Object[] $r8;
        java.lang.AssertionError $r13;
        java.util.ArrayList $r12;
        org.json.JSONException $r11;
        org.json.JSONObject $r10, $r15;
        winterwell.jtwitter.TwitterException $r16;
        java.util.Map $r9;
        int $i0;
        java.lang.String $r1, $r3, $r4, $r7;
        boolean $z0, $z1;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        winterwell.jtwitter.Twitter$IHttpClient $r5;
        java.lang.StringBuilder $r6, $r14;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: winterwell.jtwitter.Twitter;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<winterwell.jtwitter.TwitterList: java.util.List users> = $r12;

        r0.<winterwell.jtwitter.TwitterList: long cursor> = -1L;

        $i0 = -1;

        r0.<winterwell.jtwitter.TwitterList: int memberCount> = $i0;

        $z1 = <winterwell.jtwitter.TwitterList: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label2:
        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit> = $r2;

        $r4 = virtualinvoke $r2.<winterwell.jtwitter.Twitter: java.lang.String getScreenName()>();

        $z1 = <winterwell.jtwitter.TwitterList: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        if $r4 != null goto label3;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label3:
        r0.<winterwell.jtwitter.TwitterList: java.lang.String name> = $r1;

        r0.<winterwell.jtwitter.TwitterList: java.lang.String slug> = $r1;

        $r5 = virtualinvoke $r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$IHttpClient getHttpClient()>();

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http> = $r5;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r7 = $r2.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lists.json");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[6];

        $r8[0] = "name";

        $r8[1] = $r1;

        $r8[2] = "mode";

        if $z0 == 0 goto label7;

        $r1 = "public";

     label4:
        $r8[3] = $r1;

        $r8[4] = "description";

        $r8[5] = $r3;

        $r9 = staticinvoke <winterwell.jtwitter.Twitter: java.util.Map asMap(java.lang.Object[])>($r8);

        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r1 = interfaceinvoke $r5.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String post(java.lang.String,java.util.Map,boolean)>($r4, $r9, 1);

        $r15 = new org.json.JSONObject;

        $r10 = $r15;

     label5:
        specialinvoke $r15.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init(org.json.JSONObject)>($r10);

     label6:
        return;

     label7:
        $r1 = "private";

        goto label4;

     label8:
        $r11 := @caughtexception;

        $r16 = new winterwell.jtwitter.TwitterException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse response: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<winterwell.jtwitter.TwitterException: void <init>(java.lang.String)>($r1);

        throw $r16;

        catch org.json.JSONException from label5 to label6 with label8;
    }

    void <init>(org.json.JSONObject, winterwell.jtwitter.Twitter) throws org.json.JSONException
    {
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        winterwell.jtwitter.Twitter$IHttpClient $r3;
        org.json.JSONObject $r1;
        int $i0;
        java.util.ArrayList $r4;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: winterwell.jtwitter.Twitter;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<winterwell.jtwitter.TwitterList: java.util.List users> = $r4;

        r0.<winterwell.jtwitter.TwitterList: long cursor> = -1L;

        $i0 = -1;

        r0.<winterwell.jtwitter.TwitterList: int memberCount> = $i0;

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit> = $r2;

        $r3 = virtualinvoke $r2.<winterwell.jtwitter.Twitter: winterwell.jtwitter.Twitter$IHttpClient getHttpClient()>();

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http> = $r3;

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init(org.json.JSONObject)>($r1);

        return;
    }

    private java.lang.String idOrSlug()
    {
        winterwell.jtwitter.TwitterList r0;
        byte $b1;
        int $i2;
        long $l0;
        java.lang.String $r1;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $l0 = r0.<winterwell.jtwitter.TwitterList: long id>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $l0 = r0.<winterwell.jtwitter.TwitterList: long id>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r1;

     label1:
        $r1 = r0.<winterwell.jtwitter.TwitterList: java.lang.String slug>;

        return $r1;
    }

    private void init()
    {
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        winterwell.jtwitter.Twitter$IHttpClient $r5;
        org.json.JSONException $r7;
        org.json.JSONObject $r6, $r9;
        winterwell.jtwitter.TwitterException $r10;
        int $i0;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r3;
        winterwell.jtwitter.Twitter$User $r4;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $i0 = r0.<winterwell.jtwitter.TwitterList: int memberCount>;

        if $i0 == -1 goto label1;

        return;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r3 = $r2.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r3 = $r4.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lists/");

        $r3 = specialinvoke r0.<winterwell.jtwitter.TwitterList: java.lang.String idOrSlug()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r3 = interfaceinvoke $r5.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r3, null, 1);

        $r9 = new org.json.JSONObject;

        $r6 = $r9;

     label2:
        specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r3);

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init(org.json.JSONObject)>($r6);

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        $r10 = new winterwell.jtwitter.TwitterException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse response: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<winterwell.jtwitter.TwitterException: void <init>(java.lang.String)>($r3);

        throw $r10;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    private void init(org.json.JSONObject) throws org.json.JSONException
    {
        long $l1;
        winterwell.jtwitter.TwitterList r0;
        org.json.JSONObject $r1;
        int $i0;
        java.lang.String $r2, $r3;
        winterwell.jtwitter.Twitter$User $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: org.json.JSONObject;

        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("member_count");

        r0.<winterwell.jtwitter.TwitterList: int memberCount> = $i0;

        $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("subscriber_count");

        r0.<winterwell.jtwitter.TwitterList: int subscriberCount> = $i0;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("name");

        r0.<winterwell.jtwitter.TwitterList: java.lang.String name> = $r2;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("slug");

        r0.<winterwell.jtwitter.TwitterList: java.lang.String slug> = $r2;

        $l1 = virtualinvoke $r1.<org.json.JSONObject: long getLong(java.lang.String)>("id");

        r0.<winterwell.jtwitter.TwitterList: long id> = $l1;

        $r2 = "private";

        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("mode");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        r0.<winterwell.jtwitter.TwitterList: boolean _private> = $z0;

        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("description");

        r0.<winterwell.jtwitter.TwitterList: java.lang.String description> = $r2;

        $r1 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("user");

        $r4 = new winterwell.jtwitter.Twitter$User;

        specialinvoke $r4.<winterwell.jtwitter.Twitter$User: void <init>(org.json.JSONObject,winterwell.jtwitter.Twitter$Status)>($r1, null);

        r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner> = $r4;

        return;
    }

    public volatile boolean add(java.lang.Object)
    {
        winterwell.jtwitter.TwitterList r0;
        java.lang.Object $r1;
        winterwell.jtwitter.Twitter$User $r2;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (winterwell.jtwitter.Twitter$User) $r1;

        $z0 = virtualinvoke r0.<winterwell.jtwitter.TwitterList: boolean add(winterwell.jtwitter.Twitter$User)>($r2);

        return $z0;
    }

    public boolean add(winterwell.jtwitter.Twitter$User)
    {
        java.lang.Object[] $r6;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r3;
        winterwell.jtwitter.Twitter$IHttpClient $r9;
        java.util.Map $r8;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r7;
        winterwell.jtwitter.Twitter$User $r1, $r5;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: winterwell.jtwitter.Twitter$User;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r4 = $r3.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r4 = $r5.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = specialinvoke r0.<winterwell.jtwitter.TwitterList: java.lang.String idOrSlug()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/members.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "id";

        $r7 = $r1.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r6[1] = $r7;

        $r8 = staticinvoke <winterwell.jtwitter.Twitter: java.util.Map asMap(java.lang.Object[])>($r6);

        $r9 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        interfaceinvoke $r9.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String post(java.lang.String,java.util.Map,boolean)>($r4, $r8, 1);

        return 1;
    }

    public void delete()
    {
        java.lang.Throwable $r7;
        java.lang.Exception $r10;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        winterwell.jtwitter.Twitter$IHttpClient $r5, $r6;
        winterwell.jtwitter.TwitterException $r9;
        java.lang.StringBuilder $r1, $r8;
        java.lang.String $r3;
        winterwell.jtwitter.Twitter$User $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r8 = new java.lang.StringBuilder;

        $r1 = $r8;

     label01:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r2 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r3 = $r2.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

     label03:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label04:
        $r4 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r3 = $r4.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

     label05:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lists/");

     label06:
        $r3 = r0.<winterwell.jtwitter.TwitterList: java.lang.String slug>;

     label07:
        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "utf-8");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json?_method=DELETE");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r6 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

     label09:
        $z0 = interfaceinvoke $r6.<winterwell.jtwitter.Twitter$IHttpClient: boolean canAuthenticate()>();

        interfaceinvoke $r5.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String post(java.lang.String,java.util.Map,boolean)>($r3, null, $z0);

     label10:
        return;

     label11:
        $r7 := @caughtexception;

        $r9 = new winterwell.jtwitter.TwitterException;

        $r10 = (java.lang.Exception) $r7;

        specialinvoke $r9.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r10);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label11;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label11;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    public volatile java.lang.Object get(int)
    {
        int $i0;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter$User $r1;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User get(int)>($i0);

        return $r1;
    }

    public winterwell.jtwitter.Twitter$User get(int)
    {
        long $l3;
        java.util.HashMap $r6;
        org.json.JSONException $r14;
        org.json.JSONObject $r10;
        byte $b4;
        java.lang.Long $r7;
        winterwell.jtwitter.TwitterException $r15;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r9;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        java.util.List $r5, $r13;
        winterwell.jtwitter.Twitter$IHttpClient $r8;
        java.lang.StringBuilder $r1;
        java.lang.Object $r11;
        winterwell.jtwitter.Twitter$User $r4;
        org.json.JSONArray $r12;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r3 = $r2.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r3 = $r4.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = specialinvoke r0.<winterwell.jtwitter.TwitterList: java.lang.String idOrSlug()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/members.json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r5 = r0.<winterwell.jtwitter.TwitterList: java.util.List users>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i2 = $i0 + 1;

        if $i1 >= $i2 goto label11;

        $l3 = r0.<winterwell.jtwitter.TwitterList: long cursor>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label11;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $l3 = r0.<winterwell.jtwitter.TwitterList: long cursor>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cursor", $r7);

        $r8 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r9 = interfaceinvoke $r8.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r3, $r6, 1);

        $r10 = new org.json.JSONObject;

     label02:
        specialinvoke $r10.<org.json.JSONObject: void <init>(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("users");

     label03:
        $r12 = (org.json.JSONArray) $r11;

     label04:
        $r9 = virtualinvoke $r12.<org.json.JSONArray: java.lang.String toString()>();

        $r5 = staticinvoke <winterwell.jtwitter.Twitter$User: java.util.List getUsers(java.lang.String)>($r9);

     label05:
        $r13 = r0.<winterwell.jtwitter.TwitterList: java.util.List users>;

     label06:
        interfaceinvoke $r13.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label07:
        $r7 = new java.lang.Long;

     label08:
        $r9 = virtualinvoke $r10.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("next_cursor");

        specialinvoke $r7.<java.lang.Long: void <init>(java.lang.String)>($r9);

        $l3 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label09:
        r0.<winterwell.jtwitter.TwitterList: long cursor> = $l3;

        goto label01;

     label10:
        $r14 := @caughtexception;

        $r15 = new winterwell.jtwitter.TwitterException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not parse user list");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<winterwell.jtwitter.TwitterException: void <init>(java.lang.String)>($r3);

        throw $r15;

     label11:
        $r5 = r0.<winterwell.jtwitter.TwitterList: java.util.List users>;

        $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (winterwell.jtwitter.Twitter$User) $r11;

        return $r4;

        catch org.json.JSONException from label02 to label03 with label10;
        catch org.json.JSONException from label04 to label05 with label10;
        catch org.json.JSONException from label06 to label07 with label10;
        catch org.json.JSONException from label08 to label09 with label10;
    }

    public java.lang.String getDescription()
    {
        winterwell.jtwitter.TwitterList r0;
        java.lang.String r1;

        r0 := @this: winterwell.jtwitter.TwitterList;

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init()>();

        r1 = r0.<winterwell.jtwitter.TwitterList: java.lang.String description>;

        return r1;
    }

    public java.lang.String getName()
    {
        winterwell.jtwitter.TwitterList r0;
        java.lang.String r1;

        r0 := @this: winterwell.jtwitter.TwitterList;

        r1 = r0.<winterwell.jtwitter.TwitterList: java.lang.String name>;

        return r1;
    }

    public java.util.List getStatuses() throws winterwell.jtwitter.TwitterException
    {
        java.lang.Throwable $r8;
        java.lang.Exception $r11;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r3;
        winterwell.jtwitter.Twitter$IHttpClient $r1, $r6;
        java.util.List $r7;
        winterwell.jtwitter.TwitterException $r10;
        java.lang.StringBuilder $r2, $r9;
        java.lang.String $r4;
        winterwell.jtwitter.Twitter$User $r5;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r9 = new java.lang.StringBuilder;

        $r2 = $r9;

     label01:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r3 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r4 = $r3.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

     label03:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label04:
        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r4 = $r5.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

     label05:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/lists/");

     label06:
        $r4 = r0.<winterwell.jtwitter.TwitterList: java.lang.String slug>;

     label07:
        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/statuses.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r6 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

     label09:
        $z0 = interfaceinvoke $r6.<winterwell.jtwitter.Twitter$IHttpClient: boolean canAuthenticate()>();

        $r4 = interfaceinvoke $r1.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r4, null, $z0);

        $r7 = staticinvoke <winterwell.jtwitter.Twitter$Status: java.util.List getStatuses(java.lang.String)>($r4);

     label10:
        return $r7;

     label11:
        $r8 := @caughtexception;

        $r10 = new winterwell.jtwitter.TwitterException;

        $r11 = (java.lang.Exception) $r8;

        specialinvoke $r10.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r11);

        throw $r10;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label11;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label11;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    public int getSubscriberCount()
    {
        int i0;
        winterwell.jtwitter.TwitterList r0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init()>();

        i0 = r0.<winterwell.jtwitter.TwitterList: int subscriberCount>;

        return i0;
    }

    public java.util.List getSubscribers()
    {
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r2;
        winterwell.jtwitter.Twitter$IHttpClient $r5;
        java.util.List $r6;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        winterwell.jtwitter.Twitter$User $r4;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r3 = $r2.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r3 = $r4.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = specialinvoke r0.<winterwell.jtwitter.TwitterList: java.lang.String idOrSlug()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/subscribers.json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        $r3 = interfaceinvoke $r5.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r3, null, 1);

        $r6 = staticinvoke <winterwell.jtwitter.Twitter$User: java.util.List getUsers(java.lang.String)>($r3);

        return $r6;
    }

    public boolean isPrivate()
    {
        winterwell.jtwitter.TwitterList r0;
        boolean z0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init()>();

        z0 = r0.<winterwell.jtwitter.TwitterList: boolean _private>;

        return z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Object[] $r7;
        winterwell.jtwitter.TwitterList r0;
        winterwell.jtwitter.Twitter $r4;
        winterwell.jtwitter.Twitter$IHttpClient $r10;
        java.util.Map $r9;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8;
        winterwell.jtwitter.Twitter$User $r2, $r6;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (winterwell.jtwitter.Twitter$User) $r1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter jtwit>;

        $r5 = $r4.<winterwell.jtwitter.Twitter: java.lang.String TWITTER_URL>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$User owner>;

        $r5 = $r6.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = specialinvoke r0.<winterwell.jtwitter.TwitterList: java.lang.String idOrSlug()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/members.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[4];

        $r7[0] = "id";

        $r8 = $r2.<winterwell.jtwitter.Twitter$User: java.lang.String screenName>;

        $r7[1] = $r8;

        $r7[2] = "_method";

        $r7[3] = "DELETE";

        $r9 = staticinvoke <winterwell.jtwitter.Twitter: java.util.Map asMap(java.lang.Object[])>($r7);

        $r10 = r0.<winterwell.jtwitter.TwitterList: winterwell.jtwitter.Twitter$IHttpClient http>;

        interfaceinvoke $r10.<winterwell.jtwitter.Twitter$IHttpClient: java.lang.String post(java.lang.String,java.util.Map,boolean)>($r5, $r9, 1);

        return 1;
    }

    public int size()
    {
        int i0;
        winterwell.jtwitter.TwitterList r0;

        r0 := @this: winterwell.jtwitter.TwitterList;

        specialinvoke r0.<winterwell.jtwitter.TwitterList: void init()>();

        i0 = r0.<winterwell.jtwitter.TwitterList: int memberCount>;

        return i0;
    }

    public java.lang.String toString()
    {
        winterwell.jtwitter.TwitterList r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: winterwell.jtwitter.TwitterList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = r0.<winterwell.jtwitter.TwitterList: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
