public final class com.trustlook.antivirus.utils.aq extends android.database.sqlite.SQLiteOpenHelper
{
    public static final android.net.Uri a;

    static void <clinit>()
    {
        android.net.Uri $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.trustlook.com/apkinfo");

        <com.trustlook.antivirus.utils.aq: android.net.Uri a> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.trustlook.antivirus.utils.aq r0;

        r0 := @this: com.trustlook.antivirus.utils.aq;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "trustlook.db", null, 8);

        return;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.trustlook.antivirus.utils.aq r0;

        r0 := @this: com.trustlook.antivirus.utils.aq;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS antivirus (_id INTEGER PRIMARY KEY AUTOINCREMENT, md5 CHAR(50) UNIQUE, package_name CHAR(100), display_name CHAR(100), apk_path CHAR(100), apk_size INT, apk_version CHAR(30), app_is_system INT, app_is_local_scanned INT, risk_score INT, virus_name CHAR(200), permissions TEXT, summary TEXT, app_is_trusted INT, cert_list TEXT, app_is_legit INT, last_update INT)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS INDEX_DISPLAY_NAME ON antivirus(display_name)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE INDEX IF NOT EXISTS INDEX_DISPLAY_SIZE ON antivirus(apk_size)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_backup_restore (_id INTEGER PRIMARY KEY AUTOINCREMENT, action_time LONG, action_type text, action_category text, action_total_completed LONG, action_total_incompleted LONG)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS app_folder (appid nvarchar(100), folder nvarchar(200));");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_webfilter_white_list (_id INTEGER PRIMARY KEY AUTOINCREMENT, domain text UNIQUE, userid text, webfiltercategory text,desc text,category INT, state INT)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_push_messages_executed (_id INTEGER PRIMARY KEY AUTOINCREMENT, message_id LONG, expire_time LONG)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_apk_info (_id INTEGER PRIMARY KEY AUTOINCREMENT, apk_path TEXT, display_name NVARCHAR(200),virus_name NVARCHAR(200),is_selected BOOLEAN,updated_date LONG,apk_size LONG,audit_state TEXT,audit_result INT,audit_summary TEXT,md5 TEXT,is_new BOOLEAN,session_id TEXT,submit_time LONG,upload_percent FLOAT)");

        return;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.trustlook.antivirus.utils.aq r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.trustlook.antivirus.utils.aq;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("old: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AV", $r3);

        if $i0 != 1 goto label1;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE antivirus ADD COLUMN app_is_trusted INT DEFAULT 0");

     label1:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_backup_restore (_id INTEGER PRIMARY KEY AUTOINCREMENT, action_time LONG, action_type text, action_category text, action_total_completed LONG, action_total_incompleted LONG)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_webfilter_white_list (_id INTEGER PRIMARY KEY AUTOINCREMENT, domain text UNIQUE, userid text, webfiltercategory text,desc text,category INT, state INT)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_push_messages_executed (_id INTEGER PRIMARY KEY AUTOINCREMENT, message_id LONG, expire_time LONG)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS table_apk_info (_id INTEGER PRIMARY KEY AUTOINCREMENT, apk_path TEXT, display_name NVARCHAR(200),virus_name NVARCHAR(200),is_selected BOOLEAN,updated_date LONG,apk_size LONG,audit_state TEXT,audit_result INT,audit_summary TEXT,md5 TEXT,is_new BOOLEAN,session_id TEXT,submit_time LONG,upload_percent FLOAT)");

        if $i0 >= 5 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AV", "upgrade table");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE antivirus ADD COLUMN cert_list TEXT");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE antivirus ADD COLUMN app_is_legit INT DEFAULT 999");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE antivirus ADD COLUMN last_update INT DEFAULT -1");

        <com.trustlook.antivirus.AntivirusApp: boolean d> = 1;

     label2:
        return;
    }
}
