final class com.greystripe.android.sdk.n extends android.webkit.WebViewClient implements android.webkit.UrlInterceptHandler, com.greystripe.android.sdk.z
{
    private java.util.regex.Pattern a;
    private android.webkit.PluginData b;
    private java.util.HashSet c;
    private com.greystripe.android.sdk.i d;

    void <init>(com.greystripe.android.sdk.i)
    {
        com.greystripe.android.sdk.n r0;
        com.greystripe.android.sdk.i $r1;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: com.greystripe.android.sdk.i;

        specialinvoke r0.<com.greystripe.android.sdk.n: void <init>(com.greystripe.android.sdk.i,byte)>($r1, 0);

        return;
    }

    private void <init>(com.greystripe.android.sdk.i, byte)
    {
        byte[] $r6;
        java.util.HashMap $r3;
        com.greystripe.android.sdk.BridgeLib $r4;
        java.util.HashSet $r5;
        byte $b0;
        java.io.ByteArrayInputStream $r2;
        android.webkit.PluginData $r7;
        com.greystripe.android.sdk.n r0;
        com.greystripe.android.sdk.i $r1;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: com.greystripe.android.sdk.i;

        $b0 := @parameter1: byte;

        r0.<com.greystripe.android.sdk.n: com.greystripe.android.sdk.i d> = $r1;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<com.greystripe.android.sdk.n: java.util.HashSet c> = $r5;

        $r4 = staticinvoke <com.greystripe.android.sdk.i: com.greystripe.android.sdk.BridgeLib a(com.greystripe.android.sdk.i)>($r1);

        virtualinvoke $r4.<com.greystripe.android.sdk.BridgeLib: void registerPropertyListener(com.greystripe.android.sdk.z)>(r0);

        virtualinvoke r0.<com.greystripe.android.sdk.n: void propertyChanged(java.lang.String)>("urlInterceptRegex");

        $r2 = new java.io.ByteArrayInputStream;

        $r6 = newarray (byte)[0];

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r7 = new android.webkit.PluginData;

        specialinvoke $r7.<android.webkit.PluginData: void <init>(java.io.InputStream,long,java.util.Map,int)>($r2, 0L, $r3, 200);

        r0.<com.greystripe.android.sdk.n: android.webkit.PluginData b> = $r7;

        return;
    }

    public final void clearWhitelist()
    {
        java.util.HashSet $r1;
        com.greystripe.android.sdk.n r0;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 = r0.<com.greystripe.android.sdk.n: java.util.HashSet c>;

        virtualinvoke $r1.<java.util.HashSet: void clear()>();

        return;
    }

    public final android.webkit.PluginData getPluginData(java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r4;
        com.greystripe.android.sdk.BridgeLib $r9;
        java.util.HashSet $r5;
        java.util.regex.Matcher $r7;
        android.webkit.PluginData r10;
        java.util.Map $r2;
        com.greystripe.android.sdk.l $r3;
        com.greystripe.android.sdk.n r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r6;
        com.greystripe.android.sdk.i $r8;
        boolean $z0;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r3.<com.greystripe.android.sdk.l: void a(java.lang.String,java.lang.Object[])>("getPluginData(%s)", $r4);

        $r5 = r0.<com.greystripe.android.sdk.n: java.util.HashSet c>;

        $z0 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r6 = r0.<com.greystripe.android.sdk.n: java.util.regex.Pattern a>;

        if $r6 == null goto label1;

        $r6 = r0.<com.greystripe.android.sdk.n: java.util.regex.Pattern a>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

     label1:
        $r3 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r3.<com.greystripe.android.sdk.l: void b(java.lang.String,java.lang.Object[])>("Passing through url: %s", $r4);

        return null;

     label2:
        $r3 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r3.<com.greystripe.android.sdk.l: void b(java.lang.String,java.lang.Object[])>("Intercepting url: %s", $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <com.greystripe.android.sdk.Util: java.lang.String a(java.lang.String)>($r1);

        $r4[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("onUrlIntercepted(\'%s\')", $r4);

        $r8 = r0.<com.greystripe.android.sdk.n: com.greystripe.android.sdk.i d>;

        $r9 = staticinvoke <com.greystripe.android.sdk.i: com.greystripe.android.sdk.BridgeLib a(com.greystripe.android.sdk.i)>($r8);

        virtualinvoke $r9.<com.greystripe.android.sdk.BridgeLib: void execJavascript(int,java.lang.String)>(0, $r1);

        r10 = r0.<com.greystripe.android.sdk.n: android.webkit.PluginData b>;

        return r10;
    }

    public final void onPageFinished(android.webkit.WebView, java.lang.String)
    {
        java.lang.Object[] $r4;
        com.greystripe.android.sdk.l $r3;
        com.greystripe.android.sdk.n r0;
        com.greystripe.android.sdk.BridgeLib $r6;
        java.lang.String $r2;
        android.webkit.WebView $r1;
        com.greystripe.android.sdk.i $r5;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: android.webkit.WebView;

        $r2 := @parameter1: java.lang.String;

        $r3 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = $r2;

        virtualinvoke $r3.<com.greystripe.android.sdk.l: void b(java.lang.String,java.lang.Object[])>("onPageFinished(%s, %s)", $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <com.greystripe.android.sdk.Util: java.lang.String a(java.lang.String)>($r2);

        $r4[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("onWebViewFinished(\'%s\')", $r4);

        $r5 = r0.<com.greystripe.android.sdk.n: com.greystripe.android.sdk.i d>;

        $r6 = staticinvoke <com.greystripe.android.sdk.i: com.greystripe.android.sdk.BridgeLib a(com.greystripe.android.sdk.i)>($r5);

        virtualinvoke $r6.<com.greystripe.android.sdk.BridgeLib: void execJavascript(int,java.lang.String)>(0, $r2);

        return;
    }

    public final void propertyChanged(java.lang.String)
    {
        java.lang.Throwable $r7;
        java.lang.Object[] $r8;
        com.greystripe.android.sdk.BridgeLib $r5;
        com.greystripe.android.sdk.l $r2;
        com.greystripe.android.sdk.n r0;
        java.lang.String $r1, $r3;
        java.util.regex.Pattern $r6;
        com.greystripe.android.sdk.i $r4;
        boolean $z0;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: java.lang.String;

        $r3 = "urlInterceptRegex";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r4 = r0.<com.greystripe.android.sdk.n: com.greystripe.android.sdk.i d>;

        $r5 = staticinvoke <com.greystripe.android.sdk.i: com.greystripe.android.sdk.BridgeLib a(com.greystripe.android.sdk.i)>($r4);

        $r1 = virtualinvoke $r5.<com.greystripe.android.sdk.BridgeLib: java.lang.String getProperty(java.lang.String)>("urlInterceptRegex");

        if $r1 != null goto label1;

        r0.<com.greystripe.android.sdk.n: java.util.regex.Pattern a> = null;

        return;

     label1:
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r1);

     label2:
        r0.<com.greystripe.android.sdk.n: java.util.regex.Pattern a> = $r6;

        return;

     label3:
        $r7 := @caughtexception;

        $r2 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "urlInterceptRegex";

        $r8[1] = $r1;

        virtualinvoke $r2.<com.greystripe.android.sdk.l: void a(java.lang.Throwable,java.lang.String,java.lang.Object[])>($r7, "Invalid %s value: %s", $r8);

     label4:
        return;

        catch java.util.regex.PatternSyntaxException from label1 to label2 with label3;
    }

    public final android.webkit.CacheManager$CacheResult service(java.lang.String, java.util.Map)
    {
        java.lang.Object[] $r4;
        java.util.Map $r2;
        com.greystripe.android.sdk.l $r3;
        com.greystripe.android.sdk.n r0;
        java.lang.String $r1;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 = <com.greystripe.android.sdk.i: com.greystripe.android.sdk.l log>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r3.<com.greystripe.android.sdk.l: void b(java.lang.String,java.lang.Object[])>("service(%s)", $r4);

        return null;
    }

    public final void whitelistUrl(java.lang.String)
    {
        java.util.HashSet $r2;
        com.greystripe.android.sdk.n r0;
        java.lang.String $r1;

        r0 := @this: com.greystripe.android.sdk.n;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.greystripe.android.sdk.n: java.util.HashSet c>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

        return;
    }
}
