public class org.ormma.controller.OrmmaAssetController extends org.ormma.controller.OrmmaController
{
    private static final char[] HEX_CHARS;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.ormma.controller.OrmmaAssetController: char[] HEX_CHARS> = $r0;

        return;
    }

    public void <init>(org.ormma.view.OrmmaView, android.content.Context)
    {
        android.content.Context $r2;
        org.ormma.view.OrmmaView $r1;
        org.ormma.controller.OrmmaAssetController r0;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: org.ormma.view.OrmmaView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<org.ormma.controller.OrmmaController: void <init>(org.ormma.view.OrmmaView,android.content.Context)>($r1, $r2);

        return;
    }

    private java.lang.String asHex(java.security.MessageDigest)
    {
        byte[] $r3;
        java.security.MessageDigest $r1;
        char $c5;
        org.ormma.controller.OrmmaAssetController r0;
        byte $b3;
        int i0, $i1, i2, $i4;
        char[] r2, $r4;
        java.lang.String $r5;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.security.MessageDigest;

        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $i1 = lengthof $r3;

        $i1 = $i1 * 2;

        r2 = newarray (char)[$i1];

        $i1 = 0;

        i2 = 0;

     label1:
        i0 = lengthof $r3;

        if $i1 >= i0 goto label2;

        i0 = i2 + 1;

        $r4 = <org.ormma.controller.OrmmaAssetController: char[] HEX_CHARS>;

        $b3 = $r3[$i1];

        $i4 = (int) $b3;

        $i4 = $i4 >>> 4;

        $i4 = $i4 & 15;

        $c5 = $r4[$i4];

        r2[i2] = $c5;

        i2 = i0 + 1;

        $r4 = <org.ormma.controller.OrmmaAssetController: char[] HEX_CHARS>;

        $b3 = $r3[$i1];

        $b3 = $b3 & 15;

        $i4 = (int) $b3;

        $c5 = $r4[$i4];

        r2[i0] = $c5;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>(r2);

        return $r5;
    }

    public static boolean deleteDirectory(java.io.File)
    {
        int i0, $i1;
        java.io.File[] $r1;
        java.io.File $r0, $r2;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if i0 >= $i1 goto label4;

        $r2 = $r1[i0];

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r2 = $r1[i0];

        staticinvoke <org.ormma.controller.OrmmaAssetController: boolean deleteDirectory(java.io.File)>($r2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r2 = $r1[i0];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        goto label2;

     label4:
        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        return $z0;
    }

    public static boolean deleteDirectory(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = staticinvoke <org.ormma.controller.OrmmaAssetController: boolean deleteDirectory(java.io.File)>($r1);

        return $z0;

     label1:
        return 0;
    }

    private java.io.File getAssetDir(java.lang.String)
    {
        android.content.Context $r3;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r6;
        java.io.File r2, $r4;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.ormma.controller.OrmmaAssetController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.io.File getFilesDir()>();

        r2 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        return r2;
    }

    private java.lang.String getAssetName(java.lang.String)
    {
        org.ormma.controller.OrmmaAssetController r0;
        int $i1;
        char $c0;
        java.lang.String $r1;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $c0 = <java.io.File: char separatorChar>;

        $i1 = (int) $c0;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($i1);

        if $i1 < 0 goto label1;

        $c0 = <java.io.File: char separatorChar>;

        $i1 = (int) $c0;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($i1);

        $i1 = $i1 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        return $r1;
    }

    private java.lang.String getAssetPath(java.lang.String)
    {
        org.ormma.controller.OrmmaAssetController r0;
        int $i1;
        char $c0;
        java.lang.String $r1;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $c0 = <java.io.File: char separatorChar>;

        $i1 = (int) $c0;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($i1);

        if $i1 < 0 goto label1;

        $c0 = <java.io.File: char separatorChar>;

        $i1 = (int) $c0;

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>($i1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;

     label1:
        return "/";
    }

    private java.lang.String getFilesDir()
    {
        android.content.Context $r1;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.String $r3;
        java.io.File $r2;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 = r0.<org.ormma.controller.OrmmaAssetController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        return $r3;
    }

    private org.apache.http.HttpEntity getHttpEntity(java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient r3;
        org.ormma.controller.OrmmaAssetController r0;
        org.apache.http.client.methods.HttpGet r4;
        org.apache.http.HttpEntity $r6;
        org.apache.http.HttpResponse $r5;
        java.lang.String $r1;
        java.lang.Exception r2;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        r3 = new org.apache.http.impl.client.DefaultHttpClient;

     label1:
        specialinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

     label2:
        r4 = new org.apache.http.client.methods.HttpGet;

     label3:
        specialinvoke r4.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r3.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r4);

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label4:
        return $r6;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private java.lang.String moveToAdDirectory(java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.File r4, r5, $r8;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2, $r3, $r7;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r1);

        r4 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ad");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r4.<java.io.File: boolean mkdir()>();

        r4 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ad");

        $r1 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r4.<java.io.File: boolean mkdir()>();

        $r8 = new java.io.File;

        $r1 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, $r1);

        virtualinvoke r5.<java.io.File: boolean renameTo(java.io.File)>($r8);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public void addAsset(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9;
        org.ormma.view.OrmmaView $r7;
        org.apache.http.HttpEntity $r3;
        java.lang.Exception r8, r10, $r11, $r12, $r13;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2;
        java.io.InputStream r4, $r5;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: org.apache.http.HttpEntity getHttpEntity(java.lang.String)>($r2);

        r4 = null;

     label01:
        $r5 = interfaceinvoke $r3.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label02:
        r4 = $r5;

     label03:
        virtualinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String writeToDisk(java.io.InputStream,java.lang.String,boolean)>($r5, $r1, 0);

     label04:
        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OrmmaAdController.addedAsset(\'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' )");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<org.ormma.controller.OrmmaAssetController: org.ormma.view.OrmmaView mOrmmaView>;

        virtualinvoke $r7.<org.ormma.view.OrmmaView: void injectJavaScript(java.lang.String)>($r1);

     label06:
        if $r5 == null goto label08;

     label07:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label08:
        interfaceinvoke $r3.<org.apache.http.HttpEntity: void consumeContent()>();

     label09:
        return;

     label10:
        r8 := @caughtexception;

     label11:
        virtualinvoke r8.<java.lang.Exception: void printStackTrace()>();

     label12:
        if r4 == null goto label08;

     label13:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label14:
        goto label08;

     label15:
        $r9 := @caughtexception;

        if r4 == null goto label17;

     label16:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label17:
        throw $r9;

     label18:
        r10 := @caughtexception;

        virtualinvoke r10.<java.lang.Exception: void printStackTrace()>();

        return;

     label19:
        $r11 := @caughtexception;

        goto label08;

     label20:
        $r12 := @caughtexception;

        goto label14;

     label21:
        $r13 := @caughtexception;

        goto label17;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Exception from label16 to label17 with label21;
    }

    public int cacheRemaining()
    {
        android.os.StatFs r1;
        android.content.Context $r2;
        org.ormma.controller.OrmmaAssetController r0;
        int i0, $i1;
        java.lang.String $r4;
        java.io.File $r3;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r2 = r0.<org.ormma.controller.OrmmaAssetController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.io.File getFilesDir()>();

        r1 = new android.os.StatFs;

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getPath()>();

        specialinvoke r1.<android.os.StatFs: void <init>(java.lang.String)>($r4);

        i0 = virtualinvoke r1.<android.os.StatFs: int getFreeBlocks()>();

        $i1 = virtualinvoke r1.<android.os.StatFs: int getBlockSize()>();

        i0 = i0 * $i1;

        return i0;
    }

    public java.lang.String copyTextFromJarIntoAssetDir(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r6;
        byte[] $r5;
        java.lang.Exception r3, $r7, $r8, $r9;
        org.ormma.controller.OrmmaAssetController r0;
        java.io.ByteArrayInputStream r4, $r10;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r4 = null;

     label01:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("ormma.js");

     label02:
        if $i0 <= -1 goto label11;

     label03:
        $r10 = new java.io.ByteArrayInputStream;

     label04:
        $r2 = "(function() {\n    var ormma = window.ormma = {};\n    \n    // CONSTANTS ///////////////////////////////////////////////////////////////\n    \n    var STATES = ormma.STATES = {\n        UNKNOWN     :\'unknown\',\n        DEFAULT     :\'default\',\n        RESIZED     :\'resized\',\n        EXPANDED    :\'expanded\',\n        HIDDEN      :\'hidden\'\n    };\n    \n    var EVENTS = ormma.EVENTS = {\n        ASSETREADY          :\'assetReady\',\n        ASSETREMOVED        :\'assetRemoved\',\n        ASSETRETIRED        :\'assetRetired\',\n        ERROR               :\'error\',\n        INFO                :\'info\',\n        HEADINGCHANGE       :\'headingChange\',\n        KEYBOARDCHANGE      :\'keyboardChange\',\n        LOCATIONCHANGE      :\'locationChange\',\n        NETWORKCHANGE       :\'networkChange\',\n        ORIENTATIONCHANGE   :\'orientationChange\',\n        RESPONSE            :\'response\',\n        SCREENCHANGE        :\'screenChange\',\n        SHAKE               :\'shake\',\n        SIZECHANGE          :\'sizeChange\',\n        STATECHANGE         :\'stateChange\',\n        TILTCHANGE          :\'tiltChange\',\n        VIEWABLECHANGE      :\'viewableChange\'\n    };\n    \n    var CONTROLS = ormma.CONTROLS = {\n        BACK    :\'back\',\n        FORWARD :\'forward\',\n        REFRESH :\'refresh\',\n        ALL     :\'all\'\n    };\n    \n    var FEATURES = ormma.FEATURES = {\n        LEVEL1      :\'level-1\',\n        LEVEL2      :\'level-2\',\n        LEVEL3      :\'level-3\',\n        SCREEN      :\'screen\',\n        ORIENTATION :\'orientation\',\n        HEADING     :\'heading\',\n        LOCATION    :\'location\',\n        SHAKE       :\'shake\',\n        TILT        :\'tilt\',\n        NETWORK     :\'network\',\n        SMS         :\'sms\',\n        PHONE       :\'phone\',\n        EMAIL       :\'email\',\n        CALENDAR    :\'calendar\',\n        CAMERA      :\'camera\'\n    };\n    \n    var NETWORK = ormma.NETWORK = {\n        OFFLINE :\'offline\',\n        WIFI    :\'wifi\',\n        CELL    :\'cell\',\n        UNKNOWN :\'unknown\'\n    };\n    \n    // PRIVATE PROPERTIES (sdk controlled) //////////////////////////////////////////////////////\n    \n    var state = STATES.UNKNOWN;\n    \n    var size = {\n        width:0,\n        height:0\n    };\n    \n    var defaultPosition = {\n        x:0,\n        y:0,\n        width:0,\n        height:0\n    };\n    \n    var maxSize = {\n        width:0,\n        height:0\n    };\n    \n    var expandProperties = {\n        useBackground:false,\n        backgroundColor:0xffffff,\n        backgroundOpacity:1.0,\n        isModal:false\n    };\n    \n    var supports = {\n        \'level-1\':true,\n        \'level-2\':true,\n        \'level-3\':true,\n        \'screen\':true,\n        \'orientation\':true,\n        \'heading\':true,\n        \'location\':true,\n        \'shake\':true,\n        \'tilt\':true,\n        \'network\':true,\n        \'sms\':true,\n        \'phone\':true,\n        \'email\':true,\n        \'calendar\':true,\n        \'camera\':true\n    };\n    \n    var heading = -1;\n    \n    var keyboardState = false;\n    \n    var location = null;\n    \n    var network = NETWORK.UNKNOWN;\n    \n    var orientation = -1;\n    \n    var screenSize = null;\n    \n    var shakeProperties = null;\n    \n    var tilt = null;\n    \n    var assets = {};\n    \n    var cacheRemaining = -1;\n    \n    var viewable = false;\n    \n    // PRIVATE PROPERTIES (internal) //////////////////////////////////////////////////////\n    \n    var intervalID = null;\n    var readyTimeout = 10000;\n    var readyDuration = 0;\n    \n    var dimensionValidators = {\n        x:function(value) { return !isNaN(value); },\n        y:function(value) { return !isNaN(value); },\n        width:function(value) { return !isNaN(value) && value >= 0; },\n        height:function(value) { return !isNaN(value) && value >= 0; }\n    };\n    \n    var sizeValidators = {\n        width:function(value) { return !isNaN(value) && value >= 0 && value <= maxSize.width; },\n        height:function(value) { return !isNaN(value) && value >= 0 && value <= maxSize.height; }\n    };\n   \n    var expandPropertyValidators = {\n        useBackground:function(value) { return (value === true || value === false); },\n        backgroundColor:function(value) { return (typeof value == \'string\' && value.substr(0,1) == \'#\' && !isNaN(parseInt(value.substr(1), 16))); },\n        backgroundOpacity:function(value) { return !isNaN(value) && value >= 0 && value <= 1; },\n        isModal:function(value) { return (value === true || value === false); }\n    };\n    \n    var shakePropertyValidators = {\n        intensity:function(value) { return !isNaN(value); },\n        interval:function(value) { return !isNaN(value); }\n    };\n    \n    var changeHandlers = {\n        state:function(val) {\n            if (state == STATES.UNKNOWN) {\n                intervalID = window.setInterval(window.ormma.signalReady, 20);\n                broadcastEvent(EVENTS.INFO, \'controller initialized, attempting callback\');\n            }\n            broadcastEvent(EVENTS.INFO, \'setting state to \' + stringify(val));\n            state = val;\n            broadcastEvent(EVENTS.STATECHANGE, state);\n        },\n        size:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting size to \' + stringify(val));\n            size = val;\n            broadcastEvent(EVENTS.SIZECHANGE, size.width, size.height);\n        },\n        defaultPosition:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting default position to \' + stringify(val));\n            defaultPosition = val;\n        },\n        maxSize:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting maxSize to \' + stringify(val));\n            maxSize = val;\n        },\n        expandProperties:function(val) {\n            broadcastEvent(EVENTS.INFO, \'merging expandProperties with \' + stringify(val));\n            for (var i in val) {\n                expandProperties[i] = val[i];\n            }\n        },\n        supports:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting supports to \' + stringify(val));\n            supports = {};\n            for (var key in FEATURES) {\n                supports[FEATURES[key]] = contains(FEATURES[key], val);\n            }\n        },\n        heading:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting heading to \' + stringify(val));\n            heading = val;\n            broadcastEvent(EVENTS.HEADINGCHANGE, heading);\n        },\n        keyboardState:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting keyboardState to \' + stringify(val));\n            keyboardState = val;\n            broadcastEvent(EVENTS.KEYBOARDCHANGE, keyboardState);\n        },\n        location:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting location to \' + stringify(val));\n            location = val;\n            broadcastEvent(EVENTS.LOCATIONCHANGE, location.lat, location.lon, location.acc);\n        },\n        network:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting network to \' + stringify(val));\n            network = val;\n            broadcastEvent(EVENTS.NETWORKCHANGE, (network != NETWORK.OFFLINE && network != NETWORK.UNKNOWN), network);\n        },\n        orientation:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting orientation to \' + stringify(val));\n            orientation = val;\n            broadcastEvent(EVENTS.ORIENTATIONCHANGE, orientation);\n        },\n        screenSize:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting screenSize to \' + stringify(val));\n            screenSize = val;\n            broadcastEvent(EVENTS.SCREENCHANGE, screenSize.width, screenSize.height);\n        },\n        shakeProperties:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting shakeProperties to \' + stringify(val));\n            shakeProperties = val;\n        },\n        tilt:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting tilt to \' + stringify(val));\n            tilt = val;\n            broadcastEvent(EVENTS.TILTCHANGE, tilt.x, tilt.y, tilt.z);\n        },\n        cacheRemaining:function(val) {\n            broadcastEvent(EVENTS.INFO, \'setting cacheRemaining to \' + stringify(val));\n            cacheRemaining = val;\n        },\n        viewable:function(val) {\n            broadcastEvent(EVENTS.VIEWABLECHANGE, \'setting viewable to \' + stringify(val));\n            viewable = val;\n        }\n    };\n    \n    var listeners = {};\n    \n    var EventListeners = function(event) {\n        this.event = event;\n        this.count = 0;\n        var listeners = {};\n        \n        this.add = function(func) {\n            var id = String(func);\n            if (!listeners[id]) {\n                listeners[id] = func;\n                this.count++;\n                if (this.count == 1) ormmaview.activate(event);\n            }\n        };\n        this.remove = function(func) {\n            var id = String(func);\n            if (listeners[id]) {\n                listeners[id] = null;\n                delete listeners[id];\n                this.count--;\n                if (this.count == 0) ormmaview.deactivate(event);\n                return true;\n            } else {\n                return false;\n            }\n        };\n        this.removeAll = function() { for (var id in listeners) this.remove(listeners[id]); };\n        this.broadcast = function(args) { for (var id in listeners) listeners[id].apply({}, args); };\n        this.toString = function() {\n            var out = [event,\':\'];\n            for (var id in listeners) out.push(\'|\',id,\'|\');\n            return out.join(\'\');\n        };\n    };\n    \n    // PRIVATE METHODS ////////////////////////////////////////////////////////////\n    \n    ormmaview.addEventListener(\'change\', function(properties) {\n        for (var property in properties) {\n            var handler = changeHandlers[property];\n            handler(properties[property]);\n        }\n    });\n    \n    ormmaview.addEventListener(\'shake\', function() {\n        broadcastEvent(EVENTS.SHAKE);\n    });\n    \n    ormmaview.addEventListener(\'error\', function(message, action) {\n        broadcastEvent(EVENTS.ERROR, message, action);\n    });\n    \n    ormmaview.addEventListener(\'response\', function(uri, response) {\n        broadcastEvent(EVENTS.RESPONSE, uri, response);\n    });\n    \n    ormmaview.addEventListener(\'assetReady\', function(alias, URL) {\n        assets[alias] = URL;\n        broadcastEvent(EVENTS.ASSETREADY, alias);\n    });\n    \n    ormmaview.addEventListener(\'assetRemoved\', function(alias) {\n        assets[alias] = null;\n        delete assets[alias];\n        broadcastEvent(EVENTS.ASSETREMOVED, alias);\n    });\n    \n    ormmaview.addEventListener(\'assetRetired\', function(alias) {\n        assets[alias] = null;\n        delete assets[alias];\n        broadcastEvent(EVENTS.ASSETRETIRED, alias);\n    });\n    \n    var clone = function(obj) {\n        var f = function() {};\n        f.prototype = obj;\n        return new f();\n    };\n    \n    var stringify = function(obj) {\n        if (typeof obj == \'object\') {\n            if (obj.push) {\n                var out = [];\n                for (var p in obj) {\n                    out.push(obj[p]);\n                }\n                return \'[\' + out.join(\',\') + \']\';\n            } else {\n                var out = [];\n                for (var p in obj) {\n                    out.push(\'\\\'\'+p+\'\\\':\'+obj[p]);\n                }\n                return \'{\' + out.join(\',\') + \'}\';\n            }\n        } else {\n            return String(obj);\n        }\n    };\n    \n    var valid = function(obj, validators, action, full) {\n        if (full) {\n            if (obj === undefined) {\n                broadcastEvent(EVENTS.ERROR, \'Required object missing.\', action);\n                return false;\n            } else {\n                for (var i in validators) {\n                    if (obj[i] === undefined) {\n                        broadcastEvent(EVENTS.ERROR, \'Object missing required property \' + i, action);\n                        return false;\n                    }\n                }\n            }\n        }\n        for (var i in obj) {\n            if (!validators[i]) {\n                broadcastEvent(EVENTS.ERROR, \'Invalid property specified - \' + i + \'.\', action);\n                return false;\n            } else if (!validators[i](obj[i])) {\n                broadcastEvent(EVENTS.ERROR, \'Value of property \' + i + \'<\' + obj[i] + \'>\' +\' is not valid type.\', action);\n                return false;\n            }\n        }\n        return true;\n    };\n    \n    var contains = function(value, array) {\n        for (var i in array) if (array[i] == value) return true;\n        return false;\n    };\n    \n    var broadcastEvent = function() {\n        var args = new Array(arguments.length);\n        for (var i = 0; i < arguments.length; i++) args[i] = arguments[i];\n        var event = args.shift();\n        try{\n        if (listeners[event]) listeners[event].broadcast(args);\n        }\n        catch (e) {}\n    }\n    \n    // LEVEL 1 ////////////////////////////////////////////////////////////////////\n    \n    \n    ormma.signalReady = function() {\n    //        ormmaview.logHTML();\n        if (typeof ORMMAReady == \'function\') {\n            window.clearInterval(intervalID);\n            ORMMAReady();\n    //        ormmaview.logHTML();\n            broadcastEvent(EVENTS.INFO, \'callback invoked\');\n        } else {\n            readyDuration += 20;\n            if (readyDuration >= readyTimeout) {\n                window.clearInterval(intervalID);\n                broadcastEvent(EVENTS.ERROR, \'Callback not found (timeout of \' + readyTimeout + \'ms occurred)!\');\n            }\n        }\n    };\n    \n    ormma.addEventListener = function(event, listener) {\n        if (!event || !listener) {\n            broadcastEvent(EVENTS.ERROR, \'Both event and listener are required.\', \'addEventListener\');\n        } else if (!contains(event, EVENTS)) {\nbroadcastEvent(EVENTS.ERROR, \'Unknown event: \' + event, \'addEventListener\');\n        } else {\n            if (!listeners[event]) listeners[event] = new EventListeners(event);\n            listeners[event].add(listener);\n        }\n    };\n    \n    ormma.close = function() {\n        ormmaview.close();\n    };\n    \n    ormma.expand = function(dimensions, URL) {\n   // ormmaview.logHTML();\n        broadcastEvent(EVENTS.INFO, \'expanding to \' + stringify(dimensions));\n        if (valid(dimensions, dimensionValidators, \'expand\', true)) {\n            ormmaview.expand(dimensions, URL);\n        }\n    };\n    \n    ormma.getDefaultPosition = function() {\n        return clone(defaultPosition);\n    };\n    \n    ormma.getExpandProperties = function() {\n        return clone(expandProperties);\n    };\n    \n    ormma.getMaxSize = function() {\n        return clone(maxSize);\n    };\n    \n    // ormma.getResizeProperties = function() {};\n    \n    ormma.getSize = function() {\n        return clone(size);\n    };\n    \n    ormma.getState = function() {\n        return state;\n    };\n    \n    ormma.hide = function() {\n        if (state == STATES.HIDDEN) {\n            broadcastEvent(EVENTS.ERROR, \'Ad is currently hidden.\', \'hide\');\n        } else {\n            ormmaview.hide();\n        }\n    };\n    \n    ormma.open = function(URL, controls) {\n        if (!URL) {\n            broadcastEvent(EVENTS.ERROR, \'URL is required.\', \'open\');\n        } else {\n            ormmaview.open(URL, controls);\n        }\n    };\n    \n    ormma.removeEventListener = function(event, listener) {\n        if (!event) {\n            broadcastEvent(EVENTS.ERROR, \'Must specify an event.\', \'removeEventListener\');\n        } else {\n            if (listener && !listeners[event].remove(listener)) {\n                broadcastEvent(EVENTS.ERROR, \'Listener not currently registered for event\', \'removeEventListener\');\n                return;  \n            } else {\n                listeners[event].removeAll();\n            }\n            if (listeners[event].count == 0) {\n                listeners[event] = null;\n                delete listeners[event];\n            }\n        }\n    };\n    \n    ormma.resize = function(width, height) {\n        if (width == null || height == null || isNaN(width) || isNaN(height) || width < 0 || height < 0) {\n            broadcastEvent(EVENTS.ERROR, \'Requested size must be numeric values between 0 and maxSize.\', \'resize\');\n        } else if (width > maxSize.width || height > maxSize.height) {\n            broadcastEvent(EVENTS.ERROR, \'Request (\' + width + \' x \' + height + \') exceeds maximum allowable size of (\' + maxSize.width +  \' x \' + maxSize.height + \')\', \'resize\');\n        } else if (width == size.width && height == size.height) {\n            broadcastEvent(EVENTS.ERROR, \'Requested size equals current size.\', \'resize\');\n        } else {\n            ormmaview.resize(width, height);\n        }\n    };\n    \n    ormma.setExpandProperties = function(properties) {\n        if (valid(properties, expandPropertyValidators, \'setExpandProperties\')) {\n            ormmaview.setExpandProperties(properties);\n        }\n    };\n    \n    // ormma.setResizeProperties = function(properties) {};\n    \n    ormma.show = function() {\n        if (state != STATES.HIDDEN) {\n            broadcastEvent(EVENTS.ERROR, \'Ad is currently visible.\', \'show\');\n        } else {\n            ormmaview.show();\n        }\n    };\n    \n    // LEVEL 2 ////////////////////////////////////////////////////////////////////\n    \n    ormma.createEvent = function(date, title, body) {\n        if (!supports[FEATURES.CALENDAR]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'createEvent\');\n        } else if (!date || typeof date != \'object\' || !date.getDate) {\n            broadcastEvent(EVENTS.ERROR, \'Valid date required.\', \'createEvent\');\n        } else if (!title || typeof title != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'Valid title required.\', \'createEvent\');\n        } else {\n            ormmaview.createEvent(date, title, body);\n        }\n    };\n    \n    ormma.getHeading = function() {\n        if (!supports[FEATURES.HEADING]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getHeading\');\n        }\n        return heading;\n    };\n    \n    ormma.getKeyboardState = function() {\n        if (!supports[FEATURES.LEVEL2]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getKeyboardState\');\n        }\n        return keyboardState;\n    }\n    \n    ormma.getLocation = function() {\n        if (!supports[FEATURES.LOCATION]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getLocation\');\n        }\n        return (null == location)?null:clone(location);\n    };\n    \n    ormma.getNetwork = function() {\n        if (!supports[FEATURES.NETWORK]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getNetwork\');\n        }\n        return network;\n    };\n    \n    ormma.getOrientation = function() {\n        if (!supports[FEATURES.ORIENTATION]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getOrientation\');\n        }\n        return orientation;\n    };\n    \n    ormma.getScreenSize = function() {\n        if (!supports[FEATURES.SCREEN]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getScreenSize\');\n        } else {\n            return (null == screenSize)?null:clone(screenSize);\n        }\n    };\n    \n    ormma.getShakeProperties = function() {\n        if (!supports[FEATURES.SHAKE]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getShakeProperties\');\n        } else {\n            return (null == shakeProperties)?null:clone(shakeProperties);\n        }\n    };\n    \n    ormma.getTilt = function() {\n        if (!supports[FEATURES.TILT]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getTilt\');\n        } else {\n            return (null == tilt)?null:clone(tilt);\n        }\n    };\n    \n    ormma.makeCall = function(number) {\n        if (!supports[FEATURES.PHONE]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'makeCall\');\n        } else if (!number || typeof number != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'Request must provide a number to call.\', \'makeCall\');\n        } else {\n            ormmaview.makeCall(number);\n        }\n    };\n    \n    ormma.sendMail = function(recipient, subject, body) {\n        if (!supports[FEATURES.EMAIL]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'sendMail\');\n        } else if (!recipient || typeof recipient != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'Request must specify a recipient.\', \'sendMail\');\n        } else {\n            ormmaview.sendMail(recipient, subject, body);\n        }\n    };\n    \n    ormma.sendSMS = function(recipient, body) {\n        if (!supports[FEATURES.SMS]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'sendSMS\');\n        } else if (!recipient || typeof recipient != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'Request must specify a recipient.\', \'sendSMS\');\n        } else {\n            ormmaview.sendSMS(recipient, body);\n        }\n    };\n    \n    ormma.setShakeProperties = function(properties) {\n        if (!supports[FEATURES.SHAKE]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'setShakeProperties\');\n        } else if (valid(properties, shakePropertyValidators, \'setShakeProperties\')) {\n            ormmaview.setShakeProperties(properties);\n        }\n    };\n    \n//    ormma.storePicture = function(URL) {};\n    \n    ormma.supports = function(feature) {\n        if (supports[feature]) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    \n    // LEVEL 3 ////////////////////////////////////////////////////////////////////\n    \n    ormma.addAsset = function(URL, alias) {\n        if (!URL || !alias || typeof URL != \'string\' || typeof alias != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'URL and alias are required.\', \'addAsset\');\n        } else if (supports[FEATURES.LEVEL3]) {\n            ormmaview.addAsset(URL, alias);\n        } else if (URL.indexOf(\'ormma://\') == 0) {\n            broadcastEvent(EVENTS.ERROR, \'Native device assets not supported by this client.\', \'addAsset\');\n        } else {\n            assets[alias] = URL;\n            broadcastEvent(EVENTS.ASSETREADY, alias);\n        }\n    };\n    \n    ormma.addAssets = function(assets) {\n        for (var alias in assets) {\n            ormma.addAsset(assets[alias], alias);\n        }\n    };\n    \n    ormma.getAssetURL = function(alias) {\n        if (!assets[alias]) {\n            broadcastEvent(EVENTS.ERROR, \'Alias unknown.\', \'getAssetURL\');\n        }\n        return assets[alias];\n    };\n    \n    ormma.getCacheRemaining = function() {\n        if (!supports[FEATURES.LEVEL3]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'getCacheRemaining\');\n        }\n        return cacheRemaining;\n    };\n    \n    ormma.request = function(uri, display) {\n        if (!supports[FEATURES.LEVEL3]) {\n            broadcastEvent(EVENTS.ERROR, \'Method not supported by this client.\', \'request\');\n        } else if (!uri || typeof uri != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'URI is required.\', \'request\');\n        } else {\n            ormmaview.request(uri, display);\n        }\n    };\n    \n    ormma.removeAllAssets = function() {\n        for (var alias in assets) {\n            ormma.removeAsset(alias);\n        }\n    };\n    \n    ormma.removeAsset = function(alias) {\n        if (!alias || typeof alias != \'string\') {\n            broadcastEvent(EVENTS.ERROR, \'Alias is required.\', \'removeAsset\');\n        } else if (!assets[alias]) {\n            broadcastEvent(EVENTS.ERROR, \'Alias unknown.\', \'removeAsset\');\n        } else if (supports[FEATURES.LEVEL3]) {\n            ormmaview.removeAsset(alias);\n        } else {\n            assets[alias] = null;\n            delete assets[alias];\n            broadcastEvent(EVENTS.ASSETREMOVED, alias);\n        }\n    };\n    \n ormma.showAlert = function( message ) {\n      ormmaview.showAlert( message );\n   };    \n   \n    ormma.logHTML = function(){\n ormmaview.logHTML();\n \n    };\n ormma.getViewable = function() { \nreturn viewable;\n};})();";

     label05:
        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

     label06:
        r4 = $r10;

     label07:
        $r1 = virtualinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String writeToDisk(java.io.InputStream,java.lang.String,boolean)>(r4, $r1, 0);

     label08:
        if r4 == null goto label28;

     label09:
        virtualinvoke r4.<java.io.ByteArrayInputStream: void close()>();

     label10:
        return $r1;

     label11:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("ormma_bridge.js");

     label12:
        if $i0 <= -1 goto label07;

     label13:
        $r10 = new java.io.ByteArrayInputStream;

     label14:
        $r2 = "\n(function() {\n\n   var ormmaview = window.ormmaview = {};\n\n \n \n   /****************************************************/\n   /********** PROPERTIES OF THE ORMMA BRIDGE **********/\n   /****************************************************/\n \n   /** Expand Properties */\n   var expandProperties = {\n        useBackground:false,\n        backgroundColor:0xffffff,\n        backgroundOpacity:1.0,\n        isModal:false\n    };\n \n \n   /** The set of listeners for ORMMA Native Bridge Events */\n   var listeners = { };\n \n   /** Holds the current dimension values */\n   dimensions : {};\n        \n   /** A Queue of Calls to the Native SDK that still need execution */\n   var nativeCallQueue = [ ];\n \n   /** Identifies if a native call is currently in progress */\n   var nativeCallInFlight = false;\n \n   /** timer for identifying iframes */\n   var timer;\n   var totalTime;\n\n \n \n   /**********************************************/\n   /************* JAVA ENTRY POINTS **************/\n   /**********************************************/\n \n   /**\n    * Called by the JAVA SDK when an asset has been fully cached.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetReadyEvent = function( alias, URL ) {\n      var handlers = listeners[\"assetReady\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias, URL );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when an asset has been removed from the\n* cache at the request of the creative.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetRemovedEvent = function( alias ) {\n      var handlers = listeners[\"assetRemoved\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n ormmaview.logHTML = function(){\n ORMMADisplayControllerBridge.logHTML(document.documentElement.innerHTML);\n \n };\n \n   /**\n    * Called by the JAVA SDK when an asset has been automatically\n* removed from the cache for reasons outside the control of the creative.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireAssetRetiredEvent = function( alias ) {\n      var handlers = listeners[\"assetRetired\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( alias );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n* Called by the JAVA SDK when various state properties have changed.\n    *\n    * @returns string, \"OK\"\n*/\n   ormmaview.fireChangeEvent = function( properties ) {\n      var handlers = listeners[\"change\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n    handlers[i]( properties );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when an error has occured.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireErrorEvent = function( message, action ) {\n      var handlers = listeners[\"error\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]( message, action );\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   /**\n    * Called by the JAVA SDK when the user shakes the device.\n    *\n    * @returns string, \"OK\"\n    */\n   ormmaview.fireShakeEvent = function() {\n      var handlers = listeners[\"shake\"];\n      if ( handlers != null ) {\n         for ( var i = 0; i < handlers.length; i++ ) {\n            handlers[i]();\n         }\n      }\n \n      return \"OK\";\n   };\n \n \n   \n \n \n   /**\n    *\n    */\n   ormmaview.showAlert = function( message ) {\n      ORMMAUtilityControllerBridge.showAlert( message );\n   };\n \n \n   /*********************************************/\n   /********** INTERNALLY USED METHODS **********/\n   /*********************************************/\n \n \n   /**\n    *\n    */\n   ormmaview.zeroPad = function( number ) {\n      var text = \"\";\n      if ( number < 10 ) {\n         text += \"0\";\n      }\n  text += number;\n      return text;\n   }\n \n \n \n \n   /***************************************************************************/\n   /********** LEVEL 0 (not part of spec, but required by public API **********/\n   /***************************************************************************/\n \n   /**\n    *\n    */\n   ormmaview.activate = function( event ) {\n    ORMMAUtilityControllerBridge.activate(event);\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.addEventListener = function( event, listener ) {\n      var handlers = listeners[event];\n  if ( handlers == null ) {\n // no handlers defined yet, set it up\n         listeners[event] = [];\n         handlers = listeners[event];\n      }\n \n      // see if the listener is already present\n  for ( var handler in handlers ) {\n     if ( listener == handler ) {\n    // listener already present, nothing to do\nturn;\n}\n}\n \n      // not present yet, go ahead and add it\n      handlers.push( listener );\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.deactivate = function( event ) {\n      ORMMAUtilityControllerBridge.deactivate(event);\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.removeEventListener = function( event, listener ) {\nvar handlers = listeners[event];\n  if ( handlers != null ) {\n         handlers.remove( listener );\n  }\n   };\n \n\n \n   /*****************************/\n   /********** LEVEL 1 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.close = function() {\n   try {\n     ORMMADisplayControllerBridge.close();\n  } catch ( e ) {\n     ormmaview.showAlert( \"close: \" + e );\n}\n   };\n \n \n   /**\n    *\n    */\n   ormmaview.expand = function( dimensions, URL ) {\n  try {\n this.dimensions = dimensions;\n ORMMADisplayControllerBridge.expand(ormmaview.stringify(dimensions), URL, ormmaview.stringify(expandProperties));\n  } catch ( e ) {\n     ormmaview.showAlert( \"executeNativeExpand: \" + e + \", dimensions = \" + dimensions  + \", URL = \" + URL + \", expandProperties = \" + expandProperties);\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.hide = function() {\n   try {\n  ORMMADisplayControllerBridge.hide();\n  } catch ( e ) {\n     ormmaview.showAlert( \"hide: \" + e );\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.open = function( URL, controls ) {\n  // the navigation parameter is an array, break it into its parts\n  var back = false;\n  var forward = false;\n  var refresh = false;\n  if ( controls == null ) {\n back = true;\n forward = true;\n refresh = true;\n  }\n  else {\n for ( var i = 0; i < controls.length; i++ ) {\nif ( ( controls[i] == \"none\" ) && ( i > 0 ) ) {\n   // error\n   self.fireErrorEvent( \"none must be the only navigation element present.\", \"open\" );\n   return;\n}\nelse if ( controls[i] == \"all\" ) {\n   if ( i > 0 ) {\n   // error\n   self.fireErrorEvent( \"none must be the only navigation element present.\", \"open\" );\n   return;\n}\n\n// ok\nback = true;\nforward = true;\nrefresh = true;\n}\nelse if ( controls[i] == \"back\" ) {\nback = true;\n}\nelse if ( controls[i] == \"forward\" ) {\nforward = true;\n}\nelse if ( controls[i] == \"refresh\" ) {\nrefresh = true;\n}\n     }\n  }\n\n try{\n  ORMMADisplayControllerBridge.open(URL, back, forward, refresh);\n   } catch ( e ) {\n     ormmaview.showAlert( \"open: \" + e );\n  }\n   \n   };\n \n   /**\n    *\n    */\n   ormmaview.resize = function( width, height ) {\n   try {\n  ORMMADisplayControllerBridge.resize(width, height);\n  } catch ( e ) {\n     ormmaview.showAlert( \"resize: \" + e );\n  }\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.setExpandProperties = function( properties ) {\n  expandProperties = properties;\n   };\n\n \n   /**\n    *\n    */\n   ormmaview.show = function() {\n   try{\n  ORMMADisplayControllerBridge.show();\n  } catch ( e ) {\n     ormmaview.showAlert( \"show: \" + e );\n  }\n   };\n \n \n \n   /*****************************/\n   /********** LEVEL 2 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.createEvent = function( date, title, body ) {\n      var msecs=(date.getTime()-date.getMilliseconds());\n\ntry {\nORMMAUtilityControllerBridge.createEvent(msecs.toString(), title, body);\n} catch ( e ) {\n     ormmaview.showAlert( \"createEvent: \" + e );\n  }\n\n   };\n \n   /**\n    *\n    */\n   ormmaview.makeCall = function( phoneNumber ) {\n   try {\n  ORMMAUtilityControllerBridge.makeCall(phoneNumber);\n  } catch ( e ) {\n     ormmaview.showAlert( \"makeCall: \" + e );\n  }\n   };\n \n \n   /**\n    *\n    */\n   ormmaview.sendMail = function( recipient, subject, body ) {\n   try {\n  ORMMAUtilityControllerBridge.sendMail(recipient, subject, body);\n  } catch ( e ) {\n     ormmaview.showAlert( \"sendMail: \" + e );\n  }\n   };\n \n\n   /**\n    *\n    */\n   ormmaview.sendSMS = function( recipient, body ) {\n   try {\n  ORMMAUtilityControllerBridge.sendSMS(recipient, body);\n  } catch ( e ) {\n     ormmaview.showAlert( \"sendSMS: \" + e );\n  }\n   };\n \n   /**\n    *\n    */\n   ormmaview.setShakeProperties = function( properties ) {\n   };\n \n \n \n   /*****************************/\n   /********** LEVEL 3 **********/\n   /*****************************/\n\n   /**\n    *\n    */\n   ormmaview.addAsset = function( URL, alias ) {\n \n   };\n   /**\n    *\n    */\n   ormmaview.request = function( URI, display ) {\n  \n   }; \n   /**\n    *\n    */\n   ormmaview.removeAsset = function( alias ) {\n   };\n   \n   \n   ormmaview.stringify = function(args) {\n    if (typeof JSON === \"undefined\") {\n        var s = \"\";\n        var len = args.length;\n        var i;\n        if (typeof len == \"undefined\"){\n        return ormmaview.stringifyArg(args);\n        }\n        for (i = 0; i < args.length; i++) {\n            if (i > 0) {\n                s = s + \",\";\n            }\n            s = s + ormmaview.stringifyArg(args[i]);\n        }\n        s = s + \"]\";\n        return s;\n    } else {\n        return JSON.stringify(args);\n    }\n};\n\normmaview.stringifyArg = function(arg) {\n        var s, type, start, name, nameType, a;\n            type = typeof arg;\n            s = \"\";\n            if ((type === \"number\") || (type === \"boolean\")) {\n                s = s + args;\n            } else if (arg instanceof Array) {\n                s = s + \"[\" + arg + \"]\";\n            } else if (arg instanceof Object) {\n                start = true;\n                s = s + \'{\';\n                for (name in arg) {\n                    if (arg[name] !== null) {\n                        if (!start) {\n                            s = s + \',\';\n                        }\n                        s = s + \'\"\' + name + \'\":\';\n                        nameType = typeof arg[name];\n                        if ((nameType === \"number\") || (nameType === \"boolean\")) {\n                            s = s + arg[name];\n                        } else if ((typeof arg[name]) === \'function\') {\n                            // don\'t copy the functions\n                            s = s + \'\"\"\';\n                        } else if (arg[name] instanceof Object) {\n                            s = s + this.stringify(args[i][name]);\n                        } else {\n                            s = s + \'\"\' + arg[name] + \'\"\';\n                        }\n                        start = false;\n                    }\n                }\n                s = s + \'}\';\n            } else {\n                a = arg.replace(/\\\\/g, \'\\\\\\\\\');\n                a = a.replace(/\"/g, \'\\\\\"\');\n                s = s + \'\"\' + a + \'\"\';\n            }\n        ormmaview.showAlert(\"json:\"+ s);\nreturn s;\n}\n   \n   })();";

     label15:
        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

     label16:
        r4 = $r10;

        goto label07;

     label17:
        r3 := @caughtexception;

     label18:
        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

     label19:
        if r4 == null goto label29;

     label20:
        virtualinvoke r4.<java.io.ByteArrayInputStream: void close()>();

     label21:
        return null;

     label22:
        $r6 := @caughtexception;

        if r4 == null goto label24;

     label23:
        virtualinvoke r4.<java.io.ByteArrayInputStream: void close()>();

     label24:
        throw $r6;

     label25:
        $r7 := @caughtexception;

        goto label10;

     label26:
        $r8 := @caughtexception;

        goto label21;

     label27:
        $r9 := @caughtexception;

        goto label24;

     label28:
        return $r1;

     label29:
        return null;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.Throwable from label13 to label14 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label23 to label24 with label27;
    }

    public void deleteOldAds()
    {
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        java.io.File r1;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r2 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getFilesDir()>();

        r1 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ad");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r2);

        staticinvoke <org.ormma.controller.OrmmaAssetController: boolean deleteDirectory(java.io.File)>(r1);

        return;
    }

    public java.io.FileOutputStream getAssetOutputString(java.lang.String) throws java.io.FileNotFoundException
    {
        org.ormma.controller.OrmmaAssetController r0;
        java.io.FileOutputStream $r5;
        java.lang.String $r1, $r3;
        java.io.File r2, $r4;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getAssetPath(java.lang.String)>($r1);

        $r4 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.io.File getAssetDir(java.lang.String)>($r3);

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        r2 = new java.io.File;

        $r1 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getAssetName(java.lang.String)>($r1);

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r1);

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        return $r5;
    }

    public java.lang.String getAssetPath()
    {
        android.content.Context $r2;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r4;
        java.io.File $r3;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r2 = r0.<org.ormma.controller.OrmmaAssetController: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.io.File getFilesDir()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public void removeAsset(java.lang.String)
    {
        org.ormma.view.OrmmaView $r6;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r3;
        java.io.File r2, $r4;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getAssetPath(java.lang.String)>($r1);

        $r4 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.io.File getAssetDir(java.lang.String)>($r3);

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        r2 = new java.io.File;

        $r3 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getAssetName(java.lang.String)>($r1);

        specialinvoke r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r3);

        virtualinvoke r2.<java.io.File: boolean delete()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OrmmaAdController.assetRemoved(\'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' )");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = r0.<org.ormma.controller.OrmmaAssetController: org.ormma.view.OrmmaView mOrmmaView>;

        virtualinvoke $r6.<org.ormma.view.OrmmaView: void injectJavaScript(java.lang.String)>($r1);

        return;
    }

    public void stopAllListeners()
    {
        org.ormma.controller.OrmmaAssetController r0;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        return;
    }

    public java.lang.String writeToDisk(java.io.InputStream, java.lang.String, boolean) throws java.lang.IllegalStateException, java.io.IOException
    {
        java.lang.Throwable $r13;
        byte[] r3;
        java.io.FileOutputStream r8, $r9;
        java.lang.Exception $r5, $r14;
        org.ormma.controller.OrmmaAssetController r0;
        int $i0;
        java.lang.StringBuilder $r12, $r15;
        java.lang.String $r2, $r10, r11;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        r3 = newarray (byte)[1024];

        goto label01;

     label01:
        r8 = null;

     label02:
        $r9 = virtualinvoke r0.<org.ormma.controller.OrmmaAssetController: java.io.FileOutputStream getAssetOutputString(java.lang.String)>($r2);

     label03:
        r8 = $r9;

     label04:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>(r3);

     label05:
        if $i0 > 0 goto label11;

     label06:
        virtualinvoke $r9.<java.io.FileOutputStream: void flush()>();

     label07:
        if $r9 == null goto label09;

     label08:
        virtualinvoke $r9.<java.io.FileOutputStream: void close()>();

     label09:
        $r10 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getFilesDir()>();

        r11 = $r10;

        goto label10;

     label10:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label11:
        virtualinvoke $r9.<java.io.FileOutputStream: void write(byte[],int,int)>(r3, 0, $i0);

     label12:
        goto label04;

     label13:
        $r13 := @caughtexception;

        if r8 == null goto label15;

     label14:
        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

     label15:
        throw $r13;

     label16:
        $r14 := @caughtexception;

        goto label09;

     label17:
        $r5 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public java.lang.String writeToDiskWrap(java.io.InputStream, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String) throws java.lang.IllegalStateException, java.io.IOException
    {
        java.lang.Throwable r7, $r16;
        byte[] r6;
        java.io.ByteArrayOutputStream r10, $r21;
        java.security.MessageDigest r8, $r9;
        org.ormma.controller.OrmmaAssetController r0;
        java.lang.StringBuffer r13, $r22;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5, $r12;
        boolean $z0, z1;
        java.io.FileOutputStream r11, $r15;
        java.lang.Exception $r17, $r18, $r19, $r20;
        java.security.NoSuchAlgorithmException $r24;
        java.lang.StringBuilder $r14, $r23;
        java.io.InputStream $r1;

        r0 := @this: org.ormma.controller.OrmmaAssetController;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: java.lang.String;

        r6 = newarray (byte)[1024];

        r8 = null;

     label01:
        $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        r8 = $r9;

     label03:
        $r21 = new java.io.ByteArrayOutputStream;

        r10 = $r21;

        specialinvoke $r21.<java.io.ByteArrayOutputStream: void <init>()>();

        r11 = null;

     label04:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>(r6);

     label05:
        if $i0 > 0 goto label59;

     label06:
        $r12 = virtualinvoke r10.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $i0 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>("<html");

     label07:
        if $i0 < 0 goto label68;

        z1 = 1;

     label08:
        r13 = null;

        if z1 == 0 goto label24;

     label09:
        $r22 = new java.lang.StringBuffer;

     label10:
        r13 = $r22;

     label11:
        specialinvoke $r22.<java.lang.StringBuffer: void <init>(java.lang.String)>($r12);

        $i0 = virtualinvoke r13.<java.lang.StringBuffer: int indexOf(java.lang.String)>("/ormma_bridge.js");

     label12:
        $r12 = "/ormma_bridge.js";

     label13:
        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

     label14:
        $i1 = $i1 + $i0;

     label15:
        $r23 = new java.lang.StringBuilder;

     label16:
        $r14 = $r23;

     label17:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:/");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i0, $i1, $r12);

        $i0 = virtualinvoke r13.<java.lang.StringBuffer: int indexOf(java.lang.String)>("/ormma.js");

     label18:
        $r12 = "/ormma.js";

     label19:
        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

     label20:
        $i1 = $i1 + $i0;

     label21:
        $r23 = new java.lang.StringBuilder;

     label22:
        $r14 = $r23;

     label23:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:/");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>($i0, $i1, $r12);

     label24:
        $r15 = virtualinvoke r0.<org.ormma.controller.OrmmaAssetController: java.io.FileOutputStream getAssetOutputString(java.lang.String)>("_ormma_current");

     label25:
        r11 = $r15;

        if z1 != 0 goto label69;

        $r12 = "<html>";

     label26:
        r6 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label27:
        $r12 = "<head>";

     label28:
        r6 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label29:
        $r12 = "<meta name=\'viewport\' content=\'user-scalable=no initial-scale=1.0\' />";

     label30:
        r6 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label31:
        $r12 = "<title>Advertisement</title> ";

     label32:
        r6 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

        $r23 = new java.lang.StringBuilder;

     label33:
        $r14 = $r23;

     label34:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<script src=\"file:/");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" type=\"text/javascript\"></script>");

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

        $r23 = new java.lang.StringBuilder;

     label35:
        $r14 = $r23;

     label36:
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<script src=\"file:/");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" type=\"text/javascript\"></script>");

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label37:
        goto label38;

     label38:
        $r3 = "</head>";

     label39:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label40:
        $r3 = "<body style=\"margin:0; padding:0; overflow:hidden; background-color:transparent;\">";

     label41:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label42:
        $r3 = "<div align=\"center\"> ";

     label43:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label44:
        if z1 != 0 goto label69;

     label45:
        r6 = virtualinvoke r10.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label46:
        if z1 != 0 goto label52;

        $r3 = "</div> ";

     label47:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label48:
        $r3 = "</body> ";

     label49:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label50:
        $r3 = "</html> ";

     label51:
        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label52:
        virtualinvoke $r15.<java.io.FileOutputStream: void flush()>();

     label53:
        if r10 == null goto label55;

     label54:
        virtualinvoke r10.<java.io.ByteArrayOutputStream: void close()>();

     label55:
        if $r15 == null goto label57;

     label56:
        virtualinvoke $r15.<java.io.FileOutputStream: void close()>();

     label57:
        $r3 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String getFilesDir()>();

        if r8 == null goto label75;

        $r4 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String asHex(java.security.MessageDigest)>(r8);

        $r2 = specialinvoke r0.<org.ormma.controller.OrmmaAssetController: java.lang.String moveToAdDirectory(java.lang.String,java.lang.String,java.lang.String)>("_ormma_current", $r3, $r4);

        return $r2;

     label58:
        r7 := @caughtexception;

        $r24 = (java.security.NoSuchAlgorithmException) r7;

        virtualinvoke $r24.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label03;

     label59:
        if r8 == null goto label61;

     label60:
        virtualinvoke r8.<java.security.MessageDigest: void update(byte[])>(r6);

     label61:
        virtualinvoke r10.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r6, 0, $i0);

     label62:
        goto label04;

     label63:
        $r16 := @caughtexception;

        if r10 == null goto label65;

     label64:
        virtualinvoke r10.<java.io.ByteArrayOutputStream: void close()>();

     label65:
        if r11 == null goto label67;

     label66:
        virtualinvoke r11.<java.io.FileOutputStream: void close()>();

     label67:
        throw $r16;

     label68:
        z1 = 0;

        goto label08;

     label69:
        $r3 = virtualinvoke r13.<java.lang.StringBuffer: java.lang.String toString()>();

        r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r15.<java.io.FileOutputStream: void write(byte[])>(r6);

     label70:
        goto label46;

     label71:
        $r17 := @caughtexception;

        goto label55;

     label72:
        $r18 := @caughtexception;

        goto label57;

     label73:
        $r19 := @caughtexception;

        goto label65;

     label74:
        $r20 := @caughtexception;

        goto label67;

     label75:
        return $r3;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label58;
        catch java.lang.Throwable from label04 to label05 with label63;
        catch java.lang.Throwable from label06 to label07 with label63;
        catch java.lang.Throwable from label09 to label10 with label63;
        catch java.lang.Throwable from label11 to label12 with label63;
        catch java.lang.Throwable from label13 to label14 with label63;
        catch java.lang.Throwable from label15 to label16 with label63;
        catch java.lang.Throwable from label17 to label18 with label63;
        catch java.lang.Throwable from label19 to label20 with label63;
        catch java.lang.Throwable from label21 to label22 with label63;
        catch java.lang.Throwable from label23 to label25 with label63;
        catch java.lang.Throwable from label26 to label27 with label63;
        catch java.lang.Throwable from label28 to label29 with label63;
        catch java.lang.Throwable from label30 to label31 with label63;
        catch java.lang.Throwable from label32 to label33 with label63;
        catch java.lang.Throwable from label34 to label35 with label63;
        catch java.lang.Throwable from label36 to label37 with label63;
        catch java.lang.Throwable from label39 to label40 with label63;
        catch java.lang.Throwable from label41 to label42 with label63;
        catch java.lang.Throwable from label43 to label44 with label63;
        catch java.lang.Throwable from label45 to label46 with label63;
        catch java.lang.Throwable from label47 to label48 with label63;
        catch java.lang.Throwable from label49 to label50 with label63;
        catch java.lang.Throwable from label51 to label53 with label63;
        catch java.lang.Exception from label54 to label55 with label71;
        catch java.lang.Exception from label56 to label57 with label72;
        catch java.lang.Throwable from label60 to label62 with label63;
        catch java.lang.Exception from label64 to label65 with label73;
        catch java.lang.Exception from label66 to label67 with label74;
        catch java.lang.Throwable from label69 to label70 with label63;
    }
}
