public class cn.hi321.browser.weave.client.WeaveFactory extends java.lang.Object
{
    private final boolean m_acceptInvalidCerts;
    private cn.hi321.browser.weave.client.WeaveTransport m_transport;
    private final boolean m_useConnectionPool;

    public void <init>(boolean)
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        boolean $z0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean m_acceptInvalidCerts> = 1;

        r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean m_useConnectionPool> = 1;

        return;
    }

    public cn.hi321.browser.weave.client.UserWeave createUserWeave(java.net.URI, java.lang.String, java.lang.String)
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        cn.hi321.browser.weave.client.UserWeave $r4;
        java.net.URI $r1;
        java.lang.String $r2, $r3;
        cn.hi321.browser.weave.client.WeaveTransport $r5;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new cn.hi321.browser.weave.client.UserWeave;

        $r5 = virtualinvoke r0.<cn.hi321.browser.weave.client.WeaveFactory: cn.hi321.browser.weave.client.WeaveTransport getWeaveTransport()>();

        specialinvoke $r4.<cn.hi321.browser.weave.client.UserWeave: void <init>(cn.hi321.browser.weave.client.WeaveTransport,java.net.URI,java.lang.String,java.lang.String)>($r5, $r1, $r2, $r3);

        return $r4;
    }

    protected cn.hi321.browser.weave.client.WeaveTransport createWeaveTransport()
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        cn.hi321.browser.weave.client.WeaveTransport $r1;
        boolean $z0, $z1;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        $r1 = new cn.hi321.browser.weave.client.WeaveTransport;

        $z0 = virtualinvoke r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean isConnectionPoolEnabled()>();

        $z1 = virtualinvoke r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean isInvalidCertsAccepted()>();

        specialinvoke $r1.<cn.hi321.browser.weave.client.WeaveTransport: void <init>(boolean,boolean)>($z0, $z1);

        return $r1;
    }

    protected cn.hi321.browser.weave.client.WeaveTransport getWeaveTransport()
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        java.lang.Throwable $r2;
        cn.hi321.browser.weave.client.WeaveTransport $r1;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        entermonitor r0;

     label1:
        $r1 = r0.<cn.hi321.browser.weave.client.WeaveFactory: cn.hi321.browser.weave.client.WeaveTransport m_transport>;

        if $r1 != null goto label2;

        $r1 = virtualinvoke r0.<cn.hi321.browser.weave.client.WeaveFactory: cn.hi321.browser.weave.client.WeaveTransport createWeaveTransport()>();

        r0.<cn.hi321.browser.weave.client.WeaveFactory: cn.hi321.browser.weave.client.WeaveTransport m_transport> = $r1;

     label2:
        $r1 = r0.<cn.hi321.browser.weave.client.WeaveFactory: cn.hi321.browser.weave.client.WeaveTransport m_transport>;

     label3:
        exitmonitor r0;

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public boolean isConnectionPoolEnabled()
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        boolean z0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        z0 = r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean m_useConnectionPool>;

        return z0;
    }

    public boolean isInvalidCertsAccepted()
    {
        cn.hi321.browser.weave.client.WeaveFactory r0;
        boolean z0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveFactory;

        z0 = r0.<cn.hi321.browser.weave.client.WeaveFactory: boolean m_acceptInvalidCerts>;

        return z0;
    }
}
