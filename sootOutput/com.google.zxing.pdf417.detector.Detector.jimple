public final class com.google.zxing.pdf417.detector.Detector extends java.lang.Object
{
    private static final int MAX_AVG_VARIANCE;
    private static final int MAX_INDIVIDUAL_VARIANCE;
    private static final int SKEW_THRESHOLD;
    private static final int[] START_PATTERN;
    private static final int[] START_PATTERN_REVERSE;
    private static final int[] STOP_PATTERN;
    private static final int[] STOP_PATTERN_REVERSE;
    private final com.google.zxing.BinaryBitmap image;

    static void <clinit>()
    {
        int[] $r0;

        <com.google.zxing.pdf417.detector.Detector: int SKEW_THRESHOLD> = 2;

        <com.google.zxing.pdf417.detector.Detector: int MAX_INDIVIDUAL_VARIANCE> = 204;

        <com.google.zxing.pdf417.detector.Detector: int MAX_AVG_VARIANCE> = 107;

        $r0 = newarray (int)[8];

        $r0[0] = 8;

        $r0[1] = 1;

        $r0[2] = 1;

        $r0[3] = 1;

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 3;

        <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN> = $r0;

        $r0 = newarray (int)[8];

        $r0[0] = 3;

        $r0[1] = 1;

        $r0[2] = 1;

        $r0[3] = 1;

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 8;

        <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN_REVERSE> = $r0;

        $r0 = newarray (int)[9];

        $r0[0] = 7;

        $r0[1] = 1;

        $r0[2] = 1;

        $r0[3] = 3;

        $r0[4] = 1;

        $r0[5] = 1;

        $r0[6] = 1;

        $r0[7] = 2;

        $r0[8] = 1;

        <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN> = $r0;

        $r0 = newarray (int)[9];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 1;

        $r0[3] = 1;

        $r0[4] = 1;

        $r0[5] = 3;

        $r0[6] = 1;

        $r0[7] = 1;

        $r0[8] = 7;

        <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN_REVERSE> = $r0;

        return;
    }

    public void <init>(com.google.zxing.BinaryBitmap)
    {
        com.google.zxing.BinaryBitmap $r1;
        com.google.zxing.pdf417.detector.Detector r0;

        r0 := @this: com.google.zxing.pdf417.detector.Detector;

        $r1 := @parameter0: com.google.zxing.BinaryBitmap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.zxing.pdf417.detector.Detector: com.google.zxing.BinaryBitmap image> = $r1;

        return;
    }

    private static int computeDimension(com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, float)
    {
        com.google.zxing.ResultPoint $r0, $r1, $r2, $r3;
        int $i0, $i1;
        float $f0, $f1;

        $r0 := @parameter0: com.google.zxing.ResultPoint;

        $r1 := @parameter1: com.google.zxing.ResultPoint;

        $r2 := @parameter2: com.google.zxing.ResultPoint;

        $r3 := @parameter3: com.google.zxing.ResultPoint;

        $f0 := @parameter4: float;

        $f1 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r0, $r1);

        $f1 = $f1 / $f0;

        $i0 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int round(float)>($f1);

        $f1 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r2, $r3);

        $f0 = $f1 / $f0;

        $i1 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int round(float)>($f0);

        $i0 = $i0 + $i1;

        $i0 = $i0 >> 1;

        $i0 = $i0 + 8;

        $i0 = $i0 / 17;

        $i0 = $i0 * 17;

        return $i0;
    }

    private static float computeModuleWidth(com.google.zxing.ResultPoint[])
    {
        com.google.zxing.ResultPoint $r1, $r2;
        com.google.zxing.ResultPoint[] $r0;
        float $f0, $f1, $f2;

        $r0 := @parameter0: com.google.zxing.ResultPoint[];

        $r1 = $r0[0];

        $r2 = $r0[4];

        $f0 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $r1 = $r0[1];

        $r2 = $r0[5];

        $f1 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $f0 = $f0 + $f1;

        $f0 = $f0 / 34.0F;

        $r1 = $r0[6];

        $r2 = $r0[2];

        $f1 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $r1 = $r0[7];

        $r2 = $r0[3];

        $f2 = staticinvoke <com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)>($r1, $r2);

        $f1 = $f1 + $f2;

        $f1 = $f1 / 36.0F;

        $f0 = $f0 + $f1;

        $f0 = $f0 / 2.0F;

        return $f0;
    }

    private static void correctCodeWordVertices(com.google.zxing.ResultPoint[], boolean)
    {
        com.google.zxing.ResultPoint $r1, $r2, $r3;
        com.google.zxing.ResultPoint[] $r0;
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3;
        boolean $z0;

        $r0 := @parameter0: com.google.zxing.ResultPoint[];

        $z0 := @parameter1: boolean;

        $r1 = $r0[4];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[6];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f0 = $f0 - $f1;

        if $z0 == 0 goto label1;

        $f0 = neg $f0;

     label1:
        $b0 = $f0 cmpl 2.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label4;

        $r1 = $r0[4];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[0];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f0 = $f0 - $f1;

        $r1 = $r0[6];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[0];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $r1 = $r0[6];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[0];

        $f3 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f0 = $f0 * $f2;

        $f1 = $f0 / $f1;

        $r3 = new com.google.zxing.ResultPoint;

        $r2 = $r0[4];

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $r2 = $r0[4];

        $f2 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $f1 = $f1 + $f2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r0[4] = $r3;

     label2:
        $r1 = $r0[7];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[5];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f0 = $f0 - $f1;

        if $z0 == 0 goto label3;

        $f0 = neg $f0;

     label3:
        $b0 = $f0 cmpl 2.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label5;

        $r1 = $r0[5];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[1];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f0 = $f0 - $f1;

        $r1 = $r0[7];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[1];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $r1 = $r0[7];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[1];

        $f3 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f0 = $f0 * $f2;

        $f1 = $f0 / $f1;

        $r3 = new com.google.zxing.ResultPoint;

        $r2 = $r0[5];

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $r2 = $r0[5];

        $f2 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $f1 = $f1 + $f2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r0[5] = $r3;

        return;

     label4:
        $f0 = neg $f0;

        $b0 = $f0 cmpl 2.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $r1 = $r0[2];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[6];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f0 = $f0 - $f1;

        $r1 = $r0[2];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[4];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $r1 = $r0[2];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[4];

        $f3 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f0 = $f0 * $f2;

        $f1 = $f0 / $f1;

        $r3 = new com.google.zxing.ResultPoint;

        $r2 = $r0[6];

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $r2 = $r0[6];

        $f2 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $f1 = $f2 - $f1;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r0[6] = $r3;

        goto label2;

     label5:
        $f0 = neg $f0;

        $b0 = $f0 cmpl 2.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label6;

        $r1 = $r0[3];

        $f0 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[7];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f0 = $f0 - $f1;

        $r1 = $r0[3];

        $f1 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $r1 = $r0[5];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f1 = $f1 - $f2;

        $r1 = $r0[3];

        $f2 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $r1 = $r0[5];

        $f3 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f2 = $f2 - $f3;

        $f0 = $f0 * $f2;

        $f1 = $f0 / $f1;

        $r3 = new com.google.zxing.ResultPoint;

        $r2 = $r0[7];

        $f0 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $r2 = $r0[7];

        $f2 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $f1 = $f2 - $f1;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r0[7] = $r3;

     label6:
        return;
    }

    private static int[] findGuardPattern(com.google.zxing.common.BitMatrix, int, int, int, boolean, int[])
    {
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.google.zxing.common.BitMatrix $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: com.google.zxing.common.BitMatrix;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $r1 := @parameter5: int[];

        $i3 = lengthof $r1;

        $r2 = newarray (int)[$i3];

        $i5 = 0;

        $i6 = $i0;

        $i7 = $i0;

     label01:
        $i8 = $i0 + $i2;

        if $i6 >= $i8 goto label10;

        $z1 = virtualinvoke $r0.<com.google.zxing.common.BitMatrix: boolean get(int,int)>($i6, $i1);

        $z1 = $z1 ^ $z0;

        if $z1 == 0 goto label03;

        $i8 = $r2[$i5];

        $i8 = $i8 + 1;

        $r2[$i5] = $i8;

     label02:
        $i6 = $i6 + 1;

        goto label01;

     label03:
        $i8 = $i3 + -1;

        if $i5 != $i8 goto label08;

        $i8 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int patternMatchVariance(int[],int[],int)>($r2, $r1, 204);

        if $i8 >= 107 goto label04;

        $r1 = newarray (int)[2];

        $r1[0] = $i7;

        $r1[1] = $i6;

        return $r1;

     label04:
        $i8 = $r2[0];

        $i4 = $r2[1];

        $i8 = $i8 + $i4;

        $i7 = $i7 + $i8;

        $i8 = 2;

     label05:
        if $i8 >= $i3 goto label06;

        $i9 = $i8 + -2;

        $i4 = $r2[$i8];

        $r2[$i9] = $i4;

        $i8 = $i8 + 1;

        goto label05;

     label06:
        $i8 = $i3 + -2;

        $r2[$i8] = 0;

        $i8 = $i3 + -1;

        $r2[$i8] = 0;

        $i5 = $i5 + -1;

     label07:
        $r2[$i5] = 1;

        if $z0 != 0 goto label09;

        $z0 = 1;

        goto label02;

     label08:
        $i5 = $i5 + 1;

        goto label07;

     label09:
        $z0 = 0;

        goto label02;

     label10:
        return null;
    }

    private static com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix)
    {
        com.google.zxing.ResultPoint $r3;
        com.google.zxing.ResultPoint[] $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        com.google.zxing.common.BitMatrix $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: com.google.zxing.common.BitMatrix;

        $z0 = 0;

        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitMatrix: int getHeight()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.common.BitMatrix: int getWidth()>();

        $r1 = newarray (com.google.zxing.ResultPoint)[8];

        $i2 = 0;

     label01:
        if $i2 >= $i0 goto label17;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i2, $i1, 0, $r2);

        if $r2 == null goto label09;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[0] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[4] = $r3;

        $z1 = 1;

     label02:
        if $z1 == 0 goto label14;

        $i2 = $i0 + -1;

     label03:
        if $i2 <= 0 goto label16;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i2, $i1, 0, $r2);

        if $r2 == null goto label10;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[1] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[5] = $r3;

        $z1 = 1;

     label04:
        if $z1 == 0 goto label14;

        $i2 = 0;

     label05:
        if $i2 >= $i0 goto label15;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i2, $i1, 0, $r2);

        if $r2 == null goto label11;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f1 = (float) $i3;

        $f0 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f1, $f0);

        $r1[2] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[6] = $r3;

        $z1 = 1;

     label06:
        if $z1 == 0 goto label14;

        $i0 = $i0 + -1;

     label07:
        if $i0 <= 0 goto label08;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i0, $i1, 0, $r2);

        if $r2 == null goto label12;

        $r3 = new com.google.zxing.ResultPoint;

        $i1 = $r2[1];

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[3] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i1 = $r2[0];

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[7] = $r3;

        $z0 = 1;

     label08:
        if $z0 == 0 goto label13;

        return $r1;

     label09:
        $i2 = $i2 + 1;

        goto label01;

     label10:
        $i2 = $i2 + -1;

        goto label03;

     label11:
        $i2 = $i2 + 1;

        goto label05;

     label12:
        $i0 = $i0 + -1;

        goto label07;

     label13:
        return null;

     label14:
        $z0 = $z1;

        goto label08;

     label15:
        $z1 = 0;

        goto label06;

     label16:
        $z1 = 0;

        goto label04;

     label17:
        $z1 = 0;

        goto label02;
    }

    private static com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix)
    {
        com.google.zxing.ResultPoint $r3;
        com.google.zxing.ResultPoint[] $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        com.google.zxing.common.BitMatrix $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: com.google.zxing.common.BitMatrix;

        $z0 = 1;

        $i0 = virtualinvoke $r0.<com.google.zxing.common.BitMatrix: int getHeight()>();

        $i1 = virtualinvoke $r0.<com.google.zxing.common.BitMatrix: int getWidth()>();

        $i1 = $i1 >> 1;

        $r1 = newarray (com.google.zxing.ResultPoint)[8];

        $i2 = $i0 + -1;

     label01:
        if $i2 <= 0 goto label18;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN_REVERSE>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, $i1, $i2, $i1, 1, $r2);

        if $r2 == null goto label09;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[0] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[4] = $r3;

        $z1 = 1;

     label02:
        if $z1 == 0 goto label15;

        $i2 = 0;

     label03:
        if $i2 >= $i0 goto label17;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN_REVERSE>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, $i1, $i2, $i1, 1, $r2);

        if $r2 == null goto label10;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[1] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[5] = $r3;

        $z1 = 1;

     label04:
        if $z1 == 0 goto label15;

        $i2 = $i0 + -1;

     label05:
        if $i2 <= 0 goto label16;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN_REVERSE>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i2, $i1, 0, $r2);

        if $r2 == null goto label11;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[0];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[2] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i3 = $r2[1];

        $f0 = (float) $i3;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[6] = $r3;

        $z1 = 1;

     label06:
        if $z1 == 0 goto label15;

        $i2 = 0;

     label07:
        if $i2 >= $i0 goto label14;

        $r2 = <com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN_REVERSE>;

        $r2 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[])>($r0, 0, $i2, $i1, 0, $r2);

        if $r2 == null goto label12;

        $r3 = new com.google.zxing.ResultPoint;

        $i0 = $r2[0];

        $f0 = (float) $i0;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[3] = $r3;

        $r3 = new com.google.zxing.ResultPoint;

        $i0 = $r2[1];

        $f0 = (float) $i0;

        $f1 = (float) $i2;

        specialinvoke $r3.<com.google.zxing.ResultPoint: void <init>(float,float)>($f0, $f1);

        $r1[7] = $r3;

     label08:
        if $z0 == 0 goto label13;

        return $r1;

     label09:
        $i2 = $i2 + -1;

        goto label01;

     label10:
        $i2 = $i2 + 1;

        goto label03;

     label11:
        $i2 = $i2 + -1;

        goto label05;

     label12:
        $i2 = $i2 + 1;

        goto label07;

     label13:
        return null;

     label14:
        $z0 = 0;

        goto label08;

     label15:
        $z0 = $z1;

        goto label08;

     label16:
        $z1 = 0;

        goto label06;

     label17:
        $z1 = 0;

        goto label04;

     label18:
        $z1 = 0;

        goto label02;
    }

    private static int patternMatchVariance(int[], int[], int)
    {
        int[] $r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @parameter0: int[];

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 = lengthof $r0;

        $i2 = 0;

        $i3 = 0;

        $i4 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i5 = $r0[$i2];

        $i4 = $i4 + $i5;

        $i5 = $r1[$i2];

        $i3 = $i3 + $i5;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        if $i4 >= $i3 goto label3;

        return 2147483647;

     label3:
        $i2 = $i4 << 8;

        $i3 = $i2 / $i3;

        $i0 = $i0 * $i3;

        $i0 = $i0 >> 8;

        $i5 = 0;

        $i2 = 0;

     label4:
        if $i5 >= $i1 goto label7;

        $i6 = $r0[$i5];

        $i6 = $i6 << 8;

        $i7 = $r1[$i5];

        $i7 = $i7 * $i3;

        if $i6 <= $i7 goto label6;

        $i6 = $i6 - $i7;

     label5:
        if $i6 > $i0 goto label8;

        $i2 = $i2 + $i6;

        $i5 = $i5 + 1;

        goto label4;

     label6:
        $i6 = $i7 - $i6;

        goto label5;

     label7:
        $i0 = $i2 / $i4;

        return $i0;

     label8:
        return 2147483647;
    }

    private static int round(float)
    {
        int $i0;
        float $f0;

        $f0 := @parameter0: float;

        $f0 = 0.5F + $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    private static com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, com.google.zxing.ResultPoint, int) throws com.google.zxing.NotFoundException
    {
        com.google.zxing.ResultPoint $r1, $r2, $r3, $r4;
        int $i0;
        com.google.zxing.common.GridSampler $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        com.google.zxing.common.BitMatrix $r0;

        $r0 := @parameter0: com.google.zxing.common.BitMatrix;

        $r1 := @parameter1: com.google.zxing.ResultPoint;

        $r2 := @parameter2: com.google.zxing.ResultPoint;

        $r3 := @parameter3: com.google.zxing.ResultPoint;

        $r4 := @parameter4: com.google.zxing.ResultPoint;

        $i0 := @parameter5: int;

        $r5 = staticinvoke <com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler getInstance()>();

        $f0 = (float) $i0;

        $f1 = (float) $i0;

        $f2 = (float) $i0;

        $f3 = (float) $i0;

        $f4 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getX()>();

        $f5 = virtualinvoke $r1.<com.google.zxing.ResultPoint: float getY()>();

        $f6 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getX()>();

        $f7 = virtualinvoke $r3.<com.google.zxing.ResultPoint: float getY()>();

        $f8 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getX()>();

        $f9 = virtualinvoke $r4.<com.google.zxing.ResultPoint: float getY()>();

        $f10 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getX()>();

        $f11 = virtualinvoke $r2.<com.google.zxing.ResultPoint: float getY()>();

        $r0 = virtualinvoke $r5.<com.google.zxing.common.GridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)>($r0, $i0, 0.0F, 0.0F, $f0, 0.0F, $f1, $f2, 0.0F, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11);

        return $r0;
    }

    public com.google.zxing.common.DetectorResult detect() throws com.google.zxing.NotFoundException
    {
        com.google.zxing.common.DetectorResult $r1;
        com.google.zxing.pdf417.detector.Detector r0;

        r0 := @this: com.google.zxing.pdf417.detector.Detector;

        $r1 = virtualinvoke r0.<com.google.zxing.pdf417.detector.Detector: com.google.zxing.common.DetectorResult detect(java.util.Hashtable)>(null);

        return $r1;
    }

    public com.google.zxing.common.DetectorResult detect(java.util.Hashtable) throws com.google.zxing.NotFoundException
    {
        com.google.zxing.ResultPoint $r7, $r8, $r9, $r10;
        com.google.zxing.common.DetectorResult $r11;
        com.google.zxing.pdf417.detector.Detector r0;
        com.google.zxing.ResultPoint[] $r4, $r5;
        byte $b0;
        com.google.zxing.NotFoundException $r6;
        int $i1;
        float $f0;
        com.google.zxing.BinaryBitmap $r2;
        com.google.zxing.common.BitMatrix $r3;
        java.util.Hashtable $r1;

        r0 := @this: com.google.zxing.pdf417.detector.Detector;

        $r1 := @parameter0: java.util.Hashtable;

        $r2 = r0.<com.google.zxing.pdf417.detector.Detector: com.google.zxing.BinaryBitmap image>;

        $r3 = virtualinvoke $r2.<com.google.zxing.BinaryBitmap: com.google.zxing.common.BitMatrix getBlackMatrix()>();

        $r4 = staticinvoke <com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix)>($r3);

        $r5 = $r4;

        if $r4 != null goto label2;

        $r4 = staticinvoke <com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findVertices180(com.google.zxing.common.BitMatrix)>($r3);

        $r5 = $r4;

        if $r4 == null goto label1;

        staticinvoke <com.google.zxing.pdf417.detector.Detector: void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean)>($r4, 1);

        $r5 = $r4;

     label1:
        if $r5 != null goto label3;

        $r6 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r6;

     label2:
        staticinvoke <com.google.zxing.pdf417.detector.Detector: void correctCodeWordVertices(com.google.zxing.ResultPoint[],boolean)>($r4, 0);

        goto label1;

     label3:
        $f0 = staticinvoke <com.google.zxing.pdf417.detector.Detector: float computeModuleWidth(com.google.zxing.ResultPoint[])>($r5);

        $b0 = $f0 cmpg 1.0F;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label4;

        $r6 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r6;

     label4:
        $r7 = $r5[4];

        $r8 = $r5[6];

        $r9 = $r5[5];

        $r10 = $r5[7];

        $i1 = staticinvoke <com.google.zxing.pdf417.detector.Detector: int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float)>($r7, $r8, $r9, $r10, $f0);

        if $i1 >= 1 goto label5;

        $r6 = staticinvoke <com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()>();

        throw $r6;

     label5:
        $r7 = $r5[4];

        $r8 = $r5[5];

        $r9 = $r5[6];

        $r10 = $r5[7];

        $r3 = staticinvoke <com.google.zxing.pdf417.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)>($r3, $r7, $r8, $r9, $r10, $i1);

        $r11 = new com.google.zxing.common.DetectorResult;

        $r4 = newarray (com.google.zxing.ResultPoint)[4];

        $r7 = $r5[4];

        $r4[0] = $r7;

        $r7 = $r5[5];

        $r4[1] = $r7;

        $r7 = $r5[6];

        $r4[2] = $r7;

        $r7 = $r5[7];

        $r4[3] = $r7;

        specialinvoke $r11.<com.google.zxing.common.DetectorResult: void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[])>($r3, $r4);

        return $r11;
    }
}
