class com.entaz.app.comicplus.cache.ImageDownloader$2 extends java.util.LinkedHashMap
{
    final com.entaz.app.comicplus.cache.ImageDownloader this$0;

    void <init>(com.entaz.app.comicplus.cache.ImageDownloader, int, float, boolean)
    {
        com.entaz.app.comicplus.cache.ImageDownloader$2 r0;
        int $i0;
        float $f0;
        com.entaz.app.comicplus.cache.ImageDownloader $r1;
        boolean $z0;

        r0 := @this: com.entaz.app.comicplus.cache.ImageDownloader$2;

        $r1 := @parameter0: com.entaz.app.comicplus.cache.ImageDownloader;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $z0 := @parameter3: boolean;

        r0.<com.entaz.app.comicplus.cache.ImageDownloader$2: com.entaz.app.comicplus.cache.ImageDownloader this$0> = $r1;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(16, 0.75F, 1);

        return;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r0;
        java.util.concurrent.ConcurrentHashMap $r3;
        android.graphics.Bitmap $r6;
        com.entaz.app.comicplus.cache.ImageDownloader$2 r2;
        int $i0;
        java.lang.Object $r4;
        java.lang.ref.SoftReference $r1;
        java.lang.String r5;

        r2 := @this: com.entaz.app.comicplus.cache.ImageDownloader$2;

        r0 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r2.<com.entaz.app.comicplus.cache.ImageDownloader$2: int size()>();

        if $i0 <= 32 goto label1;

        $r3 = staticinvoke <com.entaz.app.comicplus.cache.ImageDownloader: java.util.concurrent.ConcurrentHashMap access$1()>();

        $r4 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r4;

        $r1 = new java.lang.ref.SoftReference;

        $r4 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (android.graphics.Bitmap) $r4;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r1);

        return 1;

     label1:
        return 0;
    }
}
