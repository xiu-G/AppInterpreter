public final class c.a.b.a.d.e.g6 extends java.lang.Object
{
    private static final java.lang.reflect.Method b;
    private static final java.lang.reflect.Method c;
    private final android.app.job.JobScheduler a;

    static void <clinit>()
    {
        java.lang.reflect.Method $r0;

        $r0 = staticinvoke <c.a.b.a.d.e.g6: java.lang.reflect.Method c()>();

        <c.a.b.a.d.e.g6: java.lang.reflect.Method b> = $r0;

        $r0 = staticinvoke <c.a.b.a.d.e.g6: java.lang.reflect.Method d()>();

        <c.a.b.a.d.e.g6: java.lang.reflect.Method c> = $r0;

        return;
    }

    private void <init>(android.app.job.JobScheduler)
    {
        c.a.b.a.d.e.g6 r0;
        android.app.job.JobScheduler $r1;

        r0 := @this: c.a.b.a.d.e.g6;

        $r1 := @parameter0: android.app.job.JobScheduler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.a.b.a.d.e.g6: android.app.job.JobScheduler a> = $r1;

        return;
    }

    private final int a(android.app.job.JobInfo, java.lang.String, int, java.lang.String)
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r6;
        android.app.job.JobScheduler $r3;
        java.lang.Integer $r7;
        int $i0;
        android.app.job.JobInfo $r4;
        java.lang.Object $r8;
        java.lang.String $r1, $r5;
        java.lang.reflect.Method $r2;
        c.a.b.a.d.e.g6 r0;

        r0 := @this: c.a.b.a.d.e.g6;

        $r4 := @parameter0: android.app.job.JobInfo;

        $r5 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        $r2 = <c.a.b.a.d.e.g6: java.lang.reflect.Method b>;

        if $r2 == null goto label10;

        $r3 = r0.<c.a.b.a.d.e.g6: android.app.job.JobScheduler a>;

        $r6 = newarray (java.lang.Object)[4];

        $r6[0] = $r4;

        $r6[1] = "com.google.android.gms";

     label01:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label02:
        $r6[2] = $r7;

        $r6[3] = "UploadAlarm";

     label03:
        $r8 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r6);

     label04:
        $r7 = (java.lang.Integer) $r8;

     label05:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label06:
        return $i0;

     label07:
        $r9 := @caughtexception;

        goto label09;

     label08:
        $r9 := @caughtexception;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UploadAlarm", "error calling scheduleAsPackage", $r9);

     label10:
        $r3 = r0.<c.a.b.a.d.e.g6: android.app.job.JobScheduler a>;

        $i0 = virtualinvoke $r3.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r4);

        return $i0;

        catch java.lang.IllegalAccessException from label01 to label02 with label08;
        catch java.lang.IllegalAccessException from label03 to label04 with label08;
        catch java.lang.IllegalAccessException from label05 to label06 with label08;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label07;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label07;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label07;
    }

    public static int b(android.content.Context, android.app.job.JobInfo, java.lang.String, java.lang.String)
    {
        android.content.Context $r3;
        android.app.job.JobScheduler $r5;
        int $i0;
        android.app.job.JobInfo $r0;
        java.lang.Object $r4;
        java.lang.String $r1, $r2;
        java.lang.reflect.Method $r6;
        c.a.b.a.d.e.g6 $r7;

        $r3 := @parameter0: android.content.Context;

        $r0 := @parameter1: android.app.job.JobInfo;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        $r5 = (android.app.job.JobScheduler) $r4;

        $r6 = <c.a.b.a.d.e.g6: java.lang.reflect.Method b>;

        if $r6 == null goto label1;

        $i0 = virtualinvoke $r3.<android.content.Context: int checkSelfPermission(java.lang.String)>("android.permission.UPDATE_DEVICE_STATS");

        if $i0 != 0 goto label1;

        $r7 = new c.a.b.a.d.e.g6;

        specialinvoke $r7.<c.a.b.a.d.e.g6: void <init>(android.app.job.JobScheduler)>($r5);

        $i0 = staticinvoke <c.a.b.a.d.e.g6: int e()>();

        $i0 = specialinvoke $r7.<c.a.b.a.d.e.g6: int a(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>($r0, "com.google.android.gms", $i0, "UploadAlarm");

        return $i0;

     label1:
        $i0 = virtualinvoke $r5.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r0);

        return $i0;
    }

    private static java.lang.reflect.Method c()
    {
        java.lang.Throwable $r0;
        int $i0;
        java.lang.Class[] $r2;
        java.lang.Class $r1, $r3;
        java.lang.reflect.Method $r4;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label4;

        $r1 = class "Landroid/app/job/JobScheduler;";

        $r2 = newarray (java.lang.Class)[4];

        $r2[0] = class "Landroid/app/job/JobInfo;";

        $r2[1] = class "Ljava/lang/String;";

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[2] = $r3;

        $r2[3] = class "Ljava/lang/String;";

     label1:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("scheduleAsPackage", $r2);

     label2:
        return $r4;

     label3:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobSchedulerCompat", 6);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JobSchedulerCompat", "No scheduleAsPackage method available, falling back to schedule");

     label4:
        return null;

     label5:
        $r0 := @caughtexception;

        goto label3;

        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    private static java.lang.reflect.Method d()
    {
        java.lang.Throwable $r0;
        int $i0;
        java.lang.Class $r1;
        java.lang.reflect.Method $r2;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 24 goto label5;

        $r1 = class "Landroid/os/UserHandle;";

     label1:
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("myUserId", null);

     label2:
        return $r2;

     label3:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobSchedulerCompat", 6);

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("JobSchedulerCompat", "No myUserId method available");

        return null;

     label4:
        $r0 := @caughtexception;

        goto label3;

     label5:
        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
    }

    private static int e()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.reflect.Method $r0;
        java.lang.Integer $r3;
        boolean $z0;

        $r0 = <c.a.b.a.d.e.g6: java.lang.reflect.Method c>;

        if $r0 == null goto label8;

        $r1 = newarray (java.lang.Object)[0];

     label1:
        $r2 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r1);

     label2:
        $r3 = (java.lang.Integer) $r2;

     label3:
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label4:
        return $i0;

     label5:
        $r4 := @caughtexception;

        goto label7;

     label6:
        $r4 := @caughtexception;

     label7:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("JobSchedulerCompat", 6);

        if $z0 == 0 goto label8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("JobSchedulerCompat", "myUserId invocation illegal", $r4);

     label8:
        return 0;

        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
    }
}
