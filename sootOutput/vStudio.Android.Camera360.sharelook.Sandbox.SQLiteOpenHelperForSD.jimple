public abstract class vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private android.database.sqlite.SQLiteDatabase mDatabase;
    private final android.database.sqlite.SQLiteDatabase$CursorFactory mFactory;
    private boolean mIsInitializing;
    private final java.lang.String mName;
    private final int mNewVersion;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Landroid/database/sqlite/SQLiteOpenHelper;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory, int)
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r3;
        int $i0;
        vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD r0;
        java.lang.String $r2;

        r0 := @this: vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.database.sqlite.SQLiteDatabase$CursorFactory;

        $i0 := @parameter3: int;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, $r2, null, 1);

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase> = null;

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 0;

        goto label1;

     label1:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.content.Context mContext> = $r1;

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName> = $r2;

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory> = null;

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion> = 1;

        return;
    }

    public void close()
    {
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD r0;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD;

        entermonitor r0;

     label1:
        $z0 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing>;

        if $z0 == 0 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Closed during initialization");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $r3 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r3 == null goto label4;

        $r3 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase> = null;

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public android.database.sqlite.SQLiteDatabase getReadableDatabase()
    {
        java.lang.Throwable r1, $r4, $r12;
        java.lang.IllegalStateException $r3;
        android.database.sqlite.SQLiteDatabase $r2, r8, $r10;
        android.database.sqlite.SQLiteException $r11;
        int $i0, $i1;
        java.lang.String $r5, $r7;
        boolean $z0;
        vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r9;
        java.lang.StringBuilder $r6;

        r0 := @this: vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD;

        entermonitor r0;

     label01:
        $r2 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r2 == null goto label03;

        $r2 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r2 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

     label02:
        exitmonitor r0;

        return $r2;

     label03:
        $z0 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing>;

        if $z0 == 0 goto label05;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getReadableDatabase called recursively");

        throw $r3;

     label04:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label05:
        $r2 = virtualinvoke r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label06:
        goto label02;

     label07:
        r1 := @caughtexception;

     label08:
        $r5 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        if $r5 != null goto label09;

        throw r1;

     label09:
        $r5 = <vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t open ");

        $r7 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for writing (will try read-only):");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r7, r1);

     label10:
        r8 = null;

     label11:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 1;

        $r5 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        $r9 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory>;

        $r10 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r5, $r9, 0);

        r8 = $r10;

        $i0 = virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion>;

        if $i0 == $i1 goto label15;

        $r11 = new android.database.sqlite.SQLiteException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t upgrade read-only database from version ");

        $i0 = virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i0 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r5);

        throw $r11;

     label12:
        $r12 := @caughtexception;

     label13:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 0;

        if r8 == null goto label14;

        $r2 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        if r8 == $r2 goto label14;

        virtualinvoke r8.<android.database.sqlite.SQLiteDatabase: void close()>();

     label14:
        throw $r12;

     label15:
        virtualinvoke r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: void onOpen(android.database.sqlite.SQLiteDatabase)>($r10);

        $r5 = <vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Opened ");

        $r7 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in read-only mode");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r7);

        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase> = $r10;

        $r2 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

     label16:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 0;

        if $r10 == null goto label02;

        r8 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r10 == r8 goto label02;

        virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: void close()>();

     label17:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label10 with label04;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label15 with label04;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label16 to label17 with label04;
    }

    public android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        java.lang.Throwable $r3, $r7, $r8;
        java.lang.IllegalStateException $r2;
        vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD r0;
        java.lang.Exception $r9;
        android.database.sqlite.SQLiteDatabase $r1, $r5;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r6;
        int $i0, $i1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD;

        entermonitor r0;

     label01:
        $r1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r1 == null goto label03;

        $r1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>();

        if $z0 != 0 goto label03;

        $r1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

     label02:
        exitmonitor r0;

        return $r1;

     label03:
        $z0 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing>;

        if $z0 == 0 goto label05;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getWritableDatabase called recursively");

        throw $r2;

     label04:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

     label05:
        $r1 = null;

     label06:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 1;

        $r4 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        if $r4 != null goto label18;

        $r1 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)>(null);

     label07:
        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion>;

        if $i0 == $i1 goto label12;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label08:
        if $i0 != 0 goto label20;

     label09:
        virtualinvoke r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

     label10:
        $i0 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label11:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label12:
        virtualinvoke r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: void onOpen(android.database.sqlite.SQLiteDatabase)>($r1);

     label13:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 0;

        $r5 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

     label14:
        if $r5 == null goto label16;

     label15:
        $r5 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: void close()>();

     label16:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase mDatabase> = $r1;

     label17:
        goto label02;

     label18:
        $r4 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: java.lang.String mName>;

        $r6 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: android.database.sqlite.SQLiteDatabase$CursorFactory mFactory>;

        $r5 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r4, $r6);

     label19:
        $r1 = $r5;

        goto label07;

     label20:
        $i1 = r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: int mNewVersion>;

        virtualinvoke r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>($r1, $i0, $i1);

     label21:
        goto label10;

     label22:
        $r7 := @caughtexception;

     label23:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r7;

     label24:
        $r8 := @caughtexception;

     label25:
        r0.<vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD: boolean mIsInitializing> = 0;

        goto label27;

     label26:
        throw $r8;

     label27:
        if $r1 == null goto label26;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label28:
        goto label26;

     label29:
        $r9 := @caughtexception;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label06 to label08 with label24;
        catch java.lang.Throwable from label09 to label11 with label22;
        catch java.lang.Throwable from label11 to label13 with label24;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Exception from label15 to label16 with label29;
        catch java.lang.Throwable from label15 to label16 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label26 with label04;
        catch java.lang.Throwable from label26 to label28 with label04;
    }

    public abstract void onCreate(android.database.sqlite.SQLiteDatabase);

    public void onOpen(android.database.sqlite.SQLiteDatabase)
    {
        vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: vStudio.Android.Camera360.sharelook.Sandbox.SQLiteOpenHelperForSD;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        return;
    }

    public abstract void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int);
}
