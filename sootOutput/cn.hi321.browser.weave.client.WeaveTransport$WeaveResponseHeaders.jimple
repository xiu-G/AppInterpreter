public class cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders extends java.lang.Object
{
    private final org.apache.http.Header[] m_headers;

    public void <init>(org.apache.http.HttpResponse)
    {
        org.apache.http.Header[] $r2;
        org.apache.http.HttpResponse $r1;
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: org.apache.http.Header[] m_headers> = $r2;

        return;
    }

    private java.lang.String getHeaderValue(cn.hi321.browser.weave.client.WeaveHeader)
    {
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;
        java.lang.String $r2;
        cn.hi321.browser.weave.client.WeaveHeader $r1;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        $r1 := @parameter0: cn.hi321.browser.weave.client.WeaveHeader;

        $r2 = virtualinvoke $r1.<cn.hi321.browser.weave.client.WeaveHeader: java.lang.String getName()>();

        $r2 = specialinvoke r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: java.lang.String getHeaderValue(java.lang.String)>($r2);

        return $r2;
    }

    private java.lang.String getHeaderValue(java.lang.String)
    {
        org.apache.http.Header[] $r3;
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;
        org.apache.http.Header r2;
        int $i0, $i1;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: org.apache.http.Header[] m_headers>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        r2 = $r3[$i1];

        $r4 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getValue()>();

        return $r1;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public long getBackoffSeconds()
    {
        cn.hi321.browser.weave.client.WeaveHeader $r1;
        long $l0;
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;
        java.lang.String $r2;
        java.lang.Exception $r3;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        $r1 = <cn.hi321.browser.weave.client.WeaveHeader: cn.hi321.browser.weave.client.WeaveHeader X_WEAVE_BACKOFF>;

     label1:
        $r2 = specialinvoke r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: java.lang.String getHeaderValue(cn.hi321.browser.weave.client.WeaveHeader)>($r1);

     label2:
        if $r2 == null goto label6;

     label3:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label4:
        return $l0;

     label5:
        $r3 := @caughtexception;

     label6:
        return 0L;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public org.apache.http.Header[] getHeaders()
    {
        org.apache.http.Header[] r1;
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        r1 = r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: org.apache.http.Header[] m_headers>;

        return r1;
    }

    public java.util.Date getServerTimestamp()
    {
        java.util.Date $r3;
        cn.hi321.browser.weave.client.WeaveHeader $r1;
        cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders r0;
        java.lang.String $r2;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders;

        $r1 = <cn.hi321.browser.weave.client.WeaveHeader: cn.hi321.browser.weave.client.WeaveHeader X_WEAVE_TIMESTAMP>;

        $r2 = specialinvoke r0.<cn.hi321.browser.weave.client.WeaveTransport$WeaveResponseHeaders: java.lang.String getHeaderValue(cn.hi321.browser.weave.client.WeaveHeader)>($r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <cn.hi321.browser.weave.client.WeaveUtil: java.util.Date toModifiedTimeDate(java.lang.String)>($r2);

        return $r3;

     label1:
        return null;
    }
}
