public class com.ffcs.android.mc.util.MD5Util extends java.lang.Object
{
    protected static char[] hexDigits;
    protected static java.security.MessageDigest messagedigest;

    static void <clinit>()
    {
        java.lang.Throwable r0;
        java.security.MessageDigest $r1;
        java.security.NoSuchAlgorithmException $r3;
        char[] $r2;

        $r2 = newarray (char)[16];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r2[10] = 97;

        $r2[11] = 98;

        $r2[12] = 99;

        $r2[13] = 100;

        $r2[14] = 101;

        $r2[15] = 102;

        <com.ffcs.android.mc.util.MD5Util: char[] hexDigits> = $r2;

        <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest> = null;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest> = $r1;

        return;

     label3:
        r0 := @caughtexception;

        $r3 = (java.security.NoSuchAlgorithmException) r0;

        virtualinvoke $r3.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.ffcs.android.mc.util.MD5Util r0;

        r0 := @this: com.ffcs.android.mc.util.MD5Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendHexPair(byte, java.lang.StringBuffer)
    {
        short $s3;
        byte $b0;
        java.lang.StringBuffer $r0;
        int $i4;
        char[] $r1;
        char c1, c2;

        $b0 := @parameter0: byte;

        $r0 := @parameter1: java.lang.StringBuffer;

        $r1 = <com.ffcs.android.mc.util.MD5Util: char[] hexDigits>;

        $s3 = (short) $b0;

        $s3 = $s3 & 240;

        $i4 = (int) $s3;

        $i4 = $i4 >> 4;

        c1 = $r1[$i4];

        $r1 = <com.ffcs.android.mc.util.MD5Util: char[] hexDigits>;

        $b0 = $b0 & 15;

        $i4 = (int) $b0;

        c2 = $r1[$i4];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

        return;
    }

    private static java.lang.String bufferToHex(byte[])
    {
        int $i0;
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String bufferToHex(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    private static java.lang.String bufferToHex(byte[], int, int)
    {
        byte[] $r0;
        byte $b3;
        java.lang.StringBuffer r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r1 = new java.lang.StringBuffer;

        $i2 = $i1 * 2;

        specialinvoke r1.<java.lang.StringBuffer: void <init>(int)>($i2);

        $i1 = 0 + $i1;

     label1:
        if $i0 < $i1 goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $b3 = $r0[$i0];

        staticinvoke <com.ffcs.android.mc.util.MD5Util: void appendHexPair(byte,java.lang.StringBuffer)>($b3, r1);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static boolean checkPassword(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String getMD5String(java.lang.String)>($r0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static java.lang.String getFileMD5String(java.io.File) throws java.io.IOException
    {
        byte[] r1;
        java.security.MessageDigest $r3;
        int $i0;
        java.io.FileInputStream r2;
        java.lang.String $r4;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        r2 = new java.io.FileInputStream;

        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        r1 = newarray (byte)[10485760];

     label1:
        $i0 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[])>(r1);

        if $i0 > 0 goto label2;

        virtualinvoke r2.<java.io.FileInputStream: void close()>();

        $r3 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $r4 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String bufferToHex(byte[])>(r1);

        return $r4;

     label2:
        $r3 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>(r1, 0, $i0);

        goto label1;
    }

    public static java.lang.String getFileMD5String_deprecated(java.io.File) throws java.io.IOException
    {
        byte[] $r6;
        java.security.MessageDigest $r5;
        long $l0;
        java.io.FileInputStream r1;
        java.nio.channels.FileChannel$MapMode $r3;
        java.io.File $r0;
        java.lang.String $r7;
        java.nio.channels.FileChannel $r2;
        java.nio.MappedByteBuffer $r4;

        $r0 := @parameter0: java.io.File;

        r1 = new java.io.FileInputStream;

        specialinvoke r1.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r2 = virtualinvoke r1.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r3 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $r4 = virtualinvoke $r2.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r3, 0L, $l0);

        $r5 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(java.nio.ByteBuffer)>($r4);

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

        $r5 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r7 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String bufferToHex(byte[])>($r6);

        return $r7;
    }

    public static java.lang.String getMD5String(java.lang.String)
    {
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String getMD5String(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String getMD5String(byte[])
    {
        byte[] $r0;
        java.lang.String $r2;
        java.security.MessageDigest $r1;

        $r0 := @parameter0: byte[];

        $r1 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r0);

        $r1 = <com.ffcs.android.mc.util.MD5Util: java.security.MessageDigest messagedigest>;

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <com.ffcs.android.mc.util.MD5Util: java.lang.String bufferToHex(byte[])>($r0);

        return $r2;
    }
}
