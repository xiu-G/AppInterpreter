public class com.apostek.common.InAppTracker extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static android.content.Context mContext;
    public static org.json.JSONObject sdCardRespObject;
    private static java.io.File transactionFile;
    private static org.json.JSONObject transactionsJson;

    static void <clinit>()
    {
        <com.apostek.common.InAppTracker: java.lang.String TAG> = "InAppTracker";

        <com.apostek.common.InAppTracker: org.json.JSONObject sdCardRespObject> = null;

        return;
    }

    public void <init>()
    {
        com.apostek.common.InAppTracker r0;

        r0 := @this: com.apostek.common.InAppTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static android.content.Context access$0()
    {
        android.content.Context r0;

        r0 = <com.apostek.common.InAppTracker: android.content.Context mContext>;

        return r0;
    }

    static void access$1(org.json.JSONObject)
    {
        org.json.JSONObject $r0;

        $r0 := @parameter0: org.json.JSONObject;

        <com.apostek.common.InAppTracker: org.json.JSONObject transactionsJson> = $r0;

        return;
    }

    static org.json.JSONObject access$2()
    {
        org.json.JSONObject r0;

        r0 = <com.apostek.common.InAppTracker: org.json.JSONObject transactionsJson>;

        return r0;
    }

    static boolean access$3(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.apostek.common.InAppTracker: boolean sendLogsToServer(java.lang.String,java.lang.String)>($r0, $r1);

        return $z0;
    }

    static void access$4(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.apostek.common.InAppTracker: void deleteLocalLogs(android.content.Context,java.lang.String)>($r0, $r1);

        return;
    }

    static org.json.JSONObject access$5(com.apostek.common.InAppTransaction)
    {
        org.json.JSONObject $r1;
        com.apostek.common.InAppTransaction $r0;

        $r0 := @parameter0: com.apostek.common.InAppTransaction;

        $r1 = staticinvoke <com.apostek.common.InAppTracker: org.json.JSONObject buildJSON(com.apostek.common.InAppTransaction)>($r0);

        return $r1;
    }

    static boolean access$6(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.apostek.common.InAppTracker: boolean writeJsonToFile(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return $z0;
    }

    private static java.util.List buildHttpPostParams(java.lang.String)
    {
        org.apache.http.message.BasicNameValuePair $r2;
        java.lang.String $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = new org.apache.http.message.BasicNameValuePair;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("data", $r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return r1;
    }

    private static org.json.JSONObject buildJSON(com.apostek.common.InAppTransaction)
    {
        org.json.JSONException r4;
        org.json.JSONObject r1, r2;
        com.apostek.common.InAppTransaction $r0;
        int $i0;
        float $f0;
        java.lang.String $r3;
        double $d0;

        $r0 := @parameter0: com.apostek.common.InAppTransaction;

        r2 = null;

        r1 = new org.json.JSONObject;

     label1:
        specialinvoke r1.<org.json.JSONObject: void <init>()>();

     label2:
        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getTxId()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("txId", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getUserId()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("userId", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getAppVersion()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("appVersion", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getPackId()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("packId", $r3);

        $f0 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: float getPackPrice()>();

     label3:
        $d0 = (double) $f0;

     label4:
        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("packPrice", $d0);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getPartnerInfo()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("partnerInfo", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getPaymentMethod()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("paymentMethod", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getPlatform()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("platform", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getRegion()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("region", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getSource()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("source", $r3);

        $i0 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: int getStatus()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("status", $i0);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getTxDate()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("txDate", $r3);

        $r3 = virtualinvoke $r0.<com.apostek.common.InAppTransaction: java.lang.String getVcBalance()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("vcBalance", $r3);

     label5:
        return r1;

     label6:
        r4 := @caughtexception;

     label7:
        virtualinvoke r4.<org.json.JSONException: void printStackTrace()>();

        return r2;

     label8:
        r4 := @caughtexception;

        r2 = r1;

        goto label7;

        catch org.json.JSONException from label1 to label2 with label6;
        catch org.json.JSONException from label2 to label3 with label8;
        catch org.json.JSONException from label4 to label5 with label8;
    }

    private static void deleteLocalLogs(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        java.io.File r2, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/transactions.json");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean delete()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("deleting file....");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", $r1);

        return;
    }

    public static org.json.JSONObject readFileFromSdCard(android.content.Context, java.lang.String)
    {
        java.lang.Throwable r7;
        android.content.Context $r0;
        byte[] r2;
        java.io.FileInputStream $r3;
        org.json.JSONException r8;
        org.json.JSONObject $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("transactions.json");

     label02:
        r2 = newarray (byte)[1024];

     label03:
        virtualinvoke $r3.<java.io.FileInputStream: int read(byte[])>(r2);

     label04:
        $r1 = new java.lang.String;

     label05:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>(r2);

     label06:
        $r4 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("From file:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", $r5);

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label08:
        $r6 = new org.json.JSONObject;

     label09:
        specialinvoke $r6.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label10:
        return $r6;

     label11:
        r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", "IOException while opening the file");

     label12:
        return null;

     label13:
        r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", "JSONException while opening the file");

        virtualinvoke r8.<org.json.JSONException: void printStackTrace()>();

        goto label12;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch org.json.JSONException from label01 to label02 with label13;
        catch org.json.JSONException from label03 to label04 with label13;
        catch org.json.JSONException from label05 to label06 with label13;
        catch org.json.JSONException from label07 to label08 with label13;
        catch org.json.JSONException from label09 to label10 with label13;
    }

    public static void registerNewInAppTxn(android.content.Context, com.apostek.common.InAppTransaction)
    {
        android.content.Context $r0;
        com.apostek.common.InAppTracker$registerTxnTask $r2;
        com.apostek.common.InAppTransaction $r1;
        com.apostek.common.InAppTransaction[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.apostek.common.InAppTransaction;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", "Transaction is null.");

        return;

     label1:
        <com.apostek.common.InAppTracker: android.content.Context mContext> = $r0;

        $r2 = new com.apostek.common.InAppTracker$registerTxnTask;

        specialinvoke $r2.<com.apostek.common.InAppTracker$registerTxnTask: void <init>()>();

        $r3 = newarray (com.apostek.common.InAppTransaction)[1];

        $r3[0] = $r1;

        virtualinvoke $r2.<com.apostek.common.InAppTracker$registerTxnTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    private static boolean sendLogsToServer(java.lang.String, java.lang.String)
    {
        java.lang.Throwable r2;
        org.apache.http.impl.client.DefaultHttpClient r4;
        org.apache.http.client.methods.HttpPost r6;
        org.apache.http.client.entity.UrlEncodedFormEntity r3;
        org.apache.http.params.BasicHttpParams r5;
        org.apache.http.StatusLine $r9;
        java.util.List $r7;
        int $i0;
        org.apache.http.HttpResponse $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r5 = new org.apache.http.params.BasicHttpParams;

     label01:
        specialinvoke r5.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r5, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r5, 0);

     label02:
        r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label03:
        specialinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>(r5);

     label04:
        r6 = new org.apache.http.client.methods.HttpPost;

     label05:
        specialinvoke r6.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

        $r7 = staticinvoke <com.apostek.common.InAppTracker: java.util.List buildHttpPostParams(java.lang.String)>($r1);

     label06:
        r3 = new org.apache.http.client.entity.UrlEncodedFormEntity;

     label07:
        specialinvoke r3.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>($r7);

        virtualinvoke r6.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r3);

        $r8 = virtualinvoke r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r6);

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

     label08:
        if $i0 != 200 goto label11;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", " Response = 200!");

     label10:
        return 1;

     label11:
        $r10 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("(response.getStatusLine().getStatusCode()= ");

        $r9 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r9.<org.apache.http.StatusLine: int getStatusCode()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", $r0);

     label13:
        return 0;

     label14:
        r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InAppTracker", "IOException while trying to send HTTP POST request");

        return 0;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public static void uploadInAppTxns(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        com.apostek.common.InAppTracker$uploadTxnTask $r3;
        java.lang.String[] $r4;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        <com.apostek.common.InAppTracker: android.content.Context mContext> = $r0;

        $r3 = new com.apostek.common.InAppTracker$uploadTxnTask;

        specialinvoke $r3.<com.apostek.common.InAppTracker$uploadTxnTask: void <init>()>();

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = $r2;

        $r4[1] = $r1;

        virtualinvoke $r3.<com.apostek.common.InAppTracker$uploadTxnTask: android.os.AsyncTask execute(java.lang.Object[])>($r4);

        return;
    }

    private static boolean writeJsonToFile(android.content.Context, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r3;
        android.content.Context $r0;
        byte[] $r5;
        java.io.FileOutputStream $r4;
        java.io.IOException $r6;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("transactions.json", 2);

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r5);

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r4.<java.io.FileOutputStream: void flush()>();

     label2:
        return 1;

     label3:
        r3 := @caughtexception;

        $r6 = (java.io.IOException) r3;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
