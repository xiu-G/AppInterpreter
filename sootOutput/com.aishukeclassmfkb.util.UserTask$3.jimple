class com.aishukeclassmfkb.util.UserTask$3 extends java.util.concurrent.FutureTask
{
    final com.aishukeclassmfkb.util.UserTask this$0;

    void <init>(com.aishukeclassmfkb.util.UserTask, java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable $r2;
        com.aishukeclassmfkb.util.UserTask$3 r0;
        com.aishukeclassmfkb.util.UserTask $r1;

        r0 := @this: com.aishukeclassmfkb.util.UserTask$3;

        $r1 := @parameter0: com.aishukeclassmfkb.util.UserTask;

        $r2 := @parameter1: java.util.concurrent.Callable;

        r0.<com.aishukeclassmfkb.util.UserTask$3: com.aishukeclassmfkb.util.UserTask this$0> = $r1;

        specialinvoke r0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r2);

        return;
    }

    protected void done()
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.lang.Object[] $r5;
        com.aishukeclassmfkb.util.UserTask$3 r0;
        java.lang.RuntimeException $r12;
        java.util.concurrent.ExecutionException $r13;
        com.aishukeclassmfkb.util.UserTask$InternalHandler $r3;
        android.os.Message $r6;
        com.aishukeclassmfkb.util.UserTask$UserTaskResult $r11;
        java.lang.Object $r1, $r2;
        com.aishukeclassmfkb.util.UserTask $r4;

        r0 := @this: com.aishukeclassmfkb.util.UserTask$3;

        $r1 = null;

     label1:
        $r2 = virtualinvoke r0.<com.aishukeclassmfkb.util.UserTask$3: java.lang.Object get()>();

     label2:
        $r1 = $r2;

     label3:
        $r3 = staticinvoke <com.aishukeclassmfkb.util.UserTask: com.aishukeclassmfkb.util.UserTask$InternalHandler access$200()>();

        $r11 = new com.aishukeclassmfkb.util.UserTask$UserTaskResult;

        $r4 = r0.<com.aishukeclassmfkb.util.UserTask$3: com.aishukeclassmfkb.util.UserTask this$0>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

        specialinvoke $r11.<com.aishukeclassmfkb.util.UserTask$UserTaskResult: void <init>(com.aishukeclassmfkb.util.UserTask,java.lang.Object[])>($r4, $r5);

        $r6 = virtualinvoke $r3.<com.aishukeclassmfkb.util.UserTask$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r11);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;

     label4:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("UserTask", $r7);

        goto label3;

     label5:
        $r8 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        $r13 = (java.util.concurrent.ExecutionException) $r8;

        $r7 = virtualinvoke $r13.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r7);

        throw $r12;

     label6:
        $r9 := @caughtexception;

        $r3 = staticinvoke <com.aishukeclassmfkb.util.UserTask: com.aishukeclassmfkb.util.UserTask$InternalHandler access$200()>();

        $r11 = new com.aishukeclassmfkb.util.UserTask$UserTaskResult;

        $r4 = r0.<com.aishukeclassmfkb.util.UserTask$3: com.aishukeclassmfkb.util.UserTask this$0>;

        specialinvoke $r11.<com.aishukeclassmfkb.util.UserTask$UserTaskResult: void <init>(com.aishukeclassmfkb.util.UserTask,java.lang.Object[])>($r4, null);

        $r6 = virtualinvoke $r3.<com.aishukeclassmfkb.util.UserTask$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r11);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;

     label7:
        $r10 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("An error occured while executing doInBackground()", $r10);

        throw $r12;

        catch java.lang.InterruptedException from label1 to label2 with label4;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label5;
        catch java.util.concurrent.CancellationException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
    }
}
