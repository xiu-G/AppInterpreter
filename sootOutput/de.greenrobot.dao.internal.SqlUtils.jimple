public class de.greenrobot.dao.internal.SqlUtils extends java.lang.Object
{

    public void <init>()
    {
        de.greenrobot.dao.internal.SqlUtils r0;

        r0 := @this: de.greenrobot.dao.internal.SqlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.StringBuilder appendColumn(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        return $r0;
    }

    public static java.lang.StringBuilder appendColumn(java.lang.StringBuilder, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        return $r0;
    }

    public static java.lang.StringBuilder appendColumns(java.lang.StringBuilder, java.lang.String, java.lang.String[])
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;
        java.lang.String[] $r2;
        java.lang.String $r1, $r3;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r0, "T", $r3);

        $i2 = $i0 + -1;

        if $i1 >= $i2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static java.lang.StringBuilder appendColumns(java.lang.StringBuilder, java.lang.String[])
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r2 = $r1[$i1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $i2 = $i0 + -1;

        if $i1 >= $i2 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder, java.lang.String, java.lang.String[])
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String[] $r2;
        java.lang.String $r1, $r4;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r4 = $r2[$i0];

        $r3 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r0, $r1, $r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $i1 = lengthof $r2;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static java.lang.StringBuilder appendColumnsEqualPlaceholders(java.lang.StringBuilder, java.lang.String[])
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r2;
        java.lang.String[] $r1;
        java.lang.String $r3;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r1 := @parameter1: java.lang.String[];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r3 = $r1[$i0];

        $r2 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String)>($r0, $r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=?");

        $i1 = lengthof $r1;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public static java.lang.StringBuilder appendPlaceholders(java.lang.StringBuilder, int)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;

        $r0 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $i2 = $i0 + -1;

        if $i1 >= $i2 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?,");

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        goto label2;

     label4:
        return $r0;
    }

    public static java.lang.String createSqlDelete(java.lang.String, java.lang.String[])
    {
        int $i0;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("DELETE FROM ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[])>($r2, $r0, $r1);

     label1:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createSqlInsert(java.lang.String, java.lang.String, java.lang.String[])
    {
        int $i0;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String[])>($r3, $r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") VALUES (");

        $i0 = lengthof $r2;

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendPlaceholders(java.lang.StringBuilder,int)>($r3, $i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createSqlSelect(java.lang.String, java.lang.String, java.lang.String[])
    {
        de.greenrobot.dao.DaoException $r4;
        int $i0;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT ");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 0 goto label1;

        $r4 = new de.greenrobot.dao.DaoException;

        specialinvoke $r4.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("Table alias required");

        throw $r4;

     label1:
        $r5 = staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String,java.lang.String[])>($r3, "T", $r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createSqlSelectCountStar(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT COUNT(*) FROM ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if $r1 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String createSqlUpdate(java.lang.String, java.lang.String[], java.lang.String[])
    {
        java.lang.String[] $r1, $r2;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("UPDATE ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SET ");

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumnsEqualPlaceholders(java.lang.StringBuilder,java.lang.String[])>($r3, $r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        staticinvoke <de.greenrobot.dao.internal.SqlUtils: java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[])>($r3, $r0, $r2);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
