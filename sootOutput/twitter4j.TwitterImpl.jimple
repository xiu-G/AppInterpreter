class twitter4j.TwitterImpl extends twitter4j.TwitterBaseImpl implements twitter4j.Twitter
{
    private static final java.util.Map implicitParamsMap;
    private static final java.util.Map implicitParamsStrMap;
    private static final long serialVersionUID;
    private final twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS;
    private final java.lang.String IMPLICIT_PARAMS_STR;
    private final twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <twitter4j.TwitterImpl: long serialVersionUID> = -1486360080128882436L;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <twitter4j.TwitterImpl: java.util.Map implicitParamsMap> = $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <twitter4j.TwitterImpl: java.util.Map implicitParamsStrMap> = $r0;

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.auth.Authorization)
    {
        twitter4j.auth.Authorization $r2;
        java.lang.Object[] $r13;
        long $l0;
        java.util.ArrayList $r12;
        byte $b1;
        java.util.Map $r4;
        int $i2;
        twitter4j.TwitterImpl r0;
        java.lang.String $r7, $r8, $r11;
        twitter4j.internal.http.HttpParameter[] $r6;
        boolean $z0;
        twitter4j.internal.http.HttpParameter $r3;
        twitter4j.conf.Configuration $r1;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.auth.Authorization;

        specialinvoke r0.<twitter4j.TwitterBaseImpl: void <init>(twitter4j.conf.Configuration,twitter4j.auth.Authorization)>($r1, $r2);

        $r3 = new twitter4j.internal.http.HttpParameter;

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isIncludeMyRetweetEnabled()>();

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("include_my_retweet", $z0);

        r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET> = $r3;

        $r4 = <twitter4j.TwitterImpl: java.util.Map implicitParamsMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (twitter4j.internal.http.HttpParameter[]) $r5;

        $r4 = <twitter4j.TwitterImpl: java.util.Map implicitParamsStrMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r7 = (java.lang.String) $r5;

        if $r6 != null goto label07;

        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isIncludeEntitiesEnabled()>();

        if $z0 == 0 goto label08;

        $r7 = "1";

     label01:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isIncludeRTsEnabled()>();

        if $z0 == 0 goto label09;

        $r8 = "1";

     label02:
        $l0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: long getContributingTo()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label10;

        $z0 = 1;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("include_entities=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&include_rts=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        if $z0 == 0 goto label11;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("&contributingto=");

        $l0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: long getContributingTo()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <twitter4j.TwitterImpl: java.util.Map implicitParamsStrMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r11);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(4);

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("include_entities", $r7);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("include_rts", $r8);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r3 = new twitter4j.internal.http.HttpParameter;

        $l0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: long getContributingTo()>();

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("contributingto", $l0);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r3);

     label05:
        $z0 = interfaceinvoke $r1.<twitter4j.conf.Configuration: boolean isTrimUserEnabled()>();

        if $z0 == 0 goto label06;

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("trim_user", "1");

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r3);

     label06:
        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[$i2];

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r6 = (twitter4j.internal.http.HttpParameter[]) $r13;

        $r4 = <twitter4j.TwitterImpl: java.util.Map implicitParamsMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

        $r7 = $r11;

     label07:
        r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS> = $r6;

        r0.<twitter4j.TwitterImpl: java.lang.String IMPLICIT_PARAMS_STR> = $r7;

        return;

     label08:
        $r7 = "0";

        goto label01;

     label09:
        $r8 = "0";

        goto label02;

     label10:
        $z0 = 0;

        goto label03;

     label11:
        $r11 = "";

        goto label04;
    }

    private void addParameterToList(java.util.List, java.lang.String, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r4;
        java.util.List $r1;
        twitter4j.TwitterImpl r0;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label1;

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

    private void checkFileValidity(java.io.File)
    {
        java.io.IOException $r6;
        java.io.File $r1;
        java.io.FileNotFoundException $r3;
        twitter4j.TwitterImpl r0;
        twitter4j.TwitterException $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r2 = new twitter4j.TwitterException;

        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not found.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r5);

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r2;

     label1:
        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label2;

        $r2 = new twitter4j.TwitterException;

        $r6 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a file.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r5);

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r2;

     label2:
        return;
    }

    private twitter4j.internal.http.HttpResponse get(java.lang.String)
    {
        java.lang.Throwable $r7;
        twitter4j.auth.Authorization $r5;
        twitter4j.internal.http.HttpClientWrapper $r4;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.TwitterImpl: void ensureAuthorizationEnabled()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r1 = r0.<twitter4j.TwitterImpl: java.lang.String IMPLICIT_PARAMS_STR>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $z0 = interfaceinvoke $r3.<twitter4j.conf.Configuration: boolean isMBeanEnabled()>();

        if $z0 != 0 goto label3;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.auth.Authorization)>($r1, $r5);

        return $r6;

     label2:
        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r1 = r0.<twitter4j.TwitterImpl: java.lang.String IMPLICIT_PARAMS_STR>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label3:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label4:
        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.auth.Authorization)>($r1, $r5);

     label5:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $r6;

     label6:
        $r7 := @caughtexception;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        throw $r7;

        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private twitter4j.internal.http.HttpResponse get(java.lang.String, twitter4j.internal.http.HttpParameter[])
    {
        java.lang.Throwable $r7;
        twitter4j.auth.Authorization $r5;
        twitter4j.internal.http.HttpClientWrapper $r4;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpParameter[] $r2;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.internal.http.HttpParameter[];

        virtualinvoke r0.<twitter4j.TwitterImpl: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $z0 = interfaceinvoke $r3.<twitter4j.conf.Configuration: boolean isMBeanEnabled()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r2 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[])>($r2);

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r2, $r5);

        return $r6;

     label1:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r2 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[])>($r2);

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r2, $r5);

     label3:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $r6;

     label4:
        $r7 := @caughtexception;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private boolean isOk(twitter4j.internal.http.HttpResponse)
    {
        int $i0;
        twitter4j.TwitterImpl r0;
        twitter4j.internal.http.HttpResponse $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: int getStatusCode()>();

        if $i0 >= 300 goto label1;

        return 1;

     label1:
        return 0;
    }

    private twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[])
    {
        twitter4j.TwitterImpl r0;
        twitter4j.internal.http.HttpParameter[] $r1, $r2;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS>;

        $r1 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r1, $r2);

        return $r1;
    }

    private twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[], twitter4j.internal.http.HttpParameter)
    {
        twitter4j.internal.http.HttpParameter $r1;
        int $i0, $i1;
        twitter4j.TwitterImpl r0;
        twitter4j.internal.http.HttpParameter[] $r2, $r3;

        r0 := @this: twitter4j.TwitterImpl;

        $r2 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r1 := @parameter1: twitter4j.internal.http.HttpParameter;

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        $i0 = lengthof $r2;

        $i0 = $i0 + 1;

        $r3 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i0 = lengthof $r3;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r3[$i0] = $r1;

        return $r3;

     label1:
        if $r2 != null goto label2;

        if $r1 != null goto label2;

        $r2 = newarray (twitter4j.internal.http.HttpParameter)[0];

        return $r2;

     label2:
        if $r2 != null goto label3;

        $r2 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2[0] = $r1;

     label3:
        return $r2;
    }

    private twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[], twitter4j.internal.http.HttpParameter[])
    {
        int $i0, $i1;
        twitter4j.TwitterImpl r0;
        twitter4j.internal.http.HttpParameter[] $r1, $r2, $r3;

        r0 := @this: twitter4j.TwitterImpl;

        $r2 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r1 := @parameter1: twitter4j.internal.http.HttpParameter[];

        if $r2 == null goto label1;

        if $r1 == null goto label1;

        $i0 = lengthof $r2;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r3 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, $i1, $i0);

        return $r3;

     label1:
        if $r2 != null goto label2;

        if $r1 != null goto label2;

        $r2 = newarray (twitter4j.internal.http.HttpParameter)[0];

        return $r2;

     label2:
        if $r2 != null goto label3;

        return $r1;

     label3:
        return $r2;
    }

    private twitter4j.internal.http.HttpResponse post(java.lang.String)
    {
        java.lang.Throwable $r7;
        twitter4j.auth.Authorization $r5;
        twitter4j.internal.http.HttpClientWrapper $r3;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r2;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpParameter[] $r4;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.TwitterImpl: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isMBeanEnabled()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS>;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r3.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r4, $r5);

        return $r6;

     label1:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] IMPLICIT_PARAMS>;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r3.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r4, $r5);

     label3:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $r6;

     label4:
        $r7 := @caughtexception;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private twitter4j.internal.http.HttpResponse post(java.lang.String, twitter4j.internal.http.HttpParameter[])
    {
        java.lang.Throwable $r7;
        twitter4j.auth.Authorization $r5;
        twitter4j.internal.http.HttpClientWrapper $r4;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1;
        twitter4j.internal.http.HttpParameter[] $r2;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.internal.http.HttpParameter[];

        virtualinvoke r0.<twitter4j.TwitterImpl: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $z0 = interfaceinvoke $r3.<twitter4j.conf.Configuration: boolean isMBeanEnabled()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r2 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[])>($r2);

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r2, $r5);

        return $r6;

     label1:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpClientWrapper http>;

        $r2 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeImplicitParams(twitter4j.internal.http.HttpParameter[])>($r2);

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.auth.Authorization auth>;

        $r6 = virtualinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],twitter4j.auth.Authorization)>($r1, $r2, $r5);

     label3:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $r6;

     label4:
        $r7 := @caughtexception;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        throw $r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private transient twitter4j.UserList updateUserList(java.lang.String, boolean, java.lang.String, twitter4j.internal.http.HttpParameter[])
    {
        twitter4j.internal.http.HttpParameter $r5;
        twitter4j.internal.json.z_T4JInternalFactory $r6;
        java.lang.Object[] $r9;
        java.util.ArrayList $r4;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.UserList $r11;
        twitter4j.conf.Configuration $r8;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r7;
        java.lang.String $r1, $r2;
        twitter4j.internal.http.HttpParameter[] $r3;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: twitter4j.internal.http.HttpParameter[];

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, $r3);

        if $r1 == null goto label1;

        $r5 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $r5 = new twitter4j.internal.http.HttpParameter;

        if $z0 == 0 goto label4;

        $r1 = "public";

     label2:
        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("mode", $r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        if $r2 == null goto label3;

        $r5 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r5.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("description", $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r7 = new java.lang.StringBuilder;

        $r8 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r8.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/update.json");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r3 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r9 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (twitter4j.internal.http.HttpParameter[]) $r9;

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $r3);

        $r11 = interfaceinvoke $r6.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;

     label4:
        $r1 = "private";

        goto label2;
    }

    public twitter4j.UserList addUserListMember(int, long)
    {
        int $i0;
        twitter4j.TwitterImpl r0;
        long $l1;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        return null;
    }

    public twitter4j.UserList addUserListMember(long, java.lang.String, long)
    {
        twitter4j.TwitterImpl r0;
        long $l0, $l1;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        return null;
    }

    public twitter4j.UserList addUserListMembers(int, long[])
    {
        long[] $r1;
        twitter4j.UserList $r2;
        int $i0;
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: long[];

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList createUserListMembers(int,long[])>($i0, $r1);

        return $r2;
    }

    public twitter4j.UserList addUserListMembers(int, java.lang.String[])
    {
        twitter4j.UserList $r2;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.String[] $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList createUserListMembers(int,java.lang.String[])>($i0, $r1);

        return $r2;
    }

    public twitter4j.UserList addUserListMembers(long, java.lang.String, long[])
    {
        long[] $r2;
        twitter4j.UserList $r3;
        twitter4j.TwitterImpl r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: long[];

        $r3 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList createUserListMembers(long,java.lang.String,long[])>($l0, $r1, $r2);

        return $r3;
    }

    public twitter4j.UserList addUserListMembers(long, java.lang.String, java.lang.String[])
    {
        twitter4j.UserList $r3;
        twitter4j.TwitterImpl r0;
        long $l0;
        java.lang.String[] $r2;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList createUserListMembers(long,java.lang.String,java.lang.String[])>($l0, $r1, $r2);

        return $r3;
    }

    public twitter4j.User createBlock(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/create.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User createBlock(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/create.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.Status createFavorite(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.Status $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/create.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User createFriendship(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/create.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User createFriendship(long, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/create.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&follow=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User createFriendship(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/create.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.User createFriendship(java.lang.String, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/create.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&follow=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.Place createPlace(java.lang.String, java.lang.String, java.lang.String, twitter4j.GeoLocation, java.lang.String)
    {
        java.lang.Object[] $r12;
        java.util.ArrayList $r6;
        twitter4j.internal.http.HttpResponse $r13;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1, $r2, $r3, $r5;
        twitter4j.internal.http.HttpParameter[] $r11;
        double $d0;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.internal.json.z_T4JInternalFactory $r8;
        twitter4j.Place $r14;
        twitter4j.GeoLocation $r4;
        twitter4j.conf.Configuration $r10;
        java.lang.StringBuilder $r9;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: twitter4j.GeoLocation;

        $r5 := @parameter4: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(3);

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("contained_within", $r2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("token", $r3);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r7 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r4.<twitter4j.GeoLocation: double getLatitude()>();

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("lat", $d0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r7 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r4.<twitter4j.GeoLocation: double getLongitude()>();

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("long", $d0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        if $r5 == null goto label1;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("attribute:street_address", $r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        $r8 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r9 = new java.lang.StringBuilder;

        $r10 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r10.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo/place.json");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r11 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r12 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11);

        $r11 = (twitter4j.internal.http.HttpParameter[]) $r12;

        $r13 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $r11);

        $r14 = interfaceinvoke $r8.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse)>($r13);

        return $r14;
    }

    public twitter4j.SavedSearch createSavedSearch(java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.SavedSearch $r9;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saved_searches/create.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("query", $r1);

        $r7[0] = $r2;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r9 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList createUserList(java.lang.String, boolean, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r4;
        twitter4j.internal.json.z_T4JInternalFactory $r5;
        java.lang.Object[] $r9;
        java.util.ArrayList $r3;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.UserList $r11;
        twitter4j.conf.Configuration $r7;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2;
        twitter4j.internal.http.HttpParameter[] $r8;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r4 = new twitter4j.internal.http.HttpParameter;

        if $z0 == 0 goto label3;

        $r1 = "public";

     label1:
        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("mode", $r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        if $r2 == null goto label2;

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("description", $r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r6 = new java.lang.StringBuilder;

        $r7 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r7.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/create.json");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r8 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r9 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r8 = (twitter4j.internal.http.HttpParameter[]) $r9;

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $r8);

        $r11 = interfaceinvoke $r5.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;

     label3:
        $r1 = "private";

        goto label1;
    }

    public twitter4j.UserList createUserListMember(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpParameter $r6;
        long $l1;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.internal.http.HttpParameter[] $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l1);

        $r5[0] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r5[1] = $r6;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r4, $r5);

        $r8 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.UserList createUserListMember(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.UserList $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r6[1] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r6[2] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList createUserListMember(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        long $l0;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r7[1] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r7[2] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList createUserListMembers(int, long[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long[] $r1;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: long[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        $r8 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(long[])>($r1);

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("user_id", $r8);

        $r6[1] = $r7;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r10 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList createUserListMembers(int, java.lang.String[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        java.lang.String[] $r1;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r8;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        $r8 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r1);

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r8);

        $r6[1] = $r7;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r10 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList createUserListMembers(long, java.lang.String, long[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        long $l0;
        long[] $r2;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: long[];

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r7[1] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        $r1 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(long[])>($r2);

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("user_id", $r1);

        $r7[2] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList createUserListMembers(long, java.lang.String, java.lang.String[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        long $l0;
        java.lang.String[] $r2;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String[];

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r7[1] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        $r1 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r2);

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r7[2] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList createUserListMembers(java.lang.String, java.lang.String, long[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r4;
        twitter4j.internal.http.HttpParameter $r9;
        long[] $r3;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.UserList $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r7;
        twitter4j.internal.http.HttpParameter[] $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: long[];

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r5 = new java.lang.StringBuilder;

        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r9 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r8[0] = $r9;

        $r9 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r8[1] = $r9;

        $r9 = new twitter4j.internal.http.HttpParameter;

        $r1 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(long[])>($r3);

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("user_id", $r1);

        $r8[2] = $r9;

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r11 = interfaceinvoke $r4.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.UserList createUserListMembers(java.lang.String, java.lang.String, java.lang.String[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r4;
        twitter4j.internal.http.HttpParameter $r9;
        java.lang.String[] $r3;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.UserList $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r7;
        twitter4j.internal.http.HttpParameter[] $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r5 = new java.lang.StringBuilder;

        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/create_all.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r9 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r8[0] = $r9;

        $r9 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r8[1] = $r9;

        $r9 = new twitter4j.internal.http.HttpParameter;

        $r1 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r3);

        specialinvoke $r9.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r8[2] = $r9;

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r11 = interfaceinvoke $r4.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.UserList createUserListSubscription(int)
    {
        twitter4j.internal.http.HttpParameter $r1;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/create.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r1 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r1.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r6[0] = $r1;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.UserList createUserListSubscription(long, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.UserList $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/create.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList createUserListSubscription(java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/create.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r7[1] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList deleteUserListMember(int, long)
    {
        twitter4j.UserList $r1;
        int $i0;
        twitter4j.TwitterImpl r0;
        long $l1;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList destroyUserListMember(int,long)>($i0, $l1);

        return $r1;
    }

    public twitter4j.UserList deleteUserListMember(long, java.lang.String, long)
    {
        twitter4j.UserList $r2;
        twitter4j.TwitterImpl r0;
        long $l0, $l1;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList destroyUserListMember(long,java.lang.String,long)>($l0, $r1, $l1);

        return $r2;
    }

    public twitter4j.User destroyBlock(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/destroy.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User destroyBlock(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/destroy.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.DirectMessage destroyDirectMessage(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.DirectMessage $r6;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/destroy.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Status destroyFavorite(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.Status $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/destroy.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User destroyFriendship(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/destroy.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User destroyFriendship(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/destroy.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.SavedSearch destroySavedSearch(int)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.SavedSearch $r6;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saved_searches/destroy/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Status destroyStatus(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.Status $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/destroy/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.UserList destroyUserList(int)
    {
        twitter4j.internal.http.HttpParameter $r1;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/destroy.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r1 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r1.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r6[0] = $r1;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.UserList destroyUserList(long, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.UserList $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/destroy.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList destroyUserList(java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/destroy.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r7[1] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList destroyUserListMember(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpParameter $r6;
        long $l1;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.internal.http.HttpParameter[] $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/destroy.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r5[0] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l1);

        $r5[1] = $r6;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r4, $r5);

        $r8 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.UserList destroyUserListMember(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.UserList $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/destroy.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r6[1] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l1);

        $r6[2] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList destroyUserListMember(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        long $l0;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/destroy.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r7[1] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r7[2] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.UserList destroyUserListSubscription(int)
    {
        twitter4j.internal.http.HttpParameter $r1;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/destroy.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r1 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r1.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r6[0] = $r1;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.UserList destroyUserListSubscription(long, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.UserList $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/destroy.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.UserList destroyUserListSubscription(java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.UserList $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/destroy.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r7[1] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.api.DirectMessagesResources directMessages()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.FavoritesResources favorites()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.FriendsFollowersResources friendsFollowers()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.TwitterAPIConfiguration getAPIConfiguration()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.TwitterAPIConfiguration $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("help/configuration.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.TwitterAPIConfiguration createTwitterAPIConfiguration(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.AccountSettings getAccountSettings()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.AccountSettings $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/settings.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getAvailableTrends()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trends/available.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getAvailableTrends(twitter4j.GeoLocation)
    {
        twitter4j.TwitterImpl r0;
        twitter4j.ResponseList $r2;
        twitter4j.GeoLocation $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.GeoLocation;

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation)>($r1);

        return $r2;
    }

    public twitter4j.IDs getBlocksIDs()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/ids.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getBlocksIDs(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/ids.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getBlocksList()
    {
        twitter4j.TwitterImpl r0;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.PagableResponseList getBlocksList(long)>(-1L);

        return $r1;
    }

    public twitter4j.PagableResponseList getBlocksList(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks/list.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getClosestTrends(twitter4j.GeoLocation)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.GeoLocation $r1;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r9;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        double $d0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.GeoLocation;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trends/closest.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r1.<twitter4j.GeoLocation: double getLatitude()>();

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("lat", $d0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r1.<twitter4j.GeoLocation: double getLongitude()>();

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("long", $d0);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createLocationList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getContributees(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/contributees.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getContributees(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/contributees.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getContributors(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/contributors.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getContributors(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/contributors.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getDirectMessages()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getDirectMessages(twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getFavorites()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getFavorites(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getFavorites(long, twitter4j.Paging)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long $l0;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r10;
        java.lang.String $r6;
        twitter4j.internal.http.HttpParameter[] $r7, $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: twitter4j.Paging;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r7[0] = $r2;

        $r8 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.ResponseList getFavorites(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getFavorites(java.lang.String, twitter4j.Paging)
    {
        twitter4j.internal.http.HttpParameter $r3;
        twitter4j.internal.json.z_T4JInternalFactory $r4;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r6;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r2;
        java.lang.StringBuilder $r5;
        twitter4j.ResponseList $r11;
        java.lang.String $r1, $r7;
        twitter4j.internal.http.HttpParameter[] $r8, $r9;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.Paging;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r5 = new java.lang.StringBuilder;

        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r8[0] = $r3;

        $r9 = virtualinvoke $r2.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r8, $r9);

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r11 = interfaceinvoke $r4.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.ResponseList getFavorites(twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("favorites/list.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.IDs getFollowersIDs(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("followers/ids.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getFollowersIDs(long, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("followers/ids.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getFollowersIDs(java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("followers/ids.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFollowersList(long, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("followers/list.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getFollowersList(java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("followers/list.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getFriendsIDs(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friends/ids.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getFriendsIDs(long, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friends/ids.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getFriendsIDs(java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friends/ids.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFriendsList(long, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friends/list.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getFriendsList(java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friends/list.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.Place getGeoDetails(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.Place $r7;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo/id/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Place createPlace(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getHomeTimeline()
    {
        twitter4j.internal.http.HttpParameter $r1;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/home_timeline.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r6[0] = $r1;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getHomeTimeline(twitter4j.Paging)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r10;
        java.lang.String $r6;
        twitter4j.internal.http.HttpParameter[] $r7, $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/home_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r8 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r8[0] = $r2;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.IDs getIncomingFriendships(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/incoming.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getLanguages()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("help/languages.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createLanguageList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Trends getLocationTrends(int)
    {
        int $i0;
        twitter4j.TwitterImpl r0;
        twitter4j.Trends $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.Trends getPlaceTrends(int)>($i0);

        return $r1;
    }

    public twitter4j.ResponseList getMemberSuggestions(java.lang.String)
    {
        java.lang.Throwable $r8;
        twitter4j.internal.json.z_T4JInternalFactory $r6;
        java.lang.RuntimeException $r9;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

     label1:
        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/suggestions/");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/members.json");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

     label2:
        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r7 = interfaceinvoke $r6.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserListFromJSONArray(twitter4j.internal.http.HttpResponse)>($r5);

        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public twitter4j.ResponseList getMentions()
    {
        twitter4j.TwitterImpl r0;
        twitter4j.ResponseList $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getMentionsTimeline()>();

        return $r1;
    }

    public twitter4j.ResponseList getMentions(twitter4j.Paging)
    {
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r2;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging)>($r1);

        return $r2;
    }

    public twitter4j.ResponseList getMentionsTimeline()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/mentions_timeline.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getMentionsTimeline(twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/mentions_timeline.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.OEmbed getOEmbed(twitter4j.OEmbedRequest)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.OEmbed $r8;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.OEmbedRequest $r1;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.OEmbedRequest;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/oembed.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.OEmbedRequest: twitter4j.internal.http.HttpParameter[] asHttpParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.OEmbed createOEmbed(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.IDs getOutgoingFriendships(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/outgoing.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Trends getPlaceTrends(int)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.Trends $r6;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trends/place.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Trends createTrends(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public java.lang.String getPrivacyPolicy()
    {
        twitter4j.internal.org.json.JSONException $r6;
        twitter4j.internal.http.HttpResponse $r4;
        twitter4j.conf.Configuration $r2;
        twitter4j.TwitterImpl r0;
        twitter4j.TwitterException $r7;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        twitter4j.internal.org.json.JSONObject $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = new java.lang.StringBuilder;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

     label1:
        $r3 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("help/privacy.json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("privacy");

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    public java.util.Map getRateLimitStatus()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        java.util.Map $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application/rate_limit_status.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public transient java.util.Map getRateLimitStatus(java.lang.String[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        java.lang.String[] $r1;
        twitter4j.internal.http.HttpResponse $r6;
        java.util.Map $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application/rate_limit_status.json?resources=");

        $r5 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r5);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: java.util.Map createRateLimitStatuses(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getRetweeterIds(long, int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l2;
        twitter4j.internal.http.HttpResponse $r5;
        int $i1;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.IDs $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $l2 := @parameter2: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/retweeters/ids.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&count=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.IDs createIDs(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.IDs getRetweeterIds(long, long)
    {
        twitter4j.TwitterImpl r0;
        long $l0, $l1;
        twitter4j.IDs $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.IDs getRetweeterIds(long,int,long)>($l0, 100, $l1);

        return $r1;
    }

    public twitter4j.ResponseList getRetweets(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/retweets/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json?count=100");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getRetweetsOfMe()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/retweets_of_me.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/retweets_of_me.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getSavedSearches()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saved_searches/list.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createSavedSearchList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getSentDirectMessages()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/sent.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/sent.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createDirectMessageList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.SimilarPlaces getSimilarPlaces(twitter4j.GeoLocation, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r11;
        java.util.ArrayList $r5;
        twitter4j.SimilarPlaces $r13;
        twitter4j.internal.http.HttpResponse $r12;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.String $r2, $r3, $r4;
        twitter4j.internal.http.HttpParameter[] $r10;
        double $d0;
        twitter4j.internal.http.HttpParameter $r6;
        twitter4j.internal.json.z_T4JInternalFactory $r7;
        twitter4j.GeoLocation $r1;
        twitter4j.conf.Configuration $r9;
        java.lang.StringBuilder $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.GeoLocation;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(3);

        $r6 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r1.<twitter4j.GeoLocation: double getLatitude()>();

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("lat", $d0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new twitter4j.internal.http.HttpParameter;

        $d0 = virtualinvoke $r1.<twitter4j.GeoLocation: double getLongitude()>();

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,double)>("long", $d0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        if $r3 == null goto label1;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("contained_within", $r3);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        if $r4 == null goto label2;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("attribute:street_address", $r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        $r7 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r8 = new java.lang.StringBuilder;

        $r9 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo/similar_places.json");

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r10 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r10 = (twitter4j.internal.http.HttpParameter[]) $r11;

        $r12 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r2, $r10);

        $r13 = interfaceinvoke $r7.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.SimilarPlaces createSimilarPlaces(twitter4j.internal.http.HttpResponse)>($r12);

        return $r13;
    }

    public twitter4j.ResponseList getSuggestedUserCategories()
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/suggestions.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createCategoryList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public java.lang.String getTermsOfService()
    {
        twitter4j.internal.org.json.JSONException $r6;
        twitter4j.internal.http.HttpResponse $r4;
        twitter4j.conf.Configuration $r2;
        twitter4j.TwitterImpl r0;
        twitter4j.TwitterException $r7;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        twitter4j.internal.org.json.JSONObject $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = new java.lang.StringBuilder;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

     label1:
        $r3 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("help/tos.json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = virtualinvoke $r5.<twitter4j.internal.org.json.JSONObject: java.lang.String getString(java.lang.String)>("tos");

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        $r7 = new twitter4j.TwitterException;

        specialinvoke $r7.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r7;

        catch twitter4j.internal.org.json.JSONException from label1 to label2 with label3;
    }

    public twitter4j.PagableResponseList getUserListMembers(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l1;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members.json?list_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getUserListMembers(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members.json?owner_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getUserListMembers(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.PagableResponseList $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members.json?owner_screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r8 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getUserListMemberships(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/memberships.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getUserListMemberships(long, long)
    {
        twitter4j.TwitterImpl r0;
        long $l0, $l1;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.PagableResponseList getUserListMemberships(long,long,boolean)>($l0, $l1, 0);

        return $r1;
    }

    public twitter4j.PagableResponseList getUserListMemberships(long, long, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/memberships.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&filter_to_owned_lists=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getUserListMemberships(java.lang.String, long)
    {
        twitter4j.TwitterImpl r0;
        long $l0;
        java.lang.String $r1;
        twitter4j.PagableResponseList $r2;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.PagableResponseList getUserListMemberships(java.lang.String,long,boolean)>($r1, $l0, 0);

        return $r2;
    }

    public twitter4j.PagableResponseList getUserListMemberships(java.lang.String, long, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $z0 := @parameter2: boolean;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/memberships.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&filter_to_owned_lists=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getUserListStatuses(int, twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.http.HttpResponse $r9;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        char[] $r6;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r10;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/statuses.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <twitter4j.Paging: char[] SMCP>;

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray(char[],java.lang.String)>($r6, "count");

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter)>($r7, $r8);

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r7);

        $r10 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.ResponseList getUserListStatuses(long, java.lang.String, twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r10;
        long $l0;
        twitter4j.internal.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r2;
        char[] $r7;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r12;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r8, $r9;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: twitter4j.Paging;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/statuses.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = <twitter4j.Paging: char[] SMCP>;

        $r8 = virtualinvoke $r2.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray(char[],java.lang.String)>($r7, "count");

        $r9 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r9[0] = $r10;

        $r10 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r10.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r9[1] = $r10;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r8, $r9);

        $r11 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r8);

        $r12 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r11);

        return $r12;
    }

    public twitter4j.ResponseList getUserListStatuses(java.lang.String, java.lang.String, twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r4;
        twitter4j.internal.http.HttpParameter $r11;
        twitter4j.internal.http.HttpResponse $r12;
        twitter4j.conf.Configuration $r6;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r3;
        char[] $r8;
        java.lang.StringBuilder $r5;
        twitter4j.ResponseList $r13;
        java.lang.String $r1, $r2, $r7;
        twitter4j.internal.http.HttpParameter[] $r9, $r10;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.Paging;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r5 = new java.lang.StringBuilder;

        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/statuses.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = <twitter4j.Paging: char[] SMCP>;

        $r9 = virtualinvoke $r3.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray(char[],java.lang.String)>($r8, "count");

        $r10 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r11 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r11.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r10[0] = $r11;

        $r11 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r11.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r10[1] = $r11;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r9, $r10);

        $r12 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r7, $r9);

        $r13 = interfaceinvoke $r4.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r12);

        return $r13;
    }

    public twitter4j.PagableResponseList getUserListSubscribers(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l1;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers.json?list_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getUserListSubscribers(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers.json?owner_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getUserListSubscribers(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.PagableResponseList $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers.json?owner_screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r8 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscriptions.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.PagableResponseList createPagableUserListList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getUserLists(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/list.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList getUserLists(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/list.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserListList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getUserSuggestions(java.lang.String)
    {
        java.lang.Throwable $r8;
        twitter4j.internal.json.z_T4JInternalFactory $r6;
        java.lang.RuntimeException $r9;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        twitter4j.ResponseList $r7;
        java.lang.String $r1, $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

     label1:
        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/suggestions/");

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

     label2:
        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r7 = interfaceinvoke $r6.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserListFromJSONArray_Users(twitter4j.internal.http.HttpResponse)>($r5);

        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public twitter4j.ResponseList getUserTimeline()
    {
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r2;
        twitter4j.ResponseList $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r2 = new twitter4j.Paging;

        specialinvoke $r2.<twitter4j.Paging: void <init>()>();

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getUserTimeline(twitter4j.Paging)>($r2);

        return $r1;
    }

    public twitter4j.ResponseList getUserTimeline(long)
    {
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r2;
        long $l0;
        twitter4j.ResponseList $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r2 = new twitter4j.Paging;

        specialinvoke $r2.<twitter4j.Paging: void <init>()>();

        $r1 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getUserTimeline(long,twitter4j.Paging)>($l0, $r2);

        return $r1;
    }

    public twitter4j.ResponseList getUserTimeline(long, twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        long $l0;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r10;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6, $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: twitter4j.Paging;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/user_timeline.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r6[0] = $r7;

        $r7 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r6[1] = $r7;

        $r8 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r6, $r8);

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r10 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.ResponseList getUserTimeline(java.lang.String)
    {
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r3;
        twitter4j.ResponseList $r2;
        java.lang.String $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = new twitter4j.Paging;

        specialinvoke $r3.<twitter4j.Paging: void <init>()>();

        $r2 = virtualinvoke r0.<twitter4j.TwitterImpl: twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging)>($r1, $r3);

        return $r2;
    }

    public twitter4j.ResponseList getUserTimeline(java.lang.String, twitter4j.Paging)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r2;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r11;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r7, $r9;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.Paging;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/user_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r7[0] = $r8;

        $r8 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r7[1] = $r8;

        $r9 = virtualinvoke $r2.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r7, $r9);

        $r10 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r11 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.ResponseList getUserTimeline(twitter4j.Paging)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        twitter4j.Paging $r1;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r10;
        java.lang.String $r6;
        twitter4j.internal.http.HttpParameter[] $r7, $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Paging;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/user_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r7[0] = $r2;

        $r8 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.internal.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter[] mergeParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r7, $r8);

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createStatusList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.api.HelpResources help()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.ListsResources list()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.ResponseList lookupFriendships(long[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long[] $r1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: long[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/lookup.json?user_id=");

        $r5 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(long[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r5);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList lookupFriendships(java.lang.String[])
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        java.lang.String[] $r1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String[];

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/lookup.json?screen_name=");

        $r5 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r5);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createFriendshipList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList lookupUsers(long[])
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long[] $r1;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r10;
        java.lang.String $r6, $r8;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: long[];

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/lookup.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        $r8 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(long[])>($r1);

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("user_id", $r8);

        $r7[0] = $r2;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.ResponseList lookupUsers(java.lang.String[])
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        java.lang.String[] $r1;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        twitter4j.ResponseList $r10;
        java.lang.String $r6, $r8;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String[];

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/lookup.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        $r8 = staticinvoke <twitter4j.internal.util.z_T4JInternalStringUtil: java.lang.String join(java.lang.String[])>($r1);

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r8);

        $r7[0] = $r2;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.api.PlacesGeoResources placesGeo()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public void removeProfileBanner()
    {
        twitter4j.conf.Configuration $r2;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = new java.lang.StringBuilder;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r3 = interfaceinvoke $r2.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/remove_profile_banner.json");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r3);

        return;
    }

    public twitter4j.User reportSpam(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/report_spam.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User reportSpam(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/report_spam.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.Status retweetStatus(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.Status $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/retweet/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.ResponseList reverseGeoCode(twitter4j.GeoQuery)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        int $i0;
        twitter4j.TwitterImpl r0;
        twitter4j.GeoQuery $r1;
        twitter4j.TwitterException $r9;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.GeoQuery;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

     label1:
        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo/reverse_geocode.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.GeoQuery: twitter4j.internal.http.HttpParameter[] asHttpParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse)>($r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $i0 = virtualinvoke $r9.<twitter4j.TwitterException: int getStatusCode()>();

        if $i0 != 404 goto label4;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createEmptyResponseList()>();

        return $r8;

     label4:
        throw $r9;

        catch twitter4j.TwitterException from label1 to label2 with label3;
    }

    public twitter4j.api.SavedSearchesResources savedSearches()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.QueryResult search(twitter4j.Query)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.Query $r1;
        twitter4j.QueryResult $r7;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        twitter4j.internal.http.HttpParameter[] $r8;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.Query;

        $r2 = virtualinvoke $r1.<twitter4j.Query: java.lang.String nextPage()>();

        if $r2 == null goto label1;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("search/tweets.json");

        $r2 = virtualinvoke $r1.<twitter4j.Query: java.lang.String nextPage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r2);

        $r7 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query)>($r6, $r1);

        return $r7;

     label1:
        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("search/tweets.json");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<twitter4j.Query: twitter4j.internal.http.HttpParameter[] asHttpParameterArray()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r2, $r8);

        $r7 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.QueryResult createQueryResult(twitter4j.internal.http.HttpResponse,twitter4j.Query)>($r6, $r1);

        return $r7;
    }

    public twitter4j.api.SearchResource search()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.ResponseList searchPlaces(twitter4j.GeoQuery)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        twitter4j.GeoQuery $r1;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r8;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.GeoQuery;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo/search.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<twitter4j.GeoQuery: twitter4j.internal.http.HttpParameter[] asHttpParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createPlaceList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList searchUsers(java.lang.String, int)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.internal.http.HttpResponse $r8;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        twitter4j.ResponseList $r9;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/search.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("q", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("per_page", 20);

        $r6[1] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("page", $i0);

        $r6[2] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.ResponseList createUserList(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.DirectMessage sendDirectMessage(long, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.DirectMessage $r9;
        long $l0;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/new.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("text", $r1);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.DirectMessage sendDirectMessage(java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.DirectMessage $r10;
        twitter4j.internal.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/new.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("text", $r2);

        $r7[1] = $r8;

        $r9 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r10 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.DirectMessage showDirectMessage(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.DirectMessage $r6;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("direct_messages/show.json?id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.DirectMessage createDirectMessage(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Relationship showFriendship(long, long)
    {
        twitter4j.Relationship $r8;
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpParameter $r6;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.internal.http.HttpParameter[] $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/show.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("source_id", $l0);

        $r5[0] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("target_id", $l1);

        $r5[1] = $r6;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r4, $r5);

        $r8 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.Relationship showFriendship(java.lang.String, java.lang.String)
    {
        twitter4j.Relationship $r9;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/show.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <twitter4j.internal.http.HttpParameter: twitter4j.internal.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("source_screen_name", $r1, "target_screen_name", $r2);

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r9 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.SavedSearch showSavedSearch(int)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.SavedSearch $r6;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saved_searches/show/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.SavedSearch createSavedSearch(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.Status showStatus(long)
    {
        twitter4j.internal.http.HttpParameter $r1;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.Status $r8;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/show/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r6[0] = $r1;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r8 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.User showUser(long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l0;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/show.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User showUser(java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users/show.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.UserList showUserList(int)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpResponse $r5;
        twitter4j.UserList $r6;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/show.json?list_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.UserList showUserList(long, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.UserList $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/show.json?owner_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.UserList showUserList(java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.UserList $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/show.json?owner_screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r8 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.UserList createAUserList(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.User showUserListMembership(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l1;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/show.json?list_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User showUserListMembership(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/show.json?owner_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.User showUserListMembership(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r5;
        twitter4j.User $r8;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/members/show.json?owner_screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r8 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.User showUserListSubscription(int, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        long $l1;
        twitter4j.internal.http.HttpResponse $r5;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.User $r6;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/show.json?list_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.User showUserListSubscription(long, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        long $l0, $l1;
        twitter4j.internal.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r7;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $l1 := @parameter2: long;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/show.json?owner_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r7 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.User showUserListSubscription(java.lang.String, java.lang.String, long)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r5;
        twitter4j.User $r8;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r6;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lists/subscribers/show.json?owner_screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&slug=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&user_id=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse get(java.lang.String)>($r1);

        $r8 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.api.SpamReportingResource spamReporting()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.SuggestedUsersResources suggestedUsers()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.TimelinesResources timelines()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public java.lang.String toString()
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("TwitterImpl{INCLUDE_MY_RETWEET=");

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpParameter INCLUDE_MY_RETWEET>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public twitter4j.api.TrendsResources trends()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.api.TweetsResources tweets()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.AccountSettings updateAccountSettings(java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r14;
        java.lang.Integer $r1;
        java.util.ArrayList $r7;
        twitter4j.internal.http.HttpResponse $r15;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.Boolean $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r9;
        twitter4j.internal.http.HttpParameter[] $r13;
        twitter4j.internal.http.HttpParameter $r8;
        twitter4j.internal.json.z_T4JInternalFactory $r10;
        twitter4j.AccountSettings $r16;
        twitter4j.conf.Configuration $r12;
        java.lang.StringBuilder $r11;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.Integer;

        $r2 := @parameter1: java.lang.Boolean;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(6);

        if $r1 == null goto label1;

        $r8 = new twitter4j.internal.http.HttpParameter;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("trend_location_woeid", $i0);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label1:
        if $r2 == null goto label2;

        $r8 = new twitter4j.internal.http.HttpParameter;

        $r9 = virtualinvoke $r2.<java.lang.Boolean: java.lang.String toString()>();

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("sleep_time_enabled", $r9);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        if $r3 == null goto label3;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("start_sleep_time", $r3);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        if $r4 == null goto label4;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("end_sleep_time", $r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label4:
        if $r5 == null goto label5;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("time_zone", $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label5:
        if $r6 == null goto label6;

        $r8 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("lang", $r6);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label6:
        $r10 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r11 = new java.lang.StringBuilder;

        $r12 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r3 = interfaceinvoke $r12.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/settings.json");

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r13 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r14 = interfaceinvoke $r7.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r13 = (twitter4j.internal.http.HttpParameter[]) $r14;

        $r15 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r3, $r13);

        $r16 = interfaceinvoke $r10.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.AccountSettings createAccountSettings(twitter4j.internal.http.HttpResponse)>($r15);

        return $r16;
    }

    public twitter4j.Relationship updateFriendship(long, boolean, boolean)
    {
        twitter4j.Relationship $r8;
        twitter4j.internal.json.z_T4JInternalFactory $r1;
        twitter4j.internal.http.HttpParameter $r6;
        long $l0;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r3;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.internal.http.HttpParameter[] $r5;
        boolean $z0, $z1;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/update.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("user_id", $l0);

        $r5[0] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("device", $z0);

        $r5[1] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("retweets", $z1);

        $r5[2] = $r6;

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r4, $r5);

        $r8 = interfaceinvoke $r1.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.Relationship updateFriendship(java.lang.String, boolean, boolean)
    {
        twitter4j.Relationship $r9;
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        boolean $z0, $z1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("friendships/update.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[3];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("device", $z0);

        $r6[1] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("retweets", $z0);

        $r6[2] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Relationship createRelationship(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.User updateProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r6;
        java.lang.Object[] $r10;
        java.util.ArrayList $r5;
        twitter4j.internal.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r8;
        int $i0;
        twitter4j.User $r12;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r7;
        java.lang.String $r1, $r2, $r3, $r4;
        twitter4j.internal.http.HttpParameter[] $r9;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(4);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r5, "name", $r1);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r5, "url", $r2);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r5, "location", $r3);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r5, "description", $r4);

        $r6 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r7 = new java.lang.StringBuilder;

        $r8 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r8.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile.json");

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r9 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r10 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (twitter4j.internal.http.HttpParameter[]) $r10;

        $r11 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $r9);

        $r12 = interfaceinvoke $r6.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r11);

        return $r12;
    }

    public twitter4j.User updateProfileBackgroundImage(java.io.File, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        java.io.File $r1;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r9;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.File;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<twitter4j.TwitterImpl: void checkFileValidity(java.io.File)>($r1);

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_background_image.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("image", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("tile", $z0);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.User updateProfileBackgroundImage(java.io.InputStream, boolean)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r2;
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r4;
        twitter4j.User $r9;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        java.io.InputStream $r1;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.InputStream;

        $z0 := @parameter1: boolean;

        $r2 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_background_image.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>("image", "image", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,boolean)>("tile", $z0);

        $r6[1] = $r7;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        $r9 = interfaceinvoke $r2.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public void updateProfileBanner(java.io.File)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        java.io.File $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<twitter4j.TwitterImpl: void checkFileValidity(java.io.File)>($r1);

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_banner.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("banner", $r1);

        $r6[0] = $r2;

        specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        return;
    }

    public void updateProfileBanner(java.io.InputStream)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r6;
        java.io.InputStream $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_banner.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>("banner", "banner", $r1);

        $r6[0] = $r2;

        specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r5, $r6);

        return;
    }

    public twitter4j.User updateProfileColors(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r7;
        java.lang.Object[] $r11;
        java.util.ArrayList $r6;
        twitter4j.internal.http.HttpResponse $r12;
        twitter4j.conf.Configuration $r9;
        int $i0;
        twitter4j.User $r13;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        twitter4j.internal.http.HttpParameter[] $r10;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(6);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r6, "profile_background_color", $r1);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r6, "profile_text_color", $r2);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r6, "profile_link_color", $r3);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r6, "profile_sidebar_fill_color", $r4);

        specialinvoke r0.<twitter4j.TwitterImpl: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>($r6, "profile_sidebar_border_color", $r5);

        $r7 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r8 = new java.lang.StringBuilder;

        $r9 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_colors.json");

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r10 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r11 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r10 = (twitter4j.internal.http.HttpParameter[]) $r11;

        $r12 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $r10);

        $r13 = interfaceinvoke $r7.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r12);

        return $r13;
    }

    public twitter4j.User updateProfileImage(java.io.File)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        java.io.File $r1;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.User $r9;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<twitter4j.TwitterImpl: void checkFileValidity(java.io.File)>($r1);

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_image.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("image", $r1);

        $r7[0] = $r2;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r9 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.User updateProfileImage(java.io.InputStream)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.User $r9;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r6;
        twitter4j.internal.http.HttpParameter[] $r7;
        java.io.InputStream $r1;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.io.InputStream;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("account/update_profile_image.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>("image", "image", $r1);

        $r7[0] = $r2;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r9 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.User createUser(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.Status updateStatus(java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r2;
        twitter4j.internal.json.z_T4JInternalFactory $r3;
        twitter4j.internal.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.Status $r9;
        twitter4j.TwitterImpl r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r6;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r4 = new java.lang.StringBuilder;

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statuses/update.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r2 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r2.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("status", $r1);

        $r7[0] = $r2;

        $r8 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r6, $r7);

        $r9 = interfaceinvoke $r3.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.Status updateStatus(twitter4j.StatusUpdate)
    {
        twitter4j.internal.json.z_T4JInternalFactory $r5;
        twitter4j.internal.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r3;
        twitter4j.Status $r8;
        twitter4j.TwitterImpl r0;
        twitter4j.StatusUpdate $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        twitter4j.internal.http.HttpParameter[] $r6;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: twitter4j.StatusUpdate;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<twitter4j.TwitterImpl: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r1.<twitter4j.StatusUpdate: boolean isWithMedia()>();

        if $z0 == 0 goto label2;

        $r4 = "statuses/update_with_media.json";

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<twitter4j.TwitterImpl: twitter4j.internal.json.z_T4JInternalFactory factory>;

        $r6 = virtualinvoke $r1.<twitter4j.StatusUpdate: twitter4j.internal.http.HttpParameter[] asHttpParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[])>($r4, $r6);

        $r8 = interfaceinvoke $r5.<twitter4j.internal.json.z_T4JInternalFactory: twitter4j.Status createStatus(twitter4j.internal.http.HttpResponse)>($r7);

        return $r8;

     label2:
        $r4 = "statuses/update.json";

        goto label1;
    }

    public twitter4j.UserList updateUserList(int, java.lang.String, boolean, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r3;
        twitter4j.UserList $r4;
        int $i0;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1, $r2;
        twitter4j.internal.http.HttpParameter[] $r5;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: java.lang.String;

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[1];

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,int)>("list_id", $i0);

        $r5[0] = $r3;

        $r4 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList updateUserList(java.lang.String,boolean,java.lang.String,twitter4j.internal.http.HttpParameter[])>($r1, $z0, $r2, $r5);

        return $r4;
    }

    public twitter4j.UserList updateUserList(long, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r6;
        long $l0;
        twitter4j.UserList $r4;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1, $r2, $r3;
        twitter4j.internal.http.HttpParameter[] $r5;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: java.lang.String;

        $r5 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,long)>("owner_id", $l0);

        $r5[0] = $r6;

        $r6 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r6.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r1);

        $r5[1] = $r6;

        $r4 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList updateUserList(java.lang.String,boolean,java.lang.String,twitter4j.internal.http.HttpParameter[])>($r2, $z0, $r3, $r5);

        return $r4;
    }

    public twitter4j.UserList updateUserList(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r7;
        twitter4j.UserList $r5;
        twitter4j.TwitterImpl r0;
        java.lang.String $r1, $r2, $r3, $r4;
        twitter4j.internal.http.HttpParameter[] $r6;
        boolean $z0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: java.lang.String;

        $r6 = newarray (twitter4j.internal.http.HttpParameter)[2];

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("owner_screen_name", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r7.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("slug", $r2);

        $r6[1] = $r7;

        $r5 = specialinvoke r0.<twitter4j.TwitterImpl: twitter4j.UserList updateUserList(java.lang.String,boolean,java.lang.String,twitter4j.internal.http.HttpParameter[])>($r3, $z0, $r4, $r6);

        return $r5;
    }

    public twitter4j.api.UsersResources users()
    {
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        return r0;
    }

    public twitter4j.User verifyCredentials()
    {
        twitter4j.User $r1;
        twitter4j.TwitterImpl r0;

        r0 := @this: twitter4j.TwitterImpl;

        $r1 = specialinvoke r0.<twitter4j.TwitterBaseImpl: twitter4j.User fillInIDAndScreenName()>();

        return $r1;
    }
}
