public class com.google.android.gms.security.ProviderInstaller extends java.lang.Object
{
    public static final java.lang.String PROVIDER_NAME;
    private static java.lang.reflect.Method anK;
    private static final java.lang.Object uf;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.google.android.gms.security.ProviderInstaller: java.lang.String PROVIDER_NAME> = "GmsCore_OpenSSL";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.android.gms.security.ProviderInstaller: java.lang.Object uf> = $r0;

        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method anK> = null;

        return;
    }

    public void <init>()
    {
        com.google.android.gms.security.ProviderInstaller r0;

        r0 := @this: com.google.android.gms.security.ProviderInstaller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void V(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Class[] $r3;
        java.lang.Class $r2;
        java.lang.ClassLoader $r1;
        java.lang.reflect.Method $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("com.google.android.gms.common.security.ProviderInstallerImpl");

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/content/Context;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("insertProvider", $r3);

        <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method anK> = $r4;

        return;
    }

    public static void installIfNeeded(android.content.Context)
    {
        java.lang.Throwable $r8;
        android.content.Context $r0;
        java.lang.Object[] $r4;
        java.lang.Exception $r5;
        com.google.android.gms.common.GooglePlayServicesNotAvailableException $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.reflect.Method $r3;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object b(java.lang.Object,java.lang.Object)>($r0, "Context must not be null");

        staticinvoke <com.google.android.gms.common.GooglePlayServicesUtil: void D(android.content.Context)>($r0);

        $r0 = staticinvoke <com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)>($r0);

        if $r0 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ProviderInstaller", "Failed to get remote context");

        $r1 = new com.google.android.gms.common.GooglePlayServicesNotAvailableException;

        specialinvoke $r1.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>(8);

        throw $r1;

     label01:
        $r2 = <com.google.android.gms.security.ProviderInstaller: java.lang.Object uf>;

        entermonitor $r2;

     label02:
        $r3 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method anK>;

        if $r3 != null goto label04;

     label03:
        staticinvoke <com.google.android.gms.security.ProviderInstaller: void V(android.content.Context)>($r0);

     label04:
        $r3 = <com.google.android.gms.security.ProviderInstaller: java.lang.reflect.Method anK>;

        $r4 = newarray (java.lang.Object)[1];

     label05:
        $r4[0] = $r0;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label06:
        exitmonitor $r2;

     label07:
        return;

     label08:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to install provider: ");

        $r7 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ProviderInstaller", $r7);

        $r1 = new com.google.android.gms.common.GooglePlayServicesNotAvailableException;

        specialinvoke $r1.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>(8);

        throw $r1;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r8;

        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Throwable from label02 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    public static void installIfNeededAsync(android.content.Context, com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)
    {
        android.content.Context $r0;
        com.google.android.gms.security.ProviderInstaller$1 $r2;
        com.google.android.gms.security.ProviderInstaller$ProviderInstallListener $r1;
        java.lang.Void[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.google.android.gms.security.ProviderInstaller$ProviderInstallListener;

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object b(java.lang.Object,java.lang.Object)>($r0, "Context must not be null");

        staticinvoke <com.google.android.gms.common.internal.o: java.lang.Object b(java.lang.Object,java.lang.Object)>($r1, "Listener must not be null");

        staticinvoke <com.google.android.gms.common.internal.o: void aT(java.lang.String)>("Must be called on the UI thread");

        $r2 = new com.google.android.gms.security.ProviderInstaller$1;

        specialinvoke $r2.<com.google.android.gms.security.ProviderInstaller$1: void <init>(android.content.Context,com.google.android.gms.security.ProviderInstaller$ProviderInstallListener)>($r0, $r1);

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }
}
