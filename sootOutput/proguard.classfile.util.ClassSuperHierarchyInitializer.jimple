public class proguard.classfile.util.ClassSuperHierarchyInitializer extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.constant.visitor.ConstantVisitor
{
    private final proguard.classfile.util.WarningPrinter dependencyWarningPrinter;
    private final proguard.classfile.ClassPool libraryClassPool;
    private final proguard.classfile.util.WarningPrinter missingWarningPrinter;
    private final proguard.classfile.ClassPool programClassPool;

    public void <init>(proguard.classfile.ClassPool, proguard.classfile.ClassPool, proguard.classfile.util.WarningPrinter, proguard.classfile.util.WarningPrinter)
    {
        proguard.classfile.ClassPool $r1, $r2;
        proguard.classfile.util.ClassSuperHierarchyInitializer r0;
        proguard.classfile.util.WarningPrinter $r3, $r4;

        r0 := @this: proguard.classfile.util.ClassSuperHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 := @parameter1: proguard.classfile.ClassPool;

        $r3 := @parameter2: proguard.classfile.util.WarningPrinter;

        $r4 := @parameter3: proguard.classfile.util.WarningPrinter;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.ClassPool programClassPool> = $r1;

        r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.ClassPool libraryClassPool> = $r2;

        r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter missingWarningPrinter> = $r3;

        r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter dependencyWarningPrinter> = $r4;

        return;
    }

    private proguard.classfile.Clazz findClass(java.lang.String, java.lang.String)
    {
        proguard.classfile.util.WarningPrinter $r5;
        proguard.classfile.ClassPool $r3;
        proguard.classfile.util.ClassSuperHierarchyInitializer r0;
        proguard.classfile.Clazz $r4;
        java.lang.StringBuffer $r6;
        java.lang.String $r1, $r2, $r7;

        r0 := @this: proguard.classfile.util.ClassSuperHierarchyInitializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.ClassPool programClassPool>;

        $r4 = virtualinvoke $r3.<proguard.classfile.ClassPool: proguard.classfile.Clazz getClass(java.lang.String)>($r2);

        if $r4 != null goto label1;

        $r3 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.ClassPool libraryClassPool>;

        $r4 = virtualinvoke $r3.<proguard.classfile.ClassPool: proguard.classfile.Clazz getClass(java.lang.String)>($r2);

        if $r4 != null goto label2;

        $r5 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter missingWarningPrinter>;

        if $r5 == null goto label2;

        $r5 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter missingWarningPrinter>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: ");

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": can\'t find superclass or interface ");

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r7);

        return $r4;

     label1:
        $r5 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter dependencyWarningPrinter>;

        if $r5 == null goto label2;

        $r5 = r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.util.WarningPrinter dependencyWarningPrinter>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Warning: library class ");

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" extends or implements program class ");

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r7);

     label2:
        return $r4;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.util.ClassSuperHierarchyInitializer r0;
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        java.lang.String $r3, $r4;

        r0 := @this: proguard.classfile.util.ClassSuperHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.ClassConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r1 = specialinvoke r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.Clazz findClass(java.lang.String,java.lang.String)>($r3, $r4);

        $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz referencedClass> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.Clazz[] $r6;
        java.lang.String[] $r5;
        proguard.classfile.util.ClassSuperHierarchyInitializer r0;
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.Clazz $r4;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: proguard.classfile.util.ClassSuperHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r3 = $r1.<proguard.classfile.LibraryClass: java.lang.String superClassName>;

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.Clazz findClass(java.lang.String,java.lang.String)>($r2, $r3);

        $r1.<proguard.classfile.LibraryClass: proguard.classfile.Clazz superClass> = $r4;

     label1:
        $r5 = $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames>;

        if $r5 == null goto label4;

        $r5 = $r1.<proguard.classfile.LibraryClass: java.lang.String[] interfaceNames>;

        $i0 = lengthof $r5;

        $r6 = newarray (proguard.classfile.Clazz)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label3;

        $r3 = $r5[$i0];

        $r4 = specialinvoke r0.<proguard.classfile.util.ClassSuperHierarchyInitializer: proguard.classfile.Clazz findClass(java.lang.String,java.lang.String)>($r2, $r3);

        $r6[$i0] = $r4;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $r1.<proguard.classfile.LibraryClass: proguard.classfile.Clazz[] interfaceClasses> = $r6;

     label4:
        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.util.ClassSuperHierarchyInitializer r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.util.ClassSuperHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void superClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void interfaceConstantsAccept(proguard.classfile.constant.visitor.ConstantVisitor)>(r0);

        return;
    }
}
