public final class u.aly.dl extends u.aly.dm
{
    private byte[] a;
    private int b;
    private int c;

    public void <init>()
    {
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        specialinvoke r0.<u.aly.dm: void <init>()>();

        return;
    }

    public void <init>(byte[])
    {
        byte[] $r1;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<u.aly.dm: void <init>()>();

        virtualinvoke r0.<u.aly.dl: void a(byte[])>($r1);

        return;
    }

    public void <init>(byte[], int, int)
    {
        byte[] $r1;
        u.aly.dl r0;
        int $i0, $i1;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<u.aly.dm: void <init>()>();

        virtualinvoke r0.<u.aly.dl: void c(byte[],int,int)>($r1, $i0, $i1);

        return;
    }

    public int a(byte[], int, int) throws u.aly.dn
    {
        byte[] $r1, $r2;
        u.aly.dl r0;
        int $i0, $i1, $i2;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

        $i1 = virtualinvoke r0.<u.aly.dl: int h()>();

        if $i2 <= $i1 goto label1;

        $i2 = $i1;

     label1:
        if $i2 <= 0 goto label2;

        $r2 = r0.<u.aly.dl: byte[] a>;

        $i1 = r0.<u.aly.dl: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i0, $i2);

        virtualinvoke r0.<u.aly.dl: void a(int)>($i2);

     label2:
        return $i2;
    }

    public void a(int)
    {
        int $i0, $i1;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        $i0 := @parameter0: int;

        $i1 = r0.<u.aly.dl: int b>;

        $i0 = $i1 + $i0;

        r0.<u.aly.dl: int b> = $i0;

        return;
    }

    public void a(byte[])
    {
        int $i0;
        byte[] $r1;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        virtualinvoke r0.<u.aly.dl: void c(byte[],int,int)>($r1, 0, $i0);

        return;
    }

    public boolean a()
    {
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        return 1;
    }

    public void b() throws u.aly.dn
    {
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        return;
    }

    public void b(byte[], int, int) throws u.aly.dn
    {
        byte[] $r1;
        java.lang.UnsupportedOperationException $r2;
        u.aly.dl r0;
        int $i0, $i1;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("No writing allowed!");

        throw $r2;
    }

    public void c()
    {
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        return;
    }

    public void c(byte[], int, int)
    {
        byte[] $r1;
        u.aly.dl r0;
        int $i0, $i1;

        r0 := @this: u.aly.dl;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r0.<u.aly.dl: byte[] a> = $r1;

        r0.<u.aly.dl: int b> = 0;

        $i0 = 0 + $i1;

        r0.<u.aly.dl: int c> = $i0;

        return;
    }

    public void e()
    {
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        r0.<u.aly.dl: byte[] a> = null;

        return;
    }

    public byte[] f()
    {
        byte[] r1;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        r1 = r0.<u.aly.dl: byte[] a>;

        return r1;
    }

    public int g()
    {
        int i0;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        i0 = r0.<u.aly.dl: int b>;

        return i0;
    }

    public int h()
    {
        int $i0, $i1;
        u.aly.dl r0;

        r0 := @this: u.aly.dl;

        $i1 = r0.<u.aly.dl: int c>;

        $i0 = r0.<u.aly.dl: int b>;

        $i0 = $i1 - $i0;

        return $i0;
    }
}
