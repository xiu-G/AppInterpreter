public class b.b.a.b.a extends b.b.a.b.b
{
    private java.util.HashMap f;

    public void <init>()
    {
        java.util.HashMap $r1;
        b.b.a.b.a r0;

        r0 := @this: b.b.a.b.a;

        specialinvoke r0.<b.b.a.b.b: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<b.b.a.b.a: java.util.HashMap f> = $r1;

        return;
    }

    public boolean contains(java.lang.Object)
    {
        b.b.a.b.a r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: b.b.a.b.a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.b.a.b.a: java.util.HashMap f>;

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    protected b.b.a.b.b$c e(java.lang.Object)
    {
        b.b.a.b.a r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        b.b.a.b.b$c $r3;

        r0 := @this: b.b.a.b.a;

        $r2 := @parameter0: java.lang.Object;

        $r1 = r0.<b.b.a.b.a: java.util.HashMap f>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r3 = (b.b.a.b.b$c) $r2;

        return $r3;
    }

    public java.lang.Object l(java.lang.Object, java.lang.Object)
    {
        b.b.a.b.a r0;
        java.lang.Object $r1, $r2;
        java.util.HashMap $r4;
        b.b.a.b.b$c $r3;

        r0 := @this: b.b.a.b.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<b.b.a.b.a: b.b.a.b.b$c e(java.lang.Object)>($r1);

        if $r3 == null goto label1;

        $r1 = $r3.<b.b.a.b.b$c: java.lang.Object c>;

        return $r1;

     label1:
        $r4 = r0.<b.b.a.b.a: java.util.HashMap f>;

        $r3 = virtualinvoke r0.<b.b.a.b.b: b.b.a.b.b$c j(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return null;
    }

    public java.lang.Object m(java.lang.Object)
    {
        b.b.a.b.a r0;
        java.lang.Object $r1, $r3;
        java.util.HashMap $r2;

        r0 := @this: b.b.a.b.a;

        $r1 := @parameter0: java.lang.Object;

        $r3 = specialinvoke r0.<b.b.a.b.b: java.lang.Object m(java.lang.Object)>($r1);

        $r2 = r0.<b.b.a.b.a: java.util.HashMap f>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return $r3;
    }

    public java.util.Map$Entry o(java.lang.Object)
    {
        b.b.a.b.a r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        b.b.a.b.b$c $r3;
        boolean $z0;

        r0 := @this: b.b.a.b.a;

        $r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<b.b.a.b.a: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<b.b.a.b.a: java.util.HashMap f>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (b.b.a.b.b$c) $r1;

        $r3 = $r3.<b.b.a.b.b$c: b.b.a.b.b$c e>;

        return $r3;

     label1:
        return null;
    }
}
