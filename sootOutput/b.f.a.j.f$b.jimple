public final enum class b.f.a.j.f$b extends java.lang.Enum
{
    public static final enum b.f.a.j.f$b b;
    public static final enum b.f.a.j.f$b c;
    public static final enum b.f.a.j.f$b d;
    public static final enum b.f.a.j.f$b e;
    private static final b.f.a.j.f$b[] f;

    static void <clinit>()
    {
        b.f.a.j.f$b[] $r2;
        b.f.a.j.f$b $r0, $r1;

        $r1 = new b.f.a.j.f$b;

        specialinvoke $r1.<b.f.a.j.f$b: void <init>(java.lang.String,int)>("FIXED", 0);

        <b.f.a.j.f$b: b.f.a.j.f$b b> = $r1;

        $r1 = new b.f.a.j.f$b;

        specialinvoke $r1.<b.f.a.j.f$b: void <init>(java.lang.String,int)>("WRAP_CONTENT", 1);

        <b.f.a.j.f$b: b.f.a.j.f$b c> = $r1;

        $r1 = new b.f.a.j.f$b;

        specialinvoke $r1.<b.f.a.j.f$b: void <init>(java.lang.String,int)>("MATCH_CONSTRAINT", 2);

        <b.f.a.j.f$b: b.f.a.j.f$b d> = $r1;

        $r1 = new b.f.a.j.f$b;

        specialinvoke $r1.<b.f.a.j.f$b: void <init>(java.lang.String,int)>("MATCH_PARENT", 3);

        <b.f.a.j.f$b: b.f.a.j.f$b e> = $r1;

        $r2 = newarray (b.f.a.j.f$b)[4];

        $r0 = <b.f.a.j.f$b: b.f.a.j.f$b b>;

        $r2[0] = $r0;

        $r0 = <b.f.a.j.f$b: b.f.a.j.f$b c>;

        $r2[1] = $r0;

        $r0 = <b.f.a.j.f$b: b.f.a.j.f$b d>;

        $r2[2] = $r0;

        $r2[3] = $r1;

        <b.f.a.j.f$b: b.f.a.j.f$b[] f> = $r2;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        b.f.a.j.f$b r0;

        r0 := @this: b.f.a.j.f$b;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static b.f.a.j.f$b valueOf(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.Enum $r0;
        b.f.a.j.f$b $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lb/f/a/j/f$b;", $r1);

        $r2 = (b.f.a.j.f$b) $r0;

        return $r2;
    }

    public static b.f.a.j.f$b[] values()
    {
        java.lang.Object $r0;
        b.f.a.j.f$b[] $r1;

        $r1 = <b.f.a.j.f$b: b.f.a.j.f$b[] f>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (b.f.a.j.f$b[]) $r0;

        return $r1;
    }
}
