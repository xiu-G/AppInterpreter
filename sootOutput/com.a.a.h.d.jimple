public final class com.a.a.h.d extends java.lang.Object
{
    public static final java.util.regex.Pattern a;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^is|^get");

        <com.a.a.h.d: java.util.regex.Pattern a> = $r0;

        return;
    }

    public static java.lang.String a(java.util.Collection, java.lang.String)
    {
        java.util.Iterator $r3;
        java.lang.StringBuffer $r2;
        java.util.Collection $r0;
        java.lang.Object $r4;
        java.lang.String $r1, $r5;
        boolean $z0;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        goto label1;
    }

    public static java.lang.String[] a(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.String[] $r3;
        java.util.ArrayList $r2, $r6;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>($r1);

        if $i0 != -1 goto label1;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r0;

        return $r3;

     label1:
        $r6 = new java.util.ArrayList;

        $r2 = $r6;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $i1 = $i0;

        $i0 = 0;

     label2:
        if $i1 != -1 goto label4;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == $i1 goto label3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r0);

     label3:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r4;

        return $r3;

     label4:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>($r1, $i0);

        goto label2;
    }
}
