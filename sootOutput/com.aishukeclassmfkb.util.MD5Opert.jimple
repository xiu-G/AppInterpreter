public class com.aishukeclassmfkb.util.MD5Opert extends java.lang.Object
{

    public void <init>()
    {
        com.aishukeclassmfkb.util.MD5Opert r0;

        r0 := @this: com.aishukeclassmfkb.util.MD5Opert;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getMD5Str(java.lang.String)
    {
        java.lang.Throwable $r6, $r8;
        java.io.PrintStream $r7;
        byte[] $r3;
        java.security.MessageDigest $r1, $r2;
        short $s3;
        byte $b2;
        java.lang.StringBuffer $r4, $r5;
        int $i0, $i1;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        $r1 = $r2;

     label03:
        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

     label04:
        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r5 = new java.lang.StringBuffer;

        $r4 = $r5;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label10;

        $b2 = $r3[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label09;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $b2 = $r3[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label06:
        $i0 = $i0 + 1;

        goto label05;

     label07:
        $r6 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("NoSuchAlgorithmException caught!");

        staticinvoke <java.lang.System: void exit(int)>(-1);

        goto label04;

     label08:
        $r8 := @caughtexception;

        $r9 = (java.io.UnsupportedEncodingException) $r8;

        virtualinvoke $r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label04;

     label09:
        $b2 = $r3[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        goto label06;

     label10:
        $r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r0;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label07;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label08;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label08;
    }
}
