public final class com.google.zxing.oned.Code128Writer extends com.google.zxing.oned.UPCEANWriter
{

    public void <init>()
    {
        com.google.zxing.oned.Code128Writer r0;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        specialinvoke r0.<com.google.zxing.oned.UPCEANWriter: void <init>()>();

        return;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Hashtable) throws com.google.zxing.WriterException
    {
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuffer $r6;
        com.google.zxing.oned.Code128Writer r0;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r7;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.util.Hashtable;

        $r4 = <com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_128>;

        if $r2 == $r4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can only encode CODE_128, but got ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label1:
        $r7 = specialinvoke r0.<com.google.zxing.oned.UPCEANWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable)>($r1, $r2, $i0, $i1, $r3);

        return $r7;
    }

    public byte[] encode(java.lang.String)
    {
        byte[] $r5;
        int[][] $r3;
        char $c4;
        java.lang.IllegalArgumentException $r7;
        int[] $r4;
        java.lang.StringBuffer $r2, $r6;
        com.google.zxing.oned.Code128Writer r0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.String $r1;

        r0 := @this: com.google.zxing.oned.Code128Writer;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 80 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Requested contents should be less than 80 digits long, but got ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r7;

     label1:
        $i2 = 35;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label5;

        $r3 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $i5 = (int) $c4;

        $i6 = -32;

        $i5 = $i5 + $i6;

        $r4 = $r3[$i5];

        $i5 = 0;

     label3:
        $i6 = lengthof $r4;

        if $i5 >= $i6 goto label4;

        $i6 = $r4[$i5];

        $i2 = $i2 + $i6;

        $i5 = $i5 + 1;

        goto label3;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        $r5 = newarray (byte)[$i2];

        $r3 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r4 = $r3[104];

        $i3 = staticinvoke <com.google.zxing.oned.Code128Writer: int appendPattern(byte[],int,int[],int)>($r5, 0, $r4, 1);

        $i2 = 104;

     label6:
        if $i0 >= $i1 goto label7;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i5 = (int) $c4;

        $i6 = -32;

        $i5 = $i5 + $i6;

        $i6 = $i0 + 1;

        $i5 = $i5 * $i6;

        $i2 = $i2 + $i5;

        $r3 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i5 = (int) $c4;

        $i6 = -32;

        $i5 = $i5 + $i6;

        $r4 = $r3[$i5];

        $i5 = staticinvoke <com.google.zxing.oned.Code128Writer: int appendPattern(byte[],int,int[],int)>($r5, $i3, $r4, 1);

        $i3 = $i3 + $i5;

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $i0 = $i2 % 103;

        $r3 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r4 = $r3[$i0];

        $i0 = staticinvoke <com.google.zxing.oned.Code128Writer: int appendPattern(byte[],int,int[],int)>($r5, $i3, $r4, 1);

        $i0 = $i0 + $i3;

        $r3 = <com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS>;

        $r4 = $r3[106];

        staticinvoke <com.google.zxing.oned.Code128Writer: int appendPattern(byte[],int,int[],int)>($r5, $i0, $r4, 1);

        return $r5;
    }
}
