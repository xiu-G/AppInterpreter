public class com.altsoldev.preciousmetaltracker.util.SplashScreenHelper extends java.lang.Object
{

    public void <init>()
    {
        com.altsoldev.preciousmetaltracker.util.SplashScreenHelper r0;

        r0 := @this: com.altsoldev.preciousmetaltracker.util.SplashScreenHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkRequestAd(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.util.Date $r6;
        java.text.SimpleDateFormat $r7;
        java.lang.String[] $r3;
        java.util.Calendar $r5;
        int $i0, $i1;
        java.lang.String $r1, r2, $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.altsoldev.preciousmetaltracker.util.IAPHelper: boolean isAdFree>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("INTERSTITIAL", "This is Ad Free version, no ads.");

        return 0;

     label1:
        $z0 = staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: boolean isFirstTimeOpeningApp(android.content.Context)>($r0);

        if $z0 != 0 goto label4;

        $r3 = staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: java.lang.String[] getAdProperties(java.lang.String,android.content.Context)>("iad1", $r0);

        $r4 = $r3[2];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r4 = $r3[3];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $z0 = staticinvoke <com.altsoldev.preciousmetaltracker.util.SplashScreenHelper: boolean randomCheck(int)>($i0);

        if $z0 == 0 goto label4;

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r7 = new java.text.SimpleDateFormat;

        specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r6 = virtualinvoke $r5.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r7.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r6);

        $r3 = staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: java.lang.String[] getAdRequestCounter(java.lang.String,android.content.Context)>("iad1", $r0);

        r2 = $r3[2];

        $i0 = staticinvoke <com.altsoldev.common.services.billing.Utils: int compareDates(java.lang.String,java.lang.String)>($r4, r2);

        if $i0 == 1 goto label2;

        $i0 = staticinvoke <com.altsoldev.common.services.billing.Utils: int compareDates(java.lang.String,java.lang.String)>($r4, r2);

        if $i0 != -1 goto label3;

     label2:
        staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: void updateAdRequestCounter(java.lang.String,int,java.lang.String,android.content.Context)>("iad1", 1, $r4, $r0);

        return 1;

     label3:
        r2 = $r3[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        if $i0 >= $i1 goto label4;

        $i1 = $i0 + 1;

        staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: void updateAdRequestCounter(java.lang.String,int,java.lang.String,android.content.Context)>("iad1", $i1, $r4, $r0);

        return 1;

     label4:
        return 0;
    }

    public static int getTimeOut(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String[] $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: java.lang.String[] getAdProperties(java.lang.String,android.content.Context)>("iad1", $r0);

        $r1 = $r2[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }

    public static boolean randomCheck(int)
    {
        byte $b1;
        int $i0;
        java.util.Random $r0;
        double d0, $d1;

        $i0 := @parameter0: int;

        d0 = (double) $i0;

        d0 = d0 / 100.0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $d1 = virtualinvoke $r0.<java.util.Random: double nextDouble()>();

        $b1 = $d1 cmpg d0;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void updateAdProperties(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String[] $r10;
        java.lang.Exception r3;
        java.util.StringTokenizer r4;
        android.widget.Toast $r11;
        int $i0;
        java.lang.StringBuilder $r9;
        java.lang.String $r1, r2, r5, r6, r7, r8;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r5 = "";

        r6 = "";

        r7 = "";

        r8 = "";

        $r9 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://www.goldandsilverapp.com/gspc/");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iad1");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prop.json");

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = staticinvoke <com.altsoldev.common.services.billing.Utils: java.lang.String downloadTextContent(java.lang.String)>(r2);

     label02:
        r4 = new java.util.StringTokenizer;

     label03:
        specialinvoke r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, "|");

        $z0 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

     label04:
        if $z0 == 0 goto label09;

     label05:
        r5 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label06:
        r6 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label07:
        r7 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label08:
        r8 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label09:
        $r10 = staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: java.lang.String[] getAdProperties(java.lang.String,android.content.Context)>("iad1", $r0);

        r2 = $r10[4];

        $i0 = staticinvoke <com.altsoldev.common.services.billing.Utils: int compareDates(java.lang.String,java.lang.String)>(r8, r2);

     label10:
        if $i0 != 1 goto label14;

     label11:
        staticinvoke <com.altsoldev.preciousmetaltracker.util.DataManager: void updateAdProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context)>("iad1", r5, r6, r7, r8, $r0);

     label12:
        return;

     label13:
        r3 := @caughtexception;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        $r11 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "Please check your internet connection, it may not be properly connected yet.", 1);

        virtualinvoke $r11.<android.widget.Toast: void show()>();

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
}
