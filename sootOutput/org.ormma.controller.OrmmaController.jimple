public abstract class org.ormma.controller.OrmmaController extends java.lang.Object
{
    private static final java.lang.String BOOLEAN_TYPE;
    public static final java.lang.String EXIT;
    private static final java.lang.String FLOAT_TYPE;
    public static final java.lang.String FULL_SCREEN;
    private static final java.lang.String INT_TYPE;
    private static final java.lang.String NAVIGATION_TYPE;
    private static final java.lang.String STRING_TYPE;
    public static final java.lang.String STYLE_NORMAL;
    private static final java.lang.String TRANSITION_TYPE;
    protected android.content.Context mContext;
    protected org.ormma.view.OrmmaView mOrmmaView;

    public void <init>(org.ormma.view.OrmmaView, android.content.Context)
    {
        android.content.Context $r2;
        org.ormma.view.OrmmaView $r1;
        org.ormma.controller.OrmmaController r0;

        r0 := @this: org.ormma.controller.OrmmaController;

        $r1 := @parameter0: org.ormma.view.OrmmaView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.ormma.controller.OrmmaController: org.ormma.view.OrmmaView mOrmmaView> = $r1;

        r0.<org.ormma.controller.OrmmaController: android.content.Context mContext> = $r2;

        return;
    }

    protected static java.lang.Object getFromJSON(org.json.JSONObject, java.lang.Class) throws java.lang.IllegalAccessException, java.lang.InstantiationException, java.lang.NumberFormatException, java.lang.NullPointerException
    {
        java.lang.Throwable $r13;
        java.lang.Float $r10;
        java.lang.Integer $r8;
        org.json.JSONException r2;
        org.json.JSONObject $r0;
        int i0, $i1, $i2;
        java.lang.Boolean $r9;
        java.lang.String $r6, $r7;
        boolean $z0;
        org.ormma.controller.util.NavigationStringEnum $r11;
        java.lang.reflect.Field r3;
        java.lang.reflect.Field[] $r4;
        float $f0;
        java.lang.Class r1;
        java.lang.Object $r5;
        org.ormma.controller.util.TransitionStringEnum $r12;

        $r0 := @parameter0: org.json.JSONObject;

        r1 := @parameter1: java.lang.Class;

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>();

        i0 = 0;

     label01:
        $i1 = lengthof $r4;

        if i0 >= $i1 goto label37;

        r3 = $r4[i0];

        $r6 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        r1 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label02:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("int");

     label03:
        if $z0 == 0 goto label16;

     label04:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6);

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("#");

     label05:
        if $z0 == 0 goto label14;

        $i1 = -1;

     label06:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("#0x");

     label07:
        if $z0 == 0 goto label12;

     label08:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r6);

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label09:
        $i1 = $i2;

     label10:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r8);

     label11:
        i0 = i0 + 1;

        goto label01;

     label12:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 16);

     label13:
        $i1 = $i2;

        goto label10;

     label14:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label15:
        goto label10;

     label16:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("class java.lang.String");

     label17:
        if $z0 == 0 goto label21;

     label18:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r6);

     label19:
        goto label11;

     label20:
        r2 := @caughtexception;

        virtualinvoke r2.<org.json.JSONException: void printStackTrace()>();

        goto label11;

     label21:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

     label22:
        if $z0 == 0 goto label25;

     label23:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>($r6);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r9);

     label24:
        goto label11;

     label25:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("float");

     label26:
        if $z0 == 0 goto label29;

     label27:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r10);

     label28:
        goto label11;

     label29:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("class com.ormma.NavigationStringEnum");

     label30:
        if $z0 == 0 goto label33;

     label31:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6);

        $r11 = staticinvoke <org.ormma.controller.util.NavigationStringEnum: org.ormma.controller.util.NavigationStringEnum fromString(java.lang.String)>($r6);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r11);

     label32:
        goto label11;

     label33:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("class com.ormma.TransitionStringEnum");

     label34:
        if $z0 == 0 goto label11;

     label35:
        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6);

        $r12 = staticinvoke <org.ormma.controller.util.TransitionStringEnum: org.ormma.controller.util.TransitionStringEnum fromString(java.lang.String)>($r6);

        virtualinvoke r3.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r12);

     label36:
        goto label11;

     label37:
        return $r5;

     label38:
        $r13 := @caughtexception;

        goto label10;

        catch org.json.JSONException from label02 to label03 with label20;
        catch org.json.JSONException from label04 to label05 with label20;
        catch java.lang.NumberFormatException from label06 to label07 with label38;
        catch java.lang.NumberFormatException from label08 to label09 with label38;
        catch org.json.JSONException from label06 to label07 with label20;
        catch org.json.JSONException from label08 to label09 with label20;
        catch org.json.JSONException from label10 to label11 with label20;
        catch java.lang.NumberFormatException from label12 to label13 with label38;
        catch org.json.JSONException from label12 to label13 with label20;
        catch org.json.JSONException from label14 to label15 with label20;
        catch org.json.JSONException from label16 to label17 with label20;
        catch org.json.JSONException from label18 to label19 with label20;
        catch org.json.JSONException from label21 to label22 with label20;
        catch org.json.JSONException from label23 to label24 with label20;
        catch org.json.JSONException from label25 to label26 with label20;
        catch org.json.JSONException from label27 to label28 with label20;
        catch org.json.JSONException from label29 to label30 with label20;
        catch org.json.JSONException from label31 to label32 with label20;
        catch org.json.JSONException from label33 to label34 with label20;
        catch org.json.JSONException from label35 to label36 with label20;
    }

    public abstract void stopAllListeners();

    public static void <clinit>()
    {
        <org.ormma.controller.OrmmaController: java.lang.String TRANSITION_TYPE> = "class com.ormma.TransitionStringEnum";

        <org.ormma.controller.OrmmaController: java.lang.String STYLE_NORMAL> = "normal";

        <org.ormma.controller.OrmmaController: java.lang.String STRING_TYPE> = "class java.lang.String";

        <org.ormma.controller.OrmmaController: java.lang.String NAVIGATION_TYPE> = "class com.ormma.NavigationStringEnum";

        <org.ormma.controller.OrmmaController: java.lang.String INT_TYPE> = "int";

        <org.ormma.controller.OrmmaController: java.lang.String FULL_SCREEN> = "fullscreen";

        <org.ormma.controller.OrmmaController: java.lang.String FLOAT_TYPE> = "float";

        <org.ormma.controller.OrmmaController: java.lang.String EXIT> = "exit";

        <org.ormma.controller.OrmmaController: java.lang.String BOOLEAN_TYPE> = "boolean";

        return;
    }
}
