public class com.nostra13.universalimageloader.core.download.BaseImageDownloader extends java.lang.Object implements com.nostra13.universalimageloader.core.download.ImageDownloader
{
    protected static final java.lang.String ALLOWED_URI_CHARS;
    protected static final int BUFFER_SIZE;
    protected static final java.lang.String CONTENT_CONTACTS_URI_PREFIX;
    public static final int DEFAULT_HTTP_CONNECT_TIMEOUT;
    public static final int DEFAULT_HTTP_READ_TIMEOUT;
    private static final java.lang.String ERROR_UNSUPPORTED_SCHEME;
    protected static final int MAX_REDIRECT_COUNT;
    protected final int connectTimeout;
    protected final android.content.Context context;
    protected final int readTimeout;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context> = $r1;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int connectTimeout> = 5000;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int readTimeout> = 20000;

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        android.content.Context $r1;
        int $i0, $i1;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context> = $r1;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int connectTimeout> = $i0;

        r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int readTimeout> = $i1;

        return;
    }

    private boolean isVideoUri(android.net.Uri)
    {
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        android.net.Uri $r1;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>($r1);

        if $r4 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("video/");

        return $z0;
    }

    protected java.net.HttpURLConnection createConnection(java.lang.String, java.lang.Object)
    {
        java.net.HttpURLConnection $r5;
        java.net.URL $r3;
        java.net.URLConnection $r4;
        int $i0;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "@#&=*+-_.,:!?()/~\'%");

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r5 = (java.net.HttpURLConnection) $r4;

        $i0 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int connectTimeout>;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: int readTimeout>;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        return $r5;
    }

    public java.io.InputStream getStream(java.lang.String, java.lang.Object)
    {
        int[] $r3;
        int $i0;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r4;
        java.io.InputStream $r5;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.BaseImageDownloader$1: int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme>;

        $r4 = staticinvoke <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String)>($r1);

        $i0 = virtualinvoke $r4.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label1;
        };

     label1:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label2:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label3:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label4:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label5:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;

     label6:
        $r5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object)>($r1, $r2);

        return $r5;
    }

    protected java.io.InputStream getStreamFromAssets(java.lang.String, java.lang.Object)
    {
        android.content.Context $r4;
        android.content.res.AssetManager $r5;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r3;
        java.io.InputStream $r6;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS>;

        $r1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $r4 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        return $r6;
    }

    protected java.io.InputStream getStreamFromContent(java.lang.String, java.lang.Object)
    {
        android.content.Context $r3;
        byte[] $r11;
        java.io.ByteArrayOutputStream $r8;
        android.net.Uri $r5;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        long $l0;
        java.io.ByteArrayInputStream $r10;
        android.content.ContentResolver $r4;
        java.lang.Long $r6;
        android.graphics.Bitmap $r7;
        java.lang.Object $r2;
        android.graphics.Bitmap$CompressFormat $r9;
        java.lang.String $r1;
        boolean $z0;
        java.io.InputStream $r12;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: boolean isVideoUri(android.net.Uri)>($r5);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r5.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r1);

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $r7 = staticinvoke <android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>($r4, $l0, 1, null);

        if $r7 == null goto label2;

        $r8 = new java.io.ByteArrayOutputStream;

        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

        $r9 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r7.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r9, 0, $r8);

        $r10 = new java.io.ByteArrayInputStream;

        $r11 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11);

        return $r10;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("content://com.android.contacts/");

        if $z0 == 0 goto label2;

        $r12 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r4, $r5);

        return $r12;

     label2:
        $r12 = virtualinvoke $r4.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r5);

        return $r12;
    }

    protected java.io.InputStream getStreamFromDrawable(java.lang.String, java.lang.Object)
    {
        android.content.Context $r4;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r3;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r1;
        android.content.res.Resources $r5;
        java.io.InputStream $r6;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE>;

        $r1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r4 = r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        return $r6;
    }

    protected java.io.InputStream getStreamFromFile(java.lang.String, java.lang.Object)
    {
        java.io.BufferedInputStream $r5;
        com.nostra13.universalimageloader.core.assist.ContentLengthInputStream $r7;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        long $l0;
        java.io.FileInputStream $r4;
        java.io.File $r6;
        com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme $r3;
        int $i1;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = <com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE>;

        $r1 = virtualinvoke $r3.<com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme: java.lang.String crop(java.lang.String)>($r1);

        $r7 = new com.nostra13.universalimageloader.core.assist.ContentLengthInputStream;

        $r5 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 32768);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r1);

        $l0 = virtualinvoke $r6.<java.io.File: long length()>();

        $i1 = (int) $l0;

        specialinvoke $r7.<com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: void <init>(java.io.InputStream,int)>($r5, $i1);

        return $r7;
    }

    protected java.io.InputStream getStreamFromNetwork(java.lang.String, java.lang.Object)
    {
        java.net.HttpURLConnection $r3;
        java.lang.Throwable $r5;
        java.io.BufferedInputStream $r6;
        com.nostra13.universalimageloader.core.assist.ContentLengthInputStream $r7;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r1;
        java.io.InputStream $r4;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object)>($r1, $r2);

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

        $i1 = $i1 / 100;

        if $i1 != 3 goto label2;

        if $i0 >= 5 goto label2;

        $r1 = virtualinvoke $r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

        $r3 = virtualinvoke r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object)>($r1, $r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label3:
        $r7 = new com.nostra13.universalimageloader.core.assist.ContentLengthInputStream;

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 32768);

        $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getContentLength()>();

        specialinvoke $r7.<com.nostra13.universalimageloader.core.assist.ContentLengthInputStream: void <init>(java.io.InputStream,int)>($r6, $i0);

        return $r7;

     label4:
        $r5 := @caughtexception;

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        staticinvoke <com.nostra13.universalimageloader.utils.IoUtils: void readAndCloseStream(java.io.InputStream)>($r4);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label4;
    }

    protected java.io.InputStream getStreamFromOtherSource(java.lang.String, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.Object[] $r4;
        com.nostra13.universalimageloader.core.download.BaseImageDownloader r0;
        java.lang.Object $r2;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.core.download.BaseImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("UIL doesn\'t support scheme(protocol) by default [%s]. You should implement this support yourself (BaseImageDownloader.getStreamFromOtherSource(...))", $r4);

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public static void <clinit>()
    {
        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: int MAX_REDIRECT_COUNT> = 5;

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.lang.String ERROR_UNSUPPORTED_SCHEME> = "UIL doesn\'t support scheme(protocol) by default [%s]. You should implement this support yourself (BaseImageDownloader.getStreamFromOtherSource(...))";

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: int DEFAULT_HTTP_READ_TIMEOUT> = 20000;

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: int DEFAULT_HTTP_CONNECT_TIMEOUT> = 5000;

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.lang.String CONTENT_CONTACTS_URI_PREFIX> = "content://com.android.contacts/";

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: int BUFFER_SIZE> = 32768;

        <com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.lang.String ALLOWED_URI_CHARS> = "@#&=*+-_.,:!?()/~\'%";

        return;
    }
}
