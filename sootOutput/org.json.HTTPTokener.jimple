public class org.json.HTTPTokener extends org.json.JSONTokener
{

    public void <init>(java.lang.String)
    {
        org.json.HTTPTokener r0;
        java.lang.String $r1;

        r0 := @this: org.json.HTTPTokener;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.json.JSONTokener: void <init>(java.lang.String)>($r1);

        return;
    }

    public java.lang.String nextToken() throws org.json.JSONException
    {
        org.json.HTTPTokener r0;
        char $c0, $c1;
        org.json.JSONException $r2;
        java.lang.StringBuffer $r1, $r4;
        int $i2, $i3;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.json.HTTPTokener;

        $r4 = new java.lang.StringBuffer;

        $r1 = $r4;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

     label1:
        $c0 = virtualinvoke r0.<org.json.HTTPTokener: char next()>();

        $c1 = $c0;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z0 != 0 goto label1;

        $i2 = (int) $c0;

        if $i2 == 34 goto label2;

        $i2 = (int) $c0;

        if $i2 != 39 goto label6;

     label2:
        $c1 = virtualinvoke r0.<org.json.HTTPTokener: char next()>();

        $i2 = (int) $c1;

        if $i2 >= 32 goto label3;

        $r2 = virtualinvoke r0.<org.json.HTTPTokener: org.json.JSONException syntaxError(java.lang.String)>("Unterminated string.");

        throw $r2;

     label3:
        $i2 = (int) $c1;

        $i3 = (int) $c0;

        if $i2 != $i3 goto label4;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label2;

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $c1 = virtualinvoke r0.<org.json.HTTPTokener: char next()>();

     label6:
        if $c1 == 0 goto label7;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 == 0 goto label5;

     label7:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
