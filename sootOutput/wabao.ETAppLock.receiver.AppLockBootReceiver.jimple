public class wabao.ETAppLock.receiver.AppLockBootReceiver extends android.content.BroadcastReceiver
{
    public android.content.Intent ipcIntent;

    public void <init>()
    {
        wabao.ETAppLock.receiver.AppLockBootReceiver r0;

        r0 := @this: wabao.ETAppLock.receiver.AppLockBootReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.content.Context $r1;
        wabao.ETAppLock.receiver.AppLockBootReceiver r0;
        android.content.Intent $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: wabao.ETAppLock.receiver.AppLockBootReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        $r2 = virtualinvoke r0.<wabao.ETAppLock.receiver.AppLockBootReceiver: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.BOOT_COMPLETED");

        if $z0 == 0 goto label1;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r1, class "Lwabao/ETAppLock/service/AppLockService;");

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("boot", 1);

        virtualinvoke $r1.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r2);

     label1:
        return;
    }

    public android.content.Intent getIntent()
    {
        wabao.ETAppLock.receiver.AppLockBootReceiver this;
        android.content.Intent $r0;

        this := @this: wabao.ETAppLock.receiver.AppLockBootReceiver;

        $r0 = this.<wabao.ETAppLock.receiver.AppLockBootReceiver: android.content.Intent ipcIntent>;

        return $r0;
    }
}
