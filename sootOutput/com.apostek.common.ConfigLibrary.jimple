public class com.apostek.common.ConfigLibrary extends java.lang.Object
{
    private static java.lang.String configFileURL;
    private static java.lang.String response;

    static void <clinit>()
    {
        <com.apostek.common.ConfigLibrary: java.lang.String response> = "";

        return;
    }

    public void <init>()
    {
        com.apostek.common.ConfigLibrary r0;

        r0 := @this: com.apostek.common.ConfigLibrary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getConfigFile(java.lang.String, android.content.Context, java.lang.Boolean)
    {
        android.content.Context $r1;
        java.lang.Boolean $r2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.lang.Boolean;

        <com.apostek.common.ConfigLibrary: java.lang.String configFileURL> = $r0;

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        return $r0;

     label1:
        $r0 = staticinvoke <com.apostek.common.ConfigLibrary: java.lang.String getConfigFileHttp()>();

        <com.apostek.common.ConfigLibrary: java.lang.String response> = $r0;

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        staticinvoke <com.apostek.common.ConfigLibrary: void writeToFile(java.lang.String,android.content.Context)>($r0, $r1);

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        return $r0;

     label2:
        $r0 = staticinvoke <com.apostek.common.ConfigLibrary: java.lang.String readFromFile(android.content.Context)>($r1);

        <com.apostek.common.ConfigLibrary: java.lang.String response> = $r0;

        $r0 = <com.apostek.common.ConfigLibrary: java.lang.String response>;

        return $r0;
    }

    private static java.lang.String getConfigFileHttp()
    {
        java.lang.String $r1;
        java.lang.Exception r0;

        $r1 = <com.apostek.common.ConfigLibrary: java.lang.String configFileURL>;

     label1:
        $r1 = staticinvoke <com.apostek.common.HttpRequest: java.lang.String makeHttpRequest(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        r0 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String readFromFile(android.content.Context)
    {
        android.content.Context $r0;
        java.io.FileInputStream $r5;
        java.io.InputStreamReader r2;
        java.lang.Exception r1;
        int $i0;
        char[] r4;
        java.lang.StringBuilder $r7;
        java.lang.String r3, $r6;

        $r0 := @parameter0: android.content.Context;

        r3 = "";

        r4 = newarray (char)[2000];

     label01:
        $r5 = virtualinvoke $r0.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("configfile.txt");

     label02:
        r2 = new java.io.InputStreamReader;

     label03:
        specialinvoke r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

     label04:
        $i0 = virtualinvoke r2.<java.io.InputStreamReader: int read(char[])>(r4);

     label05:
        if $i0 > 0 goto label08;

     label06:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label07:
        return r3;

     label08:
        $r6 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>(r4, 0, $i0);

     label09:
        $r7 = new java.lang.StringBuilder;

     label10:
        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        r3 = $r6;

        r4 = newarray (char)[2000];

        goto label04;

     label12:
        r1 := @caughtexception;

        return "";

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private static void writeToFile(java.lang.String, android.content.Context)
    {
        android.content.Context $r1;
        java.io.OutputStreamWriter r3;
        java.io.FileOutputStream $r4;
        java.lang.String $r0;
        java.lang.Exception r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

     label1:
        $r4 = virtualinvoke $r1.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("configfile.txt", 1);

     label2:
        r3 = new java.io.OutputStreamWriter;

     label3:
        specialinvoke r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke r3.<java.io.OutputStreamWriter: void write(java.lang.String)>($r0);

        virtualinvoke r3.<java.io.OutputStreamWriter: void flush()>();

        virtualinvoke r3.<java.io.OutputStreamWriter: void close()>();

     label4:
        return;

     label5:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
