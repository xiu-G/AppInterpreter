public class proguard.classfile.editor.ConstantAdder extends java.lang.Object implements proguard.classfile.constant.visitor.ConstantVisitor
{
    private int constantIndex;
    private final proguard.classfile.editor.ConstantPoolEditor constantPoolEditor;

    public void <init>(proguard.classfile.ProgramClass)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.editor.ConstantPoolEditor $r2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new proguard.classfile.editor.ConstantPoolEditor;

        specialinvoke $r2.<proguard.classfile.editor.ConstantPoolEditor: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor> = $r2;

        return;
    }

    public int addConstant(proguard.classfile.Clazz, int)
    {
        int $i0;
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $i0 := @parameter1: int;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        $i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        return $i0;
    }

    public int addConstant(proguard.classfile.Clazz, proguard.classfile.constant.Constant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.Constant $r2;
        int i0;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Constant;

        virtualinvoke $r2.<proguard.classfile.constant.Constant: void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor)>($r1, r0);

        i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        return i0;
    }

    public int getConstantIndex()
    {
        int i0;
        proguard.classfile.editor.ConstantAdder r0;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        return i0;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r4;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.ClassConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz referencedClass>;

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addClassConstant(java.lang.String,proguard.classfile.Clazz)>($r4, $r1);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitDoubleConstant(proguard.classfile.Clazz, proguard.classfile.constant.DoubleConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.editor.ConstantPoolEditor $r3;
        proguard.classfile.constant.DoubleConstant $r2;
        double $d0;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.DoubleConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $d0 = virtualinvoke $r2.<proguard.classfile.constant.DoubleConstant: double getValue()>();

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addDoubleConstant(double)>($d0);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitFieldrefConstant(proguard.classfile.Clazz, proguard.classfile.constant.FieldrefConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.FieldrefConstant $r2;
        proguard.classfile.Member $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r5, $r6;
        proguard.classfile.editor.ConstantPoolEditor $r4;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.FieldrefConstant;

        $i0 = $r2.<proguard.classfile.constant.FieldrefConstant: int u2classIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        $r4 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        $r5 = virtualinvoke $r2.<proguard.classfile.constant.FieldrefConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r2.<proguard.classfile.constant.FieldrefConstant: java.lang.String getType(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.constant.FieldrefConstant: proguard.classfile.Clazz referencedClass>;

        $r3 = $r2.<proguard.classfile.constant.FieldrefConstant: proguard.classfile.Member referencedMember>;

        $i0 = virtualinvoke $r4.<proguard.classfile.editor.ConstantPoolEditor: int addFieldrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member)>($i0, $r5, $r6, $r1, $r3);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitFloatConstant(proguard.classfile.Clazz, proguard.classfile.constant.FloatConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.FloatConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        float $f0;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.FloatConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $f0 = virtualinvoke $r2.<proguard.classfile.constant.FloatConstant: float getValue()>();

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addFloatConstant(float)>($f0);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitIntegerConstant(proguard.classfile.Clazz, proguard.classfile.constant.IntegerConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.IntegerConstant $r2;
        int $i0;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.IntegerConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $i0 = virtualinvoke $r2.<proguard.classfile.constant.IntegerConstant: int getValue()>();

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addIntegerConstant(int)>($i0);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitInterfaceMethodrefConstant(proguard.classfile.Clazz, proguard.classfile.constant.InterfaceMethodrefConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.InterfaceMethodrefConstant $r2;
        proguard.classfile.Member $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r5, $r6;
        proguard.classfile.editor.ConstantPoolEditor $r4;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.InterfaceMethodrefConstant;

        $i0 = $r2.<proguard.classfile.constant.InterfaceMethodrefConstant: int u2classIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        $r4 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        $r5 = virtualinvoke $r2.<proguard.classfile.constant.InterfaceMethodrefConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r2.<proguard.classfile.constant.InterfaceMethodrefConstant: java.lang.String getType(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.constant.InterfaceMethodrefConstant: proguard.classfile.Clazz referencedClass>;

        $r3 = $r2.<proguard.classfile.constant.InterfaceMethodrefConstant: proguard.classfile.Member referencedMember>;

        $i0 = virtualinvoke $r4.<proguard.classfile.editor.ConstantPoolEditor: int addInterfaceMethodrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member)>($i0, $r5, $r6, $r1, $r3);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitLongConstant(proguard.classfile.Clazz, proguard.classfile.constant.LongConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.LongConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i1;
        long $l0;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.LongConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $l0 = virtualinvoke $r2.<proguard.classfile.constant.LongConstant: long getValue()>();

        $i1 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addLongConstant(long)>($l0);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i1;

        return;
    }

    public void visitMethodrefConstant(proguard.classfile.Clazz, proguard.classfile.constant.MethodrefConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.constant.MethodrefConstant $r2;
        proguard.classfile.Member $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r5, $r6;
        proguard.classfile.editor.ConstantPoolEditor $r4;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.MethodrefConstant;

        $i0 = $r2.<proguard.classfile.constant.MethodrefConstant: int u2classIndex>;

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i0, r0);

        $r4 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $i0 = r0.<proguard.classfile.editor.ConstantAdder: int constantIndex>;

        $r5 = virtualinvoke $r2.<proguard.classfile.constant.MethodrefConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r6 = virtualinvoke $r2.<proguard.classfile.constant.MethodrefConstant: java.lang.String getType(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.constant.MethodrefConstant: proguard.classfile.Clazz referencedClass>;

        $r3 = $r2.<proguard.classfile.constant.MethodrefConstant: proguard.classfile.Member referencedMember>;

        $i0 = virtualinvoke $r4.<proguard.classfile.editor.ConstantPoolEditor: int addMethodrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member)>($i0, $r5, $r6, $r1, $r3);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        java.lang.String $r4, $r5;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.NameAndTypeConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.constant.NameAndTypeConstant: java.lang.String getType(proguard.classfile.Clazz)>($r1);

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addNameAndTypeConstant(java.lang.String,java.lang.String)>($r4, $r5);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.StringConstant $r2;
        int $i0;
        java.lang.String $r5;
        proguard.classfile.editor.ConstantPoolEditor $r4;
        proguard.classfile.Member $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r4 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r5 = virtualinvoke $r2.<proguard.classfile.constant.StringConstant: java.lang.String getString(proguard.classfile.Clazz)>($r1);

        $r1 = $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Clazz referencedClass>;

        $r3 = $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Member referencedMember>;

        $i0 = virtualinvoke $r4.<proguard.classfile.editor.ConstantPoolEditor: int addStringConstant(java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member)>($r5, $r1, $r3);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }

    public void visitUtf8Constant(proguard.classfile.Clazz, proguard.classfile.constant.Utf8Constant)
    {
        proguard.classfile.editor.ConstantAdder r0;
        proguard.classfile.Clazz $r1;
        int $i0;
        java.lang.String $r4;
        proguard.classfile.constant.Utf8Constant $r2;
        proguard.classfile.editor.ConstantPoolEditor $r3;

        r0 := @this: proguard.classfile.editor.ConstantAdder;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Utf8Constant;

        $r3 = r0.<proguard.classfile.editor.ConstantAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.Utf8Constant: java.lang.String getString()>();

        $i0 = virtualinvoke $r3.<proguard.classfile.editor.ConstantPoolEditor: int addUtf8Constant(java.lang.String)>($r4);

        r0.<proguard.classfile.editor.ConstantAdder: int constantIndex> = $i0;

        return;
    }
}
