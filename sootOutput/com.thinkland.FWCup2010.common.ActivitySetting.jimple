public class com.thinkland.FWCup2010.common.ActivitySetting extends java.lang.Object
{
    public static boolean isCloseAll;

    static void <clinit>()
    {
        <com.thinkland.FWCup2010.common.ActivitySetting: boolean isCloseAll> = 0;

        return;
    }

    public void <init>()
    {
        com.thinkland.FWCup2010.common.ActivitySetting r0;

        r0 := @this: com.thinkland.FWCup2010.common.ActivitySetting;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void killProcess(android.content.Context)
    {
        java.lang.Throwable $r12;
        android.content.Context $r0;
        java.util.StringTokenizer r2, $r15;
        int i0;
        java.lang.String $r3, r4, $r9, $r11;
        boolean $z0;
        java.lang.Process $r6;
        java.lang.Runtime $r5;
        java.io.IOException $r17;
        java.io.InputStreamReader $r7, $r13;
        java.lang.StringBuilder $r10, $r16;
        java.io.BufferedReader r1, $r14;
        java.io.InputStream $r8;

        $r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        r4 = "";

     label01:
        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r6 = virtualinvoke $r5.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>("ps");

     label02:
        $r14 = new java.io.BufferedReader;

        r1 = $r14;

        $r13 = new java.io.InputStreamReader;

        $r7 = $r13;

     label03:
        $r8 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label04:
        $r9 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r9 != null goto label17;

     label06:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label07:
        $r15 = new java.util.StringTokenizer;

        r2 = $r15;

     label08:
        specialinvoke $r15.<java.util.StringTokenizer: void <init>(java.lang.String)>($r9);

     label09:
        i0 = 0;

     label10:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

     label11:
        if $z0 != 0 goto label20;

     label12:
        $r16 = new java.lang.StringBuilder;

        $r10 = $r16;

     label13:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("kill process : ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("sssss", $r3);

     label14:
        $r16 = new java.lang.StringBuilder;

        $r10 = $r16;

     label15:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("kill -15 ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(r4);

     label16:
        return;

     label17:
        $r16 = new java.lang.StringBuilder;

        $r10 = $r16;

     label18:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("----------- inline: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("sssss", $r11);

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

     label19:
        if $z0 == 0 goto label04;

        goto label06;

     label20:
        i0 = i0 + 1;

     label21:
        r4 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label22:
        if i0 != 2 goto label10;

        goto label12;

     label23:
        $r12 := @caughtexception;

        $r17 = (java.io.IOException) $r12;

        virtualinvoke $r17.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label03 to label05 with label23;
        catch java.io.IOException from label06 to label07 with label23;
        catch java.io.IOException from label08 to label09 with label23;
        catch java.io.IOException from label10 to label11 with label23;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label23;
        catch java.io.IOException from label18 to label19 with label23;
        catch java.io.IOException from label21 to label22 with label23;
    }
}
