public class proguard.DuplicateClassPrinter extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{
    private final proguard.classfile.util.WarningPrinter notePrinter;

    public void <init>(proguard.classfile.util.WarningPrinter)
    {
        proguard.classfile.util.WarningPrinter $r1;
        proguard.DuplicateClassPrinter r0;

        r0 := @this: proguard.DuplicateClassPrinter;

        $r1 := @parameter0: proguard.classfile.util.WarningPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.DuplicateClassPrinter: proguard.classfile.util.WarningPrinter notePrinter> = $r1;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.util.WarningPrinter $r2;
        java.lang.StringBuffer $r4;
        java.lang.String $r3, $r5;
        proguard.DuplicateClassPrinter r0;

        r0 := @this: proguard.DuplicateClassPrinter;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = r0.<proguard.DuplicateClassPrinter: proguard.classfile.util.WarningPrinter notePrinter>;

        $r3 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Note: duplicate definition of library class [");

        $r5 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String)>($r3, $r5);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.util.WarningPrinter $r2;
        java.lang.StringBuffer $r4;
        java.lang.String $r3, $r5;
        proguard.classfile.ProgramClass $r1;
        proguard.DuplicateClassPrinter r0;

        r0 := @this: proguard.DuplicateClassPrinter;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = r0.<proguard.DuplicateClassPrinter: proguard.classfile.util.WarningPrinter notePrinter>;

        $r3 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Note: duplicate definition of program class [");

        $r5 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r5 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String)>($r3, $r5);

        return;
    }
}
