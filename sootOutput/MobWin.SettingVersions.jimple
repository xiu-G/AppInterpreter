public final class MobWin.SettingVersions extends com.qq.taf.jce.JceStruct
{
    static final boolean $assertionsDisabled;
    public long appSetting;
    public long sysSetting;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "LMobWin/SettingVersions;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <MobWin.SettingVersions: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        long $l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        r0.<MobWin.SettingVersions: long sysSetting> = 0L;

        r0.<MobWin.SettingVersions: long appSetting> = 0L;

        $l0 = r0.<MobWin.SettingVersions: long sysSetting>;

        virtualinvoke r0.<MobWin.SettingVersions: void setSysSetting(long)>($l0);

        $l0 = r0.<MobWin.SettingVersions: long appSetting>;

        virtualinvoke r0.<MobWin.SettingVersions: void setAppSetting(long)>($l0);

        return;
    }

    public void <init>(long, long)
    {
        long $l0, $l1;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        r0.<MobWin.SettingVersions: long sysSetting> = 0L;

        r0.<MobWin.SettingVersions: long appSetting> = 0L;

        virtualinvoke r0.<MobWin.SettingVersions: void setSysSetting(long)>($l0);

        virtualinvoke r0.<MobWin.SettingVersions: void setAppSetting(long)>($l1);

        return;
    }

    public java.lang.String className()
    {
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        return "MobWin.SettingVersions";
    }

    public java.lang.Object clone()
    {
        java.lang.Throwable r1;
        MobWin.SettingVersions r0;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: MobWin.SettingVersions;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $z0 = <MobWin.SettingVersions: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void display(java.lang.StringBuilder, int)
    {
        MobWin.SettingVersions r0;
        int $i0;
        com.qq.taf.jce.JceDisplayer r2;
        java.lang.StringBuilder $r1;
        long $l1;

        r0 := @this: MobWin.SettingVersions;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        r2 = new com.qq.taf.jce.JceDisplayer;

        specialinvoke r2.<com.qq.taf.jce.JceDisplayer: void <init>(java.lang.StringBuilder,int)>($r1, $i0);

        $l1 = r0.<MobWin.SettingVersions: long sysSetting>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(long,java.lang.String)>($l1, "sysSetting");

        $l1 = r0.<MobWin.SettingVersions: long appSetting>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(long,java.lang.String)>($l1, "appSetting");

        return;
    }

    public boolean equals(java.lang.Object)
    {
        MobWin.SettingVersions r0, r2;
        java.lang.Object $r1;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: MobWin.SettingVersions;

        $r1 := @parameter0: java.lang.Object;

        r2 = (MobWin.SettingVersions) $r1;

        $l0 = r0.<MobWin.SettingVersions: long sysSetting>;

        $l1 = r2.<MobWin.SettingVersions: long sysSetting>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(long,long)>($l0, $l1);

        if $z0 == 0 goto label1;

        $l0 = r0.<MobWin.SettingVersions: long appSetting>;

        $l1 = r2.<MobWin.SettingVersions: long appSetting>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(long,long)>($l0, $l1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String fullClassName()
    {
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        return "MobWin.SettingVersions";
    }

    public long getAppSetting()
    {
        long l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        l0 = r0.<MobWin.SettingVersions: long appSetting>;

        return l0;
    }

    public long getSysSetting()
    {
        long l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        l0 = r0.<MobWin.SettingVersions: long sysSetting>;

        return l0;
    }

    public void readFrom(com.qq.taf.jce.JceInputStream)
    {
        com.qq.taf.jce.JceInputStream $r1;
        long $l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        $r1 := @parameter0: com.qq.taf.jce.JceInputStream;

        $l0 = r0.<MobWin.SettingVersions: long sysSetting>;

        $l0 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: long read(long,int,boolean)>($l0, 1, 1);

        virtualinvoke r0.<MobWin.SettingVersions: void setSysSetting(long)>($l0);

        $l0 = r0.<MobWin.SettingVersions: long appSetting>;

        $l0 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: long read(long,int,boolean)>($l0, 2, 1);

        virtualinvoke r0.<MobWin.SettingVersions: void setAppSetting(long)>($l0);

        return;
    }

    public void setAppSetting(long)
    {
        long $l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        $l0 := @parameter0: long;

        r0.<MobWin.SettingVersions: long appSetting> = $l0;

        return;
    }

    public void setSysSetting(long)
    {
        long $l0;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        $l0 := @parameter0: long;

        r0.<MobWin.SettingVersions: long sysSetting> = $l0;

        return;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream)
    {
        long $l0;
        com.qq.taf.jce.JceOutputStream $r1;
        MobWin.SettingVersions r0;

        r0 := @this: MobWin.SettingVersions;

        $r1 := @parameter0: com.qq.taf.jce.JceOutputStream;

        $l0 = r0.<MobWin.SettingVersions: long sysSetting>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(long,int)>($l0, 1);

        $l0 = r0.<MobWin.SettingVersions: long appSetting>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(long,int)>($l0, 2);

        return;
    }
}
