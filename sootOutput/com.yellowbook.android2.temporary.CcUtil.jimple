public class com.yellowbook.android2.temporary.CcUtil extends java.lang.Object
{
    public static final java.util.Comparator CASE_INSENSITIVE_COMPARATOR;

    static void <clinit>()
    {
        com.yellowbook.android2.temporary.CcUtil$1 $r0;

        $r0 = new com.yellowbook.android2.temporary.CcUtil$1;

        specialinvoke $r0.<com.yellowbook.android2.temporary.CcUtil$1: void <init>()>();

        <com.yellowbook.android2.temporary.CcUtil: java.util.Comparator CASE_INSENSITIVE_COMPARATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.yellowbook.android2.temporary.CcUtil r0;

        r0 := @this: com.yellowbook.android2.temporary.CcUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void close(java.io.Closeable)
    {
        java.lang.Throwable r1;
        java.io.IOException $r2;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label4;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r2 = (java.io.IOException) r1;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String componentsJoinedByString(java.util.List, java.lang.String)
    {
        java.util.List r0;
        int $i0, i1;
        java.lang.StringBuilder r2, $r5;
        java.lang.Object $r3;
        java.lang.String $r1, $r4;

        r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.lang.String) $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 1;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static void disconnect(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection $r0;

        $r0 := @parameter0: java.net.HttpURLConnection;

        if $r0 == null goto label1;

        virtualinvoke $r0.<java.net.HttpURLConnection: void disconnect()>();

     label1:
        return;
    }

    public static java.lang.String encode(java.lang.CharSequence)
    {
        java.lang.Throwable $r3;
        java.lang.CharSequence $r0;
        java.lang.String $r1, r2;
        java.io.UnsupportedEncodingException $r4;

        $r0 := @parameter0: java.lang.CharSequence;

        if $r0 != null goto label1;

        return "";

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        r2 = $r1;

     label2:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF8");

     label3:
        r2 = $r1;

     label4:
        return r2;

     label5:
        $r3 := @caughtexception;

        $r4 = (java.io.UnsupportedEncodingException) $r3;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label5;
    }

    public static java.lang.String generateMD5(java.lang.String)
    {
        java.lang.Throwable $r4, $r5;
        byte[] $r3;
        java.security.MessageDigest $r2;
        java.lang.RuntimeException $r7;
        short $s3;
        byte b0;
        int i1, i2, $i4;
        java.lang.StringBuilder r1, $r6;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label03:
        $r6 = new java.lang.StringBuilder;

        r1 = $r6;

     label04:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label05:
        i1 = lengthof $r3;

        i2 = 0;

     label06:
        if i2 >= i1 goto label14;

        b0 = $r3[i2];

        $s3 = (short) b0;

        $s3 = $s3 & 240;

        $i4 = (int) $s3;

        $i4 = $i4 >>> 4;

     label07:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label08:
        b0 = b0 & 15;

        $i4 = (int) b0;

     label09:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label10:
        i2 = i2 + 1;

        goto label06;

     label11:
        $r4 := @caughtexception;

     label12:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

     label13:
        goto label03;

     label14:
        $r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        return $r0;

     label16:
        $r5 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r7;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label16;
        catch java.io.UnsupportedEncodingException from label02 to label03 with label11;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label16;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label16;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label16;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label16;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label16;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label16;
    }

    public static android.graphics.drawable.BitmapDrawable getBitmapDrawable(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.String $r0;
        java.lang.ClassLoader $r2;
        android.graphics.drawable.BitmapDrawable $r5;
        android.graphics.drawable.Drawable $r4;
        java.io.InputStream $r3;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r0);

        $r4 = staticinvoke <android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r3, $r0);

        $r5 = (android.graphics.drawable.BitmapDrawable) $r4;

        return $r5;
    }

    public static android.graphics.drawable.Drawable getDrawable(java.lang.Class, java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.ClassLoader $r2;
        android.graphics.drawable.Drawable $r4;
        java.io.InputStream $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r3, $r1);

        return $r4;
    }

    public static android.graphics.Picture getPicture(java.lang.Class, java.lang.String)
    {
        android.graphics.Picture $r4;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.ClassLoader $r2;
        java.io.InputStream $r3;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        $r4 = staticinvoke <android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>($r3);

        return $r4;
    }

    public static java.lang.StringBuilder getResponse(java.io.InputStream) throws java.io.IOException
    {
        int $i0;
        char[] r1;
        java.lang.StringBuilder r2;
        java.io.BufferedReader r3;
        java.io.InputStreamReader $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r0, "UTF-8");

        specialinvoke r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        r1 = newarray (char)[1000];

        $i0 = 0;

     label1:
        if $i0 < 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, 0, $i0);

        $i0 = virtualinvoke r3.<java.io.Reader: int read(char[])>(r1);

        goto label1;

     label2:
        return r2;
    }

    public static int rgbFloatToInt(float, float, float, float)
    {
        int i0, i1, i2, i3;
        float $f0, $f1, $f2, $f3;
        double $d0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f0 = $f0 * 255.0F;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        i3 = (int) $d0;

        $f0 = $f1 * 255.0F;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        i2 = (int) $d0;

        $f0 = $f2 * 255.0F;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        i1 = (int) $d0;

        $f0 = $f3 * 255.0F;

        $d0 = (double) $f0;

        $d0 = $d0 + 0.5;

        i0 = (int) $d0;

        i0 = i0 & 255;

        i0 = i0 << 24;

        i3 = i3 & 255;

        i3 = i3 << 16;

        i3 = i0 | i3;

        i2 = i2 & 255;

        i2 = i2 << 8;

        i2 = i3 | i2;

        i1 = i1 & 255;

        i1 = i1 << 0;

        i1 = i2 | i1;

        return i1;
    }
}
