public class com.conradcaine.fairsandevents.xml.XMLParser extends java.lang.Object
{
    private final java.lang.String LOCAL;

    public void <init>()
    {
        com.conradcaine.fairsandevents.xml.XMLParser r0;

        r0 := @this: com.conradcaine.fairsandevents.xml.XMLParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.conradcaine.fairsandevents.xml.XMLParser: java.lang.String LOCAL> = "file:///android_asset/";

        return;
    }

    public boolean parseFair(android.content.Context, int)
    {
        android.content.Context $r1;
        org.xml.sax.InputSource r5;
        com.conradcaine.fairsandevents.xml.FairHandler r4;
        javax.xml.parsers.SAXParserFactory $r6;
        java.io.FileInputStream r3;
        java.io.File r2;
        java.lang.Exception $r11;
        org.xml.sax.XMLReader $r8;
        com.conradcaine.fairsandevents.xml.XMLParser r0;
        int $i0;
        javax.xml.parsers.SAXParser $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: com.conradcaine.fairsandevents.xml.XMLParser;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

     label01:
        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label02:
        r4 = new com.conradcaine.fairsandevents.xml.FairHandler;

     label03:
        specialinvoke r4.<com.conradcaine.fairsandevents.xml.FairHandler: void <init>()>();

        virtualinvoke r4.<com.conradcaine.fairsandevents.xml.FairHandler: void setCurrentFairId(int)>($i0);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r4);

     label04:
        r2 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        $r10 = <com.conradcaine.fairsandevents.data.Constants: java.lang.String DATA_PATH>;

     label05:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r10);

     label06:
        r3 = new java.io.FileInputStream;

     label07:
        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

     label08:
        r5 = new org.xml.sax.InputSource;

     label09:
        specialinvoke r5.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r3);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

     label10:
        return 1;

     label11:
        $r11 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public boolean parseFairOverview(android.content.Context)
    {
        android.content.Context $r1;
        org.xml.sax.InputSource r5;
        javax.xml.parsers.SAXParserFactory $r6;
        java.io.FileInputStream r3;
        java.io.File r2;
        java.lang.Exception $r11;
        com.conradcaine.fairsandevents.xml.OverviewHandler r4;
        org.xml.sax.XMLReader $r8;
        com.conradcaine.fairsandevents.xml.XMLParser r0;
        javax.xml.parsers.SAXParser $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        r0 := @this: com.conradcaine.fairsandevents.xml.XMLParser;

        $r1 := @parameter0: android.content.Context;

     label01:
        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label02:
        r4 = new com.conradcaine.fairsandevents.xml.OverviewHandler;

     label03:
        specialinvoke r4.<com.conradcaine.fairsandevents.xml.OverviewHandler: void <init>()>();

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r4);

     label04:
        r2 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        $r10 = <com.conradcaine.fairsandevents.data.Constants: java.lang.String DATA_PATH>;

     label05:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fairOverview.xml");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r10);

     label06:
        r3 = new java.io.FileInputStream;

     label07:
        specialinvoke r3.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

     label08:
        r5 = new org.xml.sax.InputSource;

     label09:
        specialinvoke r5.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r3);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r5);

     label10:
        return 1;

     label11:
        $r11 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public boolean parseInfo(int)
    {
        org.xml.sax.InputSource r4;
        javax.xml.parsers.SAXParserFactory $r5;
        java.io.FileInputStream r2;
        java.io.File r1;
        java.lang.Exception $r10;
        org.xml.sax.XMLReader $r7;
        com.conradcaine.fairsandevents.xml.XMLParser r0;
        int $i0;
        javax.xml.parsers.SAXParser $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        com.conradcaine.fairsandevents.xml.ImprintHandler r3;

        r0 := @this: com.conradcaine.fairsandevents.xml.XMLParser;

        $i0 := @parameter0: int;

     label01:
        $r5 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

     label02:
        r3 = new com.conradcaine.fairsandevents.xml.ImprintHandler;

     label03:
        specialinvoke r3.<com.conradcaine.fairsandevents.xml.ImprintHandler: void <init>()>();

        virtualinvoke r3.<com.conradcaine.fairsandevents.xml.ImprintHandler: void setCurrentFair(int)>($i0);

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r3);

     label04:
        r1 = new java.io.File;

        $r8 = new java.lang.StringBuilder;

        $r9 = <com.conradcaine.fairsandevents.data.Constants: java.lang.String DATA_PATH>;

     label05:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Information.xml");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r9);

     label06:
        r2 = new java.io.FileInputStream;

     label07:
        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

     label08:
        r4 = new org.xml.sax.InputSource;

     label09:
        specialinvoke r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r2);

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r4);

     label10:
        return 1;

     label11:
        $r10 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
