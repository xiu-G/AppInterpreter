public class hw.ats.common.model.Entry extends hw.ats.common.model.BaseModel implements java.lang.Cloneable
{
    private static final java.lang.String TAG;
    public java.lang.String author;
    public java.lang.String category;
    public int category_id;
    public int comments;
    public java.lang.String content;
    public boolean deleted;
    public java.lang.String description;
    public java.lang.String email;
    public boolean favor_flag;
    public int id;
    private java.util.ArrayList images;
    public java.lang.String main_image;
    private java.util.ArrayList materials;
    private java.util.ArrayList options;
    public java.lang.String permalink;
    public float point_avg;
    public float starred;
    public java.lang.String summary;
    public java.lang.String tags;
    private java.util.ArrayList terms;
    public java.lang.String thumb_default;
    public java.lang.String thumb_list;
    public java.lang.String title;
    public java.util.Date written;
    public java.lang.String youtube;

    public void <init>()
    {
        hw.ats.common.model.Entry r0;

        r0 := @this: hw.ats.common.model.Entry;

        specialinvoke r0.<hw.ats.common.model.BaseModel: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.lang.String title> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String category> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String content> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String summary> = null;

        r0.<hw.ats.common.model.Entry: java.util.Date written> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String author> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String email> = null;

        r0.<hw.ats.common.model.Entry: int comments> = 0;

        r0.<hw.ats.common.model.Entry: float point_avg> = 0.0F;

        r0.<hw.ats.common.model.Entry: float starred> = 0.0F;

        r0.<hw.ats.common.model.Entry: java.lang.String main_image> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String thumb_default> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String thumb_list> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String description> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String permalink> = null;

        r0.<hw.ats.common.model.Entry: java.lang.String tags> = null;

        r0.<hw.ats.common.model.Entry: boolean favor_flag> = 0;

        r0.<hw.ats.common.model.Entry: boolean deleted> = 0;

        r0.<hw.ats.common.model.Entry: java.lang.String youtube> = null;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList options> = null;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList images> = null;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList materials> = null;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList terms> = null;

        return;
    }

    private void bind(android.database.Cursor)
    {
        hw.ats.common.model.Entry r0;
        java.util.Date $r3;
        long $l1;
        int $i0;
        float $f0;
        java.lang.String $r2;
        android.database.Cursor $r1;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("id");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Entry: int id> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("title");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String title> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("category_id");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Entry: int category_id> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("category");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String category> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("content");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String content> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("summary");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String summary> = $r2;

        $r3 = new java.util.Date;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("written");

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>($i0);

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

        r0.<hw.ats.common.model.Entry: java.util.Date written> = $r3;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("author");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String author> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("email");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String email> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("comments");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Entry: int comments> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("comments");

        $f0 = interfaceinvoke $r1.<android.database.Cursor: float getFloat(int)>($i0);

        r0.<hw.ats.common.model.Entry: float point_avg> = $f0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("comments");

        $f0 = interfaceinvoke $r1.<android.database.Cursor: float getFloat(int)>($i0);

        r0.<hw.ats.common.model.Entry: float starred> = $f0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("main_image");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String main_image> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("thumb_default");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String thumb_default> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("thumb_list");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String thumb_list> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("description");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String description> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("permalink");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String permalink> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("tags");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String tags> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("youtube");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Entry: java.lang.String youtube> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("favor_flag");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        if $i0 <= 0 goto label2;

        $z0 = 1;

     label1:
        r0.<hw.ats.common.model.Entry: boolean favor_flag> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    private static java.lang.String buildQuerySearchKeyword(java.lang.String, java.lang.String)
    {
        java.lang.String[] $r5, $r6;
        java.lang.StringBuffer r1, $r7;
        int i0, i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r0, r2, $r3;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        r2 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>(r2);

        $r3 = "KEYWORD";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ( title like \'%");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\' OR content like \'%");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\') ");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label1:
        $r3 = "DIRECTORY_TERM";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        if r2 == null goto label5;

        $r0 = "";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label5;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("::");

        if i0 <= 0 goto label5;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

        r2 = $r5[3];

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r1 = new java.lang.StringBuffer;

        specialinvoke r1.<java.lang.StringBuffer: void <init>()>();

        i0 = lengthof $r6;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = $r6[i1];

        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\',");

        i1 = i1 + 1;

        goto label2;

     label3:
        i0 = lengthof $r6;

        if i0 <= 0 goto label4;

        i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        i0 = i0 - 1;

        i1 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(i0, i1);

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id in (select entry_id from entry_terms where type=\'");

        r2 = $r5[0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and value in (");

        r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") group by entry_id) ");

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r2;

     label5:
        return null;
    }

    public static void delete(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r5;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

     label01:
        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r1[0] = $r3;

     label04:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entries", "id=?", $r1);

     label05:
        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r1[0] = $r3;

     label08:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_options", "entry_id=?", $r1);

     label09:
        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r1[0] = $r3;

     label12:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_images", "entry_id=?", $r1);

     label13:
        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r1[0] = $r3;

     label16:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_materials", "entry_id=?", $r1);

     label17:
        $r1 = newarray (java.lang.String)[1];

        $r2 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        $r1[0] = $r3;

     label20:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_terms", "entry_id=?", $r1);

     label21:
        return;

     label22:
        $r4 := @caughtexception;

     label23:
        $r3 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r3, $r4);

     label24:
        return;

     label25:
        $r5 := @caughtexception;

        throw $r5;

        catch java.lang.Exception from label02 to label05 with label22;
        catch java.lang.Exception from label06 to label09 with label22;
        catch java.lang.Exception from label10 to label13 with label22;
        catch java.lang.Exception from label14 to label17 with label22;
        catch java.lang.Exception from label18 to label21 with label22;
        catch java.lang.Throwable from label01 to label03 with label25;
        catch java.lang.Throwable from label04 to label07 with label25;
        catch java.lang.Throwable from label08 to label11 with label25;
        catch java.lang.Throwable from label12 to label15 with label25;
        catch java.lang.Throwable from label16 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
    }

    public static void deleteAll(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r3;
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entries", null, null);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_options", null, null);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_images", null, null);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_materials", null, null);

        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("entry_terms", null, null);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r1, $r2);

     label5:
        return;

     label6:
        $r3 := @caughtexception;

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static boolean exists(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r6;
        java.lang.Exception $r5, $r7, $r8;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.database.Cursor r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        r1 = null;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id FROM entries WHERE id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT 1");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

     label02:
        r1 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>(0);

     label08:
        if $i0 <= 0 goto label12;

        $z0 = 1;

     label09:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label10:
        return $z0;

     label11:
        $r5 := @caughtexception;

        return $z0;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r6 := @caughtexception;

     label14:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label15:
        throw $r6;

     label16:
        $r7 := @caughtexception;

        goto label06;

     label17:
        $r8 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public static java.util.List list(android.database.sqlite.SQLiteDatabase, int, int)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r7, $r9, $r10;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor r3, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries ORDER BY written DESC LIMIT ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label02:
        r3 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return r2;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r1.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return r2;

     label11:
        $r7 := @caughtexception;

        return r2;

     label12:
        $r8 := @caughtexception;

     label13:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label14:
        throw $r8;

     label15:
        $r9 := @caughtexception;

        return r2;

     label16:
        $r10 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static java.util.List list(android.database.sqlite.SQLiteDatabase, int, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r0;
        java.util.List $r1;
        int[] $r2;
        int $i0, $i1, $i2;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r2 = newarray (int)[1];

        $r2[0] = $i0;

        $r1 = staticinvoke <hw.ats.common.model.Entry: java.util.List list(android.database.sqlite.SQLiteDatabase,int[],int,int)>($r0, $r2, $i1, $i2);

        return $r1;
    }

    public static java.util.List list(android.database.sqlite.SQLiteDatabase, int[], int, int)
    {
        java.lang.Throwable $r11;
        java.util.ArrayList r3;
        android.database.sqlite.SQLiteDatabase $r0;
        int[] $r1;
        java.lang.StringBuffer r4, $r6;
        int $i0, $i1, i2, i3, i4;
        java.lang.String $r8;
        android.database.Cursor r5, $r9;
        boolean $z0;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r10, $r12, $r13;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: int[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r5 = null;

     label01:
        r4 = new java.lang.StringBuffer;

        specialinvoke r4.<java.lang.StringBuffer: void <init>()>();

     label02:
        if $r1 == null goto label13;

     label03:
        i2 = lengthof $r1;

     label04:
        if i2 <= 0 goto label13;

     label05:
        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" category_id in (");

        i3 = lengthof $r1;

     label06:
        i4 = 0;

     label07:
        if i4 >= i3 goto label10;

     label08:
        i2 = $r1[i4];

        $r6 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label09:
        i4 = i4 + 1;

        goto label07;

     label10:
        i2 = virtualinvoke r4.<java.lang.StringBuffer: int length()>();

     label11:
        i2 = i2 - 1;

     label12:
        i3 = virtualinvoke r4.<java.lang.StringBuffer: int length()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(i2, i3);

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") ");

     label13:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry list::sWhere");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rows:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", $r8);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE ");

        $r8 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r8, null);

     label14:
        r5 = $r9;

     label15:
        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToFirst()>();

     label16:
        if $z0 != 0 goto label19;

     label17:
        interfaceinvoke $r9.<android.database.Cursor: void close()>();

     label18:
        return r3;

     label19:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r9);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

     label20:
        if $z0 != 0 goto label19;

     label21:
        interfaceinvoke $r9.<android.database.Cursor: void close()>();

     label22:
        return r3;

     label23:
        $r10 := @caughtexception;

        return r3;

     label24:
        $r11 := @caughtexception;

     label25:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label26:
        throw $r11;

     label27:
        $r12 := @caughtexception;

        return r3;

     label28:
        $r13 := @caughtexception;

        goto label26;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label12 to label14 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label27;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Exception from label25 to label26 with label28;
    }

    public static java.util.List listFavor(android.database.sqlite.SQLiteDatabase, int, int, java.lang.String)
    {
        java.lang.Throwable $r10;
        java.util.ArrayList r3;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.String $r1, r5, $r6;
        android.database.Cursor r4, $r8;
        boolean $z0;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r9, $r11, $r12;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r4 = null;

        r5 = " written DESC";

        $r6 = "title";

     label01:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label02:
        if $z0 == 0 goto label03;

        r5 = " title ASC";

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE favor_flag=1 ORDER BY ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

     label04:
        r4 = $r8;

     label05:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 != 0 goto label09;

     label07:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label08:
        return r3;

     label09:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label10:
        if $z0 != 0 goto label09;

     label11:
        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label12:
        return r3;

     label13:
        $r9 := @caughtexception;

        return r3;

     label14:
        $r10 := @caughtexception;

     label15:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label16:
        throw $r10;

     label17:
        $r11 := @caughtexception;

        return r3;

     label18:
        $r12 := @caughtexception;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label18;
    }

    public static java.util.List listPhoto(android.database.sqlite.SQLiteDatabase, int, int)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r7, $r9, $r10;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor r3, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE main_image IS NOT NULL ORDER BY written DESC LIMIT ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label02:
        r3 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return r2;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r1.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return r2;

     label11:
        $r7 := @caughtexception;

        return r2;

     label12:
        $r8 := @caughtexception;

     label13:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label14:
        throw $r8;

     label15:
        $r9 := @caughtexception;

        return r2;

     label16:
        $r10 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static java.util.List listPhoto(android.database.sqlite.SQLiteDatabase, int, int, int)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r7, $r9, $r10;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor r3, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE category_id = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND main_image IS NOT NULL ORDER BY written DESC LIMIT ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label02:
        r3 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return r2;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r1.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return r2;

     label11:
        $r7 := @caughtexception;

        return r2;

     label12:
        $r8 := @caughtexception;

     label13:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label14:
        throw $r8;

     label15:
        $r9 := @caughtexception;

        return r2;

     label16:
        $r10 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static java.util.List listSearch(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String, int, int)
    {
        java.lang.Throwable $r9;
        hw.ats.common.model.Entry r3;
        java.lang.Exception $r8, $r10, $r11;
        java.util.ArrayList r4;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r2;
        android.database.Cursor r5, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r5 = null;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r1 = staticinvoke <hw.ats.common.model.Entry: java.lang.String buildQuerySearchKeyword(java.lang.String,java.lang.String)>($r1, $r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sWhere:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", $r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

     label02:
        r5 = $r7;

     label03:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c.getCount():");

        $i0 = interfaceinvoke $r7.<android.database.Cursor: int getCount()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", $r1);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label06:
        return r4;

     label07:
        r3 = new hw.ats.common.model.Entry;

        specialinvoke r3.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r3.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label10:
        return r4;

     label11:
        $r8 := @caughtexception;

        return r4;

     label12:
        $r9 := @caughtexception;

     label13:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label14:
        throw $r9;

     label15:
        $r10 := @caughtexception;

        return r4;

     label16:
        $r11 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static java.util.List listThumb(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r7;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r6, $r8, $r9;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.String $r5;
        android.database.Cursor r3, $r4;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = null;

     label01:
        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT thumb_default, thumb_list FROM entries WHERE main_image IS NOT NULL", null);

     label02:
        r3 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label06:
        return r2;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("thumb_default");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r1.<hw.ats.common.model.Entry: java.lang.String thumb_default> = $r5;

        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("thumb_list");

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r1.<hw.ats.common.model.Entry: java.lang.String thumb_list> = $r5;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label10:
        return r2;

     label11:
        $r6 := @caughtexception;

        return r2;

     label12:
        $r7 := @caughtexception;

     label13:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label14:
        throw $r7;

     label15:
        $r8 := @caughtexception;

        return r2;

     label16:
        $r9 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static hw.ats.common.model.Entry load(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r6;
        hw.ats.common.model.Entry r5;
        java.lang.Exception $r7, $r8, $r9;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.database.Cursor r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        r1 = null;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("entries", null, $r3, null, null, null, null);

     label02:
        r1 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        r5 = new hw.ats.common.model.Entry;

        specialinvoke r5.<hw.ats.common.model.Entry: void <init>()>();

     label08:
        specialinvoke r5.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r4);

        $i0 = staticinvoke <hw.ats.common.util.DataLoader: int getCommentsCount(int)>($i0);

        r5.<hw.ats.common.model.Entry: int comments> = $i0;

     label09:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label10:
        return r5;

     label11:
        $r6 := @caughtexception;

     label12:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

        goto label06;

     label15:
        $r8 := @caughtexception;

        goto label10;

     label16:
        $r9 := @caughtexception;

        goto label13;

     label17:
        $r6 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    public static int maximumId(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r4;
        java.lang.Exception $r3, $r5, $r6;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        android.database.Cursor r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 = null;

     label01:
        $r2 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT MAX(id) FROM entries", null);

     label02:
        r1 = $r2;

     label03:
        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getInt(int)>(0);

     label08:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label09:
        return $i0;

     label10:
        $r3 := @caughtexception;

        return $i0;

     label11:
        $r4 := @caughtexception;

     label12:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label13:
        throw $r4;

     label14:
        $r5 := @caughtexception;

        goto label06;

     label15:
        $r6 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public static int maximumId(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r6;
        java.lang.Exception $r5, $r7, $r8;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        android.database.Cursor r3, $r4;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT MAX(id) FROM entries WHERE category_id = ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = null;

     label01:
        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r2, null);

     label02:
        r3 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getInt(int)>(0);

     label08:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label09:
        return $i0;

     label10:
        $r5 := @caughtexception;

        return $i0;

     label11:
        $r6 := @caughtexception;

     label12:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

        goto label06;

     label15:
        $r8 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public static hw.ats.common.model.Entry next(android.database.sqlite.SQLiteDatabase, int, hw.ats.common.model.Category)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category $r1;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r9, $r10, $r11;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, r5;
        android.database.Cursor r6, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: hw.ats.common.model.Category;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id < ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = $r4;

        if $r1 == null goto label01;

        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 1 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (category_id in (select id from categories where parent_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") OR category_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT 1");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", r5);

        r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, null);

     label03:
        r6 = $r7;

     label04:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 != 0 goto label09;

     label06:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label07:
        return null;

     label08:
        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 2 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND category_id=");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label09:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

     label10:
        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

     label11:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label12:
        return r2;

     label13:
        $r8 := @caughtexception;

     label14:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        goto label07;

     label17:
        $r10 := @caughtexception;

        goto label12;

     label18:
        $r11 := @caughtexception;

        goto label15;

     label19:
        $r8 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label14 to label15 with label18;
    }

    public static hw.ats.common.model.Entry nextFavor(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r6;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r7, $r8, $r9;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.database.Cursor r4, $r5;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id < ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND favor_flag = 1 ORDER BY written DESC LIMIT  1");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = null;

     label01:
        $r5 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

     label02:
        r4 = $r5;

     label03:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

     label08:
        specialinvoke r1.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r5);

     label09:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label10:
        return r1;

     label11:
        $r6 := @caughtexception;

     label12:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

        goto label06;

     label15:
        $r8 := @caughtexception;

        goto label10;

     label16:
        $r9 := @caughtexception;

        goto label13;

     label17:
        $r6 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    public static hw.ats.common.model.Entry nextPhoto(android.database.sqlite.SQLiteDatabase, int, hw.ats.common.model.Category)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category $r1;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r9, $r10, $r11;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, r5;
        android.database.Cursor r6, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: hw.ats.common.model.Category;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id < ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND main_image IS NOT NULL ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = $r4;

        if $r1 == null goto label01;

        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 1 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (category_id in (select id from categories where parent_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") OR category_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT 1");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, null);

     label03:
        r6 = $r7;

     label04:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 != 0 goto label09;

     label06:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label07:
        return null;

     label08:
        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 2 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND category_id=");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label09:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

     label10:
        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

     label11:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label12:
        return r2;

     label13:
        $r8 := @caughtexception;

     label14:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        goto label07;

     label17:
        $r10 := @caughtexception;

        goto label12;

     label18:
        $r11 := @caughtexception;

        goto label15;

     label19:
        $r8 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label14 to label15 with label18;
    }

    public static hw.ats.common.model.Entry nextSearch(android.database.sqlite.SQLiteDatabase, int, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        hw.ats.common.model.Entry r3;
        java.lang.Exception $r8, $r9, $r10;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        android.database.Cursor r5, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id < ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r1 = staticinvoke <hw.ats.common.model.Entry: java.lang.String buildQuerySearchKeyword(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT  1");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = null;

     label01:
        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

     label02:
        r5 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        r3 = new hw.ats.common.model.Entry;

        specialinvoke r3.<hw.ats.common.model.Entry: void <init>()>();

     label08:
        specialinvoke r3.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r6);

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return r3;

     label11:
        $r7 := @caughtexception;

     label12:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label13:
        throw $r7;

     label14:
        $r8 := @caughtexception;

        goto label06;

     label15:
        $r9 := @caughtexception;

        goto label10;

     label16:
        $r10 := @caughtexception;

        goto label13;

     label17:
        $r7 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    public static hw.ats.common.model.Entry prev(android.database.sqlite.SQLiteDatabase, int, hw.ats.common.model.Category)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category $r1;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r9, $r10, $r11;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, r5;
        android.database.Cursor r6, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: hw.ats.common.model.Category;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id > ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = $r4;

        if $r1 == null goto label01;

        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 1 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (category_id in (select id from categories where parent_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") OR category_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written ASC LIMIT 1");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prev:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", r5);

        r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, null);

     label03:
        r6 = $r7;

     label04:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 != 0 goto label09;

     label06:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label07:
        return null;

     label08:
        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 2 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND category_id=");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label09:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

     label10:
        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

     label11:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label12:
        return r2;

     label13:
        $r8 := @caughtexception;

     label14:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        goto label07;

     label17:
        $r10 := @caughtexception;

        goto label12;

     label18:
        $r11 := @caughtexception;

        goto label15;

     label19:
        $r8 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label14 to label15 with label18;
    }

    public static hw.ats.common.model.Entry prevFavor(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r6;
        hw.ats.common.model.Entry r1;
        java.lang.Exception $r7, $r8, $r9;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.database.Cursor r4, $r5;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries WHERE  id > ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND favor_flag = 1 ORDER BY written ASC LIMIT  1");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = null;

     label01:
        $r5 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

     label02:
        r4 = $r5;

     label03:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        r1 = new hw.ats.common.model.Entry;

        specialinvoke r1.<hw.ats.common.model.Entry: void <init>()>();

     label08:
        specialinvoke r1.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r5);

     label09:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label10:
        return r1;

     label11:
        $r6 := @caughtexception;

     label12:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label13:
        throw $r6;

     label14:
        $r7 := @caughtexception;

        goto label06;

     label15:
        $r8 := @caughtexception;

        goto label10;

     label16:
        $r9 := @caughtexception;

        goto label13;

     label17:
        $r6 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    public static hw.ats.common.model.Entry prevPhoto(android.database.sqlite.SQLiteDatabase, int, hw.ats.common.model.Category)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category $r1;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r9, $r10, $r11;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, r5;
        android.database.Cursor r6, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: hw.ats.common.model.Category;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT *  FROM entries  WHERE  id > ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND main_image IS NOT NULL ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = $r4;

        if $r1 == null goto label01;

        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 1 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (category_id in (select id from categories where parent_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") OR category_id = ");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written ASC LIMIT 1");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r4, null);

     label03:
        r6 = $r7;

     label04:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 != 0 goto label09;

     label06:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label07:
        return null;

     label08:
        $i0 = $r1.<hw.ats.common.model.Category: int level>;

        if $i0 != 2 goto label01;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND category_id=");

        $i0 = $r1.<hw.ats.common.model.Category: int id>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label09:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

     label10:
        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

     label11:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label12:
        return r2;

     label13:
        $r8 := @caughtexception;

     label14:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        goto label07;

     label17:
        $r10 := @caughtexception;

        goto label12;

     label18:
        $r11 := @caughtexception;

        goto label15;

     label19:
        $r8 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label14 to label15 with label18;
    }

    public static hw.ats.common.model.Entry prevSearch(android.database.sqlite.SQLiteDatabase, int, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        hw.ats.common.model.Entry r3;
        java.lang.Exception $r8, $r9, $r10;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        android.database.Cursor r5, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM entries  WHERE  id > ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r1 = staticinvoke <hw.ats.common.model.Entry: java.lang.String buildQuerySearchKeyword(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written ASC LIMIT 1 ");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = null;

     label01:
        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

     label02:
        r5 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        r3 = new hw.ats.common.model.Entry;

        specialinvoke r3.<hw.ats.common.model.Entry: void <init>()>();

     label08:
        specialinvoke r3.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r6);

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return r3;

     label11:
        $r7 := @caughtexception;

     label12:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label13:
        throw $r7;

     label14:
        $r8 := @caughtexception;

        goto label06;

     label15:
        $r9 := @caughtexception;

        goto label10;

     label16:
        $r10 := @caughtexception;

        goto label13;

     label17:
        $r7 := @caughtexception;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    public static java.util.List search(android.database.sqlite.SQLiteDatabase, java.lang.String, int, int)
    {
        java.lang.Throwable $r9;
        hw.ats.common.model.Entry r2;
        java.lang.Exception $r8, $r10, $r11;
        java.util.ArrayList r3;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;
        android.database.Cursor r6, $r7;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT *  FROM   entries  WHERE  title LIKE \'%");

        $r5 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\' OR content LIKE \'%");

        $r1 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\' ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY written DESC LIMIT ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OFFSET ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        r6 = null;

     label01:
        $r7 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, null);

     label02:
        r6 = $r7;

     label03:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label06:
        return r3;

     label07:
        r2 = new hw.ats.common.model.Entry;

        specialinvoke r2.<hw.ats.common.model.Entry: void <init>()>();

        specialinvoke r2.<hw.ats.common.model.Entry: void bind(android.database.Cursor)>($r7);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

     label08:
        if $z0 != 0 goto label07;

     label09:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label10:
        return r3;

     label11:
        $r8 := @caughtexception;

        return r3;

     label12:
        $r9 := @caughtexception;

     label13:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label14:
        throw $r9;

     label15:
        $r10 := @caughtexception;

        return r3;

     label16:
        $r11 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static int updateCommentCnt(android.database.sqlite.SQLiteDatabase, int, int)
    {
        java.lang.Integer $r2;
        java.lang.Exception $r5;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r7;
        android.content.ContentValues r1, $r6;
        java.lang.String $r4;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r6 = new android.content.ContentValues;

        r1 = $r6;

     label1:
        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("comments", $r2);

     label2:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label3:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("entries", r1, $r4, null);

     label4:
        return $i0;

     label5:
        $r5 := @caughtexception;

        $r4 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r4, $r5);

        return -1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void addImage(hw.ats.common.model.EntryImage)
    {
        hw.ats.common.model.EntryImage $r1;
        hw.ats.common.model.Entry r0;
        java.util.ArrayList $r2;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: hw.ats.common.model.EntryImage;

        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.util.ArrayList images> = $r2;

     label1:
        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addMaterial(hw.ats.common.model.EntryMaterial)
    {
        hw.ats.common.model.EntryMaterial $r1;
        hw.ats.common.model.Entry r0;
        java.util.ArrayList $r2;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: hw.ats.common.model.EntryMaterial;

        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.util.ArrayList materials> = $r2;

     label1:
        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addOptions(hw.ats.common.model.EntryOption)
    {
        hw.ats.common.model.Entry r0;
        hw.ats.common.model.EntryOption $r1;
        java.util.ArrayList $r2;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: hw.ats.common.model.EntryOption;

        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.util.ArrayList options> = $r2;

     label1:
        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addTerm(hw.ats.common.model.EntryTerm)
    {
        hw.ats.common.model.EntryTerm $r1;
        hw.ats.common.model.Entry r0;
        java.util.ArrayList $r2;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: hw.ats.common.model.EntryTerm;

        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.util.ArrayList terms> = $r2;

     label1:
        $r2 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public hw.ats.common.model.Entry clone() throws java.lang.CloneNotSupportedException
    {
        hw.ats.common.model.Entry r0, r2;
        java.lang.Object $r1;
        java.util.ArrayList $r3;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (hw.ats.common.model.Entry) $r1;

        $r3 = r2.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        if $r3 == null goto label1;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        $r1 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r3 = (java.util.ArrayList) $r1;

        r2.<hw.ats.common.model.Entry: java.util.ArrayList options> = $r3;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label1:
        $r3 = r2.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        if $r3 == null goto label2;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        $r1 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r3 = (java.util.ArrayList) $r1;

        r2.<hw.ats.common.model.Entry: java.util.ArrayList images> = $r3;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label2:
        $r3 = r2.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        if $r3 == null goto label3;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        $r1 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r3 = (java.util.ArrayList) $r1;

        r2.<hw.ats.common.model.Entry: java.util.ArrayList materials> = $r3;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label3:
        $r3 = r2.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        if $r3 == null goto label4;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        $r1 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r3 = (java.util.ArrayList) $r1;

        r2.<hw.ats.common.model.Entry: java.util.ArrayList terms> = $r3;

        $r3 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label4:
        return r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        hw.ats.common.model.Entry r0;

        r0 := @this: hw.ats.common.model.Entry;

        r0 = virtualinvoke r0.<hw.ats.common.model.Entry: hw.ats.common.model.Entry clone()>();

        return r0;
    }

    public java.util.ArrayList getImages()
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        return r1;
    }

    public java.util.ArrayList getMaterials()
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        return r1;
    }

    public java.util.ArrayList getOptions()
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        return r1;
    }

    public java.util.ArrayList getTerms()
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        return r1;
    }

    public void insert(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Float $r7;
        hw.ats.common.model.EntryTerm $r17;
        java.util.Date $r5;
        hw.ats.common.model.EntryOption r11;
        long $l1;
        java.lang.Integer $r3;
        java.util.ArrayList $r8;
        android.database.sqlite.SQLiteDatabase $r1;
        byte $b2;
        java.lang.Long $r6;
        int $i0;
        hw.ats.common.model.EntryImage r13;
        java.lang.String $r4;
        boolean $z0;
        hw.ats.common.model.Entry r0;
        java.util.Iterator $r9;
        java.lang.Exception $r12;
        hw.ats.common.model.EntryMaterial r14;
        float $f0;
        java.lang.Object $r10;
        java.lang.StringBuilder $r15, $r16;
        android.content.ContentValues r2;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label01:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("id", $r3);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String title>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r4);

        $i0 = r0.<hw.ats.common.model.Entry: int category_id>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("category_id", $r3);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String category>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("category", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String content>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("content", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String summary>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("summary", $r4);

        $r5 = r0.<hw.ats.common.model.Entry: java.util.Date written>;

     label02:
        if $r5 != null goto label04;

        $r5 = new java.util.Date;

     label03:
        specialinvoke $r5.<java.util.Date: void <init>()>();

        r0.<hw.ats.common.model.Entry: java.util.Date written> = $r5;

     label04:
        $r5 = r0.<hw.ats.common.model.Entry: java.util.Date written>;

        $l1 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("written", $r6);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String author>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("author", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String email>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("email", $r4);

        $i0 = r0.<hw.ats.common.model.Entry: int comments>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("comments", $r3);

        $f0 = r0.<hw.ats.common.model.Entry: float point_avg>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("point_avg", $r7);

        $f0 = r0.<hw.ats.common.model.Entry: float starred>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("starred", $r7);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String main_image>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("main_image", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String thumb_default>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("thumb_default", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String thumb_list>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("thumb_list", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String description>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String permalink>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("permalink", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String tags>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("tags", $r4);

        $r4 = r0.<hw.ats.common.model.Entry: java.lang.String youtube>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("youtube", $r4);

        $z0 = r0.<hw.ats.common.model.Entry: boolean favor_flag>;

     label05:
        if $z0 == 0 goto label14;

        $b2 = 1;

     label06:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("favor_flag", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("entries", null, r2);

        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

     label07:
        if $r8 == null goto label15;

     label08:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList options>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z0 == 0 goto label15;

     label11:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (hw.ats.common.model.EntryOption) $r10;

        virtualinvoke r11.<hw.ats.common.model.EntryOption: void insert(android.database.sqlite.SQLiteDatabase)>($r1);

     label12:
        goto label09;

     label13:
        $r12 := @caughtexception;

        $r4 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r4, $r12);

        return;

     label14:
        $b2 = 0;

        goto label06;

     label15:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

     label16:
        if $r8 == null goto label22;

     label17:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList images>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z0 == 0 goto label22;

     label20:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (hw.ats.common.model.EntryImage) $r10;

        virtualinvoke r13.<hw.ats.common.model.EntryImage: void insert(android.database.sqlite.SQLiteDatabase)>($r1);

     label21:
        goto label18;

     label22:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

     label23:
        if $r8 == null goto label29;

     label24:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList materials>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label25:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label26:
        if $z0 == 0 goto label29;

     label27:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r14 = (hw.ats.common.model.EntryMaterial) $r10;

        virtualinvoke r14.<hw.ats.common.model.EntryMaterial: void insert(android.database.sqlite.SQLiteDatabase)>($r1);

     label28:
        goto label25;

     label29:
        $r15 = new java.lang.StringBuilder;

     label30:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert id:");

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cate:");

        $i0 = r0.<hw.ats.common.model.Entry: int category_id>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" term:");

        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label31:
        if $i0 <= 0 goto label40;

        $r16 = new java.lang.StringBuilder;

     label32:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r17 = (hw.ats.common.model.EntryTerm) $r10;

        $i0 = $r17.<hw.ats.common.model.EntryTerm: int entry_id>;

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label33:
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Entry", $r4);

        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

     label34:
        if $r8 == null goto label41;

     label35:
        $r8 = r0.<hw.ats.common.model.Entry: java.util.ArrayList terms>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label36:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label37:
        if $z0 == 0 goto label41;

     label38:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (hw.ats.common.model.EntryTerm) $r10;

        virtualinvoke $r17.<hw.ats.common.model.EntryTerm: void insert(android.database.sqlite.SQLiteDatabase)>($r1);

     label39:
        goto label36;

     label40:
        $r4 = "";

        goto label33;

     label41:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label13;
        catch java.lang.Exception from label17 to label19 with label13;
        catch java.lang.Exception from label20 to label21 with label13;
        catch java.lang.Exception from label22 to label23 with label13;
        catch java.lang.Exception from label24 to label26 with label13;
        catch java.lang.Exception from label27 to label28 with label13;
        catch java.lang.Exception from label30 to label31 with label13;
        catch java.lang.Exception from label32 to label33 with label13;
        catch java.lang.Exception from label33 to label34 with label13;
        catch java.lang.Exception from label35 to label37 with label13;
        catch java.lang.Exception from label38 to label39 with label13;
    }

    public void markFavorite(android.database.sqlite.SQLiteDatabase, boolean)
    {
        hw.ats.common.model.Entry r0;
        java.lang.Integer $r3;
        java.lang.Exception $r6;
        android.database.sqlite.SQLiteDatabase $r1;
        byte $b0;
        int $i1;
        java.lang.StringBuilder $r4;
        android.content.ContentValues r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $z0 := @parameter1: boolean;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

     label2:
        if $z0 == 0 goto label7;

        $b0 = 1;

     label3:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("favor_flag", $r3);

     label4:
        $r4 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ");

        $i1 = r0.<hw.ats.common.model.Entry: int id>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("entries", r2, $r5, null);

        r0.<hw.ats.common.model.Entry: boolean favor_flag> = $z0;

     label6:
        return;

     label7:
        $b0 = 0;

        goto label3;

     label8:
        $r6 := @caughtexception;

        $r5 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r5, $r6);

        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    public void merge(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        hw.ats.common.model.Entry r0;
        int $i0;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        $z0 = staticinvoke <hw.ats.common.model.Entry: boolean exists(android.database.sqlite.SQLiteDatabase,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        staticinvoke <hw.ats.common.model.Entry: void delete(android.database.sqlite.SQLiteDatabase,int)>($r1, $i0);

     label1:
        $z0 = r0.<hw.ats.common.model.Entry: boolean deleted>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<hw.ats.common.model.Entry: void insert(android.database.sqlite.SQLiteDatabase)>($r1);

     label2:
        return;
    }

    public void setImages(java.util.ArrayList)
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 := @parameter0: java.util.ArrayList;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList images> = r1;

        return;
    }

    public void setMaterials(java.util.ArrayList)
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 := @parameter0: java.util.ArrayList;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList materials> = r1;

        return;
    }

    public void setOptions(java.util.ArrayList)
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 := @parameter0: java.util.ArrayList;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList options> = r1;

        return;
    }

    public void setTerms(java.util.ArrayList)
    {
        hw.ats.common.model.Entry r0;
        java.util.ArrayList r1;

        r0 := @this: hw.ats.common.model.Entry;

        r1 := @parameter0: java.util.ArrayList;

        r0.<hw.ats.common.model.Entry: java.util.ArrayList terms> = r1;

        return;
    }

    public java.lang.String toString()
    {
        hw.ats.common.model.Entry r0;
        java.util.Date $r4;
        int $i0;
        float $f0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Entry;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry [id=");

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", title=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String title>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", category_id=");

        $i0 = r0.<hw.ats.common.model.Entry: int category_id>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", category=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String category>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", content=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String content>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", summary=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String summary>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", written=");

        $r4 = r0.<hw.ats.common.model.Entry: java.util.Date written>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", author=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String author>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", email=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String email>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", comments=");

        $i0 = r0.<hw.ats.common.model.Entry: int comments>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", point_avg=");

        $f0 = r0.<hw.ats.common.model.Entry: float point_avg>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", starred=");

        $f0 = r0.<hw.ats.common.model.Entry: float starred>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", main_image=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String main_image>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thumb_default=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String thumb_default>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thumb_list=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String thumb_list>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", description=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String description>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", permalink=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String permalink>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tags=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String tags>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", favor_flag=");

        $z0 = r0.<hw.ats.common.model.Entry: boolean favor_flag>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", youtube=");

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String youtube>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void updateBody(android.database.sqlite.SQLiteDatabase)
    {
        hw.ats.common.model.Entry r0;
        java.lang.Integer $r4;
        java.lang.Exception $r6;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.StringBuilder $r5;
        android.content.ContentValues r2;
        java.lang.String $r3;

        r0 := @this: hw.ats.common.model.Entry;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = new android.content.ContentValues;

     label1:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $r3 = r0.<hw.ats.common.model.Entry: java.lang.String content>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("content", $r3);

        $i0 = r0.<hw.ats.common.model.Entry: int comments>;

     label2:
        if $i0 <= 0 goto label4;

     label3:
        $i0 = r0.<hw.ats.common.model.Entry: int comments>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("comments", $r4);

     label4:
        $r5 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id = ");

        $i0 = r0.<hw.ats.common.model.Entry: int id>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("entries", r2, $r3, null);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        $r3 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Entry", $r3, $r6);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static void <clinit>()
    {
        <hw.ats.common.model.Entry: java.lang.String TAG> = "Entry";

        return;
    }
}
