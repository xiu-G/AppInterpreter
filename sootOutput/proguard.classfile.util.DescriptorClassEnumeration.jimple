public class proguard.classfile.util.DescriptorClassEnumeration extends java.lang.Object
{
    private java.lang.String accumulatedClassName;
    private java.util.Stack accumulatedClassNames;
    private java.lang.String descriptor;
    private int index;
    private boolean isInnerClassName;
    private int nestingLevel;

    public void <init>(java.lang.String)
    {
        proguard.classfile.util.DescriptorClassEnumeration r0;
        java.lang.String $r1;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r2;
        java.lang.String[] $r0;
        java.lang.Exception $r6;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        java.lang.String $r1, $r4;
        proguard.classfile.util.DescriptorClassEnumeration $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        $i1 = lengthof $r0;

     label02:
        if $i0 >= $i1 goto label18;

     label03:
        $r1 = $r0[$i0];

     label04:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

     label05:
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Descriptor [");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label06:
        $r5 = new proguard.classfile.util.DescriptorClassEnumeration;

     label07:
        specialinvoke $r5.<proguard.classfile.util.DescriptorClassEnumeration: void <init>(java.lang.String)>($r1);

     label08:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

     label09:
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Fluff: [");

        $r1 = virtualinvoke $r5.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextFluff()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label10:
        $z0 = virtualinvoke $r5.<proguard.classfile.util.DescriptorClassEnumeration: boolean hasMoreClassNames()>();

     label11:
        if $z0 == 0 goto label17;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

     label12:
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Name:  [");

        $r1 = virtualinvoke $r5.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextClassName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label13:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

     label14:
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  Fluff: [");

        $r1 = virtualinvoke $r5.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextFluff()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label15:
        goto label10;

     label16:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return;

     label17:
        $i0 = $i0 + 1;

        goto label01;

     label18:
        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public int classCount()
    {
        int $i0;
        proguard.classfile.util.DescriptorClassEnumeration r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        virtualinvoke r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextFluff()>();

        $i0 = 0;

     label1:
        $z0 = virtualinvoke r0.<proguard.classfile.util.DescriptorClassEnumeration: boolean hasMoreClassNames()>();

        if $z0 == 0 goto label2;

        $i0 = $i0 + 1;

        virtualinvoke r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextClassName()>();

        virtualinvoke r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String nextFluff()>();

        goto label1;

     label2:
        r0.<proguard.classfile.util.DescriptorClassEnumeration: int index> = 0;

        return $i0;
    }

    public boolean hasMoreClassNames()
    {
        int $i0, $i1;
        proguard.classfile.util.DescriptorClassEnumeration r0;
        java.lang.String $r1;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isInnerClassName()
    {
        proguard.classfile.util.DescriptorClassEnumeration r0;
        boolean z0;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        z0 = r0.<proguard.classfile.util.DescriptorClassEnumeration: boolean isInnerClassName>;

        return z0;
    }

    public java.lang.String nextClassName()
    {
        char $c2;
        java.lang.StringBuffer $r3, $r4;
        int $i0, $i1;
        proguard.classfile.util.DescriptorClassEnumeration r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        $i0 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

     label1:
        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        lookupswitch($i1)
        {
            case 46: goto label3;
            case 59: goto label3;
            case 60: goto label3;
            default: goto label2;
        };

     label2:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $i1 = $i1 + 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int index> = $i1;

        goto label1;

     label3:
        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2 = $r1;

        $z0 = r0.<proguard.classfile.util.DescriptorClassEnumeration: boolean isInnerClassName>;

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String accumulatedClassName>;

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String accumulatedClassName> = $r2;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String accumulatedClassName>;

        return $r1;
    }

    public java.lang.String nextFluff()
    {
        char $c3;
        java.util.Stack $r2, $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        proguard.classfile.util.DescriptorClassEnumeration r0;
        java.lang.String $r1;

        r0 := @this: proguard.classfile.util.DescriptorClassEnumeration;

        $i0 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

     label01:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label08;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $i2 = $i1 + 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int index> = $i2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c3;

        lookupswitch($i1)
        {
            case 46: goto label10;
            case 58: goto label01;
            case 59: goto label09;
            case 60: goto label04;
            case 62: goto label06;
            case 76: goto label07;
            case 84: goto label11;
            default: goto label02;
        };

     label02:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel>;

        if $i1 != 1 goto label01;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c3;

        if $i1 == 62 goto label01;

     label03:
        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $i2 = $i1 + 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int index> = $i2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c3;

        if $i1 == 58 goto label01;

        goto label03;

     label04:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel>;

        $i1 = $i1 + 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel> = $i1;

        $r2 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.util.Stack accumulatedClassNames>;

        if $r2 != null goto label05;

        $r4 = new java.util.Stack;

        specialinvoke $r4.<java.util.Stack: void <init>()>();

        r0.<proguard.classfile.util.DescriptorClassEnumeration: java.util.Stack accumulatedClassNames> = $r4;

     label05:
        $r2 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.util.Stack accumulatedClassNames>;

        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String accumulatedClassName>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        goto label02;

     label06:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel>;

        $i1 = $i1 - 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel> = $i1;

        $r2 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.util.Stack accumulatedClassNames>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r1 = (java.lang.String) $r3;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String accumulatedClassName> = $r1;

        goto label01;

     label07:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel>;

        $i1 = $i1 + 2;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel> = $i1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: boolean isInnerClassName> = 0;

     label08:
        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r1;

     label09:
        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel>;

        $i1 = $i1 - 2;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int nestingLevel> = $i1;

        goto label02;

     label10:
        r0.<proguard.classfile.util.DescriptorClassEnumeration: boolean isInnerClassName> = 1;

        goto label08;

     label11:
        $r1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: java.lang.String descriptor>;

        $i1 = r0.<proguard.classfile.util.DescriptorClassEnumeration: int index>;

        $i2 = $i1 + 1;

        r0.<proguard.classfile.util.DescriptorClassEnumeration: int index> = $i2;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c3;

        if $i1 == 59 goto label02;

        goto label11;
    }
}
