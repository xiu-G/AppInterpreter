public class proguard.optimize.info.NoSideEffectMethodMarker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private static final java.lang.Object KEPT_BUT_NO_SIDE_EFFECTS;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <proguard.optimize.info.NoSideEffectMethodMarker: java.lang.Object KEPT_BUT_NO_SIDE_EFFECTS> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.optimize.info.NoSideEffectMethodMarker r0;

        r0 := @this: proguard.optimize.info.NoSideEffectMethodMarker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    public static boolean hasNoSideEffects(proguard.classfile.Method)
    {
        proguard.classfile.VisitorAccepter $r2;
        proguard.classfile.Method $r0;
        java.lang.Object $r1, $r3;
        proguard.optimize.info.MethodOptimizationInfo $r4;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.Method;

        $r2 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter)>($r0);

        $r3 = interfaceinvoke $r2.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $r1 = <proguard.optimize.info.NoSideEffectMethodMarker: java.lang.Object KEPT_BUT_NO_SIDE_EFFECTS>;

        if $r3 != $r1 goto label1;

        return 1;

     label1:
        $r4 = staticinvoke <proguard.optimize.info.MethodOptimizationInfo: proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method)>($r0);

        if $r4 == null goto label2;

        $z0 = virtualinvoke $r4.<proguard.optimize.info.MethodOptimizationInfo: boolean hasNoSideEffects()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static void markNoSideEffects(proguard.classfile.Method)
    {
        proguard.classfile.Method $r0;
        java.lang.Object $r1;
        proguard.optimize.info.MethodOptimizationInfo $r2;
        proguard.classfile.Member $r3;

        $r0 := @parameter0: proguard.classfile.Method;

        $r2 = staticinvoke <proguard.optimize.info.MethodOptimizationInfo: proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method)>($r0);

        if $r2 == null goto label1;

        virtualinvoke $r2.<proguard.optimize.info.MethodOptimizationInfo: void setNoSideEffects()>();

        return;

     label1:
        $r3 = staticinvoke <proguard.classfile.util.MethodLinker: proguard.classfile.Member lastMember(proguard.classfile.Member)>($r0);

        $r1 = <proguard.optimize.info.NoSideEffectMethodMarker: java.lang.Object KEPT_BUT_NO_SIDE_EFFECTS>;

        interfaceinvoke $r3.<proguard.classfile.Member: void setVisitorInfo(java.lang.Object)>($r1);

        return;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.classfile.Clazz $r1;
        proguard.optimize.info.NoSideEffectMethodMarker r0;
        proguard.classfile.Member $r2;

        r0 := @this: proguard.optimize.info.NoSideEffectMethodMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Member;

        return;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        proguard.classfile.LibraryMethod $r2;
        proguard.classfile.LibraryClass $r1;
        proguard.optimize.info.NoSideEffectMethodMarker r0;

        r0 := @this: proguard.optimize.info.NoSideEffectMethodMarker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        staticinvoke <proguard.optimize.info.NoSideEffectMethodMarker: void markNoSideEffects(proguard.classfile.Method)>($r2);

        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.optimize.info.NoSideEffectMethodMarker r0;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramMethod $r2;

        r0 := @this: proguard.optimize.info.NoSideEffectMethodMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        staticinvoke <proguard.optimize.info.NoSideEffectMethodMarker: void markNoSideEffects(proguard.classfile.Method)>($r2);

        return;
    }
}
