public class com.google.android.googlelogin.GoogleLoginServiceBlockingHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final double mBackoffFactor;
    private java.util.concurrent.locks.Condition mBindWaitCondition;
    private final android.content.Context mContext;
    private int mDelay;
    private boolean mGlsVerified;
    private volatile com.google.android.googleapps.IGoogleLoginService mGoogleLoginService;
    private java.util.concurrent.locks.Lock mGoogleLoginServiceLock;
    private final int mMaxDelaySecs;
    private final int mMinDelaySecs;
    private android.content.ServiceConnection mServiceConnection;
    private java.lang.Thread mServiceThread;

    public void <init>(android.content.Context) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r9;
        android.content.Context $r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$1 $r6;
        java.util.concurrent.locks.ReentrantLock $r2;
        android.content.Intent $r7;
        com.google.android.googlelogin.GoogleLoginServiceNotFoundException $r5;
        java.util.concurrent.locks.Lock $r3;
        java.util.concurrent.locks.Condition $r4;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        int $i0;
        android.content.ServiceConnection $r8;
        boolean $z0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService> = null;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock> = $r2;

        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Condition mBindWaitCondition> = $r4;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.Thread mServiceThread> = null;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMinDelaySecs> = 5;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMaxDelaySecs> = 300;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: double mBackoffFactor> = 2.0;

        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMinDelaySecs>;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay> = $i0;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.Context mContext> = $r1;

        $z0 = staticinvoke <com.google.android.googlelogin.GoogleAppsVerifier: boolean isServiceAvailable(android.content.Context,java.lang.String)>($r1, "com.google.android.googleapps.GoogleLoginService");

        if $z0 != 0 goto label1;

        $r5 = new com.google.android.googlelogin.GoogleLoginServiceNotFoundException;

        specialinvoke $r5.<com.google.android.googlelogin.GoogleLoginServiceNotFoundException: void <init>(int)>(0);

        throw $r5;

     label1:
        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r6 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$1;

        specialinvoke $r6.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$1: void <init>(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper)>(r0);

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.ServiceConnection mServiceConnection> = $r6;

        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.Context mContext>;

        $r7 = <com.google.android.googlelogin.GoogleLoginServiceConstants: android.content.Intent SERVICE_INTENT>;

        $r8 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.ServiceConnection mServiceConnection>;

        $z0 = virtualinvoke $r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r7, $r8, 1);

     label3:
        if $z0 != 0 goto label6;

     label4:
        $r5 = new com.google.android.googlelogin.GoogleLoginServiceNotFoundException;

        specialinvoke $r5.<com.google.android.googlelogin.GoogleLoginServiceNotFoundException: void <init>(int)>(0);

        throw $r5;

     label5:
        $r9 := @caughtexception;

        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

     label6:
        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label5 with label5;
    }

    static java.util.concurrent.locks.Lock access$000(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper)
    {
        java.util.concurrent.locks.Lock r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        r1 = $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        return r1;
    }

    static boolean access$102(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper, boolean)
    {
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;
        boolean $z0;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $z0 := @parameter1: boolean;

        $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: boolean mGlsVerified> = $z0;

        return $z0;
    }

    static android.content.Context access$200(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper)
    {
        android.content.Context r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        r1 = $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.Context mContext>;

        return r1;
    }

    static java.lang.Thread access$302(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper, java.lang.Thread)
    {
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;
        java.lang.Thread $r1;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter1: java.lang.Thread;

        $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.Thread mServiceThread> = $r1;

        return $r1;
    }

    static com.google.android.googleapps.IGoogleLoginService access$402(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper, com.google.android.googleapps.IGoogleLoginService)
    {
        com.google.android.googleapps.IGoogleLoginService $r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter1: com.google.android.googleapps.IGoogleLoginService;

        $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService> = $r1;

        return $r1;
    }

    static java.util.concurrent.locks.Condition access$500(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper)
    {
        java.util.concurrent.locks.Condition r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper $r0;

        $r0 := @parameter0: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        r1 = $r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Condition mBindWaitCondition>;

        return r1;
    }

    private void checkGoogleLoginServiceVerificationLocked() throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        com.google.android.googleapps.IGoogleLoginService $r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        com.google.android.googlelogin.GoogleLoginServiceNotFoundException $r2;
        boolean $z0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService>;

        if $r1 == null goto label1;

        $z0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: boolean mGlsVerified>;

        if $z0 != 0 goto label1;

        $r2 = new com.google.android.googlelogin.GoogleLoginServiceNotFoundException;

        specialinvoke $r2.<com.google.android.googlelogin.GoogleLoginServiceNotFoundException: void <init>(int)>(1);

        throw $r2;

     label1:
        return;
    }

    private void delay()
    {
        java.lang.Throwable $r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        int $i0, $i2;
        long $l1;
        double $d0, $d1;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay>;

        $l1 = (long) $i0;

        $l1 = $l1 * 1000L;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label2:
        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay>;

        $d0 = (double) $i0;

        $d1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: double mBackoffFactor>;

        $d0 = $d0 * $d1;

        $i0 = (int) $d0;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay> = $i0;

        $i2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay>;

        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMaxDelaySecs>;

        if $i2 <= $i0 goto label4;

        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMaxDelaySecs>;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay> = $i0;

        return;

     label3:
        $r1 := @caughtexception;

        goto label2;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public static java.lang.String getAccount(android.content.Context, boolean) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r1;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        r1 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        $r2 = virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.String getAccount(boolean)>($z0);

     label2:
        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String[] getAccounts(android.content.Context) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r1;
        java.lang.String[] $r2;

        $r0 := @parameter0: android.content.Context;

        r1 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        $r2 = virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.String[] getAccounts()>();

     label2:
        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static long getAndroidId(android.content.Context) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        r1 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        $l0 = virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: long getAndroidId()>();

     label2:
        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return $l0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke r1.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String getAuthToken(android.content.Context, java.lang.String, java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException, com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r3;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        $r1 = virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.String getAuthToken(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return $r1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String getOneAuthToken(android.content.Context, java.lang.String, java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException, com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r3;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        $r1 = virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.String getAuthToken(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return $r1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r3.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void invalidateAuthToken(android.content.Context, java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r2 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r2.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void <init>(android.content.Context)>($r0);

     label1:
        virtualinvoke r2.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void invalidateAuthToken(java.lang.String)>($r1);

     label2:
        virtualinvoke r2.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        return;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r2.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void close()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void resetDelay()
    {
        int $i0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $i0 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mMinDelaySecs>;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: int mDelay> = $i0;

        return;
    }

    public void close()
    {
        java.lang.Throwable $r4;
        android.content.Context $r3;
        java.util.concurrent.locks.Lock $r1;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        android.content.ServiceConnection $r2;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.ServiceConnection mServiceConnection>;

     label2:
        if $r2 == null goto label4;

     label3:
        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.Context mContext>;

        $r2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r3.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r2);

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: android.content.ServiceConnection mServiceConnection> = null;

        r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService> = null;

     label4:
        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
        $r4 := @caughtexception;

        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getAccount(boolean) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r1;
        com.google.android.googleapps.IGoogleLoginService $r2;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        $r3 = interfaceinvoke $r2.<com.google.android.googleapps.IGoogleLoginService: java.lang.String getAccount(boolean)>($z0);

     label3:
        return $r3;

     label4:
        r1 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public java.lang.String[] getAccounts() throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r1;
        com.google.android.googleapps.IGoogleLoginService $r2;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.String[] $r3;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        $r3 = interfaceinvoke $r2.<com.google.android.googleapps.IGoogleLoginService: java.lang.String[] getAccounts()>();

     label3:
        return $r3;

     label4:
        r1 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public long getAndroidId() throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r1;
        com.google.android.googleapps.IGoogleLoginService $r2;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        long $l0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r2 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        $l0 = interfaceinvoke $r2.<com.google.android.googleapps.IGoogleLoginService: long getAndroidId()>();

     label3:
        return $l0;

     label4:
        r1 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public java.lang.String getAuthToken(java.lang.String, java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException, com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        android.os.Parcelable $r6;
        com.google.android.googleapps.LoginData r7;
        android.content.Intent $r5;
        com.google.android.googleapps.GoogleLoginCredentialsResult $r3;
        com.google.android.googleapps.LoginData$Status r4;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException $r8;
        java.lang.String $r1, $r2;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

        $r3 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.GoogleLoginCredentialsResult getCredentials(java.lang.String,java.lang.String,boolean)>($r1, $r2, 1);

        $r1 = virtualinvoke $r3.<com.google.android.googleapps.GoogleLoginCredentialsResult: java.lang.String getCredentialsString()>();

        if $r1 != null goto label2;

        r4 = null;

        $r5 = virtualinvoke $r3.<com.google.android.googleapps.GoogleLoginCredentialsResult: android.content.Intent getCredentialsIntent()>();

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("loginData");

        r7 = (com.google.android.googleapps.LoginData) $r6;

        if r7 == null goto label1;

        r4 = r7.<com.google.android.googleapps.LoginData: com.google.android.googleapps.LoginData$Status mStatus>;

     label1:
        $r8 = new com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException;

        specialinvoke $r8.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper$AuthenticationException: void <init>(com.google.android.googlelogin.GoogleLoginServiceBlockingHelper,java.lang.String,com.google.android.googleapps.LoginData$Status)>(r0, "unable to find auth token for account", r4);

        throw $r8;

     label2:
        $r1 = virtualinvoke $r3.<com.google.android.googleapps.GoogleLoginCredentialsResult: java.lang.String getCredentialsString()>();

        return $r1;
    }

    public com.google.android.googleapps.GoogleLoginCredentialsResult getCredentials(java.lang.String, java.lang.String, boolean) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r3;
        com.google.android.googleapps.IGoogleLoginService $r4;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.String $r1, $r2;
        com.google.android.googleapps.GoogleLoginCredentialsResult $r5;
        boolean $z0;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r4 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        $r5 = interfaceinvoke $r4.<com.google.android.googleapps.IGoogleLoginService: com.google.android.googleapps.GoogleLoginCredentialsResult blockingGetCredentials(java.lang.String,java.lang.String,boolean)>($r1, $r2, $z0);

     label3:
        return $r5;

     label4:
        r3 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public com.google.android.googleapps.IGoogleLoginService getLoginService() throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable $r5, $r8;
        java.lang.IllegalStateException $r4;
        java.util.concurrent.locks.Lock $r2;
        java.util.concurrent.locks.Condition $r7;
        com.google.android.googleapps.IGoogleLoginService $r6;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.Thread $r1, $r3;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

     label01:
        $r2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        $r1 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.Thread mServiceThread>;

     label02:
        if $r1 == null goto label07;

     label03:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.Thread mServiceThread>;

     label04:
        if $r1 != $r3 goto label07;

     label05:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("calling GoogleLoginServiceBlockingHelper methods from your main thread can lead to deadlock");

        throw $r4;

     label06:
        $r5 := @caughtexception;

        $r2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r5;

     label07:
        $r6 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService>;

     label08:
        if $r6 != null goto label13;

     label09:
        $r7 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Condition mBindWaitCondition>;

     label10:
        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void await()>();

     label11:
        goto label07;

     label12:
        $r8 := @caughtexception;

        goto label07;

     label13:
        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void checkGoogleLoginServiceVerificationLocked()>();

        $r6 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService mGoogleLoginService>;

     label14:
        $r2 = r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.util.concurrent.locks.Lock mGoogleLoginServiceLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r6;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.InterruptedException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label11 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
    }

    public void invalidateAuthToken(java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r2;
        com.google.android.googleapps.IGoogleLoginService $r3;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.String $r1;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r3 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        interfaceinvoke $r3.<com.google.android.googleapps.IGoogleLoginService: void invalidateAuthToken(java.lang.String)>($r1);

     label3:
        return;

     label4:
        r2 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public java.lang.String peekCredentials(java.lang.String, java.lang.String) throws com.google.android.googlelogin.GoogleLoginServiceNotFoundException
    {
        java.lang.Throwable r3;
        com.google.android.googleapps.IGoogleLoginService $r4;
        com.google.android.googlelogin.GoogleLoginServiceBlockingHelper r0;
        java.lang.String $r1, $r2, $r5;

        r0 := @this: com.google.android.googlelogin.GoogleLoginServiceBlockingHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void resetDelay()>();

     label1:
        $r4 = virtualinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: com.google.android.googleapps.IGoogleLoginService getLoginService()>();

     label2:
        $r5 = interfaceinvoke $r4.<com.google.android.googleapps.IGoogleLoginService: java.lang.String peekCredentials(java.lang.String,java.lang.String)>($r1, $r2);

     label3:
        return $r5;

     label4:
        r3 := @caughtexception;

        specialinvoke r0.<com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: void delay()>();

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <com.google.android.googlelogin.GoogleLoginServiceBlockingHelper: java.lang.String TAG> = "GoogleLoginServiceBlockingHelper";

        return;
    }
}
