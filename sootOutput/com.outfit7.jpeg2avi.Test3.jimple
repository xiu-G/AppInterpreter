public class com.outfit7.jpeg2avi.Test3 extends java.lang.Object
{
    private byte[] soundBuffer;
    private java.io.InputStream soundInputStream;

    public void <init>()
    {
        com.outfit7.jpeg2avi.Test3 r0;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static javax.sound.sampled.AudioInputStream convertSampleRate(float, javax.sound.sampled.AudioInputStream)
    {
        javax.sound.sampled.AudioFormat r1, $r2;
        javax.sound.sampled.AudioFormat$Encoding $r3;
        javax.sound.sampled.AudioInputStream $r0;
        int $i0, $i1, $i2;
        float $f0;
        boolean $z0;

        $f0 := @parameter0: float;

        $r0 := @parameter1: javax.sound.sampled.AudioInputStream;

        $r2 = virtualinvoke $r0.<javax.sound.sampled.AudioInputStream: javax.sound.sampled.AudioFormat getFormat()>();

        r1 = new javax.sound.sampled.AudioFormat;

        $r3 = virtualinvoke $r2.<javax.sound.sampled.AudioFormat: javax.sound.sampled.AudioFormat$Encoding getEncoding()>();

        $i0 = virtualinvoke $r2.<javax.sound.sampled.AudioFormat: int getSampleSizeInBits()>();

        $i1 = virtualinvoke $r2.<javax.sound.sampled.AudioFormat: int getChannels()>();

        $i2 = virtualinvoke $r2.<javax.sound.sampled.AudioFormat: int getFrameSize()>();

        $z0 = virtualinvoke $r2.<javax.sound.sampled.AudioFormat: boolean isBigEndian()>();

        specialinvoke r1.<javax.sound.sampled.AudioFormat: void <init>(javax.sound.sampled.AudioFormat$Encoding,float,int,int,int,float,boolean)>($r3, $f0, $i0, $i1, $i2, $f0, $z0);

        $r0 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioInputStream)>(r1, $r0);

        return $r0;
    }

    private void dumpAudioInputStream(javax.sound.sampled.AudioInputStream, java.io.PrintStream, java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r2;
        javax.sound.sampled.AudioFormat $r4;
        com.outfit7.jpeg2avi.Test3 r0;
        long $l1;
        javax.sound.sampled.AudioFormat$Encoding $r6;
        javax.sound.sampled.AudioInputStream $r1;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        $r1 := @parameter0: javax.sound.sampled.AudioInputStream;

        $r2 := @parameter1: java.io.PrintStream;

        $r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke $r1.<javax.sound.sampled.AudioInputStream: javax.sound.sampled.AudioFormat getFormat()>();

        if $r2 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("  -----  ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  -----");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Available=");

        $i0 = virtualinvoke $r1.<javax.sound.sampled.AudioInputStream: int available()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    FrameLength=");

        $l1 = virtualinvoke $r1.<javax.sound.sampled.AudioInputStream: long getFrameLength()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    SourceFormat=");

        $r3 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Channels=");

        $i0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: int getChannels()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    FrameRate=");

        $f0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: float getFrameRate()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    FrameSize=");

        $i0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: int getFrameSize()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    SampleRate=");

        $f0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: float getSampleRate()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    SampleSizeInBits=");

        $i0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: int getSampleSizeInBits()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    Encoding=");

        $r6 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: javax.sound.sampled.AudioFormat$Encoding getEncoding()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

     label1:
        return;
    }

    private javax.sound.sampled.SourceDataLine getLine(javax.sound.sampled.AudioFormat) throws javax.sound.sampled.LineUnavailableException
    {
        javax.sound.sampled.Line$Info $r5;
        javax.sound.sampled.AudioFormat $r1;
        com.outfit7.jpeg2avi.Test3 r0;
        javax.sound.sampled.Line $r2;
        javax.sound.sampled.DataLine$Info $r4;
        javax.sound.sampled.SourceDataLine r3;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        $r1 := @parameter0: javax.sound.sampled.AudioFormat;

        $r4 = new javax.sound.sampled.DataLine$Info;

        specialinvoke $r4.<javax.sound.sampled.DataLine$Info: void <init>(java.lang.Class,javax.sound.sampled.AudioFormat)>(class "Ljavax/sound/sampled/SourceDataLine;", $r1);

        $r5 = (javax.sound.sampled.Line$Info) $r4;

        $r2 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.Line getLine(javax.sound.sampled.Line$Info)>($r5);

        r3 = (javax.sound.sampled.SourceDataLine) $r2;

        interfaceinvoke r3.<javax.sound.sampled.SourceDataLine: void open(javax.sound.sampled.AudioFormat)>($r1);

        return r3;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r2;
        java.lang.String[] $r0;
        com.outfit7.jpeg2avi.Test3 r1;

        $r0 := @parameter0: java.lang.String[];

        r1 = new com.outfit7.jpeg2avi.Test3;

        specialinvoke r1.<com.outfit7.jpeg2avi.Test3: void <init>()>();

        specialinvoke r1.<com.outfit7.jpeg2avi.Test3: void testX()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Done!");

        return;
    }

    private void rawplay(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) throws java.io.IOException, javax.sound.sampled.LineUnavailableException
    {
        byte[] r3;
        javax.sound.sampled.AudioFormat $r1;
        com.outfit7.jpeg2avi.Test3 r0;
        javax.sound.sampled.AudioInputStream $r2;
        int i0, $i1, $i2;
        javax.sound.sampled.SourceDataLine $r4;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        $r1 := @parameter0: javax.sound.sampled.AudioFormat;

        $r2 := @parameter1: javax.sound.sampled.AudioInputStream;

        r3 = newarray (byte)[4096];

        $r4 = specialinvoke r0.<com.outfit7.jpeg2avi.Test3: javax.sound.sampled.SourceDataLine getLine(javax.sound.sampled.AudioFormat)>($r1);

        if $r4 == null goto label3;

        interfaceinvoke $r4.<javax.sound.sampled.SourceDataLine: void start()>();

        i0 = 0;

     label1:
        $i1 = -1;

        if i0 != $i1 goto label2;

        interfaceinvoke $r4.<javax.sound.sampled.SourceDataLine: void drain()>();

        interfaceinvoke $r4.<javax.sound.sampled.SourceDataLine: void stop()>();

        interfaceinvoke $r4.<javax.sound.sampled.SourceDataLine: void close()>();

        virtualinvoke $r2.<javax.sound.sampled.AudioInputStream: void close()>();

        return;

     label2:
        i0 = lengthof r3;

        $i1 = virtualinvoke $r2.<javax.sound.sampled.AudioInputStream: int read(byte[],int,int)>(r3, 0, i0);

        i0 = $i1;

        $i2 = -1;

        if $i1 == $i2 goto label1;

        interfaceinvoke $r4.<javax.sound.sampled.SourceDataLine: int write(byte[],int,int)>(r3, 0, $i1);

        goto label1;

     label3:
        return;
    }

    private void test3() throws java.lang.Exception
    {
        javax.sound.sampled.AudioInputStream $r5;
        java.io.FileOutputStream r2;
        com.outfit7.jpeg2avi.Test3 r0;
        javax.sound.sampled.AudioFileFormat$Type r1;
        java.io.File $r4;
        javax.sound.sampled.AudioFormat$Encoding r3;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("d:/pour_milk.wav");

        $r5 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)>($r4);

        r3 = <javax.sound.sampled.AudioFormat$Encoding: javax.sound.sampled.AudioFormat$Encoding PCM_SIGNED>;

        $r5 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat$Encoding,javax.sound.sampled.AudioInputStream)>(r3, $r5);

        r1 = <javax.sound.sampled.AudioFileFormat$Type: javax.sound.sampled.AudioFileFormat$Type AU>;

        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.lang.String)>("d:/pcm.au");

        staticinvoke <javax.sound.sampled.AudioSystem: int write(javax.sound.sampled.AudioInputStream,javax.sound.sampled.AudioFileFormat$Type,java.io.OutputStream)>($r5, r1, r2);

        return;
    }

    private void testX() throws java.lang.Exception
    {
        java.io.RandomAccessFile r3;
        byte[] $r8, $r12;
        com.outfit7.jpeg2avi.AviAudio r4;
        com.outfit7.jpeg2avi.Test3 r0;
        long $l4;
        int i0, i1, i2, i3, $i5, i6;
        java.lang.String $r7;
        java.io.PrintStream $r5;
        com.outfit7.jpeg2avi.Avi r1;
        java.io.FileInputStream $r9;
        java.io.File r2;
        java.lang.StringBuilder r6;
        java.io.File[] $r11;
        java.io.InputStream $r10;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        r4 = new com.outfit7.jpeg2avi.AviAudio;

        specialinvoke r4.<com.outfit7.jpeg2avi.AviAudio: void <init>(int,int,int)>(1, 16, 11025);

        i0 = r4.<com.outfit7.jpeg2avi.AviAudio: int bits>;

        i0 = i0 / 8;

        i1 = r4.<com.outfit7.jpeg2avi.AviAudio: int samplesPerSecond>;

        i0 = i0 * i1;

        i0 = i0 / 2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("BufferSize: ");

        r6 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = newarray (byte)[i0];

        r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer> = $r8;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>("d:/sounds/pour_milk.wav");

        r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream> = $r9;

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        $r8 = newarray (byte)[4096];

        virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r8);

        r2 = new java.io.File;

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>("D:/Animations/Cat_Drink");

        $r11 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        r1 = new com.outfit7.jpeg2avi.Avi;

        specialinvoke r1.<com.outfit7.jpeg2avi.Avi: void <init>(java.lang.String,int,int,java.lang.String,int,com.outfit7.jpeg2avi.AviAudio)>("d:/out-001.avi", 320, 480, "MJPG", 10, r4);

        i1 = lengthof $r11;

        i2 = 0;

        i3 = 0;

     label1:
        if i2 < i1 goto label2;

        virtualinvoke r1.<com.outfit7.jpeg2avi.Avi: void close()>();

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        virtualinvoke $r10.<java.io.InputStream: void close()>();

        return;

     label2:
        r2 = $r11[i2];

        r3 = new java.io.RandomAccessFile;

        specialinvoke r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, "r");

        $l4 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();

        $i5 = (int) $l4;

        $r8 = newarray (byte)[$i5];

        virtualinvoke r3.<java.io.RandomAccessFile: int read(byte[])>($r8);

        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

        virtualinvoke r1.<com.outfit7.jpeg2avi.Avi: void addFrame(byte[],int)>($r8, $i5);

        $i5 = i3 + 1;

        i3 = i3 / 2;

        i3 = i3 % 10;

        if i3 != 0 goto label4;

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        $r8 = r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer>;

        $r12 = r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer>;

        i3 = lengthof $r12;

        i3 = virtualinvoke $r10.<java.io.InputStream: int read(byte[],int,int)>($r8, 0, i3);

        i6 = i3;

        if i3 == i0 goto label3;

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        virtualinvoke $r10.<java.io.InputStream: void close()>();

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>("d:/sounds/pour_milk.wav");

        r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream> = $r9;

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        $r8 = newarray (byte)[4096];

        virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r8);

        $r10 = r0.<com.outfit7.jpeg2avi.Test3: java.io.InputStream soundInputStream>;

        $r8 = r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer>;

        $r12 = r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer>;

        i3 = lengthof $r12;

        i6 = virtualinvoke $r10.<java.io.InputStream: int read(byte[],int,int)>($r8, 0, i3);

     label3:
        $r8 = r0.<com.outfit7.jpeg2avi.Test3: byte[] soundBuffer>;

        virtualinvoke r1.<com.outfit7.jpeg2avi.Avi: void addAudio(byte[],int)>($r8, i6);

     label4:
        i2 = i2 + 1;

        i3 = $i5;

        goto label1;
    }

    public void getWavHeaderSize() throws java.lang.Exception
    {
        byte[] $r5;
        java.io.BufferedInputStream $r10;
        com.outfit7.jpeg2avi.Test3 r0;
        long l0, $l4;
        javax.sound.sampled.AudioInputStream $r2, $r8;
        int $i1, $i2, $i3;
        java.lang.String $r7;
        java.io.PrintStream $r3;
        java.io.FileInputStream $r9;
        java.io.File r1, $r11;
        java.lang.StringBuilder $r6, $r12;
        java.io.File[] $r4;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        $r10 = new java.io.BufferedInputStream;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.lang.String)>("d:/sounds/p_drink_milk.wav");

        specialinvoke $r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

        $r2 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)>($r10);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<com.outfit7.jpeg2avi.Test3: void dumpAudioInputStream(javax.sound.sampled.AudioInputStream,java.io.PrintStream,java.lang.String)>($r2, $r3, "d:/sounds/p_drink_milk.wav");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>(" ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ ");

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>("d:/sounds/");

        $r4 = virtualinvoke $r11.<java.io.File: java.io.File[] listFiles()>();

        $i1 = lengthof $r4;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label3;

        $r5 = newarray (byte)[22050];

        $i1 = 0;

     label2:
        $i2 = virtualinvoke $r2.<javax.sound.sampled.AudioInputStream: int read(byte[])>($r5);

        $i3 = -1;

        if $i2 != $i3 goto label4;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("i: ");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke $r2.<javax.sound.sampled.AudioInputStream: void close()>();

        return;

     label3:
        r1 = $r4[$i2];

        $r8 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)>(r1);

        l0 = virtualinvoke r1.<java.io.File: long length()>();

        $i3 = virtualinvoke $r8.<javax.sound.sampled.AudioInputStream: int available()>();

        $l4 = (long) $i3;

        l0 = l0 - $l4;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Header size: ");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     ");

        $r7 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i1 = $i1 + 1;

        if $i2 == 22050 goto label2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("n: ");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r7);

        goto label2;
    }

    public void testPlay()
    {
        javax.sound.sampled.AudioFormat r1, $r4;
        com.outfit7.jpeg2avi.Test3 r0;
        java.io.File r2;
        java.lang.Exception $r7;
        javax.sound.sampled.AudioFormat$Encoding $r5;
        javax.sound.sampled.AudioInputStream $r3, $r6;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: com.outfit7.jpeg2avi.Test3;

        r2 = new java.io.File;

     label1:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>("d:/pour_milk.wav");

        $r3 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)>(r2);

        $r4 = virtualinvoke $r3.<javax.sound.sampled.AudioInputStream: javax.sound.sampled.AudioFormat getFormat()>();

     label2:
        r1 = new javax.sound.sampled.AudioFormat;

        $r5 = <javax.sound.sampled.AudioFormat$Encoding: javax.sound.sampled.AudioFormat$Encoding PCM_SIGNED>;

     label3:
        $f0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: float getSampleRate()>();

        $i0 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: int getChannels()>();

        $i1 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: int getChannels()>();

     label4:
        $i1 = $i1 * 2;

     label5:
        $f1 = virtualinvoke $r4.<javax.sound.sampled.AudioFormat: float getSampleRate()>();

        specialinvoke r1.<javax.sound.sampled.AudioFormat: void <init>(javax.sound.sampled.AudioFormat$Encoding,float,int,int,int,float,boolean)>($r5, $f0, 16, $i0, $i1, $f1, 0);

        $r6 = staticinvoke <javax.sound.sampled.AudioSystem: javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioInputStream)>(r1, $r3);

        specialinvoke r0.<com.outfit7.jpeg2avi.Test3: void rawplay(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioInputStream)>(r1, $r6);

        virtualinvoke $r3.<javax.sound.sampled.AudioInputStream: void close()>();

     label6:
        return;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
