class twitter4j.internal.json.TwitterAPIConfigurationJSONImpl extends twitter4j.internal.json.TwitterResponseImpl implements twitter4j.TwitterAPIConfiguration
{
    private static final long serialVersionUID;
    private int charactersReservedPerMedia;
    private int maxMediaPerUpload;
    private java.lang.String[] nonUsernamePaths;
    private int photoSizeLimit;
    private java.util.Map photoSizes;
    private int shortURLLength;
    private int shortURLLengthHttps;

    void <init>(twitter4j.internal.http.HttpResponse, twitter4j.conf.Configuration)
    {
        twitter4j.internal.org.json.JSONException $r13;
        java.util.HashMap $r5;
        java.lang.String[] $r11;
        java.lang.Integer $r7;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;
        twitter4j.internal.http.HttpResponse $r1;
        java.util.Map $r6;
        int $i0, $i1;
        twitter4j.TwitterException $r14;
        twitter4j.internal.org.json.JSONObject $r3, $r4, $r9;
        java.lang.String $r12;
        boolean $z0;
        twitter4j.internal.json.MediaEntityJSONImpl$Size $r8;
        twitter4j.conf.Configuration $r2;
        twitter4j.internal.org.json.JSONArray $r10;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpResponse;

        $r2 := @parameter1: twitter4j.conf.Configuration;

        specialinvoke r0.<twitter4j.internal.json.TwitterResponseImpl: void <init>(twitter4j.internal.http.HttpResponse)>($r1);

     label01:
        $r3 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("photo_size_limit", $r3);

     label02:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit> = $i0;

     label03:
        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("short_url_length", $r3);

     label04:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength> = $i0;

     label05:
        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("short_url_length_https", $r3);

     label06:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps> = $i0;

     label07:
        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("characters_reserved_per_media", $r3);

     label08:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia> = $i0;

     label09:
        $r4 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("photo_sizes");

     label10:
        $r5 = new java.util.HashMap;

     label11:
        specialinvoke $r5.<java.util.HashMap: void <init>(int)>(4);

     label12:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes> = $r5;

        $r6 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r7 = <twitter4j.MediaEntity$Size: java.lang.Integer LARGE>;

        $r8 = new twitter4j.internal.json.MediaEntityJSONImpl$Size;

     label13:
        $r9 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("large");

        specialinvoke $r8.<twitter4j.internal.json.MediaEntityJSONImpl$Size: void <init>(twitter4j.internal.org.json.JSONObject)>($r9);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $z0 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("med");

     label14:
        if $z0 == 0 goto label30;

     label15:
        $r9 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("medium");

     label16:
        $r6 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r7 = <twitter4j.MediaEntity$Size: java.lang.Integer MEDIUM>;

        $r8 = new twitter4j.internal.json.MediaEntityJSONImpl$Size;

     label17:
        specialinvoke $r8.<twitter4j.internal.json.MediaEntityJSONImpl$Size: void <init>(twitter4j.internal.org.json.JSONObject)>($r9);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label18:
        $r6 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r7 = <twitter4j.MediaEntity$Size: java.lang.Integer SMALL>;

        $r8 = new twitter4j.internal.json.MediaEntityJSONImpl$Size;

     label19:
        $r9 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("small");

        specialinvoke $r8.<twitter4j.internal.json.MediaEntityJSONImpl$Size: void <init>(twitter4j.internal.org.json.JSONObject)>($r9);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

     label20:
        $r6 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r7 = <twitter4j.MediaEntity$Size: java.lang.Integer THUMB>;

        $r8 = new twitter4j.internal.json.MediaEntityJSONImpl$Size;

     label21:
        $r4 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("thumb");

        specialinvoke $r8.<twitter4j.internal.json.MediaEntityJSONImpl$Size: void <init>(twitter4j.internal.org.json.JSONObject)>($r4);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $z0 = interfaceinvoke $r2.<twitter4j.conf.Configuration: boolean isJSONStoreEnabled()>();

     label22:
        if $z0 == 0 goto label24;

     label23:
        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        $r4 = virtualinvoke $r1.<twitter4j.internal.http.HttpResponse: twitter4j.internal.org.json.JSONObject asJSONObject()>();

        staticinvoke <twitter4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>(r0, $r4);

     label24:
        $r10 = virtualinvoke $r3.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("non_username_paths");

        $i0 = virtualinvoke $r10.<twitter4j.internal.org.json.JSONArray: int length()>();

     label25:
        $r11 = newarray (java.lang.String)[$i0];

        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths> = $r11;

        $i0 = 0;

     label26:
        $i1 = virtualinvoke $r10.<twitter4j.internal.org.json.JSONArray: int length()>();

     label27:
        if $i0 < $i1 goto label32;

     label28:
        $i0 = staticinvoke <twitter4j.internal.json.z_T4JInternalParseUtil: int getInt(java.lang.String,twitter4j.internal.org.json.JSONObject)>("max_media_per_upload", $r3);

     label29:
        r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload> = $i0;

        return;

     label30:
        $r9 = virtualinvoke $r4.<twitter4j.internal.org.json.JSONObject: twitter4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("med");

     label31:
        goto label16;

     label32:
        $r11 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

     label33:
        $r12 = virtualinvoke $r10.<twitter4j.internal.org.json.JSONArray: java.lang.String getString(int)>($i0);

     label34:
        $r11[$i0] = $r12;

        $i0 = $i0 + 1;

        goto label26;

     label35:
        $r13 := @caughtexception;

        $r14 = new twitter4j.TwitterException;

        specialinvoke $r14.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r13);

        throw $r14;

        catch twitter4j.internal.org.json.JSONException from label01 to label02 with label35;
        catch twitter4j.internal.org.json.JSONException from label03 to label04 with label35;
        catch twitter4j.internal.org.json.JSONException from label05 to label06 with label35;
        catch twitter4j.internal.org.json.JSONException from label07 to label08 with label35;
        catch twitter4j.internal.org.json.JSONException from label09 to label10 with label35;
        catch twitter4j.internal.org.json.JSONException from label11 to label12 with label35;
        catch twitter4j.internal.org.json.JSONException from label13 to label14 with label35;
        catch twitter4j.internal.org.json.JSONException from label15 to label16 with label35;
        catch twitter4j.internal.org.json.JSONException from label17 to label18 with label35;
        catch twitter4j.internal.org.json.JSONException from label19 to label20 with label35;
        catch twitter4j.internal.org.json.JSONException from label21 to label22 with label35;
        catch twitter4j.internal.org.json.JSONException from label23 to label25 with label35;
        catch twitter4j.internal.org.json.JSONException from label26 to label27 with label35;
        catch twitter4j.internal.org.json.JSONException from label28 to label29 with label35;
        catch twitter4j.internal.org.json.JSONException from label30 to label31 with label35;
        catch twitter4j.internal.org.json.JSONException from label33 to label34 with label35;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.String[] $r3, $r4;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0, $r2;
        java.util.Map $r5, $r6;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        $z0 = $r1 instanceof twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = (twitter4j.internal.json.TwitterAPIConfigurationJSONImpl) $r1;

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia>;

        $i1 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia>;

        if $i0 == $i1 goto label03;

        return 0;

     label03:
        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload>;

        $i1 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload>;

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit>;

        $i1 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit>;

        if $i0 == $i1 goto label05;

        return 0;

     label05:
        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength>;

        $i1 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength>;

        if $i0 == $i1 goto label06;

        return 0;

     label06:
        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps>;

        $i1 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps>;

        if $i0 == $i1 goto label07;

        return 0;

     label07:
        $r3 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        $r4 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        if $z0 != 0 goto label08;

        return 0;

     label08:
        $r5 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        if $r5 == null goto label10;

        $r5 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r6 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label11;

     label09:
        return 0;

     label10:
        $r5 = $r2.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        if $r5 != null goto label09;

     label11:
        return 1;
    }

    public int getCharactersReservedPerMedia()
    {
        int i0;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia>;

        return i0;
    }

    public int getMaxMediaPerUpload()
    {
        int i0;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload>;

        return i0;
    }

    public java.lang.String[] getNonUsernamePaths()
    {
        java.lang.String[] r1;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        r1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        return r1;
    }

    public int getPhotoSizeLimit()
    {
        int i0;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit>;

        return i0;
    }

    public java.util.Map getPhotoSizes()
    {
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;
        java.util.Map r1;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        r1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        return r1;
    }

    public int getShortURLLength()
    {
        int i0;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength>;

        return i0;
    }

    public int getShortURLLengthHttps()
    {
        int i0;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps>;

        return i0;
    }

    public int hashCode()
    {
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;
        java.util.Map $r1;
        int $i0, $i1, $i2;
        java.lang.String[] $r2;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        $i0 = 0;

        $i1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit>;

        $i1 = $i1 * 31;

        $i2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $i2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia>;

        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        if $r1 == null goto label3;

        $r1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $i2 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

     label1:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        if $r2 == null goto label2;

        $r2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

     label2:
        $i0 = $i1 + $i0;

        $i0 = $i0 * 31;

        $i1 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload>;

        $i0 = $i0 + $i1;

        return $i0;

     label3:
        $i2 = 0;

        goto label1;
    }

    public java.lang.String toString()
    {
        java.util.List $r4;
        twitter4j.internal.json.TwitterAPIConfigurationJSONImpl r0;
        java.util.Map $r2;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String[] $r3;
        java.lang.String $r5;

        r0 := @this: twitter4j.internal.json.TwitterAPIConfigurationJSONImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("TwitterAPIConfigurationJSONImpl{photoSizeLimit=");

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int photoSizeLimit>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shortURLLength=");

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLength>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shortURLLengthHttps=");

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int shortURLLengthHttps>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", charactersReservedPerMedia=");

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int charactersReservedPerMedia>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", photoSizes=");

        $r2 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.util.Map photoSizes>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nonUsernamePaths=");

        $r3 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        if $r3 != null goto label2;

        $r4 = null;

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxMediaPerUpload=");

        $i0 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: int maxMediaPerUpload>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label2:
        $r3 = r0.<twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: java.lang.String[] nonUsernamePaths>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        goto label1;
    }

    public static void <clinit>()
    {
        <twitter4j.internal.json.TwitterAPIConfigurationJSONImpl: long serialVersionUID> = 5786291660087491465L;

        return;
    }
}
