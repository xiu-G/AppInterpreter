public class org.kobjects.util.Strings extends java.lang.Object
{

    public void <init>()
    {
        org.kobjects.util.Strings r0;

        r0 := @this: org.kobjects.util.Strings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String beautify(java.lang.String)
    {
        char $c1, $c3;
        java.lang.StringBuffer r1, $r2;
        int $i0, $i2, $i4;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $i0 = 1;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i4 = -1;

        $i2 = $i2 + $i4;

        if $i0 >= $i2 goto label3;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1);

        if $z0 == 0 goto label2;

        $i2 = -1;

        $i2 = $i0 + $i2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c3);

        if $z0 == 0 goto label2;

        $i2 = $i0 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c3);

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1 goto label4;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = -1;

        $i0 = $i0 + $i2;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String fill(java.lang.String, int, char)
    {
        char $c0;
        java.lang.StringBuffer r0, $r3;
        int $i1, $i2;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String r1;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

        $c0 := @parameter2: char;

        if $i1 >= 0 goto label2;

        z0 = 1;

     label1:
        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 < $i1 goto label3;

        return r1;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r3 = new java.lang.StringBuffer;

        r0 = $r3;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i1 - $i2;

     label4:
        if $i1 <= 0 goto label5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $i2 = -1;

        $i1 = $i1 + $i2;

        goto label4;

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return r1;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return r1;
    }

    public static java.lang.String lTrim(java.lang.String, java.lang.String)
    {
        int i0, $i1, $i3, $i4;
        char $c2;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        i0 = 0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i0 >= $i1 goto label4;

        if $r0 != null goto label3;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i3 = (int) $c2;

        if $i3 > 32 goto label4;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i3 = (int) $c2;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i3);

        $i4 = -1;

        if $i3 != $i4 goto label2;

     label4:
        if i0 != 0 goto label5;

        return r1;

     label5:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        return r1;
    }

    public static java.lang.String rTrim(java.lang.String, java.lang.String)
    {
        int $i0, $i2, $i3;
        char $c1;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = -1;

        $i0 = $i0 + $i2;

     label1:
        if $i0 < 0 goto label4;

        if $r0 != null goto label3;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i0);

        $i2 = (int) $c1;

        if $i2 > 32 goto label4;

     label2:
        $i2 = -1;

        $i0 = $i0 + $i2;

        goto label1;

     label3:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i0);

        $i2 = (int) $c1;

        $i2 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($i2);

        $i3 = -1;

        if $i2 != $i3 goto label2;

     label4:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = -1;

        $i2 = $i2 + $i3;

        if $i0 != $i2 goto label5;

        return r1;

     label5:
        $i0 = $i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return r1;
    }

    public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer r2, $r5;
        int $i0, i1, $i2;
        java.lang.String $r0, $r1, r3, $r4;

        r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>($r0);

        i1 = $i0;

        $i2 = -1;

        if $i0 != $i2 goto label1;

        return r3;

     label1:
        $r5 = new java.lang.StringBuffer;

        r2 = $r5;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = i1 + $i0;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String,int)>($r0, i1);

        $i2 = -1;

        if $i0 != $i2 goto label3;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return r3;

     label3:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i1, $i0);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        i1 = $i0;

        goto label2;
    }

    public static java.lang.String toAscii(java.lang.String)
    {
        java.lang.StringBuffer r1, $r2;
        int i0, $i1;
        char $c2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        r1 = $r2;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i0 = 0;

     label01:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label13;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i0);

        $i1 = (int) $c2;

        if $i1 > 32 goto label03;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $i1 = (int) $c2;

        if $i1 >= 127 goto label04;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label02;

     label04:
        $i1 = (int) $c2;

        lookupswitch($i1)
        {
            case 196: goto label06;
            case 214: goto label08;
            case 220: goto label10;
            case 223: goto label12;
            case 228: goto label07;
            case 246: goto label09;
            case 252: goto label11;
            default: goto label05;
        };

     label05:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        goto label02;

     label06:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ae");

        goto label02;

     label07:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ae");

        goto label02;

     label08:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Oe");

        goto label02;

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("oe");

        goto label02;

     label10:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ue");

        goto label02;

     label11:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ue");

        goto label02;

     label12:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ss");

        goto label02;

     label13:
        $r0 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }
}
