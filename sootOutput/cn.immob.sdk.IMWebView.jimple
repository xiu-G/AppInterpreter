public final class cn.immob.sdk.IMWebView extends android.webkit.WebView implements android.view.View$OnFocusChangeListener, android.view.ViewTreeObserver$OnGlobalLayoutListener
{
    public static final java.lang.String DIMENSIONS;
    private static int[] E;
    public static final java.lang.String EXPAND_URL;
    public static final java.lang.String PLAYER_PROPERTIES;
    public static java.lang.String language;
    private boolean A;
    private boolean B;
    private boolean C;
    private android.os.Handler D;
    android.webkit.WebViewClient a;
    android.webkit.WebChromeClient b;
    private boolean c;
    private boolean d;
    private boolean e;
    private boolean f;
    private int g;
    private java.lang.String h;
    private cn.immob.sdk.LMAdListener i;
    private cn.immob.sdk.controller.LMCtrMgr j;
    private h k;
    private float l;
    private int m;
    public h mViewState;
    private int n;
    private int o;
    private int p;
    private float q;
    private int r;
    private boolean s;
    private int t;
    private int u;
    private java.lang.String v;
    private h w;
    private cn.immob.sdk.ImmobView x;
    private java.lang.String y;
    private cn.immob.sdk.IMWebView z;

    static void <clinit>()
    {
        <cn.immob.sdk.IMWebView: java.lang.String PLAYER_PROPERTIES> = "player_properties";

        <cn.immob.sdk.IMWebView: java.lang.String EXPAND_URL> = "expand_url";

        <cn.immob.sdk.IMWebView: java.lang.String DIMENSIONS> = "expand_dimensions";

        <cn.immob.sdk.IMWebView: java.lang.String language> = null;

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        android.content.Context $r1;
        android.view.WindowManager $r10;
        cn.immob.sdk.IMWebView r0;
        android.webkit.WebSettings $r12;
        java.util.Locale $r7;
        android.webkit.WebViewClient $r14;
        android.view.Display $r11;
        java.lang.String $r2;
        android.webkit.WebChromeClient $r15;
        d $r4;
        e $r5;
        f $r6;
        h $r3;
        android.util.DisplayMetrics $r8;
        float $f0;
        android.view.ViewTreeObserver $r16;
        java.lang.Object $r9;
        cn.immob.sdk.controller.LMCtrMgr $r13;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        r0.<cn.immob.sdk.IMWebView: boolean c> = 0;

        r0.<cn.immob.sdk.IMWebView: boolean d> = 0;

        r0.<cn.immob.sdk.IMWebView: boolean e> = 0;

        r0.<cn.immob.sdk.IMWebView: boolean f> = 1;

        r0.<cn.immob.sdk.IMWebView: int g> = 0;

        r0.<cn.immob.sdk.IMWebView: java.lang.String h> = "LMWebView";

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i> = null;

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j> = null;

        $r3 = <h: h a>;

        r0.<cn.immob.sdk.IMWebView: h mViewState> = $r3;

        $r3 = <h: h a>;

        r0.<cn.immob.sdk.IMWebView: h k> = $r3;

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x> = null;

        r0.<cn.immob.sdk.IMWebView: java.lang.String y> = null;

        r0.<cn.immob.sdk.IMWebView: boolean A> = 0;

        r0.<cn.immob.sdk.IMWebView: boolean B> = 0;

        r0.<cn.immob.sdk.IMWebView: boolean C> = 0;

        $r4 = new d;

        specialinvoke $r4.<d: void <init>(cn.immob.sdk.IMWebView)>(r0);

        r0.<cn.immob.sdk.IMWebView: android.os.Handler D> = $r4;

        $r5 = new e;

        specialinvoke $r5.<e: void <init>(cn.immob.sdk.IMWebView)>(r0);

        r0.<cn.immob.sdk.IMWebView: android.webkit.WebViewClient a> = $r5;

        $r6 = new f;

        specialinvoke $r6.<f: void <init>(cn.immob.sdk.IMWebView)>(r0);

        r0.<cn.immob.sdk.IMWebView: android.webkit.WebChromeClient b> = $r6;

        r0.<cn.immob.sdk.IMWebView: java.lang.String y> = $r2;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "LMWebView()");

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r7.<java.util.Locale: java.lang.String getLanguage()>();

        <cn.immob.sdk.IMWebView: java.lang.String language> = $r2;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "initialize()");

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setScrollContainer(boolean)>(0);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setVerticalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setBackgroundColor(int)>(0);

        $r8 = new android.util.DisplayMetrics;

        specialinvoke $r8.<android.util.DisplayMetrics: void <init>()>();

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        $r9 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r10 = (android.view.WindowManager) $r9;

        $r11 = interfaceinvoke $r10.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r11.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r8);

        $f0 = $r8.<android.util.DisplayMetrics: float density>;

        r0.<cn.immob.sdk.IMWebView: float l> = $f0;

        $r12 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.webkit.WebSettings getSettings()>();

        $r2 = virtualinvoke $r12.<android.webkit.WebSettings: java.lang.String getUserAgentString()>();

        <c: java.lang.String I> = $r2;

        $r12 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r12.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(1);

        $r13 = new cn.immob.sdk.controller.LMCtrMgr;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        specialinvoke $r13.<cn.immob.sdk.controller.LMCtrMgr: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>(r0, $r1);

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j> = $r13;

        $r13 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r13, "LMCtrMgrBridge");

        $r14 = r0.<cn.immob.sdk.IMWebView: android.webkit.WebViewClient a>;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setWebViewClient(android.webkit.WebViewClient)>($r14);

        $r15 = r0.<cn.immob.sdk.IMWebView: android.webkit.WebChromeClient b>;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r15);

        $r16 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r16.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        return;
    }

    private void a(android.os.Bundle)
    {
        cn.immob.sdk.IMWebView r0;
        android.content.Context $r5;
        android.os.Bundle $r1;
        cn.immob.sdk.controller.LMPlayerController $r2;
        java.lang.String $r3, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("expand_url");

        $r4 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("player_properties");

        $r2 = new cn.immob.sdk.controller.LMPlayerController;

        $r5 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        specialinvoke $r2.<cn.immob.sdk.controller.LMPlayerController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>(r0, $r5);

        virtualinvoke $r2.<cn.immob.sdk.controller.LMPlayerController: void playAudio(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }

    public static void a(cn.immob.sdk.IMWebView, android.os.Bundle)
    {
        android.content.Context $r11;
        android.view.ViewParent $r15;
        android.os.Bundle $r1;
        android.widget.FrameLayout $r17;
        cn.immob.sdk.IMWebView $r0, $r2, $r8;
        int $i0, $i1;
        android.widget.LinearLayout$LayoutParams $r12;
        java.lang.String $r3, $r4, $r6;
        boolean $z0;
        cn.immob.sdk.ImmobView $r13;
        android.view.ViewGroup$LayoutParams $r7;
        h $r9, $r10;
        android.view.ViewGroup $r16;
        float $f0, $f1;
        java.lang.StringBuilder $r5;
        cn.immob.sdk.controller.LMCtrMgr $r14;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        $r1 := @parameter1: android.os.Bundle;

        $r2 = null;

        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r3, "doExpand()");

        $r3 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("expand_url");

        $z0 = $r0.<cn.immob.sdk.IMWebView: boolean A>;

        if $z0 != 0 goto label9;

        if $r3 == null goto label7;

        $z0 = staticinvoke <android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>($r3);

        if $z0 == 0 goto label7;

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doExpand() -- the url is:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r4, $r6);

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("addNewWebView() -- the url is:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r4, $r6);

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("addNewWebView() -- width=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r4, $r6);

        if $r3 == null goto label1;

        $r4 = "";

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label6;

     label1:
        if $r2 == null goto label2;

        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doexpand -- the height222222222=");

        $r7 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int height>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $r7 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int width>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r4);

     label2:
        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doexpand -- the height222222222=");

        $z0 = $r2.<cn.immob.sdk.IMWebView: boolean A>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r4);

     label3:
        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doExpand: isOpenNewWebView: ");

        $z0 = $r0.<cn.immob.sdk.IMWebView: boolean A>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  preWebView:");

        $r8 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r4);

        if $r2 == null goto label8;

        $z0 = $r2.<cn.immob.sdk.IMWebView: boolean A>;

        if $z0 == 0 goto label8;

        $r7 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int height>;

        $r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        $r7 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int width>;

        $r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doexpand -- the height5555555552=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r4);

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'expanded\', size: { width: ");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} });");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doExpand: width: ");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  mDensity:");

        $f0 = $r0.<cn.immob.sdk.IMWebView: float l>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  (int) (width / mDensity):");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $f0 = (float) $i0;

        $f1 = $r0.<cn.immob.sdk.IMWebView: float l>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r4, $r6);

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doExpand: injection: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r4, $r6);

        virtualinvoke $r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r3);

        $r9 = $r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r10 = <h: h a>;

        if $r9 == $r10 goto label5;

        $r9 = $r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r10 = <h: h b>;

        if $r9 != $r10 goto label9;

     label5:
        $r9 = <h: h c>;

        $r0.<cn.immob.sdk.IMWebView: h mViewState> = $r9;

        return;

     label6:
        $r2 = new cn.immob.sdk.IMWebView;

        $r11 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        $r4 = $r0.<cn.immob.sdk.IMWebView: java.lang.String y>;

        specialinvoke $r2.<cn.immob.sdk.IMWebView: void <init>(android.content.Context,java.lang.String)>($r11, $r4);

        $r12 = new android.widget.LinearLayout$LayoutParams;

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $i1 = $r0.<cn.immob.sdk.IMWebView: int n>;

        specialinvoke $r12.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r12);

        $r13 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setLmmobView(cn.immob.sdk.ImmobView)>($r13);

        $i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setLmmobHeight(int)>($i0);

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setLmmobWidth(int)>($i0);

        $i0 = $r0.<cn.immob.sdk.IMWebView: int o>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setViewX(int)>($i0);

        $i0 = $r0.<cn.immob.sdk.IMWebView: int p>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setViewY(int)>($i0);

        $r14 = new cn.immob.sdk.controller.LMCtrMgr;

        $r11 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        specialinvoke $r14.<cn.immob.sdk.controller.LMCtrMgr: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r2, $r11);

        $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j> = $r14;

        $r14 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        $r13 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        virtualinvoke $r14.<cn.immob.sdk.controller.LMCtrMgr: void setLmmobView(cn.immob.sdk.ImmobView)>($r13);

        $r14 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setMgr(cn.immob.sdk.controller.LMCtrMgr)>($r14);

        $r2.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z> = $r0;

        $r2.<cn.immob.sdk.IMWebView: boolean A> = 1;

        $r15 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: android.view.ViewParent getParent()>();

        $r16 = (android.view.ViewGroup) $r15;

        virtualinvoke $r16.<android.view.ViewGroup: void addView(android.view.View)>($r2);

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void setVisibility(int)>(8);

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void loadUrl(java.lang.String)>($r3);

        goto label1;

     label7:
        $r17 = specialinvoke $r0.<cn.immob.sdk.IMWebView: android.widget.FrameLayout i()>();

        $z0 = $r0.<cn.immob.sdk.IMWebView: boolean f>;

        if $z0 == 0 goto label3;

        $i0 = $r0.<cn.immob.sdk.IMWebView: int g>;

        $f0 = $r0.<cn.immob.sdk.IMWebView: float q>;

        $f0 = $f0 * 255.0F;

        $i1 = (int) $f0;

        $i1 = $i1 * 268435456;

        $i0 = $i0 | $i1;

        virtualinvoke $r17.<android.widget.FrameLayout: void setBackgroundColor(int)>($i0);

        goto label3;

     label8:
        $i0 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: int getHeight()>();

        $r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        $i0 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: int getWidth()>();

        $r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $r3 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("doexpand -- the height=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r4);

        goto label4;

     label9:
        return;
    }

    public static void a(cn.immob.sdk.IMWebView, android.os.Message)
    {
        android.os.Bundle $r5;
        android.view.ViewGroup$LayoutParams $r4;
        h $r2, $r3;
        cn.immob.sdk.IMWebView $r0;
        android.os.Message $r1;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        $r1 := @parameter1: android.os.Message;

        $r2 = $r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r3 = <h: h a>;

        if $r2 == $r3 goto label1;

        $r2 = $r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r3 = <h: h c>;

        if $r2 != $r3 goto label2;

     label1:
        $r2 = <h: h b>;

        $r0.<cn.immob.sdk.IMWebView: h mViewState> = $r2;

     label2:
        $r4 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        $i0 = virtualinvoke $r5.<android.os.Bundle: int getInt(java.lang.String,int)>("resize_height", $i0);

        $r4.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $r5 = virtualinvoke $r1.<android.os.Message: android.os.Bundle getData()>();

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = virtualinvoke $r5.<android.os.Bundle: int getInt(java.lang.String,int)>("resize_width", $i0);

        $r4.<android.view.ViewGroup$LayoutParams: int width> = $i0;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'resized\', size: { width: ");

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int width>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = $r4.<android.view.ViewGroup$LayoutParams: int height>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}});");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r7);

        virtualinvoke $r0.<cn.immob.sdk.IMWebView: void requestLayout()>();

        return;
    }

    public static void a(cn.immob.sdk.IMWebView, java.lang.String, boolean)
    {
        cn.immob.sdk.IMWebView $r0;
        android.content.Context $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("open() -- the url is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; isExternalBroswer is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        staticinvoke <cn.immob.sdk.IMWebView: void openNewBrowser(android.content.Context,java.lang.String)>($r5, $r1);

        return;

     label1:
        virtualinvoke $r0.<cn.immob.sdk.IMWebView: void loadUrl(java.lang.String)>($r1);

        return;
    }

    public static java.lang.String b(cn.immob.sdk.IMWebView)
    {
        cn.immob.sdk.IMWebView $r0;
        java.lang.String r1;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        r1 = $r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        return r1;
    }

    public static void b(cn.immob.sdk.IMWebView, android.os.Bundle)
    {
        cn.immob.sdk.IMWebView $r0;
        android.os.Bundle $r1;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        $r1 := @parameter1: android.os.Bundle;

        specialinvoke $r0.<cn.immob.sdk.IMWebView: void a(android.os.Bundle)>($r1);

        return;
    }

    public static boolean c(cn.immob.sdk.IMWebView)
    {
        cn.immob.sdk.IMWebView $r0;
        boolean z0;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        z0 = $r0.<cn.immob.sdk.IMWebView: boolean A>;

        return z0;
    }

    public static void d(cn.immob.sdk.IMWebView)
    {
        int $i0;
        cn.immob.sdk.IMWebView $r0;
        cn.immob.sdk.ImmobView $r1;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        $r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        if $r1 == null goto label1;

        $r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        $i0 = virtualinvoke $r1.<cn.immob.sdk.ImmobView: int b()>();

        $r0.<cn.immob.sdk.IMWebView: boolean C> = 0;

        $r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        virtualinvoke $r1.<cn.immob.sdk.ImmobView: void a()>();

        if $i0 != 2 goto label1;

        $r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        virtualinvoke $r1.<cn.immob.sdk.ImmobView: void setAdReady(boolean)>(0);

        $r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        virtualinvoke $r1.<cn.immob.sdk.ImmobView: void c()>();

     label1:
        return;
    }

    public static int e(cn.immob.sdk.IMWebView)
    {
        int i0;
        cn.immob.sdk.IMWebView $r0;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        i0 = $r0.<cn.immob.sdk.IMWebView: int m>;

        return i0;
    }

    public static int f(cn.immob.sdk.IMWebView)
    {
        int i0;
        cn.immob.sdk.IMWebView $r0;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        i0 = $r0.<cn.immob.sdk.IMWebView: int n>;

        return i0;
    }

    public static cn.immob.sdk.ImmobView g(cn.immob.sdk.IMWebView)
    {
        cn.immob.sdk.IMWebView $r0;
        cn.immob.sdk.ImmobView r1;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        return r1;
    }

    public static cn.immob.sdk.LMAdListener h(cn.immob.sdk.IMWebView)
    {
        cn.immob.sdk.IMWebView $r0;
        cn.immob.sdk.LMAdListener r1;

        $r0 := @parameter0: cn.immob.sdk.IMWebView;

        r1 = $r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        return r1;
    }

    private android.widget.FrameLayout i()
    {
        android.content.Context $r10;
        android.view.ViewParent $r5;
        android.widget.FrameLayout $r4, $r9, $r13;
        cn.immob.sdk.IMWebView r0;
        int $i0, $i1, $i2;
        android.view.View $r3;
        java.lang.String $r2, $r8;
        android.widget.FrameLayout$LayoutParams $r1, $r11, $r16;
        android.view.ViewGroup$LayoutParams $r14;
        g $r15;
        android.view.ViewGroup $r6;
        java.lang.StringBuilder $r7, $r12;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "changeContentArea()");

        $r3 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.View getRootView()>();

        $r3 = virtualinvoke $r3.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r4 = (android.widget.FrameLayout) $r3;

        $r5 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewParent getParent()>();

        $r6 = (android.view.ViewGroup) $r5;

        $r11 = new android.widget.FrameLayout$LayoutParams;

        $r1 = $r11;

        $i0 = r0.<cn.immob.sdk.IMWebView: int m>;

        $i1 = r0.<cn.immob.sdk.IMWebView: int n>;

        specialinvoke $r11.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>($i0, $i1);

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("changeContentArea() -- width is:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int m>;

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; height:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int n>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; x:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int o>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; y:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int p>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r8);

        $i0 = r0.<cn.immob.sdk.IMWebView: int o>;

        $r1.<android.widget.FrameLayout$LayoutParams: int topMargin> = $i0;

        $i0 = r0.<cn.immob.sdk.IMWebView: int p>;

        $r1.<android.widget.FrameLayout$LayoutParams: int leftMargin> = $i0;

        $i1 = virtualinvoke $r6.<android.view.ViewGroup: int getChildCount()>();

        $i0 = 0;

     label1:
        if $i0 < $i1 goto label3;

     label2:
        r0.<cn.immob.sdk.IMWebView: int r> = $i0;

        $r13 = new android.widget.FrameLayout;

        $r9 = $r13;

        $r10 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        specialinvoke $r13.<android.widget.FrameLayout: void <init>(android.content.Context)>($r10);

        virtualinvoke $r9.<android.widget.FrameLayout: void setId(int)>(100);

        $r14 = new android.view.ViewGroup$LayoutParams;

        $i1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: int getWidth()>();

        $i2 = virtualinvoke r0.<cn.immob.sdk.IMWebView: int getHeight()>();

        specialinvoke $r14.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>($i1, $i2);

        virtualinvoke $r6.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r9, $i0, $r14);

        virtualinvoke $r6.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

        $r13 = new android.widget.FrameLayout;

        $r9 = $r13;

        $r10 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.content.Context getContext()>();

        specialinvoke $r13.<android.widget.FrameLayout: void <init>(android.content.Context)>($r10);

        $r15 = new g;

        specialinvoke $r15.<g: void <init>(cn.immob.sdk.IMWebView)>(r0);

        virtualinvoke $r9.<android.widget.FrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)>($r15);

        $r16 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r16.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r9.<android.widget.FrameLayout: void setId(int)>(101);

        $i0 = r0.<cn.immob.sdk.IMWebView: int o>;

        $i1 = r0.<cn.immob.sdk.IMWebView: int p>;

        virtualinvoke $r9.<android.widget.FrameLayout: void setPadding(int,int,int,int)>($i0, $i1, 0, 0);

        virtualinvoke $r9.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r0, $r1);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r9, $r16);

        return $r9;

     label3:
        $r3 = virtualinvoke $r6.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        if $r3 == r0 goto label2;

        $i0 = $i0 + 1;

        goto label1;
    }

    private void j()
    {
        cn.immob.sdk.IMWebView r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean s>;

        if $z0 == 0 goto label1;

        $i0 = r0.<cn.immob.sdk.IMWebView: int t>;

        $r1.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $i0 = r0.<cn.immob.sdk.IMWebView: int u>;

        $r1.<android.view.ViewGroup$LayoutParams: int width> = $i0;

     label1:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setVisibility(int)>(0);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void requestLayout()>();

        return;
    }

    private static int[] k()
    {
        h[] $r1;
        h $r2;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6, $r7, $r8;
        int[] $r0;
        int $i0;

        $r0 = <cn.immob.sdk.IMWebView: int[] E>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <h: h[] a()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <h: h f>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label03:
        $r0[$i0] = 6;

     label04:
        $r2 = <h: h a>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label05:
        $r0[$i0] = 1;

     label06:
        $r2 = <h: h c>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label07:
        $r0[$i0] = 3;

     label08:
        $r2 = <h: h d>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label09:
        $r0[$i0] = 4;

     label10:
        $r2 = <h: h e>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label11:
        $r0[$i0] = 5;

     label12:
        $r2 = <h: h b>;

        $i0 = virtualinvoke $r2.<h: int ordinal()>();

     label13:
        $r0[$i0] = 2;

     label14:
        <cn.immob.sdk.IMWebView: int[] E> = $r0;

        return $r0;

     label15:
        $r3 := @caughtexception;

        goto label14;

     label16:
        $r4 := @caughtexception;

        goto label12;

     label17:
        $r5 := @caughtexception;

        goto label10;

     label18:
        $r6 := @caughtexception;

        goto label08;

     label19:
        $r7 := @caughtexception;

        goto label06;

     label20:
        $r8 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label20;
        catch java.lang.NoSuchFieldError from label04 to label05 with label19;
        catch java.lang.NoSuchFieldError from label06 to label07 with label18;
        catch java.lang.NoSuchFieldError from label08 to label09 with label17;
        catch java.lang.NoSuchFieldError from label10 to label11 with label16;
        catch java.lang.NoSuchFieldError from label12 to label13 with label15;
    }

    public static void openNewBrowser(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r8;
        android.content.Context $r0;
        android.net.Uri $r7;
        android.content.Intent $r6;
        java.lang.Exception $r9;
        android.widget.Toast $r5;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $r2 = "";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

     label1:
        $r1 = <cn.immob.sdk.IMWebView: java.lang.String language>;

        $r1 = staticinvoke <N: java.lang.String a(java.lang.String,java.lang.String)>($r1, "messagedata_lmerror_urlnull");

        $r2 = <cn.immob.sdk.IMWebView: java.lang.String language>;

        $r2 = staticinvoke <N: java.lang.String a(java.lang.String,java.lang.String)>($r2, "messagedata_lmerror_notopenweb");

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label2:
        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>()>();

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.VIEW");

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke $r6.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r7);

        $r1 = <cn.immob.sdk.IMWebView: java.lang.String language>;

        $r1 = staticinvoke <N: java.lang.String a(java.lang.String,java.lang.String)>($r1, "messagedata_lmerror_notfindsyswebbrower");

     label3:
        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r6);

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label6:
        $r9 := @caughtexception;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

        catch android.content.ActivityNotFoundException from label3 to label4 with label5;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public final void a()
    {
        cn.immob.sdk.IMWebView r0;
        cn.immob.sdk.ImmobView $r4;
        int[] $r2;
        h $r1;
        int $i0;
        cn.immob.sdk.LMAdListener $r3;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        r0.<cn.immob.sdk.IMWebView: h w> = $r1;

        $r2 = staticinvoke <cn.immob.sdk.IMWebView: int[] k()>();

        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $i0 = virtualinvoke $r1.<h: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setVisibility(int)>(4);

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean C>;

        if $z0 != 0 goto label3;

        return;

     label2:
        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        r0.<cn.immob.sdk.IMWebView: h k> = $r1;

        $r1 = <h: h d>;

        r0.<cn.immob.sdk.IMWebView: h mViewState> = $r1;

        goto label1;

     label3:
        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        if $r3 == null goto label4;

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        $r4 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        interfaceinvoke $r3.<cn.immob.sdk.LMAdListener: void onDismissScreen(cn.immob.sdk.ImmobView)>($r4);

     label4:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'hidden\' });");

        return;
    }

    public final void addJavascriptObject(java.lang.Object, java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r1, $r2);

        return;
    }

    public final void adwallchange(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state:\'");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\',packagename:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("});");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("adwallchange: injection: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r1);

        return;
    }

    public final void b()
    {
        cn.immob.sdk.ImmobView $r6;
        h $r3;
        cn.immob.sdk.IMWebView r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r4;
        cn.immob.sdk.LMAdListener $r5;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("doShow() -- mViewState:");

        $r3 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r4 = virtualinvoke $r3.<h: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; mViewState_beifen:");

        $r3 = r0.<cn.immob.sdk.IMWebView: h k>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r4);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void c()>();

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("lmadListener() -- lmadListener is:");

        $r5 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  initJSAble:");

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean C>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r4);

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean C>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        if $r5 == null goto label2;

        $r5 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        $r6 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        interfaceinvoke $r5.<cn.immob.sdk.LMAdListener: void onPresentScreen(cn.immob.sdk.ImmobView)>($r6);

     label2:
        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("doShow() -- hiddenState:");

        $r3 = r0.<cn.immob.sdk.IMWebView: h w>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r4);

        $r3 = r0.<cn.immob.sdk.IMWebView: h w>;

        if $r3 == null goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'");

        $r3 = r0.<cn.immob.sdk.IMWebView: h w>;

        $r1 = virtualinvoke $r3.<h: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' });");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r1);

        return;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'");

        $r3 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r1 = virtualinvoke $r3.<h: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' });");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;
    }

    public final float backgroundOpacity()
    {
        cn.immob.sdk.IMWebView r0;
        float f0;

        r0 := @this: cn.immob.sdk.IMWebView;

        f0 = r0.<cn.immob.sdk.IMWebView: float q>;

        return f0;
    }

    protected final void c()
    {
        cn.immob.sdk.IMWebView r0;
        h $r1, $r2;
        java.lang.String $r3;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r2 = <h: h d>;

        if $r1 == $r2 goto label1;

        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r2 = <h: h f>;

        if $r1 != $r2 goto label2;

     label1:
        $r3 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, "setViewState");

        $r1 = r0.<cn.immob.sdk.IMWebView: h k>;

        r0.<cn.immob.sdk.IMWebView: h mViewState> = $r1;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setVisibility(int)>(0);

     label2:
        return;
    }

    public final void clearCacheFiles()
    {
        cn.immob.sdk.IMWebView r0;
        int $i0, $i1;
        java.io.File[] $r3;
        java.io.File $r1, $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r2 = staticinvoke <android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>();

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        return;

     label2:
        $r1 = $r3[$i1];

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public final void clearView()
    {
        cn.immob.sdk.IMWebView r0;
        h $r1, $r2;
        cn.immob.sdk.controller.LMCtrMgr $r3;

        r0 := @this: cn.immob.sdk.IMWebView;

        specialinvoke r0.<android.webkit.WebView: void clearView()>();

        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r2 = <h: h c>;

        if $r1 != $r2 goto label3;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void d()>();

     label1:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void invalidate()>();

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        if $r3 == null goto label2;

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        virtualinvoke $r3.<cn.immob.sdk.controller.LMCtrMgr: void stopAllListeners()>();

     label2:
        specialinvoke r0.<cn.immob.sdk.IMWebView: void j()>();

        return;

     label3:
        $r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        $r2 = <h: h b>;

        if $r1 != $r2 goto label1;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void f()>();

        goto label1;
    }

    public final void close()
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Handler $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(100015);

        return;
    }

    public final void d()
    {
        java.lang.Throwable $r6;
        h $r4;
        cn.immob.sdk.IMWebView r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3, $r5;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        entermonitor r0;

     label1:
        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("closeExpanded() -- isOpenNewWebView is:");

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean A>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r3);

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean A>;

        if $z0 != 0 goto label3;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void resetContents()>();

        $r4 = <h: h a>;

        r0.<cn.immob.sdk.IMWebView: h mViewState> = $r4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'default\', size: { width: ");

        $i0 = r0.<cn.immob.sdk.IMWebView: int m>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = r0.<cn.immob.sdk.IMWebView: int n>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}});");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("closeExpanded: injection44444444444: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r3, $r5);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r1);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void close()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        virtualinvoke r0.<cn.immob.sdk.IMWebView: void e()>();

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public final void e()
    {
        android.view.ViewParent $r5;
        android.view.ViewGroup $r6;
        cn.immob.sdk.IMWebView r0, $r3;
        android.os.Handler $r7;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("closeExpanded: remove curr view and show preView ,and the preWebView is:");

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r1, $r4);

        $r5 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewParent getParent()>();

        $r6 = (android.view.ViewGroup) $r5;

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z>;

        if $r3 == null goto label1;

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void setVisibility(int)>(0);

        $r3 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.IMWebView z>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'default\'});");

        $r7 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r7.<android.os.Handler: boolean sendEmptyMessage(int)>(100019);

     label1:
        virtualinvoke $r6.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

        return;
    }

    public final void expand(java.lang.String)
    {
        android.os.Bundle $r7;
        cn.immob.sdk.IMWebView r0;
        android.os.Message $r6;
        android.os.Handler $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("expand() -- the url is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(100018);

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        virtualinvoke $r7.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("expand_url", $r1);

        virtualinvoke $r6.<android.os.Message: void setData(android.os.Bundle)>($r7);

        $r5 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    public final void f()
    {
        android.view.ViewGroup$LayoutParams $r2;
        h $r1;
        cn.immob.sdk.IMWebView r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = <h: h a>;

        r0.<cn.immob.sdk.IMWebView: h mViewState> = $r1;

        specialinvoke r0.<cn.immob.sdk.IMWebView: void j()>();

        $r2 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $r2 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.immobview.fireChangeEvent({ state: \'default\', size: { width: ");

        $i0 = r0.<cn.immob.sdk.IMWebView: int m>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = r0.<cn.immob.sdk.IMWebView: int n>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}});");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("closeResized: injection: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r5, $r6);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void injectJavaScript(java.lang.String)>($r4);

        return;
    }

    public final void g()
    {
        cn.immob.sdk.ImmobView $r7;
        h $r3;
        cn.immob.sdk.IMWebView r0;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r4;
        cn.immob.sdk.controller.LMCtrMgr $r5;
        cn.immob.sdk.LMAdListener $r6;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("initJS() -- the webView state:");

        $i0 = virtualinvoke r0.<cn.immob.sdk.IMWebView: int getVisibility()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  the viewState is:");

        $r3 = virtualinvoke r0.<cn.immob.sdk.IMWebView: h getViewState()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r4);

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("initJS() -- the webView height is:");

        $i0 = virtualinvoke r0.<cn.immob.sdk.IMWebView: int getHeight()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the webView width is:");

        $i0 = virtualinvoke r0.<cn.immob.sdk.IMWebView: int getWidth()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r4);

        $r5 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        if $r5 == null goto label1;

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean C>;

        if $z0 == 0 goto label1;

        $r5 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        $f0 = r0.<cn.immob.sdk.IMWebView: float l>;

        virtualinvoke $r5.<cn.immob.sdk.controller.LMCtrMgr: void init(float)>($f0);

        $r6 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        if $r6 == null goto label1;

        $r6 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i>;

        $r7 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x>;

        interfaceinvoke $r6.<cn.immob.sdk.LMAdListener: void onPresentScreen(cn.immob.sdk.ImmobView)>($r7);

     label1:
        r0.<cn.immob.sdk.IMWebView: boolean C> = 1;

        return;
    }

    public final void getADLocationInWindow(int[])
    {
        cn.immob.sdk.IMWebView r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: int[];

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void getLocationInWindow(int[])>($r1);

        $i0 = $r1[0];

        $i1 = $r1[1];

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("getLocationInWindow() -- the x is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  the y is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        return;
    }

    public final int getBackgroundColor()
    {
        int i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        i0 = r0.<cn.immob.sdk.IMWebView: int g>;

        return i0;
    }

    public final int getLmmobHeight()
    {
        int i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        i0 = r0.<cn.immob.sdk.IMWebView: int n>;

        return i0;
    }

    public final int getLmmobWidth()
    {
        int i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        i0 = r0.<cn.immob.sdk.IMWebView: int m>;

        return i0;
    }

    public final boolean getUseCustomClose()
    {
        cn.immob.sdk.IMWebView r0;
        boolean z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        z0 = r0.<cn.immob.sdk.IMWebView: boolean c>;

        return z0;
    }

    public final h getViewState()
    {
        h r1;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        r1 = r0.<cn.immob.sdk.IMWebView: h mViewState>;

        return r1;
    }

    public final int getViewX()
    {
        int i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        i0 = r0.<cn.immob.sdk.IMWebView: int o>;

        return i0;
    }

    public final int getViewY()
    {
        int i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        i0 = r0.<cn.immob.sdk.IMWebView: int p>;

        return i0;
    }

    protected final cn.immob.sdk.controller.LMCtrMgr h()
    {
        cn.immob.sdk.IMWebView r0;
        cn.immob.sdk.controller.LMCtrMgr r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        r1 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        return r1;
    }

    public final void hide()
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.String $r1;
        android.os.Handler $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "hide()");

        $r2 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(100016);

        return;
    }

    public final void injectJavaScript(java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;
        java.lang.Exception $r5;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("injectJavaScript() -- the str is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        if $r1 == null goto label4;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("javascript:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "super webkit is null,so can\'t loadUrl!");

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final boolean isInitJsable()
    {
        cn.immob.sdk.IMWebView r0;
        boolean z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        z0 = r0.<cn.immob.sdk.IMWebView: boolean C>;

        return z0;
    }

    public final boolean isModal()
    {
        cn.immob.sdk.IMWebView r0;
        boolean z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        z0 = r0.<cn.immob.sdk.IMWebView: boolean d>;

        return z0;
    }

    public final boolean lockOrientation()
    {
        cn.immob.sdk.IMWebView r0;
        boolean z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        z0 = r0.<cn.immob.sdk.IMWebView: boolean e>;

        return z0;
    }

    protected final void onAttachedToWindow()
    {
        cn.immob.sdk.IMWebView r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        specialinvoke r0.<android.webkit.WebView: void onAttachedToWindow()>();

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, "onAttachedToWindow()");

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean s>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r1.<android.view.ViewGroup$LayoutParams: int height>;

        r0.<cn.immob.sdk.IMWebView: int t> = $i0;

        $i0 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        r0.<cn.immob.sdk.IMWebView: int u> = $i0;

        r0.<cn.immob.sdk.IMWebView: boolean s> = 1;

     label1:
        $i0 = <c: int k>;

        r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $i0 = <c: int l>;

        r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        return;
    }

    protected final void onDetachedFromWindow()
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        specialinvoke r0.<android.webkit.WebView: void onDetachedFromWindow()>();

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "onDetachedFromWindow()");

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x> = null;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void clearView()>();

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void clearCacheFiles()>();

        return;
    }

    public final void onFocusChange(android.view.View, boolean)
    {
        cn.immob.sdk.IMWebView r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        return;
    }

    public final void onGlobalLayout()
    {
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        return;
    }

    public final void open(java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("open() -- url:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void open(java.lang.String,boolean)>($r1, 0);

        return;
    }

    public final void open(java.lang.String, boolean)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r3;
        android.os.Message $r2;
        android.os.Handler $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = new android.os.Message;

        specialinvoke $r2.<android.os.Message: void <init>()>();

        $r2.<android.os.Message: int what> = 100025;

        $r3 = virtualinvoke $r2.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("url", $r1);

        $r3 = virtualinvoke $r2.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isExternalBroswer", $z0);

        $r4 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public final void playAudio(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r5;
        android.os.Message $r4;
        android.os.Handler $r3;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(100022);

        $r5 = virtualinvoke $r4.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("expand_url", $r1);

        $r5 = virtualinvoke $r4.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("player_properties", $r2);

        $r3 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public final void playAudioImpl(android.os.Bundle)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<cn.immob.sdk.IMWebView: void a(android.os.Bundle)>($r1);

        return;
    }

    public final void playVideo(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r5;
        android.os.Message $r4;
        android.os.Handler $r3;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(100021);

        $r5 = virtualinvoke $r4.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("expand_url", $r1);

        $r5 = virtualinvoke $r4.<android.os.Message: android.os.Bundle getData()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("player_properties", $r2);

        $r3 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public final void raiseError(java.lang.String, java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r5;
        android.os.Message $r3;
        android.os.Handler $r4;
        java.lang.String $r1, $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        $r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(100023);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("message", $r1);

        virtualinvoke $r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("action", $r2);

        virtualinvoke $r3.<android.os.Message: void setData(android.os.Bundle)>($r5);

        $r4 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public final void resetContents()
    {
        android.view.ViewParent $r5;
        android.view.ViewGroup$LayoutParams $r7;
        android.widget.FrameLayout $r2, $r3, $r4;
        android.view.ViewGroup $r6;
        cn.immob.sdk.IMWebView r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.View getRootView()>();

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r2 = (android.widget.FrameLayout) $r1;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.View getRootView()>();

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(101);

        $r3 = (android.widget.FrameLayout) $r1;

        $r1 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.View getRootView()>();

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(100);

        $r4 = (android.widget.FrameLayout) $r1;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<android.widget.FrameLayout: android.view.ViewParent getParent()>();

        $r6 = (android.view.ViewGroup) $r5;

        virtualinvoke $r3.<android.widget.FrameLayout: void removeView(android.view.View)>(r0);

        virtualinvoke $r2.<android.widget.FrameLayout: void removeView(android.view.View)>($r3);

        specialinvoke r0.<cn.immob.sdk.IMWebView: void j()>();

        $i0 = r0.<cn.immob.sdk.IMWebView: int r>;

        virtualinvoke $r6.<android.view.ViewGroup: void addView(android.view.View,int)>(r0, $i0);

        virtualinvoke $r6.<android.view.ViewGroup: void removeView(android.view.View)>($r4);

        virtualinvoke $r6.<android.view.ViewGroup: void invalidate()>();

     label1:
        $r7 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int width>;

        r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $r7 = virtualinvoke r0.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r7.<android.view.ViewGroup$LayoutParams: int height>;

        r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        return;
    }

    public final void resize(int, int)
    {
        android.os.Bundle $r6;
        cn.immob.sdk.IMWebView r0;
        android.os.Message $r5;
        android.os.Handler $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("resize() -- width is:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; height:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r3);

        $r4 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(100014);

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("resize_width", $i0);

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("resize_height", $i1);

        virtualinvoke $r5.<android.os.Message: void setData(android.os.Bundle)>($r6);

        $r4 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    public final android.webkit.WebBackForwardList restoreState(android.os.Bundle)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ad_path");

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void loadUrl(java.lang.String)>($r2);

        return null;
    }

    public final android.webkit.WebBackForwardList saveState(android.os.Bundle)
    {
        cn.immob.sdk.IMWebView r0;
        android.os.Bundle $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<cn.immob.sdk.IMWebView: java.lang.String v>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("ad_path", $r2);

        return null;
    }

    public final void setBackgroundOpacity(float)
    {
        cn.immob.sdk.IMWebView r0;
        float $f0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $f0 := @parameter0: float;

        r0.<cn.immob.sdk.IMWebView: float q> = $f0;

        return;
    }

    public final void setInitJSAble(boolean)
    {
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<cn.immob.sdk.IMWebView: boolean C> = $z0;

        return;
    }

    public final void setLMBackGroundColor(int)
    {
        int $i0;
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        r0.<cn.immob.sdk.IMWebView: int g> = $i0;

        $z0 = r0.<cn.immob.sdk.IMWebView: boolean f>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<cn.immob.sdk.IMWebView: void setBackgroundColor(int)>($i0);

     label1:
        return;
    }

    public final void setLmadListener(cn.immob.sdk.LMAdListener)
    {
        cn.immob.sdk.IMWebView r0;
        cn.immob.sdk.controller.LMCtrMgr $r2;
        cn.immob.sdk.LMAdListener $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: cn.immob.sdk.LMAdListener;

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.LMAdListener i> = $r1;

        $r2 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        if $r2 == null goto label1;

        $r2 = r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j>;

        virtualinvoke $r2.<cn.immob.sdk.controller.LMCtrMgr: void setLMadListener(cn.immob.sdk.LMAdListener)>($r1);

     label1:
        return;
    }

    public final void setLmmobHeight(int)
    {
        cn.immob.sdk.IMWebView r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        r0.<cn.immob.sdk.IMWebView: int n> = $i0;

        $i1 = <c: int l>;

        $i1 = $i1 - $i0;

        $i1 = $i1 / 2;

        r0.<cn.immob.sdk.IMWebView: int p> = $i1;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("setLmmobWidth() -- the height is:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the y is:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int p>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r3);

        return;
    }

    public final void setLmmobView(cn.immob.sdk.ImmobView)
    {
        cn.immob.sdk.IMWebView r0;
        cn.immob.sdk.ImmobView $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: cn.immob.sdk.ImmobView;

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.ImmobView x> = $r1;

        return;
    }

    public final void setLmmobWidth(int)
    {
        cn.immob.sdk.IMWebView r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        r0.<cn.immob.sdk.IMWebView: int m> = $i0;

        $i1 = <c: int k>;

        $i1 = $i1 - $i0;

        $i1 = $i1 / 2;

        r0.<cn.immob.sdk.IMWebView: int o> = $i1;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("setLmmobWidth() -- the width is:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the x is:");

        $i0 = r0.<cn.immob.sdk.IMWebView: int o>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, $r3);

        return;
    }

    public final void setLockOrientation(boolean)
    {
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<cn.immob.sdk.IMWebView: boolean e> = $z0;

        return;
    }

    public final void setMgr(cn.immob.sdk.controller.LMCtrMgr)
    {
        cn.immob.sdk.IMWebView r0;
        cn.immob.sdk.controller.LMCtrMgr $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: cn.immob.sdk.controller.LMCtrMgr;

        r0.<cn.immob.sdk.IMWebView: cn.immob.sdk.controller.LMCtrMgr j> = $r1;

        return;
    }

    public final void setModal(boolean)
    {
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<cn.immob.sdk.IMWebView: boolean d> = $z0;

        return;
    }

    public final void setUseBackground(boolean)
    {
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<cn.immob.sdk.IMWebView: boolean f> = $z0;

        return;
    }

    public final void setUseCustomClose(boolean)
    {
        cn.immob.sdk.IMWebView r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<cn.immob.sdk.IMWebView: boolean c> = $z0;

        return;
    }

    public final void setViewX(int)
    {
        int $i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        r0.<cn.immob.sdk.IMWebView: int o> = $i0;

        return;
    }

    public final void setViewY(int)
    {
        int $i0;
        cn.immob.sdk.IMWebView r0;

        r0 := @this: cn.immob.sdk.IMWebView;

        $i0 := @parameter0: int;

        r0.<cn.immob.sdk.IMWebView: int p> = $i0;

        return;
    }

    public final void setmLocalFilePath(java.lang.String)
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 := @parameter0: java.lang.String;

        r0.<cn.immob.sdk.IMWebView: java.lang.String v> = $r1;

        return;
    }

    public final void show()
    {
        cn.immob.sdk.IMWebView r0;
        java.lang.String $r1;
        android.os.Handler $r2;

        r0 := @this: cn.immob.sdk.IMWebView;

        $r1 = r0.<cn.immob.sdk.IMWebView: java.lang.String h>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "show()");

        $r2 = r0.<cn.immob.sdk.IMWebView: android.os.Handler D>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(100017);

        return;
    }

    public final boolean useBackground()
    {
        cn.immob.sdk.IMWebView r0;
        boolean z0;

        r0 := @this: cn.immob.sdk.IMWebView;

        z0 = r0.<cn.immob.sdk.IMWebView: boolean f>;

        return z0;
    }
}
