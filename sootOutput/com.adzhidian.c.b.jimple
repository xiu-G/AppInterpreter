public class com.adzhidian.c.b extends java.lang.Object
{

    public void <init>()
    {
        com.adzhidian.c.b r0;

        r0 := @this: com.adzhidian.c.b;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String a(java.lang.String, java.lang.String)
    {
        byte[] $r3, $r4;
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.String;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.adzhidian.c.b: byte[] b(byte[])>($r3);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.adzhidian.c.b: byte[] b(byte[],byte[])>($r3, $r4);

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        return $r2;
    }

    private static java.lang.String a(byte[])
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuilder;

        $r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        if $r0 == null goto label2;

        $i1 = lengthof $r0;

        if $i0 < $i1 goto label3;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r2;

     label3:
        $b2 = $r0[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.RuntimeException $r8;
        javax.crypto.Cipher $r6;
        java.lang.Exception $r7;
        java.security.SecureRandom $r2;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new java.security.SecureRandom;

     label1:
        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

     label2:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label3:
        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r1);

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES");

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(1, $r5, $r2);

        $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label4:
        return $r0;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static final java.lang.String b(java.lang.String, java.lang.String)
    {
        byte[] $r2, $r3;
        java.lang.String $r0, $r1;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label4;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.adzhidian.c.b: byte[] a(byte[],byte[])>($r2, $r3);

        $r0 = staticinvoke <com.adzhidian.c.b: java.lang.String a(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] b(byte[])
    {
        byte[] $r0, $r1;
        java.lang.IllegalArgumentException $r2;
        byte $b3;
        int $i0, $i1, $i2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 % 2;

        if $i1 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $i1 = lengthof $r0;

        $i1 = $i1 / 2;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label2:
        $i0 = lengthof $r0;

        if $i1 < $i0 goto label3;

        return $r1;

     label3:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r0, $i1, 2);

        $i2 = $i1 / 2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

        $b3 = (byte) $i0;

        $r1[$i2] = $b3;

        $i1 = $i1 + 2;

        goto label2;
    }

    public static byte[] b(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.RuntimeException $r8;
        javax.crypto.Cipher $r6;
        java.lang.Exception $r7;
        java.security.SecureRandom $r2;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new java.security.SecureRandom;

     label1:
        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

     label2:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label3:
        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r1);

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES");

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(2, $r5, $r2);

        $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label4:
        return $r0;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
