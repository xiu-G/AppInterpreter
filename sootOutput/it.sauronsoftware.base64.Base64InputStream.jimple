public class it.sauronsoftware.base64.Base64InputStream extends java.io.InputStream
{
    private int[] buffer;
    private int bufferCounter;
    private boolean eof;
    private java.io.InputStream inputStream;

    public void <init>(java.io.InputStream)
    {
        it.sauronsoftware.base64.Base64InputStream r0;
        java.io.InputStream $r1;

        r0 := @this: it.sauronsoftware.base64.Base64InputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<it.sauronsoftware.base64.Base64InputStream: int bufferCounter> = 0;

        r0.<it.sauronsoftware.base64.Base64InputStream: boolean eof> = 0;

        r0.<it.sauronsoftware.base64.Base64InputStream: java.io.InputStream inputStream> = $r1;

        return;
    }

    private void acquire() throws java.io.IOException
    {
        char $c2, $c3;
        java.io.IOException $r5;
        byte $b4;
        int[] $r3;
        int $i0, $i1, $i5, $i6;
        char[] $r1;
        java.lang.String $r4;
        it.sauronsoftware.base64.Base64InputStream r0;
        java.io.InputStream $r2;
        boolean $z0;

        r0 := @this: it.sauronsoftware.base64.Base64InputStream;

        $r1 = newarray (char)[4];

        $i0 = 0;

     label01:
        $r2 = r0.<it.sauronsoftware.base64.Base64InputStream: java.io.InputStream inputStream>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i5 = -1;

        if $i1 != $i5 goto label03;

        if $i0 == 0 goto label02;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Bad base64 stream");

        throw $r5;

     label02:
        $r3 = newarray (int)[0];

        r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer> = $r3;

        r0.<it.sauronsoftware.base64.Base64InputStream: boolean eof> = 1;

        return;

     label03:
        $c2 = (char) $i1;

        $r4 = <it.sauronsoftware.base64.Shared: java.lang.String chars>;

        $i1 = (int) $c2;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>($i1);

        $i5 = -1;

        if $i1 != $i5 goto label04;

        $c3 = <it.sauronsoftware.base64.Shared: char pad>;

        $i1 = (int) $c2;

        $i5 = (int) $c3;

        if $i1 != $i5 goto label07;

     label04:
        $r1[$i0] = $c2;

        $i0 = $i0 + 1;

     label05:
        if $i0 < 4 goto label01;

        $z0 = 0;

        $i0 = 0;

     label06:
        if $i0 >= 4 goto label10;

        $c2 = $r1[$i0];

        $c3 = <it.sauronsoftware.base64.Shared: char pad>;

        $i1 = (int) $c2;

        $i5 = (int) $c3;

        if $i1 == $i5 goto label08;

        if $z0 == 0 goto label09;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Bad base64 stream");

        throw $r5;

     label07:
        $i1 = (int) $c2;

        if $i1 == 13 goto label05;

        $i1 = (int) $c2;

        if $i1 == 10 goto label05;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Bad base64 stream");

        throw $r5;

     label08:
        if $z0 != 0 goto label09;

        $z0 = 1;

     label09:
        $i0 = $i0 + 1;

        goto label06;

     label10:
        $c2 = $r1[3];

        $c3 = <it.sauronsoftware.base64.Shared: char pad>;

        $i0 = (int) $c2;

        $i1 = (int) $c3;

        if $i0 != $i1 goto label16;

        $r2 = r0.<it.sauronsoftware.base64.Base64InputStream: java.io.InputStream inputStream>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i1 = -1;

        if $i0 == $i1 goto label11;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Bad base64 stream");

        throw $r5;

     label11:
        r0.<it.sauronsoftware.base64.Base64InputStream: boolean eof> = 1;

        $c2 = $r1[2];

        $c3 = <it.sauronsoftware.base64.Shared: char pad>;

        $i0 = (int) $c2;

        $i1 = (int) $c3;

        if $i0 != $i1 goto label15;

        $b4 = 1;

     label12:
        $i0 = 0;

        $i1 = 0;

     label13:
        if $i1 >= 4 goto label17;

        $c2 = $r1[$i1];

        $c3 = <it.sauronsoftware.base64.Shared: char pad>;

        $i5 = (int) $c2;

        $i6 = (int) $c3;

        if $i5 == $i6 goto label14;

        $r4 = <it.sauronsoftware.base64.Shared: java.lang.String chars>;

        $c2 = $r1[$i1];

        $i5 = (int) $c2;

        $i5 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>($i5);

        $i6 = 3 - $i1;

        $i6 = $i6 * 6;

        $i5 = $i5 << $i6;

        $i0 = $i0 | $i5;

     label14:
        $i1 = $i1 + 1;

        goto label13;

     label15:
        $b4 = 2;

        goto label12;

     label16:
        $b4 = 3;

        goto label12;

     label17:
        $r3 = newarray (int)[$b4];

        r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer> = $r3;

        $i1 = 0;

     label18:
        if $i1 >= $b4 goto label19;

        $r3 = r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer>;

        $i5 = 2 - $i1;

        $i5 = $i5 * 8;

        $i5 = $i0 >>> $i5;

        $i5 = $i5 & 255;

        $r3[$i1] = $i5;

        $i1 = $i1 + 1;

        goto label18;

     label19:
        return;
    }

    public void close() throws java.io.IOException
    {
        it.sauronsoftware.base64.Base64InputStream r0;
        java.io.InputStream $r1;

        r0 := @this: it.sauronsoftware.base64.Base64InputStream;

        $r1 = r0.<it.sauronsoftware.base64.Base64InputStream: java.io.InputStream inputStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public int read() throws java.io.IOException
    {
        int[] $r1;
        int $i0, $i1;
        it.sauronsoftware.base64.Base64InputStream r0;
        boolean $z0;

        r0 := @this: it.sauronsoftware.base64.Base64InputStream;

        $r1 = r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer>;

        if $r1 == null goto label1;

        $i0 = r0.<it.sauronsoftware.base64.Base64InputStream: int bufferCounter>;

        $r1 = r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label4;

     label1:
        $z0 = r0.<it.sauronsoftware.base64.Base64InputStream: boolean eof>;

        if $z0 == 0 goto label2;

        $i0 = -1;

        return $i0;

     label2:
        specialinvoke r0.<it.sauronsoftware.base64.Base64InputStream: void acquire()>();

        $r1 = r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

        r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer> = null;

        $i0 = -1;

        return $i0;

     label3:
        r0.<it.sauronsoftware.base64.Base64InputStream: int bufferCounter> = 0;

     label4:
        $r1 = r0.<it.sauronsoftware.base64.Base64InputStream: int[] buffer>;

        $i0 = r0.<it.sauronsoftware.base64.Base64InputStream: int bufferCounter>;

        $i1 = $i0 + 1;

        r0.<it.sauronsoftware.base64.Base64InputStream: int bufferCounter> = $i1;

        $i0 = $r1[$i0];

        return $i0;
    }
}
