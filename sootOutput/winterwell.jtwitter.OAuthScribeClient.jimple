public class winterwell.jtwitter.OAuthScribeClient extends java.lang.Object implements winterwell.jtwitter.Twitter$IHttpClient
{
    static final boolean $assertionsDisabled;
    public static final java.lang.String JTWITTER_OAUTH_KEY;
    public static final java.lang.String JTWITTER_OAUTH_SECRET;
    private org.scribe.oauth.Token accessToken;
    private java.lang.String callbackUrl;
    private java.lang.String consumerKey;
    private java.lang.String consumerSecret;
    private org.scribe.oauth.Token requestToken;
    private boolean retryOnError;
    private boolean retryingFlag;
    private org.scribe.oauth.Scribe scribe;
    private int timeout;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        <winterwell.jtwitter.OAuthScribeClient: java.lang.String JTWITTER_OAUTH_SECRET> = "9FFYaWJSvQ6Yi5tctN30eN6DnXWmdw0QgJMl7V6KGI";

        <winterwell.jtwitter.OAuthScribeClient: java.lang.String JTWITTER_OAUTH_KEY> = "Cz8ZLgitPR2jrQVaD6ncw";

        <winterwell.jtwitter.OAuthScribeClient: boolean $assertionsDisabled> = 0;

        $r0 = class "Lwinterwell/jtwitter/OAuthScribeClient;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <winterwell.jtwitter.OAuthScribeClient: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.AssertionError $r4;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <winterwell.jtwitter.OAuthScribeClient: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        if $r3 != null goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerKey> = $r1;

        r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerSecret> = $r2;

        r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String callbackUrl> = $r3;

        specialinvoke r0.<winterwell.jtwitter.OAuthScribeClient: void init()>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.scribe.oauth.Token)
    {
        org.scribe.oauth.Token $r3;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.String $r1, $r2;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.scribe.oauth.Token;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerKey> = $r1;

        r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerSecret> = $r2;

        r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken> = $r3;

        specialinvoke r0.<winterwell.jtwitter.OAuthScribeClient: void init()>();

        return;
    }

    public static java.lang.String askUser(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <javax.swing.JOptionPane: java.lang.String showInputDialog(java.lang.Object)>($r0);

        return $r0;
    }

    private static java.lang.String encode(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r1);

        return $r1;
    }

    private void init()
    {
        org.scribe.oauth.Scribe $r3;
        java.util.Properties $r1;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.String $r2;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("request.token.url", "http://twitter.com/oauth/request_token");

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("access.token.verb", "POST");

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("request.token.verb", "POST");

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("access.token.url", "http://twitter.com/oauth/access_token");

        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerKey>;

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("consumer.key", $r2);

        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String consumerSecret>;

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("consumer.secret", $r2);

        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String callbackUrl>;

        if $r2 == null goto label1;

        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String callbackUrl>;

        virtualinvoke $r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("callback.url", $r2);

     label1:
        $r3 = new org.scribe.oauth.Scribe;

        specialinvoke $r3.<org.scribe.oauth.Scribe: void <init>(java.util.Properties)>($r1);

        r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Scribe scribe> = $r3;

        return;
    }

    public void authorizeDesktop()
    {
        java.lang.Throwable $r3;
        java.awt.Desktop $r2;
        winterwell.jtwitter.TwitterException $r4;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.net.URI $r1;
        java.lang.Exception $r5;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: java.net.URI authorizeUrl()>();

     label1:
        $r2 = staticinvoke <java.awt.Desktop: java.awt.Desktop getDesktop()>();

        virtualinvoke $r2.<java.awt.Desktop: void browse(java.net.URI)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new winterwell.jtwitter.TwitterException;

        $r5 = (java.lang.Exception) $r3;

        specialinvoke $r4.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r5);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.net.URI authorizeUrl()
    {
        java.lang.Throwable $r5;
        org.scribe.oauth.Token $r2;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.Exception $r9;
        org.scribe.oauth.Scribe $r1;
        winterwell.jtwitter.TwitterException $r8;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r4;
        java.net.URI $r7;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Scribe scribe>;

     label1:
        $r2 = virtualinvoke $r1.<org.scribe.oauth.Scribe: org.scribe.oauth.Token getRequestToken()>();

     label2:
        r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token requestToken> = $r2;

        $r6 = new java.lang.StringBuilder;

        $r3 = $r6;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("https://api.twitter.com/oauth/authorize?oauth_token=");

     label4:
        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token requestToken>;

     label5:
        $r4 = virtualinvoke $r2.<org.scribe.oauth.Token: java.lang.String getToken()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r7 = new java.net.URI;

     label7:
        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>($r4);

     label8:
        return $r7;

     label9:
        $r5 := @caughtexception;

        $r8 = new winterwell.jtwitter.TwitterException;

        $r9 = (java.lang.Exception) $r5;

        specialinvoke $r8.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r9);

        throw $r8;

        catch java.net.URISyntaxException from label1 to label2 with label9;
        catch java.net.URISyntaxException from label3 to label4 with label9;
        catch java.net.URISyntaxException from label5 to label6 with label9;
        catch java.net.URISyntaxException from label7 to label8 with label9;
    }

    public boolean canAuthenticate()
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        org.scribe.oauth.Token $r1;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.scribe.oauth.Token getAccessToken()
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        org.scribe.oauth.Token r1;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        r1 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken>;

        return r1;
    }

    public java.lang.String getPage(java.lang.String, java.util.Map, boolean) throws winterwell.jtwitter.TwitterException
    {
        java.lang.Throwable $r15, $r17;
        org.scribe.http.Request $r10, $r20;
        org.scribe.oauth.Token $r13;
        java.lang.AssertionError $r18;
        org.scribe.http.Request$Verb $r11;
        org.scribe.http.Response $r14;
        winterwell.jtwitter.TwitterException $r16, $r21;
        java.util.Map $r1;
        int $i0;
        java.lang.String $r2, $r5;
        boolean $z0, $z1;
        java.util.Map$Entry $r9;
        java.util.Iterator $r7;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.util.Set $r6;
        java.lang.Exception $r22;
        org.scribe.oauth.Scribe $r12;
        java.lang.StringBuilder $r4, $r19;
        java.lang.Object $r8;
        winterwell.jtwitter.TwitterException$E50X $r3;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $z1 = <winterwell.jtwitter.OAuthScribeClient: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

     label01:
        $z1 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: boolean canAuthenticate()>();

     label02:
        if $z1 != 0 goto label07;

        $r18 = new java.lang.AssertionError;

     label03:
        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

     label04:
        throw $r18;

     label05:
        $r3 := @caughtexception;

        $z1 = r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryOnError>;

        if $z1 == 0 goto label06;

        $z1 = r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag>;

        if $z1 == 0 goto label26;

     label06:
        throw $r3;

     label07:
        if $r1 == null goto label21;

     label08:
        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

     label09:
        if $i0 == 0 goto label21;

        $r19 = new java.lang.StringBuilder;

        $r4 = $r19;

     label10:
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r2 = $r5;

     label12:
        $r6 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label14:
        if $z1 == 0 goto label21;

     label15:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label16:
        $r9 = (java.util.Map$Entry) $r8;

     label17:
        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

     label18:
        if $r8 == null goto label13;

        $r19 = new java.lang.StringBuilder;

        $r4 = $r19;

     label19:
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = staticinvoke <winterwell.jtwitter.OAuthScribeClient: java.lang.String encode(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = staticinvoke <winterwell.jtwitter.OAuthScribeClient: java.lang.String encode(java.lang.Object)>($r8);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        $r2 = $r5;

        goto label13;

     label21:
        $r20 = new org.scribe.http.Request;

        $r10 = $r20;

        $r11 = <org.scribe.http.Request$Verb: org.scribe.http.Request$Verb GET>;

     label22:
        specialinvoke $r20.<org.scribe.http.Request: void <init>(org.scribe.http.Request$Verb,java.lang.String)>($r11, $r2);

     label23:
        $r12 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Scribe scribe>;

        $r13 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken>;

     label24:
        virtualinvoke $r12.<org.scribe.oauth.Scribe: void signRequest(org.scribe.http.Request,org.scribe.oauth.Token)>($r10, $r13);

        $r14 = virtualinvoke $r10.<org.scribe.http.Request: org.scribe.http.Response send()>();

        virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: void processError(org.scribe.http.Response)>($r14);

        $r5 = virtualinvoke $r14.<org.scribe.http.Response: java.lang.String getBody()>();

     label25:
        return $r5;

     label26:
        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 1;

     label27:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r2 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r2, $r1, $z0);

     label28:
        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 0;

        return $r2;

     label29:
        $r15 := @caughtexception;

     label30:
        $r21 = new winterwell.jtwitter.TwitterException;

     label31:
        $r16 = $r21;

     label32:
        $r22 = (java.lang.Exception) $r15;

        specialinvoke $r21.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r22);

        throw $r16;

     label33:
        $r17 := @caughtexception;

        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 0;

        throw $r17;

        catch winterwell.jtwitter.TwitterException$E50X from label01 to label02 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label03 to label04 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label08 to label09 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label10 to label11 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label12 to label14 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label15 to label16 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label17 to label18 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label19 to label20 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label22 to label23 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label24 to label25 with label05;
        catch java.lang.InterruptedException from label27 to label28 with label29;
        catch java.lang.Throwable from label26 to label28 with label33;
        catch java.lang.Throwable from label30 to label31 with label33;
        catch java.lang.Throwable from label32 to label33 with label33;
    }

    public org.scribe.oauth.Token getRequestToken()
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        org.scribe.oauth.Token r1;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        r1 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token requestToken>;

        return r1;
    }

    public java.lang.String post(java.lang.String, java.util.Map, boolean) throws winterwell.jtwitter.TwitterException
    {
        java.lang.Throwable $r15, $r17;
        org.scribe.http.Request $r3, $r19;
        org.scribe.oauth.Token $r13;
        java.lang.AssertionError $r18;
        org.scribe.http.Request$Verb $r5;
        org.scribe.http.Response $r14;
        winterwell.jtwitter.TwitterException $r16, $r20;
        java.util.Map $r2;
        int $i0;
        java.lang.String $r1, $r10, $r11;
        boolean $z0, $z1;
        java.util.Map$Entry $r9;
        java.util.Iterator $r7;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.util.Set $r6;
        java.lang.Exception $r21;
        org.scribe.oauth.Scribe $r12;
        java.lang.Object $r8;
        winterwell.jtwitter.TwitterException$E50X $r4;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $z1 = <winterwell.jtwitter.OAuthScribeClient: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

     label01:
        $z1 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: boolean canAuthenticate()>();

     label02:
        if $z1 != 0 goto label07;

        $r18 = new java.lang.AssertionError;

     label03:
        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

     label04:
        throw $r18;

     label05:
        $r4 := @caughtexception;

        $z1 = r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryOnError>;

        if $z1 == 0 goto label06;

        $z1 = r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag>;

        if $z1 == 0 goto label28;

     label06:
        throw $r4;

     label07:
        $r19 = new org.scribe.http.Request;

        $r3 = $r19;

        $r5 = <org.scribe.http.Request$Verb: org.scribe.http.Request$Verb POST>;

     label08:
        specialinvoke $r19.<org.scribe.http.Request: void <init>(org.scribe.http.Request$Verb,java.lang.String)>($r5, $r1);

     label09:
        if $r2 == null goto label25;

     label10:
        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

     label11:
        if $i0 == 0 goto label25;

     label12:
        $r6 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label14:
        if $z1 == 0 goto label25;

     label15:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label16:
        $r9 = (java.util.Map$Entry) $r8;

     label17:
        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

     label18:
        if $r8 == null goto label13;

     label19:
        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

     label20:
        $r10 = (java.lang.String) $r8;

     label21:
        $r8 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

     label22:
        $r11 = (java.lang.String) $r8;

     label23:
        virtualinvoke $r3.<org.scribe.http.Request: void addBodyParameter(java.lang.String,java.lang.String)>($r10, $r11);

     label24:
        goto label13;

     label25:
        $r12 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Scribe scribe>;

        $r13 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken>;

     label26:
        virtualinvoke $r12.<org.scribe.oauth.Scribe: void signRequest(org.scribe.http.Request,org.scribe.oauth.Token)>($r3, $r13);

        $r14 = virtualinvoke $r3.<org.scribe.http.Request: org.scribe.http.Response send()>();

        virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: void processError(org.scribe.http.Response)>($r14);

        $r10 = virtualinvoke $r14.<org.scribe.http.Response: java.lang.String getBody()>();

     label27:
        return $r10;

     label28:
        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 1;

     label29:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        $r1 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>($r1, $r2, 1);

     label30:
        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 0;

        return $r1;

     label31:
        $r15 := @caughtexception;

     label32:
        $r20 = new winterwell.jtwitter.TwitterException;

     label33:
        $r16 = $r20;

     label34:
        $r21 = (java.lang.Exception) $r15;

        specialinvoke $r20.<winterwell.jtwitter.TwitterException: void <init>(java.lang.Exception)>($r21);

        throw $r16;

     label35:
        $r17 := @caughtexception;

        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryingFlag> = 0;

        throw $r17;

        catch winterwell.jtwitter.TwitterException$E50X from label01 to label02 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label03 to label04 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label08 to label09 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label10 to label11 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label12 to label14 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label15 to label16 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label17 to label18 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label19 to label20 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label21 to label22 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label23 to label24 with label05;
        catch winterwell.jtwitter.TwitterException$E50X from label26 to label27 with label05;
        catch java.lang.InterruptedException from label29 to label30 with label31;
        catch java.lang.Throwable from label28 to label30 with label35;
        catch java.lang.Throwable from label32 to label33 with label35;
        catch java.lang.Throwable from label34 to label35 with label35;
    }

    void processError(org.scribe.http.Response)
    {
        winterwell.jtwitter.TwitterException$E401 $r5;
        org.scribe.http.Response $r1;
        org.json.JSONException $r12;
        org.json.JSONObject $r11;
        winterwell.jtwitter.TwitterException $r13;
        java.util.Map $r2;
        int $i0, $i1;
        winterwell.jtwitter.TwitterException$E403 $r6;
        winterwell.jtwitter.TwitterException$E404 $r7;
        java.lang.String $r4, $r10;
        boolean $z0;
        winterwell.jtwitter.TwitterException$RateLimit $r9;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r14;
        winterwell.jtwitter.TwitterException$E50X $r8;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 := @parameter0: org.scribe.http.Response;

        $i0 = virtualinvoke $r1.<org.scribe.http.Response: int getCode()>();

        if $i0 != 200 goto label01;

        return;

     label01:
        $r2 = virtualinvoke $r1.<org.scribe.http.Response: java.util.Map getHeaders()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);

        $r4 = (java.lang.String) $r3;

        if $i0 != 401 goto label02;

        $r5 = new winterwell.jtwitter.TwitterException$E401;

        specialinvoke $r5.<winterwell.jtwitter.TwitterException$E401: void <init>(java.lang.String)>($r4);

        throw $r5;

     label02:
        if $i0 != 403 goto label03;

        $r6 = new winterwell.jtwitter.TwitterException$E403;

        specialinvoke $r6.<winterwell.jtwitter.TwitterException$E403: void <init>(java.lang.String)>($r4);

        throw $r6;

     label03:
        if $i0 != 404 goto label04;

        $r7 = new winterwell.jtwitter.TwitterException$E404;

        specialinvoke $r7.<winterwell.jtwitter.TwitterException$E404: void <init>(java.lang.String)>($r4);

        throw $r7;

     label04:
        if $i0 < 500 goto label05;

        if $i0 >= 600 goto label05;

        $r8 = new winterwell.jtwitter.TwitterException$E50X;

        specialinvoke $r8.<winterwell.jtwitter.TwitterException$E50X: void <init>(java.lang.String)>($r4);

        throw $r8;

     label05:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("Rate limit exceeded");

        if $z0 == 0 goto label06;

        $r9 = new winterwell.jtwitter.TwitterException$RateLimit;

        specialinvoke $r9.<winterwell.jtwitter.TwitterException$RateLimit: void <init>(java.lang.String)>($r4);

        throw $r9;

     label06:
        if $i0 != 400 goto label12;

        $r10 = virtualinvoke r0.<winterwell.jtwitter.OAuthScribeClient: java.lang.String getPage(java.lang.String,java.util.Map,boolean)>("http://twitter.com/account/rate_limit_status.json", null, 1);

        $r11 = new org.json.JSONObject;

     label07:
        specialinvoke $r11.<org.json.JSONObject: void <init>(java.lang.String)>($r10);

        $i1 = virtualinvoke $r11.<org.json.JSONObject: int getInt(java.lang.String)>("remaining_hits");

     label08:
        if $i1 >= 1 goto label12;

        $r9 = new winterwell.jtwitter.TwitterException$RateLimit;

     label09:
        specialinvoke $r9.<winterwell.jtwitter.TwitterException$RateLimit: void <init>(java.lang.String)>($r4);

     label10:
        throw $r9;

     label11:
        $r12 := @caughtexception;

     label12:
        $r13 = new winterwell.jtwitter.TwitterException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<winterwell.jtwitter.TwitterException: void <init>(java.lang.String)>($r4);

        throw $r13;

        catch org.json.JSONException from label07 to label08 with label11;
        catch org.json.JSONException from label09 to label10 with label11;
    }

    public void setAuthorizationCode(java.lang.String) throws java.lang.RuntimeException
    {
        org.scribe.oauth.Scribe $r3;
        org.scribe.oauth.Token $r2;
        winterwell.jtwitter.OAuthScribeClient r0;
        java.lang.String $r1;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Scribe scribe>;

        $r2 = r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token requestToken>;

        $r2 = virtualinvoke $r3.<org.scribe.oauth.Scribe: org.scribe.oauth.Token getAccessToken(org.scribe.oauth.Token,java.lang.String)>($r2, $r1);

        r0.<winterwell.jtwitter.OAuthScribeClient: org.scribe.oauth.Token accessToken> = $r2;

        return;
    }

    public void setRetryOnError(boolean)
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        boolean $z0;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $z0 := @parameter0: boolean;

        r0.<winterwell.jtwitter.OAuthScribeClient: boolean retryOnError> = $z0;

        return;
    }

    public void setTimeout(int)
    {
        winterwell.jtwitter.OAuthScribeClient r0;
        int $i0;

        r0 := @this: winterwell.jtwitter.OAuthScribeClient;

        $i0 := @parameter0: int;

        r0.<winterwell.jtwitter.OAuthScribeClient: int timeout> = $i0;

        return;
    }
}
