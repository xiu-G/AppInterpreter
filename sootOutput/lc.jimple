public class lc extends java.lang.Exception
{
    protected java.lang.Throwable a;

    public void <init>()
    {
        lc r0;

        r0 := @this: lc;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        lc r0;

        r0 := @this: lc;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.String $r1;
        lc r0;

        r0 := @this: lc;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        r0.<lc: java.lang.Throwable a> = $r2;

        return;
    }

    public void printStackTrace()
    {
        java.io.PrintStream $r1;
        lc r0;

        r0 := @this: lc;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke r0.<lc: void printStackTrace(java.io.PrintStream)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintStream $r1;
        java.lang.Throwable $r2;
        lc r0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: lc;

        $r1 := @parameter0: java.io.PrintStream;

        entermonitor $r1;

     label1:
        $r2 = r0.<lc: java.lang.Throwable a>;

        if $r2 == null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke r0.<lc: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r2 = r0.<lc: java.lang.Throwable a>;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r1);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r1);

     label5:
        goto label2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r1;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.io.PrintWriter $r1;
        java.lang.Throwable $r2;
        lc r0;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.String $r5;

        r0 := @this: lc;

        $r1 := @parameter0: java.io.PrintWriter;

        entermonitor $r1;

     label1:
        $r2 = r0.<lc: java.lang.Throwable a>;

        if $r2 == null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = virtualinvoke r0.<lc: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r2 = r0.<lc: java.lang.Throwable a>;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

     label2:
        exitmonitor $r1;

     label3:
        return;

     label4:
        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r1);

     label5:
        goto label2;

     label6:
        $r2 := @caughtexception;

        exitmonitor $r1;

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
