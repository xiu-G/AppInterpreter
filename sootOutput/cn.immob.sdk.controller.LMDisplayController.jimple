public class cn.immob.sdk.controller.LMDisplayController extends cn.immob.sdk.controller.LMController
{
    private android.view.WindowManager c;
    private boolean d;
    private int e;
    private int f;
    private int g;
    private int h;
    private int i;
    private int j;
    private boolean k;
    private boolean l;
    private boolean m;
    private boolean n;
    private int o;
    private float p;
    private java.lang.String q;

    public void <init>(cn.immob.sdk.IMWebView, android.content.Context)
    {
        android.content.Context $r2;
        android.view.WindowManager $r4;
        cn.immob.sdk.controller.LMDisplayController r0;
        android.util.DisplayMetrics $r6;
        cn.immob.sdk.IMWebView $r1;
        int $i0;
        android.view.Display $r5;
        java.lang.Object $r3;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: cn.immob.sdk.IMWebView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<cn.immob.sdk.controller.LMController: void <init>(cn.immob.sdk.IMWebView,android.content.Context)>($r1, $r2);

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean d> = 1;

        r0.<cn.immob.sdk.controller.LMDisplayController: int e> = -1;

        r0.<cn.immob.sdk.controller.LMDisplayController: int f> = -1;

        r0.<cn.immob.sdk.controller.LMDisplayController: int g> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: int h> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: int i> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: int j> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean k> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean l> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean m> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean n> = 0;

        r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q> = "LMDisplayController";

        $r6 = new android.util.DisplayMetrics;

        specialinvoke $r6.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        r0.<cn.immob.sdk.controller.LMDisplayController: android.view.WindowManager c> = $r4;

        $r4 = r0.<cn.immob.sdk.controller.LMDisplayController: android.view.WindowManager c>;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r6);

        $i0 = <c: int k>;

        r0.<cn.immob.sdk.controller.LMDisplayController: int e> = $i0;

        $i0 = <c: int l>;

        r0.<cn.immob.sdk.controller.LMDisplayController: int f> = $i0;

        return;
    }

    public void close()
    {
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMDisplayController r0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMDisplayController", "close");

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void close()>();

        return;
    }

    public void expand(java.lang.String)
    {
        java.lang.Throwable $r5;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.NumberFormatException $r8;
        java.lang.NullPointerException $r6;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r1, $r2, $r4;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("expand:  url: ");

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r2, $r4);

     label1:
        virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: void expand(java.lang.String,java.lang.String)>($r1, null);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r8 = (java.lang.NumberFormatException) $r5;

        virtualinvoke $r8.<java.lang.NumberFormatException: void printStackTrace()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.NullPointerException: void printStackTrace()>();

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void expand(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r6;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.NumberFormatException $r9;
        java.lang.NullPointerException $r7;
        cn.immob.sdk.IMWebView $r5;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("expand:  url: ");

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("===properties:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("", $r4);

        if $r2 == null goto label1;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: void setExpandProperties(java.lang.String)>($r2);

     label1:
        $r5 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

     label2:
        virtualinvoke $r5.<cn.immob.sdk.IMWebView: void expand(java.lang.String)>($r1);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r9 = (java.lang.NumberFormatException) $r6;

        virtualinvoke $r9.<java.lang.NumberFormatException: void printStackTrace()>();

        return;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.NullPointerException: void printStackTrace()>();

        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.lang.NullPointerException from label1 to label3 with label5;
    }

    public java.lang.String getDefaultPosition()
    {
        cn.immob.sdk.IMWebView $r2;
        int[] $r1;
        int $i0;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 = newarray (int)[2];

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r2.<cn.immob.sdk.IMWebView: void getADLocationInWindow(int[])>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("{\"x\":");

        $i0 = $r1[0];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"y\":");

        $i0 = $r1[1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"width\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getLmmobWidth()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"height\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getHeight()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getExpendProperties()
    {
        cn.immob.sdk.controller.LMDisplayController r0;
        cn.immob.sdk.IMWebView $r2;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{\"x\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getViewX()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"y\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getViewY()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"width\":\"");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getLmmobWidth()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"height\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getLmmobHeight()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", \"useCustomClose\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: boolean getUseCustomClose()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"isModal\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: boolean isModal()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\"lockOrientation\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: boolean lockOrientation()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ,\"useBackground\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: boolean useBackground()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ,\"backgroundColor\":");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: int getBackgroundColor()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ,\"backgroundOpacity\":\"");

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $f0 = virtualinvoke $r2.<cn.immob.sdk.IMWebView: float backgroundOpacity()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        $r4 = r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("getExpendProperties() -- the str is:");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>($r4, $r5);

        return $r3;
    }

    public java.lang.String getMaxSize()
    {
        int $i0;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $z0 = r0.<cn.immob.sdk.controller.LMDisplayController: boolean d>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ width: ");

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int e>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int f>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r2 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String getScreenSize()>();

        return $r2;
    }

    public java.lang.String getScreenSize()
    {
        int $i0;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{width: ");

        $i0 = <c: int k>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $i0 = <c: int l>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("getScreenSize() -- ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMDisplayController", $r3);

        return $r2;
    }

    public java.lang.String getSize()
    {
        android.view.ViewGroup$LayoutParams $r2;
        cn.immob.sdk.controller.LMDisplayController r0;
        cn.immob.sdk.IMWebView $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: int getWidth()>();

        $i1 = $i0;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i2 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: int getHeight()>();

        $i3 = $i2;

        if $i0 > 0 goto label1;

        if $i2 > 0 goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $r2 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i3 = $r2.<android.view.ViewGroup$LayoutParams: int height>;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ width: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean getViewable()
    {
        cn.immob.sdk.controller.LMDisplayController r0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        return 0;
    }

    public void hide()
    {
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMDisplayController r0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMDisplayController", "hide");

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void hide()>();

        return;
    }

    public boolean isVisible()
    {
        int $i0;
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMDisplayController r0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = virtualinvoke $r1.<cn.immob.sdk.IMWebView: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void resize(int, int)
    {
        cn.immob.sdk.IMWebView $r3;
        int $i0, $i1, $i2;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("resize: width: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMDisplayController", $r2);

        $i2 = r0.<cn.immob.sdk.controller.LMDisplayController: int f>;

        if $i2 <= 0 goto label1;

        $i2 = r0.<cn.immob.sdk.controller.LMDisplayController: int f>;

        if $i1 > $i2 goto label2;

     label1:
        $i2 = r0.<cn.immob.sdk.controller.LMDisplayController: int e>;

        if $i2 <= 0 goto label3;

        $i2 = r0.<cn.immob.sdk.controller.LMDisplayController: int e>;

        if $i0 <= $i2 goto label3;

     label2:
        $r3 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void raiseError(java.lang.String,java.lang.String)>("Maximum size exceeded", "resize");

        return;

     label3:
        $r3 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r3.<cn.immob.sdk.IMWebView: void resize(int,int)>($i0, $i1);

        return;
    }

    public void setExpandProperties(java.lang.String)
    {
        org.json.JSONTokener $r5;
        cn.immob.sdk.controller.LMDisplayController r0;
        long $l1;
        cn.immob.sdk.IMWebView $r8;
        org.json.JSONException $r9;
        org.json.JSONObject $r7;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r6;
        java.lang.String $r1, $r2, $r4;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("setExpandProperties() -- the properties is:");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        $r2 = r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("parserJson() =============");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r2, $r4);

        $r5 = new org.json.JSONTokener;

     label01:
        specialinvoke $r5.<org.json.JSONTokener: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<org.json.JSONTokener: java.lang.Object nextValue()>();

     label02:
        $r7 = (org.json.JSONObject) $r6;

     label03:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("width");

     label04:
        if $z0 != 0 goto label08;

     label05:
        $i0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: int stringToInt(org.json.JSONObject,java.lang.String)>($r7, "width");

     label06:
        r0.<cn.immob.sdk.controller.LMDisplayController: int g> = $i0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int g>;

     label07:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setLmmobWidth(int)>($i0);

     label08:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("height");

     label09:
        if $z0 != 0 goto label13;

     label10:
        $i0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: int stringToInt(org.json.JSONObject,java.lang.String)>($r7, "height");

     label11:
        r0.<cn.immob.sdk.controller.LMDisplayController: int h> = $i0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int h>;

     label12:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setLmmobHeight(int)>($i0);

     label13:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("useCustomClose");

     label14:
        if $z0 != 0 goto label18;

     label15:
        $z0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: boolean stringToBoolean(org.json.JSONObject,java.lang.String)>($r7, "useCustomClose");

     label16:
        r0.<cn.immob.sdk.controller.LMDisplayController: boolean k> = $z0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = r0.<cn.immob.sdk.controller.LMDisplayController: boolean k>;

     label17:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setUseCustomClose(boolean)>($z0);

     label18:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("isModal");

     label19:
        if $z0 != 0 goto label23;

     label20:
        $z0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: boolean stringToBoolean(org.json.JSONObject,java.lang.String)>($r7, "isModal");

     label21:
        r0.<cn.immob.sdk.controller.LMDisplayController: boolean l> = $z0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = r0.<cn.immob.sdk.controller.LMDisplayController: boolean l>;

     label22:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setModal(boolean)>($z0);

     label23:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("lockOrientation");

     label24:
        if $z0 != 0 goto label28;

     label25:
        $z0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: boolean stringToBoolean(org.json.JSONObject,java.lang.String)>($r7, "lockOrientation");

     label26:
        r0.<cn.immob.sdk.controller.LMDisplayController: boolean m> = $z0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = r0.<cn.immob.sdk.controller.LMDisplayController: boolean m>;

     label27:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setLockOrientation(boolean)>($z0);

     label28:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("useBackground");

     label29:
        if $z0 != 0 goto label33;

     label30:
        $z0 = virtualinvoke r0.<cn.immob.sdk.controller.LMDisplayController: boolean stringToBoolean(org.json.JSONObject,java.lang.String)>($r7, "useBackground");

     label31:
        r0.<cn.immob.sdk.controller.LMDisplayController: boolean n> = $z0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $z0 = r0.<cn.immob.sdk.controller.LMDisplayController: boolean n>;

     label32:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setUseBackground(boolean)>($z0);

     label33:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("backgroundColor");

     label34:
        if $z0 != 0 goto label38;

     label35:
        $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("backgroundColor");

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r1);

     label36:
        r0.<cn.immob.sdk.controller.LMDisplayController: int o> = $i0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int o>;

     label37:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setLMBackGroundColor(int)>($i0);

     label38:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("backgroundOpacity");

     label39:
        if $z0 != 0 goto label43;

     label40:
        $l1 = virtualinvoke $r7.<org.json.JSONObject: long getLong(java.lang.String)>("backgroundOpacity");

     label41:
        $f0 = (float) $l1;

        r0.<cn.immob.sdk.controller.LMDisplayController: float p> = $f0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $f0 = r0.<cn.immob.sdk.controller.LMDisplayController: float p>;

     label42:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setBackgroundOpacity(float)>($f0);

     label43:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("x");

     label44:
        if $z0 != 0 goto label48;

     label45:
        $i0 = virtualinvoke $r7.<org.json.JSONObject: int getInt(java.lang.String)>("x");

     label46:
        r0.<cn.immob.sdk.controller.LMDisplayController: int i> = $i0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int i>;

     label47:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setViewX(int)>($i0);

     label48:
        $z0 = virtualinvoke $r7.<org.json.JSONObject: boolean isNull(java.lang.String)>("y");

     label49:
        if $z0 != 0 goto label55;

     label50:
        $i0 = virtualinvoke $r7.<org.json.JSONObject: int getInt(java.lang.String)>("y");

     label51:
        r0.<cn.immob.sdk.controller.LMDisplayController: int j> = $i0;

        $r8 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        $i0 = r0.<cn.immob.sdk.controller.LMDisplayController: int j>;

     label52:
        virtualinvoke $r8.<cn.immob.sdk.IMWebView: void setViewY(int)>($i0);

     label53:
        return;

     label54:
        $r9 := @caughtexception;

        virtualinvoke $r9.<org.json.JSONException: void printStackTrace()>();

     label55:
        return;

        catch org.json.JSONException from label01 to label02 with label54;
        catch org.json.JSONException from label03 to label04 with label54;
        catch org.json.JSONException from label05 to label06 with label54;
        catch org.json.JSONException from label07 to label09 with label54;
        catch org.json.JSONException from label10 to label11 with label54;
        catch org.json.JSONException from label12 to label14 with label54;
        catch org.json.JSONException from label15 to label16 with label54;
        catch org.json.JSONException from label17 to label19 with label54;
        catch org.json.JSONException from label20 to label21 with label54;
        catch org.json.JSONException from label22 to label24 with label54;
        catch org.json.JSONException from label25 to label26 with label54;
        catch org.json.JSONException from label27 to label29 with label54;
        catch org.json.JSONException from label30 to label31 with label54;
        catch org.json.JSONException from label32 to label34 with label54;
        catch org.json.JSONException from label35 to label36 with label54;
        catch org.json.JSONException from label37 to label39 with label54;
        catch org.json.JSONException from label40 to label41 with label54;
        catch org.json.JSONException from label42 to label44 with label54;
        catch org.json.JSONException from label45 to label46 with label54;
        catch org.json.JSONException from label47 to label49 with label54;
        catch org.json.JSONException from label50 to label51 with label54;
        catch org.json.JSONException from label52 to label53 with label54;
    }

    public void setMaxSize(int, int)
    {
        int $i0, $i1;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.String $r1;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: java.lang.String q>;

        staticinvoke <S: void a(java.lang.String,java.lang.String)>($r1, "setMaxSize");

        r0.<cn.immob.sdk.controller.LMDisplayController: boolean d> = 1;

        r0.<cn.immob.sdk.controller.LMDisplayController: int e> = $i0;

        r0.<cn.immob.sdk.controller.LMDisplayController: int f> = $i1;

        return;
    }

    public void show()
    {
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMDisplayController r0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        staticinvoke <S: void b(java.lang.String,java.lang.String)>("LMDisplayController", "show");

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void show()>();

        return;
    }

    public boolean stringToBoolean(org.json.JSONObject, java.lang.String)
    {
        org.json.JSONException $r3;
        org.json.JSONObject $r1;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean isNull(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>($r2);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<org.json.JSONException: void printStackTrace()>();

        return 0;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public int stringToInt(org.json.JSONObject, java.lang.String)
    {
        org.json.JSONException $r4;
        org.json.JSONObject $r1;
        int $i0;
        cn.immob.sdk.controller.LMDisplayController r0;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: java.lang.String;

     label01:
        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean isNull(java.lang.String)>($r2);

     label02:
        if $z0 != 0 goto label10;

     label03:
        $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r2);

     label04:
        if $r2 == null goto label11;

        $r3 = "";

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label06:
        if $z0 == 0 goto label07;

        $i0 = -1;

        return $i0;

     label07:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label08:
        return $i0;

     label09:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        $i0 = -1;

        return $i0;

     label10:
        $i0 = -1;

        return $i0;

     label11:
        $i0 = -1;

        return $i0;

        catch org.json.JSONException from label01 to label02 with label09;
        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
    }

    public void useCustomClose(boolean)
    {
        cn.immob.sdk.IMWebView $r1;
        cn.immob.sdk.controller.LMDisplayController r0;
        boolean $z0;

        r0 := @this: cn.immob.sdk.controller.LMDisplayController;

        $z0 := @parameter0: boolean;

        $r1 = r0.<cn.immob.sdk.controller.LMDisplayController: cn.immob.sdk.IMWebView b>;

        virtualinvoke $r1.<cn.immob.sdk.IMWebView: void setUseCustomClose(boolean)>($z0);

        return;
    }
}
