public final class c.a.a.a.a.c.m extends java.util.concurrent.PriorityBlockingQueue
{
    final java.util.Queue a;
    private final java.util.concurrent.locks.ReentrantLock b;

    public void <init>()
    {
        java.util.LinkedList $r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<c.a.a.a.a.c.m: java.util.Queue a> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b> = $r2;

        return;
    }

    private c.a.a.a.a.c.l a(int, java.lang.Long, java.util.concurrent.TimeUnit)
    {
        long $l1;
        java.util.concurrent.TimeUnit $r2;
        java.lang.Long $r1;
        int $i0;
        java.lang.Object $r4;
        c.a.a.a.a.c.l $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Long;

        $r2 := @parameter2: java.util.concurrent.TimeUnit;

     label1:
        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label2;
        };

     label2:
        $r3 = null;

     label3:
        if $r3 == null goto label8;

        $z0 = interfaceinvoke $r3.<c.a.a.a.a.c.l: boolean g()>();

        if $z0 != 0 goto label8;

        specialinvoke r0.<c.a.a.a.a.c.m: boolean a(int,c.a.a.a.a.c.l)>($i0, $r3);

        goto label1;

     label4:
        $r4 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object take()>();

        $r3 = (c.a.a.a.a.c.l) $r4;

        goto label3;

     label5:
        $r4 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object peek()>();

        $r3 = (c.a.a.a.a.c.l) $r4;

        goto label3;

     label6:
        $r4 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object poll()>();

        $r3 = (c.a.a.a.a.c.l) $r4;

        goto label3;

     label7:
        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r4 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>($l1, null);

        $r3 = (c.a.a.a.a.c.l) $r4;

        goto label3;

     label8:
        return $r3;
    }

    private boolean a(int, c.a.a.a.a.c.l)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.ReentrantLock $r2;
        int $i0;
        java.util.Queue $r3;
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $i0 := @parameter0: int;

        $r1 := @parameter1: c.a.a.a.a.c.l;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        if $i0 != 1 goto label4;

     label3:
        specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>($r1);

     label4:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean offer(java.lang.Object)>($r1);

     label5:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label6:
        $r4 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    private static java.lang.Object[] a(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.Class $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $i2 = $i0 + $i1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i2);

        $r4 = (java.lang.Object[]) $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r4, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, $i0, $i1);

        return $r4;
    }

    private c.a.a.a.a.c.l b()
    {
        java.lang.Throwable $r2;
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l a(int,java.lang.Long,java.util.concurrent.TimeUnit)>(1, null, null);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private c.a.a.a.a.c.l c()
    {
        java.lang.Throwable $r2;
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l a(int,java.lang.Long,java.util.concurrent.TimeUnit)>(2, null, null);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public final void a()
    {
        java.lang.Throwable $r6;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.Queue $r2;
        c.a.a.a.a.c.l $r5;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r2 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label9;

     label4:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (c.a.a.a.a.c.l) $r4;

        $z0 = interfaceinvoke $r5.<c.a.a.a.a.c.l: boolean g()>();

     label5:
        if $z0 == 0 goto label2;

     label6:
        specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: boolean offer(java.lang.Object)>($r5);

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

     label7:
        goto label2;

     label8:
        $r6 := @caughtexception;

        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

     label9:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public final void clear()
    {
        java.lang.Throwable $r3;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Queue $r2;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r2 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        interfaceinvoke $r2.<java.util.Queue: void clear()>();

        specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: void clear()>();

     label2:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.Object $r1;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $z0 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: boolean contains(java.lang.Object)>($r1);

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean contains(java.lang.Object)>($r1);

     label4:
        if $z0 == 0 goto label7;

     label5:
        $z0 = 1;

     label6:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label7:
        $z0 = 0;

        goto label6;

     label8:
        $r4 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public final int drainTo(java.util.Collection)
    {
        java.lang.Throwable $r5;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.util.Collection;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $i0 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection)>($r1);

        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $i1 = interfaceinvoke $r3.<java.util.Queue: int size()>();

     label2:
        $i0 = $i0 + $i1;

     label3:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

     label4:
        if $z0 != 0 goto label8;

     label5:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object poll()>();

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label6:
        goto label3;

     label7:
        $r5 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

     label8:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i0;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public final int drainTo(java.util.Collection, int)
    {
        java.lang.Throwable $r5;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.Collection $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.util.Collection;

        $i0 := @parameter1: int;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $i1 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: int drainTo(java.util.Collection,int)>($r1, $i0);

     label2:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

     label3:
        if $z0 != 0 goto label6;

        if $i1 > $i0 goto label6;

     label4:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object poll()>();

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i1;

     label7:
        $r5 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public final java.lang.Object peek()
    {
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l b()>();

        return $r1;
    }

    public final java.lang.Object poll()
    {
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l c()>();

        return $r1;
    }

    public final java.lang.Object poll(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        java.lang.Long $r2;
        long $l0;
        c.a.a.a.a.c.l $r3;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l a(int,java.lang.Long,java.util.concurrent.TimeUnit)>(3, $r2, $r1);

        return $r3;
    }

    public final boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.Object $r1;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $z0 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: boolean remove(java.lang.Object)>($r1);

     label2:
        if $z0 != 0 goto label5;

     label3:
        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean remove(java.lang.Object)>($r1);

     label4:
        if $z0 == 0 goto label7;

     label5:
        $z0 = 1;

     label6:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label7:
        $z0 = 0;

        goto label6;

     label8:
        $r4 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public final boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.Collection $r1;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;
        boolean $z0, $z1;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.util.Collection;

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $z0 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: boolean removeAll(java.util.Collection)>($r1);

        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $z1 = interfaceinvoke $r3.<java.util.Queue: boolean removeAll(java.util.Collection)>($r1);

     label2:
        $z0 = $z0 | $z1;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $z0;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int size()
    {
        java.lang.Throwable $r3;
        java.util.concurrent.locks.ReentrantLock $r1;
        int $i0, $i1;
        java.util.Queue $r2;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r2 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $i0 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        $i1 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: int size()>();

     label2:
        $i0 = $i0 + $i1;

        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $i0;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object take()
    {
        c.a.a.a.a.c.l $r1;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 = specialinvoke r0.<c.a.a.a.a.c.m: c.a.a.a.a.c.l a(int,java.lang.Long,java.util.concurrent.TimeUnit)>(0, null, null);

        return $r1;
    }

    public final java.lang.Object[] toArray()
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r2, $r4;
        java.util.concurrent.locks.ReentrantLock $r1;
        java.util.Queue $r3;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

     label1:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r2 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray()>();

        $r3 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $r4 = interfaceinvoke $r3.<java.util.Queue: java.lang.Object[] toArray()>();

        $r2 = staticinvoke <c.a.a.a.a.c.m: java.lang.Object[] a(java.lang.Object[],java.lang.Object[])>($r2, $r4);

     label2:
        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r2;

     label3:
        $r5 := @caughtexception;

        $r1 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r1, $r3;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.Queue $r4;
        c.a.a.a.a.c.m r0;

        r0 := @this: c.a.a.a.a.c.m;

        $r1 := @parameter0: java.lang.Object[];

     label1:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        $r3 = specialinvoke r0.<java.util.concurrent.PriorityBlockingQueue: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r4 = r0.<c.a.a.a.a.c.m: java.util.Queue a>;

        $r1 = interfaceinvoke $r4.<java.util.Queue: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = staticinvoke <c.a.a.a.a.c.m: java.lang.Object[] a(java.lang.Object[],java.lang.Object[])>($r3, $r1);

     label2:
        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r1;

     label3:
        $r5 := @caughtexception;

        $r2 = r0.<c.a.a.a.a.c.m: java.util.concurrent.locks.ReentrantLock b>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
