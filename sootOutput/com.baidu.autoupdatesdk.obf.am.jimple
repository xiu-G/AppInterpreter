public class com.baidu.autoupdatesdk.obf.am extends java.lang.Object
{
    private static java.lang.ref.WeakReference a;

    public void <init>()
    {
        com.baidu.autoupdatesdk.obf.am r0;

        r0 := @this: com.baidu.autoupdatesdk.obf.am;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.http.client.HttpClient a()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;
        org.apache.http.impl.client.DefaultHttpClient $r5;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.params.BasicHttpParams $r1;
        org.apache.http.conn.scheme.Scheme $r4;
        com.baidu.autoupdatesdk.obf.am$2 $r7;
        com.baidu.autoupdatesdk.obf.am$1 $r2;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r6;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>($r1, 15000L);

        $r2 = new com.baidu.autoupdatesdk.obf.am$1;

        specialinvoke $r2.<com.baidu.autoupdatesdk.obf.am$1: void <init>()>();

        staticinvoke <org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>($r1, $r2);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r1, 15000);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r1, 15000);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>($r1, 1);

        staticinvoke <org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)>($r1, "compatibility");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>($r1, 0);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>($r1, 8192);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>($r1, 1);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>($r1, 1);

        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r0 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r0, 80);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r5 = new org.apache.http.impl.client.DefaultHttpClient;

        $r6 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke $r6.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r1, $r3);

        specialinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r6, $r1);

        $r7 = new com.baidu.autoupdatesdk.obf.am$2;

        specialinvoke $r7.<com.baidu.autoupdatesdk.obf.am$2: void <init>()>();

        virtualinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)>($r7);

        return $r5;
    }

    public static void a(android.content.Context, org.apache.http.client.HttpClient)
    {
        android.content.Context $r0;
        org.apache.http.client.HttpClient $r1;
        org.apache.http.params.HttpParams $r3;
        int $i0;
        java.lang.String $r4;
        org.apache.http.HttpHost $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.apache.http.client.HttpClient;

        $r0 = staticinvoke <com.baidu.autoupdatesdk.obf.am: android.content.Context d(android.content.Context)>($r0);

        $r3 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        $z0 = staticinvoke <com.baidu.autoupdatesdk.obf.am: boolean c(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $i0 = staticinvoke <android.net.Proxy: int getDefaultPort()>();

        $r2 = new org.apache.http.HttpHost;

        specialinvoke $r2.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r4, $i0);

        interfaceinvoke $r3.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", $r2);

        return;

     label1:
        interfaceinvoke $r3.<org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>("http.route.default-proxy");

        return;
    }

    public static boolean a(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r0 = staticinvoke <com.baidu.autoupdatesdk.obf.am: android.content.Context d(android.content.Context)>($r0);

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label2;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static java.lang.String b()
    {
        java.lang.Throwable $r6;
        java.util.Enumeration $r0, $r3;
        java.net.NetworkInterface $r2;
        java.net.InetAddress $r4;
        java.net.SocketException $r7;
        java.lang.Object $r1;
        java.lang.String $r5;
        boolean $z0;

     label01:
        $r0 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

     label02:
        $z0 = interfaceinvoke $r0.<java.util.Enumeration: boolean hasMoreElements()>();

     label03:
        if $z0 == 0 goto label16;

     label04:
        $r1 = interfaceinvoke $r0.<java.util.Enumeration: java.lang.Object nextElement()>();

     label05:
        $r2 = (java.net.NetworkInterface) $r1;

     label06:
        $r3 = virtualinvoke $r2.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label07:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

     label08:
        if $z0 == 0 goto label02;

     label09:
        $r1 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

     label10:
        $r4 = (java.net.InetAddress) $r1;

     label11:
        $z0 = virtualinvoke $r4.<java.net.InetAddress: boolean isLoopbackAddress()>();

     label12:
        if $z0 != 0 goto label07;

     label13:
        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z0 = staticinvoke <org.apache.http.conn.util.InetAddressUtils: boolean isIPv4Address(java.lang.String)>($r5);

     label14:
        if $z0 == 0 goto label07;

        return $r5;

     label15:
        $r6 := @caughtexception;

        $r7 = (java.net.SocketException) $r6;

        virtualinvoke $r7.<java.net.SocketException: void printStackTrace()>();

     label16:
        return null;

        catch java.net.SocketException from label01 to label03 with label15;
        catch java.net.SocketException from label04 to label05 with label15;
        catch java.net.SocketException from label06 to label08 with label15;
        catch java.net.SocketException from label09 to label10 with label15;
        catch java.net.SocketException from label11 to label12 with label15;
        catch java.net.SocketException from label13 to label14 with label15;
    }

    public static boolean b(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean c(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        int $i0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        if $r2 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label4;

     label3:
        return 0;

     label4:
        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 0 goto label5;

        $r4 = staticinvoke <android.net.Proxy: java.lang.String getDefaultHost()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label5;

        $i0 = staticinvoke <android.net.Proxy: int getDefaultPort()>();

        if $i0 == -1 goto label5;

        return 1;

     label5:
        return 0;
    }

    private static android.content.Context d(android.content.Context)
    {
        android.content.Context $r0, $r2;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r1;

        $r0 := @parameter0: android.content.Context;

        if $r0 == null goto label1;

        $r1 = new java.lang.ref.WeakReference;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        <com.baidu.autoupdatesdk.obf.am: java.lang.ref.WeakReference a> = $r1;

        return $r0;

     label1:
        $r1 = <com.baidu.autoupdatesdk.obf.am: java.lang.ref.WeakReference a>;

        if $r1 == null goto label2;

        $r1 = <com.baidu.autoupdatesdk.obf.am: java.lang.ref.WeakReference a>;

        $r3 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r0 = (android.content.Context) $r3;

     label2:
        return $r0;
    }
}
