public class oauth.signpost.jetty.HttpRequestAdapter extends java.lang.Object implements oauth.signpost.http.HttpRequest
{
    private org.mortbay.jetty.client.HttpExchange request;
    private java.lang.String requestUrl;

    public void <init>(org.mortbay.jetty.client.HttpExchange)
    {
        org.mortbay.jetty.client.HttpExchange $r1;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 := @parameter0: org.mortbay.jetty.client.HttpExchange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request> = $r1;

        specialinvoke r0.<oauth.signpost.jetty.HttpRequestAdapter: void buildRequestUrl()>();

        return;
    }

    private void buildRequestUrl()
    {
        org.mortbay.io.Buffer $r4;
        org.mortbay.jetty.client.HttpExchange $r3;
        org.mortbay.jetty.client.Address $r6;
        java.lang.StringBuilder $r1, $r2;
        java.lang.String $r5;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.client.HttpExchange: org.mortbay.io.Buffer getScheme()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r6 = virtualinvoke $r3.<org.mortbay.jetty.client.HttpExchange: org.mortbay.jetty.client.Address getAddress()>();

        $r5 = virtualinvoke $r6.<org.mortbay.jetty.client.Address: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(":\\d+", "");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r5 = virtualinvoke $r3.<org.mortbay.jetty.client.HttpExchange: java.lang.String getURI()>();

        if $r5 == null goto label1;

        $r3 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r5 = virtualinvoke $r3.<org.mortbay.jetty.client.HttpExchange: java.lang.String getURI()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label1:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<oauth.signpost.jetty.HttpRequestAdapter: java.lang.String requestUrl> = $r5;

        return;
    }

    public java.util.Map getAllHeaders()
    {
        org.mortbay.jetty.HttpFields$Field $r6;
        org.mortbay.jetty.client.HttpExchange $r2;
        java.util.Iterator $r4;
        java.util.HashMap $r1;
        org.mortbay.jetty.HttpFields $r3;
        java.lang.Object $r5;
        java.lang.String $r7, $r8;
        oauth.signpost.jetty.HttpRequestAdapter r0;
        boolean $z0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r2 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.client.HttpExchange: org.mortbay.jetty.HttpFields getRequestFields()>();

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.HttpFields: java.util.Iterator getFields()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.mortbay.jetty.HttpFields$Field) $r5;

        $r7 = virtualinvoke $r6.<org.mortbay.jetty.HttpFields$Field: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<org.mortbay.jetty.HttpFields$Field: java.lang.String getValue()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        goto label1;

     label2:
        return $r1;
    }

    public java.lang.String getContentType()
    {
        org.mortbay.jetty.client.HttpExchange $r1;
        org.mortbay.jetty.HttpFields $r2;
        java.lang.String $r3;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.client.HttpExchange: org.mortbay.jetty.HttpFields getRequestFields()>();

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.HttpFields: java.lang.String getStringField(java.lang.String)>("Content-Type");

        return $r3;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.mortbay.jetty.client.HttpExchange $r2;
        org.mortbay.jetty.HttpFields $r3;
        java.lang.String $r1;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.client.HttpExchange: org.mortbay.jetty.HttpFields getRequestFields()>();

        $r1 = virtualinvoke $r3.<org.mortbay.jetty.HttpFields: java.lang.String getStringField(java.lang.String)>("Authorization");

        return $r1;
    }

    public java.io.InputStream getMessagePayload()
    {
        byte[] $r4;
        org.mortbay.io.Buffer $r3;
        java.io.ByteArrayInputStream $r1;
        org.mortbay.jetty.client.HttpExchange $r2;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r3 = virtualinvoke $r2.<org.mortbay.jetty.client.HttpExchange: org.mortbay.io.Buffer getRequestContent()>();

        $r4 = interfaceinvoke $r3.<org.mortbay.io.Buffer: byte[] array()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        return $r1;
    }

    public java.lang.String getMethod()
    {
        java.lang.String $r1;
        org.mortbay.jetty.client.HttpExchange $r2;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r2 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        $r1 = virtualinvoke $r2.<org.mortbay.jetty.client.HttpExchange: java.lang.String getMethod()>();

        return $r1;
    }

    public java.lang.String getRequestUrl()
    {
        java.lang.String r1;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        r1 = r0.<oauth.signpost.jetty.HttpRequestAdapter: java.lang.String requestUrl>;

        return r1;
    }

    public void setHeader(java.lang.String, java.lang.String)
    {
        org.mortbay.jetty.client.HttpExchange $r3;
        java.lang.String $r1, $r2;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        virtualinvoke $r3.<org.mortbay.jetty.client.HttpExchange: void setRequestHeader(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void setRequestUrl(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r3;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r2;
    }

    public java.lang.Object unwrap()
    {
        org.mortbay.jetty.client.HttpExchange r1;
        oauth.signpost.jetty.HttpRequestAdapter r0;

        r0 := @this: oauth.signpost.jetty.HttpRequestAdapter;

        r1 = r0.<oauth.signpost.jetty.HttpRequestAdapter: org.mortbay.jetty.client.HttpExchange request>;

        return r1;
    }
}
