public class hw.ats.common.model.Category extends hw.ats.common.model.BaseModel implements java.lang.Cloneable
{
    private static final java.lang.String TAG;
    public int entries;
    public java.lang.String icon_url;
    public int id;
    public int level;
    public java.lang.String name;
    public int parent_id;
    public int position;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lhw/ats/common/model/Category;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <hw.ats.common.model.Category: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>()
    {
        hw.ats.common.model.Category r0;

        r0 := @this: hw.ats.common.model.Category;

        specialinvoke r0.<hw.ats.common.model.BaseModel: void <init>()>();

        r0.<hw.ats.common.model.Category: int id> = 0;

        r0.<hw.ats.common.model.Category: int parent_id> = 0;

        r0.<hw.ats.common.model.Category: int level> = 0;

        r0.<hw.ats.common.model.Category: java.lang.String name> = null;

        r0.<hw.ats.common.model.Category: java.lang.String icon_url> = null;

        r0.<hw.ats.common.model.Category: int position> = 0;

        r0.<hw.ats.common.model.Category: int entries> = 0;

        return;
    }

    private hw.ats.common.model.Category bind(android.database.Cursor)
    {
        hw.ats.common.model.Category r0;
        int $i0;
        java.lang.String $r2;
        android.database.Cursor $r1;

        r0 := @this: hw.ats.common.model.Category;

        $r1 := @parameter0: android.database.Cursor;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("id");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Category: int id> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("parent_id");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Category: int parent_id> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("level");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Category: int level> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Category: java.lang.String name> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("icon_url");

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        r0.<hw.ats.common.model.Category: java.lang.String icon_url> = $r2;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("position");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Category: int position> = $i0;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("entries");

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>($i0);

        r0.<hw.ats.common.model.Category: int entries> = $i0;

        return r0;
    }

    public static void deleteAll(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r4;
        android.database.sqlite.SQLiteDatabase $r0;
        java.lang.String $r1, $r3;
        java.lang.Exception $r2;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label1:
        virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("categories", null, null);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        $r3 = <hw.ats.common.model.Category: java.lang.String TAG>;

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, $r1, $r2);

     label5:
        return;

     label6:
        $r4 := @caughtexception;

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static java.util.List list(android.database.sqlite.SQLiteDatabase, int)
    {
        int $i0;
        android.database.sqlite.SQLiteDatabase $r0;
        java.util.List $r1;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <hw.ats.common.model.Category: java.util.List list(android.database.sqlite.SQLiteDatabase,int,int)>($r0, 1, 0);

        return $r1;
    }

    public static java.util.List list(android.database.sqlite.SQLiteDatabase, int, int)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category r1;
        java.lang.Exception $r7, $r9, $r10;
        java.util.ArrayList r2;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String r4;
        android.database.Cursor r3, $r6;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<java.util.ArrayList: void <init>()>();

        r3 = null;

        r4 = "";

        if $i0 <= 0 goto label11;

        if $i1 <= 0 goto label08;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" level = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND parent_id = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT id, parent_id, level, name, icon_url, position, (SELECT COUNT(*) FROM entries WHERE category_id = c.id) entries FROM categories c WHERE ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY position");

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r4, null);

     label03:
        r3 = $r6;

     label04:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 != 0 goto label14;

     label06:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label07:
        return r2;

     label08:
        if $i0 <= 0 goto label11;

     label09:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" level = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        goto label02;

     label11:
        if $i1 <= 0 goto label02;

     label12:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parent_id = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        goto label02;

     label14:
        r1 = new hw.ats.common.model.Category;

        specialinvoke r1.<hw.ats.common.model.Category: void <init>()>();

        specialinvoke r1.<hw.ats.common.model.Category: hw.ats.common.model.Category bind(android.database.Cursor)>($r6);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label15:
        if $z0 != 0 goto label14;

     label16:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label17:
        return r2;

     label18:
        $r7 := @caughtexception;

        return r2;

     label19:
        $r8 := @caughtexception;

     label20:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label21:
        throw $r8;

     label22:
        $r9 := @caughtexception;

        return r2;

     label23:
        $r10 := @caughtexception;

        goto label21;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label20 to label21 with label23;
    }

    public static hw.ats.common.model.Category load(android.database.sqlite.SQLiteDatabase, int)
    {
        java.lang.Throwable $r7;
        hw.ats.common.model.Category $r5;
        java.lang.Exception $r6, $r8, $r9;
        android.database.sqlite.SQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.database.Cursor r1, $r4;
        boolean $z0;

        $r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        r1 = null;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT * FROM categories WHERE id = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, null);

     label02:
        r1 = $r4;

     label03:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label06:
        return null;

     label07:
        $r5 = new hw.ats.common.model.Category;

        specialinvoke $r5.<hw.ats.common.model.Category: void <init>()>();

        $r5 = specialinvoke $r5.<hw.ats.common.model.Category: hw.ats.common.model.Category bind(android.database.Cursor)>($r4);

     label08:
        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label09:
        return $r5;

     label10:
        $r6 := @caughtexception;

        return $r5;

     label11:
        $r7 := @caughtexception;

     label12:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label13:
        throw $r7;

     label14:
        $r8 := @caughtexception;

        goto label06;

     label15:
        $r9 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public hw.ats.common.model.Category clone() throws java.lang.CloneNotSupportedException
    {
        hw.ats.common.model.Category r1;
        java.lang.Object $r0;

        r1 := @this: hw.ats.common.model.Category;

        $r0 = specialinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r1 = (hw.ats.common.model.Category) $r0;

        return r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        hw.ats.common.model.Category r0;

        r0 := @this: hw.ats.common.model.Category;

        r0 = virtualinvoke r0.<hw.ats.common.model.Category: hw.ats.common.model.Category clone()>();

        return r0;
    }

    public boolean exist(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r8;
        hw.ats.common.model.Category r0;
        java.lang.String[] $r3;
        java.lang.Exception $r7, $r9, $r10;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        android.database.Cursor r2, $r6;
        boolean $z0;

        r0 := @this: hw.ats.common.model.Category;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = null;

     label01:
        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Category: int id>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT COUNT(*) FROM categories WHERE id=?", $r3);

     label02:
        r2 = $r6;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label06:
        return 0;

     label07:
        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>(0);

     label08:
        if $i0 <= 0 goto label12;

        $z0 = 1;

     label09:
        interfaceinvoke $r6.<android.database.Cursor: void close()>();

     label10:
        return $z0;

     label11:
        $r7 := @caughtexception;

        return $z0;

     label12:
        $z0 = 0;

        goto label09;

     label13:
        $r8 := @caughtexception;

     label14:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label15:
        throw $r8;

     label16:
        $r9 := @caughtexception;

        goto label06;

     label17:
        $r10 := @caughtexception;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label14 to label15 with label17;
    }

    public void insert(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r6;
        hw.ats.common.model.Category r0;
        java.lang.Integer $r3;
        java.lang.Exception $r5;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        android.content.ContentValues r2;
        java.lang.String $r4;

        r0 := @this: hw.ats.common.model.Category;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label1:
        r2 = new android.content.ContentValues;

     label2:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Category: int id>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("id", $r3);

        $i0 = r0.<hw.ats.common.model.Category: int parent_id>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("parent_id", $r3);

        $i0 = r0.<hw.ats.common.model.Category: int level>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("level", $r3);

        $r4 = r0.<hw.ats.common.model.Category: java.lang.String name>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r4);

        $r4 = r0.<hw.ats.common.model.Category: java.lang.String icon_url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("icon_url", $r4);

        $i0 = r0.<hw.ats.common.model.Category: int position>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("position", $r3);

        $i0 = r0.<hw.ats.common.model.Category: int entries>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("entries", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("categories", null, r2);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

     label5:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        throw $r6;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public java.lang.String toString()
    {
        hw.ats.common.model.Category r0;
        int $i0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3;

        r0 := @this: hw.ats.common.model.Category;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $i0 = r0.<hw.ats.common.model.Category: int id>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parent_id=");

        $i0 = r0.<hw.ats.common.model.Category: int parent_id>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("level=");

        $i0 = r0.<hw.ats.common.model.Category: int level>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name=");

        $r3 = r0.<hw.ats.common.model.Category: java.lang.String name>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("icon_url=");

        $r3 = r0.<hw.ats.common.model.Category: java.lang.String icon_url>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position=");

        $i0 = r0.<hw.ats.common.model.Category: int position>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entries=");

        $i0 = r0.<hw.ats.common.model.Category: int entries>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void update(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r7;
        hw.ats.common.model.Category r0;
        java.lang.Integer $r3;
        java.lang.Exception $r6;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.StringBuilder $r5;
        android.content.ContentValues r2;
        java.lang.String $r4;

        r0 := @this: hw.ats.common.model.Category;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

     label1:
        r2 = new android.content.ContentValues;

     label2:
        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        $i0 = r0.<hw.ats.common.model.Category: int parent_id>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("parent_id", $r3);

        $i0 = r0.<hw.ats.common.model.Category: int level>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("level", $r3);

        $r4 = r0.<hw.ats.common.model.Category: java.lang.String name>;

        $r4 = staticinvoke <hw.ats.common.util.DBUtil: java.lang.String replaceTag(java.lang.String)>($r4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r4);

        $r4 = r0.<hw.ats.common.model.Category: java.lang.String icon_url>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("icon_url", $r4);

        $i0 = r0.<hw.ats.common.model.Category: int position>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("position", $r3);

        $i0 = r0.<hw.ats.common.model.Category: int entries>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("entries", $r3);

     label3:
        $r5 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $i0 = r0.<hw.ats.common.model.Category: int id>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("categories", r2, $r4, null);

     label5:
        return;

     label6:
        $r6 := @caughtexception;

     label7:
        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label8:
        return;

     label9:
        $r7 := @caughtexception;

        throw $r7;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
        catch java.lang.Throwable from label1 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
}
