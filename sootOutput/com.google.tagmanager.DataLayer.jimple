public class com.google.tagmanager.DataLayer extends java.lang.Object
{
    static final int MAX_QUEUE_DEPTH;
    public static final java.lang.Object OBJECT_NOT_PRESENT;
    private final java.util.concurrent.ConcurrentHashMap mListeners;
    private final java.util.Map mModel;
    private final java.util.concurrent.locks.ReentrantLock mPushLock;
    private final java.util.LinkedList mUpdateQueue;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.google.tagmanager.DataLayer: int MAX_QUEUE_DEPTH> = 500;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.google.tagmanager.DataLayer: java.lang.Object OBJECT_NOT_PRESENT> = $r0;

        return;
    }

    void <init>()
    {
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.concurrent.ConcurrentHashMap $r1;
        java.util.HashMap $r2;
        java.util.LinkedList $r4;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<com.google.tagmanager.DataLayer: java.util.concurrent.ConcurrentHashMap mListeners> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.google.tagmanager.DataLayer: java.util.Map mModel> = $r2;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.tagmanager.DataLayer: java.util.concurrent.locks.ReentrantLock mPushLock> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.google.tagmanager.DataLayer: java.util.LinkedList mUpdateQueue> = $r4;

        return;
    }

    public static transient java.util.List listOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r2 = $r0[$i0];

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static transient java.util.Map mapOf(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.util.HashMap $r2;
        java.lang.Object $r3, $r4;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r0;

        $i0 = $i0 % 2;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("expected even number of key-value pairs");

        throw $r1;

     label1:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $r3 = $r0[$i0];

        $i1 = $i0 + 1;

        $r4 = $r0[$i1];

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $i0 = $i0 + 2;

        goto label2;

     label3:
        return $r2;
    }

    private void notifyListeners(java.util.Map)
    {
        com.google.tagmanager.DataLayer$Listener $r6;
        java.util.Iterator $r4;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.util.Set $r3;
        com.google.tagmanager.DataLayer r0;
        java.util.Map $r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.ConcurrentHashMap mListeners>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.google.tagmanager.DataLayer$Listener) $r5;

        interfaceinvoke $r6.<com.google.tagmanager.DataLayer$Listener: void changed(java.util.Map)>($r1);

        goto label1;

     label2:
        return;
    }

    private void processQueuedUpdates()
    {
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r1;
        java.lang.RuntimeException $r4;
        java.util.LinkedList $r2;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $i0 = 0;

     label1:
        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.LinkedList mUpdateQueue>;

        $r1 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object poll()>();

        $r3 = (java.util.Map) $r1;

        if $r3 == null goto label3;

        specialinvoke r0.<com.google.tagmanager.DataLayer: void processUpdate(java.util.Map)>($r3);

        $i0 = $i0 + 1;

        if $i0 <= 500 goto label2;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.LinkedList mUpdateQueue>;

        virtualinvoke $r2.<java.util.LinkedList: void clear()>();

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Seems like an infinite loop of pushing to the data layer");

        throw $r4;

     label2:
        goto label1;

     label3:
        return;
    }

    private void processUpdate(java.util.Map)
    {
        java.lang.Throwable $r9;
        java.util.Iterator $r4;
        java.util.Set $r3;
        com.google.tagmanager.DataLayer r0;
        java.util.Map $r1, $r2, $r7, $r8;
        java.lang.Object $r5, $r6;
        boolean $z0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.Map mModel>;

        entermonitor $r2;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = virtualinvoke r0.<com.google.tagmanager.DataLayer: java.util.Map expandKeyValue(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = r0.<com.google.tagmanager.DataLayer: java.util.Map mModel>;

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void mergeMap(java.util.Map,java.util.Map)>($r7, $r8);

        goto label2;

     label3:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r9;

     label5:
        exitmonitor $r2;

     label6:
        specialinvoke r0.<com.google.tagmanager.DataLayer: void notifyListeners(java.util.Map)>($r1);

        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    java.util.Map expandKeyValue(java.lang.Object, java.lang.Object)
    {
        java.util.HashMap $r3, $r6, $r7, $r8;
        java.lang.String[] $r5;
        com.google.tagmanager.DataLayer r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r2;
        java.lang.String $r4;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r6 = new java.util.HashMap;

        $r3 = $r6;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = 0;

        $r6 = $r3;

     label1:
        $i1 = lengthof $r5;

        $i2 = -1;

        $i1 = $i1 + $i2;

        if $i0 >= $i1 goto label2;

        $r8 = new java.util.HashMap;

        $r7 = $r8;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r4 = $r5[$i0];

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r7);

        $i0 = $i0 + 1;

        $r6 = $r7;

        goto label1;

     label2:
        $i0 = lengthof $r5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r4 = $r5[$i0];

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r2);

        return $r3;
    }

    public java.lang.Object get(java.lang.String)
    {
        java.lang.Throwable $r6;
        java.lang.String[] $r4;
        com.google.tagmanager.DataLayer r0;
        java.util.Map $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.Map mModel>;

        entermonitor $r2;

     label01:
        $r3 = r0.<com.google.tagmanager.DataLayer: java.util.Map mModel>;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r4;

        $r5 = $r3;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label07;

        $r1 = $r4[$i1];

        $z0 = $r5 instanceof java.util.Map;

        if $z0 != 0 goto label04;

        exitmonitor $r2;

     label03:
        return null;

     label04:
        $r3 = (java.util.Map) $r5;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r5 != null goto label06;

        exitmonitor $r2;

     label05:
        return null;

     label06:
        $i1 = $i1 + 1;

        goto label02;

     label07:
        exitmonitor $r2;

     label08:
        return $r5;

     label09:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label10:
        throw $r6;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void mergeList(java.util.List, java.util.List)
    {
        java.util.HashMap $r8;
        com.google.tagmanager.DataLayer r0;
        java.util.ArrayList $r5;
        java.util.List $r1, $r2, $r6, $r7;
        java.util.Map $r9, $r10;
        int $i0, $i1;
        java.lang.Object $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.util.List;

     label1:
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label1;

     label2:
        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label9;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r3 instanceof java.util.List;

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r4 instanceof java.util.List;

        if $z0 != 0 goto label4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r5);

     label4:
        $r6 = (java.util.List) $r3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r7 = (java.util.List) $r3;

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void mergeList(java.util.List,java.util.List)>($r6, $r7);

     label5:
        $i0 = $i0 + 1;

        goto label3;

     label6:
        $z0 = $r3 instanceof java.util.Map;

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r4 instanceof java.util.Map;

        if $z0 != 0 goto label7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r8);

     label7:
        $r9 = (java.util.Map) $r3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r10 = (java.util.Map) $r3;

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void mergeMap(java.util.Map,java.util.Map)>($r9, $r10);

        goto label5;

     label8:
        $r4 = <com.google.tagmanager.DataLayer: java.lang.Object OBJECT_NOT_PRESENT>;

        if $r3 == $r4 goto label5;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r3);

        goto label5;

     label9:
        return;
    }

    void mergeMap(java.util.Map, java.util.Map)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap $r11;
        com.google.tagmanager.DataLayer r0;
        java.util.ArrayList $r8;
        java.util.List $r9, $r10;
        java.util.Map $r1, $r2, $r12, $r13;
        java.lang.Object $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.util.Map;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z0 = $r6 instanceof java.util.List;

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z0 = $r7 instanceof java.util.List;

        if $z0 != 0 goto label2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r8);

     label2:
        $r9 = (java.util.List) $r6;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (java.util.List) $r5;

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void mergeList(java.util.List,java.util.List)>($r9, $r10);

        goto label1;

     label3:
        $z0 = $r6 instanceof java.util.Map;

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z0 = $r7 instanceof java.util.Map;

        if $z0 != 0 goto label4;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r11);

     label4:
        $r12 = (java.util.Map) $r6;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r13 = (java.util.Map) $r5;

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void mergeMap(java.util.Map,java.util.Map)>($r12, $r13);

        goto label1;

     label5:
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label1;

     label6:
        return;
    }

    public void push(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object $r1, $r2;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.tagmanager.DataLayer: java.util.Map expandKeyValue(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke r0.<com.google.tagmanager.DataLayer: void push(java.util.Map)>($r3);

        return;
    }

    public void push(java.util.Map)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.util.Map $r1;
        int $i0;
        java.util.LinkedList $r3;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.locks.ReentrantLock mPushLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<com.google.tagmanager.DataLayer: java.util.LinkedList mUpdateQueue>;

        virtualinvoke $r3.<java.util.LinkedList: boolean offer(java.lang.Object)>($r1);

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.locks.ReentrantLock mPushLock>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: int getHoldCount()>();

     label2:
        if $i0 != 1 goto label4;

     label3:
        specialinvoke r0.<com.google.tagmanager.DataLayer: void processQueuedUpdates()>();

     label4:
        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.locks.ReentrantLock mPushLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label5:
        $r4 := @caughtexception;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.locks.ReentrantLock mPushLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void registerListener(com.google.tagmanager.DataLayer$Listener)
    {
        com.google.tagmanager.DataLayer$Listener $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.Integer $r3;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: com.google.tagmanager.DataLayer$Listener;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.ConcurrentHashMap mListeners>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        return;
    }

    void unregisterListener(com.google.tagmanager.DataLayer$Listener)
    {
        com.google.tagmanager.DataLayer$Listener $r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        com.google.tagmanager.DataLayer r0;

        r0 := @this: com.google.tagmanager.DataLayer;

        $r1 := @parameter0: com.google.tagmanager.DataLayer$Listener;

        $r2 = r0.<com.google.tagmanager.DataLayer: java.util.concurrent.ConcurrentHashMap mListeners>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }
}
