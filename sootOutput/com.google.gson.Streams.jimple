final class com.google.gson.Streams extends java.lang.Object
{

    void <init>()
    {
        com.google.gson.Streams r0;

        r0 := @this: com.google.gson.Streams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) throws com.google.gson.JsonParseException
    {
        java.lang.Throwable r2, r7, r8;
        com.google.gson.JsonSyntaxException $r6;
        com.google.gson.stream.JsonReader $r0;
        com.google.gson.JsonElement $r1;
        com.google.gson.stream.MalformedJsonException r5;
        com.google.gson.JsonNull $r3;
        com.google.gson.JsonIOException $r4;
        boolean z0;

        $r0 := @parameter0: com.google.gson.stream.JsonReader;

        z0 = 1;

     label1:
        virtualinvoke $r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

     label2:
        z0 = 0;

     label3:
        $r1 = staticinvoke <com.google.gson.Streams: com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader)>($r0);

     label4:
        return $r1;

     label5:
        r2 := @caughtexception;

        if z0 == 0 goto label6;

        $r3 = staticinvoke <com.google.gson.JsonNull: com.google.gson.JsonNull createJsonNull()>();

        return $r3;

     label6:
        $r4 = new com.google.gson.JsonIOException;

        specialinvoke $r4.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>(r2);

        throw $r4;

     label7:
        r5 := @caughtexception;

        $r6 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r5);

        throw $r6;

     label8:
        r7 := @caughtexception;

        $r4 = new com.google.gson.JsonIOException;

        specialinvoke $r4.<com.google.gson.JsonIOException: void <init>(java.lang.Throwable)>(r7);

        throw $r4;

     label9:
        r8 := @caughtexception;

        $r6 = new com.google.gson.JsonSyntaxException;

        specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.Throwable)>(r8);

        throw $r6;

        catch java.io.EOFException from label1 to label2 with label5;
        catch java.io.EOFException from label3 to label4 with label5;
        catch com.google.gson.stream.MalformedJsonException from label1 to label2 with label7;
        catch com.google.gson.stream.MalformedJsonException from label3 to label4 with label7;
        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.lang.NumberFormatException from label1 to label2 with label9;
        catch java.lang.NumberFormatException from label3 to label4 with label9;
    }

    private static com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader) throws java.io.IOException
    {
        com.google.gson.JsonObject r1;
        java.lang.IllegalArgumentException $r4;
        com.google.gson.stream.JsonReader $r0;
        com.google.gson.JsonElement $r11;
        com.google.gson.stream.JsonToken $r3;
        com.google.gson.JsonArray r10;
        int[] $r2;
        com.google.gson.JsonNull $r9;
        int $i0;
        java.lang.Boolean $r8;
        com.google.gson.JsonPrimitive r5;
        java.lang.String $r6;
        java.lang.Number $r7;
        boolean $z0;

        $r0 := @parameter0: com.google.gson.stream.JsonReader;

        $r2 = <com.google.gson.Streams$1: int[] $SwitchMap$com$google$gson$stream$JsonToken>;

        $r3 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>();

        $i0 = virtualinvoke $r3.<com.google.gson.stream.JsonToken: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label09;
            default: goto label01;
        };

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label02:
        r5 = new com.google.gson.JsonPrimitive;

        $r6 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();

        specialinvoke r5.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r6);

        return r5;

     label03:
        $r6 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();

        r5 = new com.google.gson.JsonPrimitive;

        $r7 = staticinvoke <com.google.gson.JsonPrimitive: java.lang.Number stringToNumber(java.lang.String)>($r6);

        specialinvoke r5.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r7);

        return r5;

     label04:
        r5 = new com.google.gson.JsonPrimitive;

        $z0 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: boolean nextBoolean()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        specialinvoke r5.<com.google.gson.JsonPrimitive: void <init>(java.lang.Boolean)>($r8);

        return r5;

     label05:
        virtualinvoke $r0.<com.google.gson.stream.JsonReader: void nextNull()>();

        $r9 = staticinvoke <com.google.gson.JsonNull: com.google.gson.JsonNull createJsonNull()>();

        return $r9;

     label06:
        r10 = new com.google.gson.JsonArray;

        specialinvoke r10.<com.google.gson.JsonArray: void <init>()>();

        virtualinvoke $r0.<com.google.gson.stream.JsonReader: void beginArray()>();

     label07:
        $z0 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r11 = staticinvoke <com.google.gson.Streams: com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader)>($r0);

        virtualinvoke r10.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r11);

        goto label07;

     label08:
        virtualinvoke $r0.<com.google.gson.stream.JsonReader: void endArray()>();

        return r10;

     label09:
        r1 = new com.google.gson.JsonObject;

        specialinvoke r1.<com.google.gson.JsonObject: void <init>()>();

        virtualinvoke $r0.<com.google.gson.stream.JsonReader: void beginObject()>();

     label10:
        $z0 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r6 = virtualinvoke $r0.<com.google.gson.stream.JsonReader: java.lang.String nextName()>();

        $r11 = staticinvoke <com.google.gson.Streams: com.google.gson.JsonElement parseRecursive(com.google.gson.stream.JsonReader)>($r0);

        virtualinvoke r1.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>($r6, $r11);

        goto label10;

     label11:
        virtualinvoke $r0.<com.google.gson.stream.JsonReader: void endObject()>();

        return r1;
    }

    static void write(com.google.gson.JsonElement, boolean, com.google.gson.stream.JsonWriter) throws java.io.IOException
    {
        com.google.gson.JsonObject $r8;
        com.google.gson.JsonElement $r0;
        com.google.gson.JsonPrimitive $r2;
        java.lang.String $r4;
        java.lang.Number $r3;
        com.google.gson.stream.JsonWriter $r1;
        boolean $z0, $z1;
        java.util.Map$Entry r10;
        java.util.Iterator $r6;
        java.util.Set $r9;
        java.lang.IllegalArgumentException $r11;
        com.google.gson.JsonArray $r5;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12;
        java.lang.Class $r13;

        $r0 := @parameter0: com.google.gson.JsonElement;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: com.google.gson.stream.JsonWriter;

        if $r0 == null goto label01;

        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z1 == 0 goto label02;

     label01:
        if $z0 == 0 goto label14;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        return;

     label02:
        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonPrimitive()>();

        if $z1 == 0 goto label05;

        $r2 = virtualinvoke $r0.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>();

        $z0 = virtualinvoke $r2.<com.google.gson.JsonPrimitive: boolean isNumber()>();

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke $r2.<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>();

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>($r3);

        return;

     label03:
        $z0 = virtualinvoke $r2.<com.google.gson.JsonPrimitive: boolean isBoolean()>();

        if $z0 == 0 goto label04;

        $z0 = virtualinvoke $r2.<com.google.gson.JsonPrimitive: boolean getAsBoolean()>();

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)>($z0);

        return;

     label04:
        $r4 = virtualinvoke $r2.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>();

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r4);

        return;

     label05:
        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonArray()>();

        if $z1 == 0 goto label09;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()>();

        $r5 = virtualinvoke $r0.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        $r6 = virtualinvoke $r5.<com.google.gson.JsonArray: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (com.google.gson.JsonElement) $r7;

        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z1 == 0 goto label07;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>();

        goto label06;

     label07:
        staticinvoke <com.google.gson.Streams: void write(com.google.gson.JsonElement,boolean,com.google.gson.stream.JsonWriter)>($r0, $z0, $r1);

        goto label06;

     label08:
        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()>();

        return;

     label09:
        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonObject()>();

        if $z1 == 0 goto label13;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()>();

        $r8 = virtualinvoke $r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r9 = virtualinvoke $r8.<com.google.gson.JsonObject: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r0 = (com.google.gson.JsonElement) $r7;

        if $z0 != 0 goto label11;

        $z1 = virtualinvoke $r0.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z1 != 0 goto label10;

     label11:
        $r7 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r7;

        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>($r4);

        staticinvoke <com.google.gson.Streams: void write(com.google.gson.JsonElement,boolean,com.google.gson.stream.JsonWriter)>($r0, $z0, $r1);

        goto label10;

     label12:
        virtualinvoke $r1.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()>();

        return;

     label13:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t write ");

        $r13 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r11;

     label14:
        return;
    }

    static java.io.Writer writerForAppendable(java.lang.Appendable)
    {
        java.lang.Appendable r0;
        java.io.Writer r1;
        com.google.gson.Streams$AppendableWriter $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.Appendable;

        $z0 = r0 instanceof java.io.Writer;

        if $z0 == 0 goto label1;

        r1 = (java.io.Writer) r0;

        return r1;

     label1:
        $r2 = new com.google.gson.Streams$AppendableWriter;

        specialinvoke $r2.<com.google.gson.Streams$AppendableWriter: void <init>(java.lang.Appendable,com.google.gson.Streams$1)>(r0, null);

        return $r2;
    }
}
