public class proguard.classfile.util.ClassSubHierarchyInitializer extends java.lang.Object implements proguard.classfile.visitor.ClassVisitor
{

    public void <init>()
    {
        proguard.classfile.util.ClassSubHierarchyInitializer r0;

        r0 := @this: proguard.classfile.util.ClassSubHierarchyInitializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void addSubclass(proguard.classfile.Clazz, proguard.classfile.Clazz)
    {
        proguard.classfile.Clazz $r1, $r2;
        proguard.classfile.util.ClassSubHierarchyInitializer r0;

        r0 := @this: proguard.classfile.util.ClassSubHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Clazz;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<proguard.classfile.Clazz: void addSubClass(proguard.classfile.Clazz)>($r1);

     label1:
        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.Clazz[] $r3;
        proguard.classfile.Clazz $r2;
        int $i0, $i1;
        proguard.classfile.util.ClassSubHierarchyInitializer r0;

        r0 := @this: proguard.classfile.util.ClassSubHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 = $r1.<proguard.classfile.LibraryClass: proguard.classfile.Clazz superClass>;

        specialinvoke r0.<proguard.classfile.util.ClassSubHierarchyInitializer: void addSubclass(proguard.classfile.Clazz,proguard.classfile.Clazz)>($r1, $r2);

        $r3 = $r1.<proguard.classfile.LibraryClass: proguard.classfile.Clazz[] interfaceClasses>;

        if $r3 == null goto label2;

        $i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $r2 = $r3[$i0];

        specialinvoke r0.<proguard.classfile.util.ClassSubHierarchyInitializer: void addSubclass(proguard.classfile.Clazz,proguard.classfile.Clazz)>($r1, $r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.Clazz $r2;
        int $i0, $i1;
        proguard.classfile.util.ClassSubHierarchyInitializer r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.util.ClassSubHierarchyInitializer;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = virtualinvoke $r1.<proguard.classfile.ProgramClass: proguard.classfile.Clazz getSuperClass()>();

        specialinvoke r0.<proguard.classfile.util.ClassSubHierarchyInitializer: void addSubclass(proguard.classfile.Clazz,proguard.classfile.Clazz)>($r1, $r2);

        $i0 = 0;

     label1:
        $i1 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        if $i0 >= $i1 goto label2;

        $r2 = virtualinvoke $r1.<proguard.classfile.ProgramClass: proguard.classfile.Clazz getInterface(int)>($i0);

        specialinvoke r0.<proguard.classfile.util.ClassSubHierarchyInitializer: void addSubclass(proguard.classfile.Clazz,proguard.classfile.Clazz)>($r1, $r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
