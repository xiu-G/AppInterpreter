public final enum class com.apperhand.common.dto.CommandStatus$Status extends java.lang.Enum
{
    private static final com.apperhand.common.dto.CommandStatus$Status[] $VALUES;
    public static final enum com.apperhand.common.dto.CommandStatus$Status EXCEPTION;
    public static final enum com.apperhand.common.dto.CommandStatus$Status FAILURE;
    public static final enum com.apperhand.common.dto.CommandStatus$Status LOG_DUMP;
    public static final enum com.apperhand.common.dto.CommandStatus$Status OPT_OUT;
    public static final enum com.apperhand.common.dto.CommandStatus$Status SUCCESS;
    public static final enum com.apperhand.common.dto.CommandStatus$Status SUCCESS_WITH_WARNING;
    public static final enum com.apperhand.common.dto.CommandStatus$Status WAITING_FOR_LOG_DUMP;

    static void <clinit>()
    {
        com.apperhand.common.dto.CommandStatus$Status[] $r1;
        com.apperhand.common.dto.CommandStatus$Status $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("SUCCESS", 0);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status SUCCESS> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("FAILURE", 1);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status FAILURE> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("EXCEPTION", 2);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status EXCEPTION> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("SUCCESS_WITH_WARNING", 3);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status SUCCESS_WITH_WARNING> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("WAITING_FOR_LOG_DUMP", 4);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status WAITING_FOR_LOG_DUMP> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("LOG_DUMP", 5);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status LOG_DUMP> = $r0;

        $r0 = new com.apperhand.common.dto.CommandStatus$Status;

        specialinvoke $r0.<com.apperhand.common.dto.CommandStatus$Status: void <init>(java.lang.String,int)>("OPT_OUT", 6);

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status OPT_OUT> = $r0;

        $r1 = newarray (com.apperhand.common.dto.CommandStatus$Status)[7];

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status SUCCESS>;

        $r1[0] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status FAILURE>;

        $r1[1] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status EXCEPTION>;

        $r1[2] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status SUCCESS_WITH_WARNING>;

        $r1[3] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status WAITING_FOR_LOG_DUMP>;

        $r1[4] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status LOG_DUMP>;

        $r1[5] = $r0;

        $r0 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status OPT_OUT>;

        $r1[6] = $r0;

        <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        com.apperhand.common.dto.CommandStatus$Status r0;

        r0 := @this: com.apperhand.common.dto.CommandStatus$Status;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.apperhand.common.dto.CommandStatus$Status valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.apperhand.common.dto.CommandStatus$Status $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/apperhand/common/dto/CommandStatus$Status;", $r0);

        $r2 = (com.apperhand.common.dto.CommandStatus$Status) $r1;

        return $r2;
    }

    public static com.apperhand.common.dto.CommandStatus$Status[] values()
    {
        java.lang.Object $r0;
        com.apperhand.common.dto.CommandStatus$Status[] $r1;

        $r1 = <com.apperhand.common.dto.CommandStatus$Status: com.apperhand.common.dto.CommandStatus$Status[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.apperhand.common.dto.CommandStatus$Status[]) $r0;

        return $r1;
    }
}
