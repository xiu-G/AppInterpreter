public class com.admogo.AsyncImageBitmapLoader extends java.lang.Object
{
    private java.util.concurrent.ExecutorService executorService;
    private final android.os.Handler handler;
    public java.util.Map imageCacheBitmap;

    public void <init>()
    {
        android.os.Handler $r3;
        com.admogo.AsyncImageBitmapLoader r0;
        java.util.HashMap $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.admogo.AsyncImageBitmapLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.admogo.AsyncImageBitmapLoader: java.util.Map imageCacheBitmap> = $r2;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(5);

        r0.<com.admogo.AsyncImageBitmapLoader: java.util.concurrent.ExecutorService executorService> = $r1;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.admogo.AsyncImageBitmapLoader: android.os.Handler handler> = $r3;

        return;
    }

    static android.os.Handler access$0(com.admogo.AsyncImageBitmapLoader)
    {
        com.admogo.AsyncImageBitmapLoader $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.admogo.AsyncImageBitmapLoader;

        r1 = $r0.<com.admogo.AsyncImageBitmapLoader: android.os.Handler handler>;

        return r1;
    }

    public android.graphics.Bitmap loadBitmap(java.lang.String, com.admogo.AsyncImageBitmapLoader$ImageBitmapCallback)
    {
        com.admogo.AsyncImageBitmapLoader r0;
        com.admogo.AsyncImageBitmapLoader$1 $r3;
        android.graphics.Bitmap $r7;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String $r1;
        java.lang.ref.SoftReference r6;
        com.admogo.AsyncImageBitmapLoader$ImageBitmapCallback $r2;
        java.util.concurrent.ExecutorService $r8;
        boolean $z0;

        r0 := @this: com.admogo.AsyncImageBitmapLoader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.admogo.AsyncImageBitmapLoader$ImageBitmapCallback;

        $r4 = r0.<com.admogo.AsyncImageBitmapLoader: java.util.Map imageCacheBitmap>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.admogo.AsyncImageBitmapLoader: java.util.Map imageCacheBitmap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (java.lang.ref.SoftReference) $r5;

        $r5 = virtualinvoke r6.<java.lang.ref.SoftReference: java.lang.Object get()>();

        if $r5 == null goto label2;

        $r5 = virtualinvoke r6.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r7 = (android.graphics.Bitmap) $r5;

        return $r7;

     label1:
        $r4 = r0.<com.admogo.AsyncImageBitmapLoader: java.util.Map imageCacheBitmap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        $r8 = r0.<com.admogo.AsyncImageBitmapLoader: java.util.concurrent.ExecutorService executorService>;

        $r3 = new com.admogo.AsyncImageBitmapLoader$1;

        specialinvoke $r3.<com.admogo.AsyncImageBitmapLoader$1: void <init>(com.admogo.AsyncImageBitmapLoader,java.lang.String,com.admogo.AsyncImageBitmapLoader$ImageBitmapCallback)>(r0, $r1, $r2);

        interfaceinvoke $r8.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        return null;
    }

    protected android.graphics.Bitmap loadImageBitmapFromUrl(java.lang.String)
    {
        java.net.HttpURLConnection r5;
        java.io.BufferedInputStream r7;
        java.net.URL r3;
        com.admogo.AsyncImageBitmapLoader r0;
        java.lang.RuntimeException $r10;
        java.lang.Exception r2;
        java.net.URLConnection $r4;
        android.graphics.Bitmap $r9;
        com.admogo.AsyncImageBitmapLoader$FlushedInputStream $r8;
        java.lang.String $r1;
        java.io.InputStream $r6;

        r0 := @this: com.admogo.AsyncImageBitmapLoader;

        $r1 := @parameter0: java.lang.String;

        r3 = new java.net.URL;

     label1:
        specialinvoke r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        r5 = (java.net.HttpURLConnection) $r4;

        virtualinvoke r5.<java.net.HttpURLConnection: void connect()>();

        $r6 = virtualinvoke r5.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        r7 = new java.io.BufferedInputStream;

     label3:
        specialinvoke r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

     label4:
        $r8 = new com.admogo.AsyncImageBitmapLoader$FlushedInputStream;

     label5:
        specialinvoke $r8.<com.admogo.AsyncImageBitmapLoader$FlushedInputStream: void <init>(com.admogo.AsyncImageBitmapLoader,java.io.InputStream)>(r0, r7);

        $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r8);

        virtualinvoke r7.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r6.<java.io.InputStream: void close()>();

        virtualinvoke r5.<java.net.HttpURLConnection: void disconnect()>();

     label6:
        return $r9;

     label7:
        r2 := @caughtexception;

        $r1 = <com.admogo.util.AdMogoUtil: java.lang.String ADMOGO>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "AsyncImageBitmapLoader loader bitmap err", r2);

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
