public class com.inmobi.androidsdk.ai.controller.JSDisplayController extends com.inmobi.androidsdk.ai.controller.JSController
{
    private boolean bMaxSizeSet;
    private float mDensity;
    private int mMaxHeight;
    private int mMaxWidth;
    private android.view.WindowManager mWindowManager;

    public void <init>(com.inmobi.androidsdk.ai.container.IMWebView, android.content.Context)
    {
        android.content.Context $r2;
        android.view.WindowManager $r5;
        android.util.DisplayMetrics r3, $r7;
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        android.view.Display $r6;
        float $f0;
        java.lang.Object $r4;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<com.inmobi.androidsdk.ai.controller.JSController: void <init>(com.inmobi.androidsdk.ai.container.IMWebView,android.content.Context)>($r1, $r2);

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: boolean bMaxSizeSet> = 0;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxWidth> = -1;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxHeight> = -1;

        $r7 = new android.util.DisplayMetrics;

        r3 = $r7;

        specialinvoke $r7.<android.util.DisplayMetrics: void <init>()>();

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r5 = (android.view.WindowManager) $r4;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.view.WindowManager mWindowManager> = $r5;

        $r5 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.view.WindowManager mWindowManager>;

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r6.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r3);

        $f0 = r3.<android.util.DisplayMetrics: float density>;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity> = $f0;

        return;
    }

    private com.inmobi.androidsdk.ai.controller.JSController$Dimensions getDeviceDimensions(com.inmobi.androidsdk.ai.controller.JSController$Dimensions)
    {
        android.content.Context $r8;
        android.view.WindowManager $r3;
        com.inmobi.androidsdk.ai.controller.JSController$Dimensions $r1;
        com.inmobi.androidsdk.ai.container.IMWebView $r7;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int[] r2;
        int i0, i1, i2, i3, $i4, $i5;
        android.view.Display $r4;
        android.view.View $r10;
        java.lang.String $r6;
        boolean $z0;
        float $f0, $f1;
        java.lang.StringBuilder $r5;
        android.app.Activity $r9;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.controller.JSController$Dimensions;

        i2 = 0;

        i3 = 0;

        $r3 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.view.WindowManager mWindowManager>;

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        i1 = virtualinvoke $r4.<android.view.Display: int getWidth()>();

        i0 = virtualinvoke $r4.<android.view.Display: int getHeight()>();

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Width: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r6);

     label01:
        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width>;

        $f0 = (float) $i4;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 * $f1;

        $i4 = (int) $f0;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width> = $i4;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height>;

        $f0 = (float) $i4;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 * $f1;

        $i4 = (int) $f0;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height> = $i4;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        $f0 = (float) $i4;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 * $f1;

        $i4 = (int) $f0;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x> = $i4;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        $f0 = (float) $i4;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 * $f1;

        $i4 = (int) $f0;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = $i4;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height>;

        if $i4 >= 0 goto label02;

        $r7 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i4 = virtualinvoke $r7.<com.inmobi.androidsdk.ai.container.IMWebView: int getHeight()>();

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height> = $i4;

     label02:
        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width>;

        if $i4 >= 0 goto label03;

        $r7 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i4 = virtualinvoke $r7.<com.inmobi.androidsdk.ai.container.IMWebView: int getWidth()>();

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width> = $i4;

     label03:
        r2 = newarray (int)[2];

        $r7 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r7.<com.inmobi.androidsdk.ai.container.IMWebView: void getLocationOnScreen(int[])>(r2);

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        if $i4 >= 0 goto label04;

        $i4 = r2[0];

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x> = $i4;

     label04:
        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        if $i4 >= 0 goto label05;

        $r8 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.content.Context mContext>;

        $r9 = (android.app.Activity) $r8;

        $r10 = virtualinvoke $r9.<android.app.Activity: android.view.View findViewById(int)>(16908290);

        $i4 = virtualinvoke $r10.<android.view.View: int getTop()>();

        i2 = $i4;

        i3 = virtualinvoke $r10.<android.view.View: int getBottom()>();

        i3 = i0 - i3;

        $i5 = r2[1];

        $i5 = $i5 - $i4;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = $i5;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label05;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("topStuff: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,bottomStuff: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r6);

     label05:
        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label06;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("loc 0: ");

        $i4 = r2[0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" loc 1: ");

        $i4 = r2[1];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r6);

     label06:
        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        $i5 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width>;

        $i4 = $i4 + $i5;

        i1 = i1 - $i4;

        if i1 >= 0 goto label07;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        i1 = $i4 + i1;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x> = i1;

     label07:
        i1 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        if i1 >= 0 goto label08;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x> = 0;

     label08:
        i1 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        $i4 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height>;

        i1 = i1 + $i4;

        i0 = i0 - i1;

        if i0 >= 0 goto label09;

        i1 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        i0 = i1 + i0;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = i0;

        i0 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        i2 = i0 - i2;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = i2;

        i2 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        i3 = i2 - i3;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = i3;

     label09:
        i3 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        if i3 >= 0 goto label10;

        $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y> = 0;

     label10:
        return $r1;
    }

    public void close()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "JSDisplayController-> close");

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView: void close()>();

        return;
    }

    public java.lang.String dimensions()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r2;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0;
        float $f0, $f1;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ \"top\" :");

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: int getTop()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"left\" :");

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: int getLeft()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"bottom\" :");

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: int getBottom()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"right\" :");

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i0 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: int getRight()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void expand(java.lang.String, java.lang.String)
    {
        java.lang.Exception r3;
        org.json.JSONObject $r7;
        com.inmobi.androidsdk.ai.controller.JSController$Dimensions r6;
        com.inmobi.androidsdk.ai.container.IMWebView $r9;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        java.lang.StringBuilder $r4;
        java.lang.Object $r8;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> expand: dimensions: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,url: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r5);

     label1:
        r6 = null;

        if $r2 == null goto label5;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null");

     label3:
        if $z0 != 0 goto label5;

        $r7 = new org.json.JSONObject;

     label4:
        specialinvoke $r7.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

        $r8 = staticinvoke <com.inmobi.androidsdk.ai.controller.JSDisplayController: java.lang.Object getFromJSON(org.json.JSONObject,java.lang.Class)>($r7, class "Lcom/inmobi/androidsdk/ai/controller/JSController$Dimensions;");

        r6 = (com.inmobi.androidsdk.ai.controller.JSController$Dimensions) $r8;

        r6 = specialinvoke r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.controller.JSController$Dimensions getDeviceDimensions(com.inmobi.androidsdk.ai.controller.JSController$Dimensions)>(r6);

     label5:
        $r9 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r9.<com.inmobi.androidsdk.ai.container.IMWebView: void expand(java.lang.String,com.inmobi.androidsdk.ai.controller.JSController$Dimensions)>($r1, r6);

     label6:
        return;

     label7:
        r3 := @caughtexception;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception while expanding the ad.", r3);

     label8:
        return;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.String getMaxSize()
    {
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: boolean bMaxSizeSet>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ width: ");

        $i0 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxWidth>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height: ");

        $i0 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxHeight>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: java.lang.String getScreenSize()>();

        return $r2;
    }

    public int getOrientation()
    {
        android.view.WindowManager $r1;
        short s1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0;
        android.view.Display $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.view.WindowManager mWindowManager>;

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getOrientation()>();

        s1 = -1;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> getOrientation: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r4);

        return s1;

     label2:
        s1 = 0;

        goto label1;

     label3:
        s1 = 90;

        goto label1;

     label4:
        s1 = 180;

        goto label1;

     label5:
        s1 = 270;

        goto label1;

     label6:
        return s1;
    }

    public java.lang.String getScreenSize()
    {
        android.view.WindowManager $r2;
        android.util.DisplayMetrics r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0;
        android.view.Display $r3;
        float $f0, $f1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: android.view.WindowManager mWindowManager>;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ width: ");

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i0;

        $f1 = r1.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height: ");

        $i0 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f0 = (float) $i0;

        $f1 = r1.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getSize()
    {
        java.lang.String $r1;
        com.inmobi.androidsdk.ai.container.IMWebView $r2;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $r1 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String getSize()>();

        return $r1;
    }

    public java.lang.String getState()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r2;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "JSDisplayController-> getState ");

     label1:
        $r2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $r1 = virtualinvoke $r2.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String getState()>();

        return $r1;
    }

    public boolean getViewable()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "JSDisplayController-> getViewable ");

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $z0 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView: boolean getViewable()>();

        return $z0;
    }

    public void hide()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "JSDisplayController-> hide");

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView: void hide()>();

        return;
    }

    public boolean isVisible()
    {
        int $i0;
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $i0 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void logHTML(java.lang.String)
    {
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: java.lang.String;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController->  ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r1);

     label1:
        return;
    }

    public void onOrientationChanged(int)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r4;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.mraidview.fireChangeEvent({ orientation: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("});");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r3);

     label1:
        $r4 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r4.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void open(java.lang.String)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r4;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: java.lang.String;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> open: url: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r3);

     label1:
        $z0 = staticinvoke <android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        $r4 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r4.<com.inmobi.androidsdk.ai.container.IMWebView: void raiseError(java.lang.String,java.lang.String)>("Invalid url", "open");

        return;

     label2:
        $r4 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r4.<com.inmobi.androidsdk.ai.container.IMWebView: void open(java.lang.String)>($r1);

        return;
    }

    public void openMap(java.lang.String, boolean)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r4;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> openMap: url: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r3);

     label1:
        $r4 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r4.<com.inmobi.androidsdk.ai.container.IMWebView: void openMap(java.lang.String,boolean)>($r1, $z0);

        return;
    }

    public void resize(int, int)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r3;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        int $i0, $i1, $i2;
        float $f0, $f1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("JSDisplayController-> resize: width: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r2);

     label1:
        $i2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxHeight>;

        if $i2 <= 0 goto label2;

        $i2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxHeight>;

        if $i1 > $i2 goto label3;

     label2:
        $i2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxWidth>;

        if $i2 <= 0 goto label4;

        $i2 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxWidth>;

        if $i0 <= $i2 goto label4;

     label3:
        $r3 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r3.<com.inmobi.androidsdk.ai.container.IMWebView: void raiseError(java.lang.String,java.lang.String)>("Maximum size exceeded", "resize");

        return;

     label4:
        $r3 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        $f0 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        $f1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: float mDensity>;

        $f0 = (float) $i1;

        $f0 = $f1 * $f0;

        $i1 = (int) $f0;

        virtualinvoke $r3.<com.inmobi.androidsdk.ai.container.IMWebView: void resize(int,int)>($i0, $i1);

        return;
    }

    public void setMaxSize(int, int)
    {
        int $i0, $i1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: boolean bMaxSizeSet> = 1;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxWidth> = $i0;

        r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: int mMaxHeight> = $i1;

        return;
    }

    public void show()
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r1;
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "JSDisplayController-> show");

     label1:
        $r1 = r0.<com.inmobi.androidsdk.ai.controller.JSDisplayController: com.inmobi.androidsdk.ai.container.IMWebView imWebView>;

        virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView: void show()>();

        return;
    }

    public void stopAllListeners()
    {
        com.inmobi.androidsdk.ai.controller.JSDisplayController r0;

        r0 := @this: com.inmobi.androidsdk.ai.controller.JSDisplayController;

        return;
    }
}
