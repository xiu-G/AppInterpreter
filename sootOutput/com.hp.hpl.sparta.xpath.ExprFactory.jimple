public class com.hp.hpl.sparta.xpath.ExprFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.sparta.xpath.ExprFactory r0;

        r0 := @this: com.hp.hpl.sparta.xpath.ExprFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.hp.hpl.sparta.xpath.BooleanExpr createExpr(com.hp.hpl.sparta.xpath.XPath, com.hp.hpl.sparta.xpath.SimpleStreamTokenizer) throws com.hp.hpl.sparta.xpath.XPathException, java.io.IOException
    {
        com.hp.hpl.sparta.xpath.AttrGreaterExpr $r10;
        com.hp.hpl.sparta.xpath.XPathException $r5;
        com.hp.hpl.sparta.xpath.TextEqualsExpr $r12;
        com.hp.hpl.sparta.xpath.TextNotEqualsExpr $r13;
        com.hp.hpl.sparta.xpath.SimpleStreamTokenizer $r1;
        int $i0, $i1;
        com.hp.hpl.sparta.xpath.AttrNotEqualsExpr $r11;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.hp.hpl.sparta.xpath.AttrEqualsExpr $r8;
        com.hp.hpl.sparta.xpath.PositionEqualsExpr $r6;
        com.hp.hpl.sparta.xpath.TextExistsExpr r4;
        com.hp.hpl.sparta.xpath.XPath $r0;
        com.hp.hpl.sparta.xpath.AttrExistsExpr $r7;
        com.hp.hpl.sparta.xpath.AttrLessExpr $r9;

        $r0 := @parameter0: com.hp.hpl.sparta.xpath.XPath;

        $r1 := @parameter1: com.hp.hpl.sparta.xpath.SimpleStreamTokenizer;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        lookupswitch($i0)
        {
            case -3: goto label21;
            case -2: goto label02;
            case 64: goto label03;
            default: goto label01;
        };

     label01:
        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "at beginning of expression", $r1, "@, number, or text()");

        throw $r5;

     label02:
        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;

        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r6 = new com.hp.hpl.sparta.xpath.PositionEqualsExpr;

        specialinvoke $r6.<com.hp.hpl.sparta.xpath.PositionEqualsExpr: void <init>(int)>($i0);

        return $r6;

     label03:
        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i1 = -3;

        if $i0 == $i1 goto label04;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "after @", $r1, "name");

        throw $r5;

     label04:
        $r2 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        lookupswitch($i0)
        {
            case 33: goto label18;
            case 60: goto label08;
            case 61: goto label06;
            case 62: goto label13;
            default: goto label05;
        };

     label05:
        $r7 = new com.hp.hpl.sparta.xpath.AttrExistsExpr;

        specialinvoke $r7.<com.hp.hpl.sparta.xpath.AttrExistsExpr: void <init>(java.lang.String)>($r2);

        return $r7;

     label06:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label07;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 39 goto label07;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of equals", $r1, "quoted string");

        throw $r5;

     label07:
        $r3 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r8 = new com.hp.hpl.sparta.xpath.AttrEqualsExpr;

        specialinvoke $r8.<com.hp.hpl.sparta.xpath.AttrEqualsExpr: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r8;

     label08:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label09;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 != 39 goto label11;

     label09:
        $r3 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label10:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r9 = new com.hp.hpl.sparta.xpath.AttrLessExpr;

        specialinvoke $r9.<com.hp.hpl.sparta.xpath.AttrLessExpr: void <init>(java.lang.String,int)>($r2, $i0);

        return $r9;

     label11:
        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        $i1 = -2;

        if $i0 != $i1 goto label12;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;

        goto label10;

     label12:
        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of less-than", $r1, "quoted string or number");

        throw $r5;

     label13:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label14;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 != 39 goto label16;

     label14:
        $r3 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label15:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r10 = new com.hp.hpl.sparta.xpath.AttrGreaterExpr;

        specialinvoke $r10.<com.hp.hpl.sparta.xpath.AttrGreaterExpr: void <init>(java.lang.String,int)>($r2, $i0);

        return $r10;

     label16:
        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        $i1 = -2;

        if $i0 != $i1 goto label17;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nval>;

        goto label15;

     label17:
        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of greater-than", $r1, "quoted string or number");

        throw $r5;

     label18:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 61 goto label19;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "after !", $r1, "=");

        throw $r5;

     label19:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label20;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 39 goto label20;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of !=", $r1, "quoted string");

        throw $r5;

     label20:
        $r3 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r11 = new com.hp.hpl.sparta.xpath.AttrNotEqualsExpr;

        specialinvoke $r11.<com.hp.hpl.sparta.xpath.AttrNotEqualsExpr: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r11;

     label21:
        $r2 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z0 != 0 goto label22;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "at beginning of expression", $r1, "text()");

        throw $r5;

     label22:
        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        if $i0 == 40 goto label23;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "after text", $r1, "(");

        throw $r5;

     label23:
        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        if $i0 == 41 goto label24;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "after text(", $r1, ")");

        throw $r5;

     label24:
        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        lookupswitch($i0)
        {
            case 33: goto label28;
            case 61: goto label26;
            default: goto label25;
        };

     label25:
        r4 = <com.hp.hpl.sparta.xpath.TextExistsExpr: com.hp.hpl.sparta.xpath.TextExistsExpr INSTANCE>;

        return r4;

     label26:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label27;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 39 goto label27;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of equals", $r1, "quoted string");

        throw $r5;

     label27:
        $r2 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r12 = new com.hp.hpl.sparta.xpath.TextEqualsExpr;

        specialinvoke $r12.<com.hp.hpl.sparta.xpath.TextEqualsExpr: void <init>(java.lang.String)>($r2);

        return $r12;

     label28:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 61 goto label29;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "after !", $r1, "=");

        throw $r5;

     label29:
        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 34 goto label30;

        $i0 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int ttype>;

        if $i0 == 39 goto label30;

        $r5 = new com.hp.hpl.sparta.xpath.XPathException;

        specialinvoke $r5.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String,com.hp.hpl.sparta.xpath.SimpleStreamTokenizer,java.lang.String)>($r0, "right hand side of !=", $r1, "quoted string");

        throw $r5;

     label30:
        $r2 = $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: java.lang.String sval>;

        virtualinvoke $r1.<com.hp.hpl.sparta.xpath.SimpleStreamTokenizer: int nextToken()>();

        $r13 = new com.hp.hpl.sparta.xpath.TextNotEqualsExpr;

        specialinvoke $r13.<com.hp.hpl.sparta.xpath.TextNotEqualsExpr: void <init>(java.lang.String)>($r2);

        return $r13;
    }
}
