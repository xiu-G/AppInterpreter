public abstract class org.dom4j.tree.AbstractText extends org.dom4j.tree.AbstractCharacterData implements org.dom4j.Text
{

    public void <init>()
    {
        org.dom4j.tree.AbstractText r0;

        r0 := @this: org.dom4j.tree.AbstractText;

        specialinvoke r0.<org.dom4j.tree.AbstractCharacterData: void <init>()>();

        return;
    }

    public void accept(org.dom4j.Visitor)
    {
        org.dom4j.Visitor $r1;
        org.dom4j.tree.AbstractText r0;

        r0 := @this: org.dom4j.tree.AbstractText;

        $r1 := @parameter0: org.dom4j.Visitor;

        interfaceinvoke $r1.<org.dom4j.Visitor: void visit(org.dom4j.Text)>(r0);

        return;
    }

    public java.lang.String asXML()
    {
        java.lang.String $r1;
        org.dom4j.tree.AbstractText r0;

        r0 := @this: org.dom4j.tree.AbstractText;

        $r1 = virtualinvoke r0.<org.dom4j.tree.AbstractText: java.lang.String getText()>();

        return $r1;
    }

    public short getNodeType()
    {
        org.dom4j.tree.AbstractText r0;

        r0 := @this: org.dom4j.tree.AbstractText;

        return 3;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.dom4j.tree.AbstractText r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.dom4j.tree.AbstractText;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [Text: \"");

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractText: java.lang.String getText()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void write(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer $r1;
        java.lang.String $r2;
        org.dom4j.tree.AbstractText r0;

        r0 := @this: org.dom4j.tree.AbstractText;

        $r1 := @parameter0: java.io.Writer;

        $r2 = virtualinvoke r0.<org.dom4j.tree.AbstractText: java.lang.String getText()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }
}
