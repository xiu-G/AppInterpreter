abstract class twitter4j.media.AbstractImageUploadImpl extends java.lang.Object implements twitter4j.media.ImageUpload
{
    public static final java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1;
    public static final java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1_1;
    public static final java.lang.String TWITTER_VERIFY_CREDENTIALS_XML_V1;
    protected static final twitter4j.internal.logging.Logger logger;
    protected java.lang.String apiKey;
    protected twitter4j.internal.http.HttpParameter[] appendParameter;
    private twitter4j.internal.http.HttpClientWrapper client;
    protected twitter4j.conf.Configuration conf;
    protected java.util.Map headers;
    protected twitter4j.internal.http.HttpResponse httpResponse;
    protected twitter4j.internal.http.HttpParameter image;
    protected twitter4j.internal.http.HttpParameter message;
    protected twitter4j.auth.OAuthAuthorization oauth;
    protected twitter4j.internal.http.HttpParameter[] postParameter;
    protected java.lang.String uploadUrl;

    static void <clinit>()
    {
        twitter4j.internal.logging.Logger $r0;

        <twitter4j.media.AbstractImageUploadImpl: java.lang.String TWITTER_VERIFY_CREDENTIALS_XML_V1> = "https://api.twitter.com/1/account/verify_credentials.xml";

        <twitter4j.media.AbstractImageUploadImpl: java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1_1> = "https://api.twitter.com/1.1/account/verify_credentials.json";

        <twitter4j.media.AbstractImageUploadImpl: java.lang.String TWITTER_VERIFY_CREDENTIALS_JSON_V1> = "https://api.twitter.com/1/account/verify_credentials.json";

        $r0 = staticinvoke <twitter4j.internal.logging.Logger: twitter4j.internal.logging.Logger getLogger(java.lang.Class)>(class "Ltwitter4j/media/AbstractImageUploadImpl;");

        <twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.logging.Logger logger> = $r0;

        return;
    }

    public void <init>(twitter4j.conf.Configuration, java.lang.String, twitter4j.auth.OAuthAuthorization)
    {
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r3;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: twitter4j.auth.OAuthAuthorization;

        specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: void <init>(twitter4j.conf.Configuration,twitter4j.auth.OAuthAuthorization)>($r1, $r3);

        r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey> = $r2;

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.auth.OAuthAuthorization)
    {
        twitter4j.conf.Configuration $r1;
        java.util.HashMap $r3;
        twitter4j.internal.http.HttpClientWrapper $r4;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r2;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.auth.OAuthAuthorization;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers> = $r3;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse> = null;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth> = $r2;

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf> = $r1;

        $r4 = new twitter4j.internal.http.HttpClientWrapper;

        specialinvoke $r4.<twitter4j.internal.http.HttpClientWrapper: void <init>(twitter4j.internal.http.HttpClientWrapperConfiguration)>($r1);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client> = $r4;

        return;
    }

    private java.lang.String upload()
    {
        java.lang.AssertionError $r10;
        twitter4j.internal.http.HttpResponse $r14;
        java.util.Map $r13;
        int $i0;
        java.lang.String $r7, $r9;
        twitter4j.internal.http.HttpParameter[] $r4, $r11;
        boolean $z0;
        twitter4j.internal.logging.Logger $r15;
        twitter4j.internal.http.HttpParameter $r8;
        java.util.Properties $r2;
        java.util.Iterator $r5;
        java.util.Set $r3;
        twitter4j.internal.http.HttpClientWrapper $r12;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.conf.Configuration $r1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r16;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.util.Properties getMediaProviderParameters()>();

        if $r2 == null goto label3;

        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.util.Properties getMediaProviderParameters()>();

        $r3 = virtualinvoke $r2.<java.util.Properties: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();

        $r4 = newarray (twitter4j.internal.http.HttpParameter)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.util.Properties getMediaProviderParameters()>();

        $r7 = (java.lang.String) $r6;

        $r7 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r7);

        $r8 = new twitter4j.internal.http.HttpParameter;

        $r9 = (java.lang.String) $r6;

        specialinvoke $r8.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r9, $r7);

        $r4[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter> = $r4;

     label3:
        virtualinvoke r0.<twitter4j.media.AbstractImageUploadImpl: void preUpload()>();

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        if $r4 != null goto label4;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>("Incomplete implementation. postParameter is not set.");

        throw $r10;

     label4:
        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        if $r7 != null goto label5;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>("Incomplete implementation. uploadUrl is not set.");

        throw $r10;

     label5:
        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.util.Properties getMediaProviderParameters()>();

        if $r2 == null goto label6;

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $i0 = lengthof $r4;

        if $i0 <= 0 goto label6;

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $r11 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $r4 = virtualinvoke r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendHttpParameters(twitter4j.internal.http.HttpParameter[],twitter4j.internal.http.HttpParameter[])>($r4, $r11);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter> = $r4;

     label6:
        $r12 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $r13 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        $r14 = virtualinvoke $r12.<twitter4j.internal.http.HttpClientWrapper: twitter4j.internal.http.HttpResponse post(java.lang.String,twitter4j.internal.http.HttpParameter[],java.util.Map)>($r7, $r4, $r13);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse> = $r14;

        $r7 = virtualinvoke r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String postUpload()>();

        $r15 = <twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.logging.Logger logger>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("uploaded url [");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<twitter4j.internal.logging.Logger: void debug(java.lang.String)>($r9);

        return $r7;
    }

    protected twitter4j.internal.http.HttpParameter[] appendHttpParameters(twitter4j.internal.http.HttpParameter[], twitter4j.internal.http.HttpParameter[])
    {
        int $i0, $i1, $i2;
        twitter4j.internal.http.HttpParameter[] $r1, $r2, $r3;
        twitter4j.media.AbstractImageUploadImpl r0;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: twitter4j.internal.http.HttpParameter[];

        $r2 := @parameter1: twitter4j.internal.http.HttpParameter[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i2 = $i0 + $i1;

        $r3 = newarray (twitter4j.internal.http.HttpParameter)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, $i0);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, $i0, $i1);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.internal.http.HttpResponse $r15, $r16;
        java.util.Map $r13, $r14;
        java.lang.String $r5, $r6;
        twitter4j.internal.http.HttpParameter[] $r7, $r8;
        boolean $z0;
        twitter4j.internal.http.HttpParameter $r17, $r18;
        twitter4j.internal.http.HttpClientWrapper $r9, $r10;
        twitter4j.media.AbstractImageUploadImpl r0, $r4;
        twitter4j.auth.OAuthAuthorization $r19, $r20;
        twitter4j.conf.Configuration $r11, $r12;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label02;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

     label02:
        return 0;

     label03:
        $r4 = (twitter4j.media.AbstractImageUploadImpl) $r1;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        if $r5 == null goto label05;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        $r6 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label06;

     label04:
        return 0;

     label05:
        $r5 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        if $r5 != null goto label04;

     label06:
        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $r8 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8);

        if $z0 != 0 goto label07;

        return 0;

     label07:
        $r9 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        if $r9 == null goto label09;

        $r9 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        $r10 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        $z0 = virtualinvoke $r9.<twitter4j.internal.http.HttpClientWrapper: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label10;

     label08:
        return 0;

     label09:
        $r9 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        if $r9 != null goto label08;

     label10:
        $r11 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        if $r11 == null goto label12;

        $r11 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r12 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $z0 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label13;

     label11:
        return 0;

     label12:
        $r11 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        if $r11 != null goto label11;

     label13:
        $r13 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        if $r13 == null goto label15;

        $r13 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        $r14 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        $z0 = interfaceinvoke $r13.<java.util.Map: boolean equals(java.lang.Object)>($r14);

        if $z0 != 0 goto label16;

     label14:
        return 0;

     label15:
        $r13 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        if $r13 != null goto label14;

     label16:
        $r15 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        if $r15 == null goto label18;

        $r15 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        $r16 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        $z0 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label19;

     label17:
        return 0;

     label18:
        $r15 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        if $r15 != null goto label17;

     label19:
        $r17 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        if $r17 == null goto label21;

        $r17 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        $r18 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        $z0 = virtualinvoke $r17.<twitter4j.internal.http.HttpParameter: boolean equals(java.lang.Object)>($r18);

        if $z0 != 0 goto label22;

     label20:
        return 0;

     label21:
        $r17 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        if $r17 != null goto label20;

     label22:
        $r17 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        if $r17 == null goto label24;

        $r17 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        $r18 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        $z0 = virtualinvoke $r17.<twitter4j.internal.http.HttpParameter: boolean equals(java.lang.Object)>($r18);

        if $z0 != 0 goto label25;

     label23:
        return 0;

     label24:
        $r17 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        if $r17 != null goto label23;

     label25:
        $r19 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        if $r19 == null goto label27;

        $r19 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $r20 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $z0 = virtualinvoke $r19.<twitter4j.auth.OAuthAuthorization: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label28;

     label26:
        return 0;

     label27:
        $r19 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        if $r19 != null goto label26;

     label28:
        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $r8 = $r4.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r7, $r8);

        if $z0 != 0 goto label29;

        return 0;

     label29:
        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        if $r5 == null goto label31;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        $r6 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label32;

     label30:
        return 0;

     label31:
        $r5 = $r4.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        if $r5 != null goto label30;

     label32:
        return 1;
    }

    protected java.lang.String generateVerifyCredentialsAuthorizationHeader(java.lang.String)
    {
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r2;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $r3 = virtualinvoke $r2.<twitter4j.auth.OAuthAuthorization: java.util.List generateOAuthSignatureHttpParams(java.lang.String,java.lang.String)>("GET", $r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("OAuth realm=\"http://api.twitter.com/\",");

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List,java.lang.String,boolean)>($r3, ",", 1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    protected java.lang.String generateVerifyCredentialsAuthorizationURL(java.lang.String)
    {
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r2;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $r3 = virtualinvoke $r2.<twitter4j.auth.OAuthAuthorization: java.util.List generateOAuthSignatureHttpParams(java.lang.String,java.lang.String)>("GET", $r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r1 = staticinvoke <twitter4j.auth.OAuthAuthorization: java.lang.String encodeParameters(java.util.List)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public int hashCode()
    {
        twitter4j.internal.http.HttpParameter $r6;
        twitter4j.internal.http.HttpClientWrapper $r1;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r4;
        twitter4j.internal.http.HttpResponse $r8;
        java.util.Map $r7;
        int $i0, $i1, $i2;
        twitter4j.conf.Configuration $r2;
        java.lang.String $r3;
        twitter4j.internal.http.HttpParameter[] $r5;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $i0 = 0;

        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        if $r1 == null goto label12;

        $r1 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        $i1 = virtualinvoke $r1.<twitter4j.internal.http.HttpClientWrapper: int hashCode()>();

     label01:
        $i1 = $i1 * 31;

        $r2 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        if $r2 == null goto label13;

        $r2 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label02:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r3 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        if $r3 == null goto label14;

        $r3 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

     label03:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        if $r4 == null goto label15;

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $i2 = virtualinvoke $r4.<twitter4j.auth.OAuthAuthorization: int hashCode()>();

     label04:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r3 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        if $r3 == null goto label16;

        $r3 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

     label05:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        if $r5 == null goto label17;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r5);

     label06:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        if $r5 == null goto label18;

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r5);

     label07:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r6 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        if $r6 == null goto label19;

        $r6 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        $i2 = virtualinvoke $r6.<twitter4j.internal.http.HttpParameter: int hashCode()>();

     label08:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r6 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        if $r6 == null goto label20;

        $r6 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        $i2 = virtualinvoke $r6.<twitter4j.internal.http.HttpParameter: int hashCode()>();

     label09:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        if $r7 == null goto label21;

        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        $i2 = interfaceinvoke $r7.<java.util.Map: int hashCode()>();

     label10:
        $i1 = $i2 + $i1;

        $i1 = $i1 * 31;

        $r8 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        if $r8 == null goto label11;

        $r8 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        $i0 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

     label11:
        $i0 = $i1 + $i0;

        return $i0;

     label12:
        $i1 = 0;

        goto label01;

     label13:
        $i2 = 0;

        goto label02;

     label14:
        $i2 = 0;

        goto label03;

     label15:
        $i2 = 0;

        goto label04;

     label16:
        $i2 = 0;

        goto label05;

     label17:
        $i2 = 0;

        goto label06;

     label18:
        $i2 = 0;

        goto label07;

     label19:
        $i2 = 0;

        goto label08;

     label20:
        $i2 = 0;

        goto label09;

     label21:
        $i2 = 0;

        goto label10;
    }

    protected abstract java.lang.String postUpload();

    protected abstract void preUpload();

    public java.lang.String toString()
    {
        twitter4j.internal.http.HttpParameter $r9;
        twitter4j.internal.http.HttpClientWrapper $r3;
        twitter4j.media.AbstractImageUploadImpl r0;
        twitter4j.auth.OAuthAuthorization $r6;
        java.util.List $r1, $r8;
        twitter4j.internal.http.HttpResponse $r11;
        java.util.Map $r10;
        twitter4j.conf.Configuration $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        twitter4j.internal.http.HttpParameter[] $r7;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 = null;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("AbstractImageUploadImpl{client=");

        $r3 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpClientWrapper client>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", conf=");

        $r4 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.conf.Configuration conf>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", apiKey=\'");

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String apiKey>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oauth=");

        $r6 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.auth.OAuthAuthorization oauth>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uploadUrl=\'");

        $r5 = r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String uploadUrl>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", postParameter=");

        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        if $r7 != null goto label3;

        $r8 = null;

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", appendParameter=");

        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        if $r7 != null goto label4;

     label2:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", image=");

        $r9 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message=");

        $r9 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", headers=");

        $r10 = r0.<twitter4j.media.AbstractImageUploadImpl: java.util.Map headers>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", httpResponse=");

        $r11 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpResponse httpResponse>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label3:
        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] postParameter>;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        goto label1;

     label4:
        $r7 = r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter[] appendParameter>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        goto label2;
    }

    public java.lang.String upload(java.io.File)
    {
        twitter4j.internal.http.HttpParameter $r3;
        java.lang.String $r2;
        twitter4j.media.AbstractImageUploadImpl r0;
        java.io.File $r1;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.io.File;

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("media", $r1);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image> = $r3;

        $r2 = specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String upload()>();

        return $r2;
    }

    public java.lang.String upload(java.io.File, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r3;
        java.lang.String $r2;
        twitter4j.media.AbstractImageUploadImpl r0;
        java.io.File $r1;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("media", $r1);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image> = $r3;

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("message", $r2);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message> = $r3;

        $r2 = specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String upload()>();

        return $r2;
    }

    public java.lang.String upload(java.lang.String, java.io.InputStream)
    {
        twitter4j.internal.http.HttpParameter $r3;
        java.lang.String $r1;
        twitter4j.media.AbstractImageUploadImpl r0;
        java.io.InputStream $r2;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r3.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>("media", $r1, $r2);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image> = $r3;

        $r1 = specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String upload()>();

        return $r1;
    }

    public java.lang.String upload(java.lang.String, java.io.InputStream, java.lang.String)
    {
        twitter4j.internal.http.HttpParameter $r4;
        java.lang.String $r1, $r3;
        twitter4j.media.AbstractImageUploadImpl r0;
        java.io.InputStream $r2;

        r0 := @this: twitter4j.media.AbstractImageUploadImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.InputStream;

        $r3 := @parameter2: java.lang.String;

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>("media", $r1, $r2);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter image> = $r4;

        $r4 = new twitter4j.internal.http.HttpParameter;

        specialinvoke $r4.<twitter4j.internal.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("message", $r3);

        r0.<twitter4j.media.AbstractImageUploadImpl: twitter4j.internal.http.HttpParameter message> = $r4;

        $r1 = specialinvoke r0.<twitter4j.media.AbstractImageUploadImpl: java.lang.String upload()>();

        return $r1;
    }
}
