final class com.trustlook.antivirus.c.f extends java.lang.Object implements com.trustlook.antivirus.c.n
{
    final com.trustlook.antivirus.c.b a;

    void <init>(com.trustlook.antivirus.c.b)
    {
        com.trustlook.antivirus.c.f r0;
        com.trustlook.antivirus.c.b $r1;

        r0 := @this: com.trustlook.antivirus.c.f;

        $r1 := @parameter0: com.trustlook.antivirus.c.b;

        r0.<com.trustlook.antivirus.c.f: com.trustlook.antivirus.c.b a> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void a(java.lang.String, java.util.Vector, java.lang.String)
    {
        java.lang.String[] $r7;
        java.util.Vector $r2;
        byte $b1;
        com.trustlook.antivirus.c.m $r12;
        java.lang.StringBuffer $r8, $r9;
        int $i0, $i2;
        com.trustlook.antivirus.c.f r0;
        java.lang.String $r1, $r3, $r6;
        com.trustlook.antivirus.c.b $r10;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.List $r11;
        java.lang.Object $r5;

        r0 := @this: com.trustlook.antivirus.c.f;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $r3 := @parameter2: java.lang.String;

        $i0 = 3;

        $r1 = null;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.util.Iterator iterator()>();

        $b1 = 3;

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("WORK");

        if $z1 == 0 goto label2;

        $b1 = 2;

        goto label1;

     label2:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HOME");

        if $z1 == 0 goto label3;

        $b1 = 1;

        goto label1;

     label3:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PREF");

        if $z1 == 0 goto label4;

        $z0 = 1;

        goto label1;

     label4:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("X-");

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(2);

        $b1 = 0;

        goto label1;

     label5:
        $r7 = staticinvoke <com.trustlook.antivirus.c.p: java.lang.String[] a(java.lang.String,java.lang.String)>($r3, ";");

        $r8 = new java.lang.StringBuffer;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i2);

        $i2 = lengthof $r7;

        if $i2 <= 2 goto label7;

        $r3 = $r7[2];

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i2 = lengthof $r7;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(7, $i2);

     label6:
        if $i0 >= $i2 goto label7;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r3 = $r7[$i0];

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        $r3 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = r0.<com.trustlook.antivirus.c.f: com.trustlook.antivirus.c.b a>;

        $r11 = $r10.<com.trustlook.antivirus.c.b: java.util.List o>;

        $r12 = new com.trustlook.antivirus.c.m;

        specialinvoke $r12.<com.trustlook.antivirus.c.m: void <init>(int,java.lang.String,boolean,java.lang.String)>($b1, $r3, $z0, $r1);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;
    }
}
