public class twitter4j.http.HttpClientWrapper extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private twitter4j.http.HttpClient http;
    private twitter4j.http.HttpResponseListener httpResponseListener;
    private final java.util.Map requestHeaders;
    private final twitter4j.http.HttpClientWrapperConfiguration wrapperConf;

    public void <init>()
    {
        twitter4j.http.HttpClientWrapperConfiguration $r1;
        java.util.Map $r3;
        twitter4j.conf.Configuration $r2;
        twitter4j.http.HttpClient $r4;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClientWrapperConfiguration wrapperConf> = $r2;

        $r1 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClientWrapperConfiguration wrapperConf>;

        $r3 = interfaceinvoke $r1.<twitter4j.http.HttpClientWrapperConfiguration: java.util.Map getRequestHeaders()>();

        r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders> = $r3;

        $r4 = new twitter4j.http.HttpClient;

        $r1 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClientWrapperConfiguration wrapperConf>;

        specialinvoke $r4.<twitter4j.http.HttpClient: void <init>(twitter4j.http.HttpClientConfiguration)>($r1);

        r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClient http> = $r4;

        return;
    }

    public void <init>(twitter4j.http.HttpClientWrapperConfiguration)
    {
        twitter4j.http.HttpClientWrapperConfiguration $r1;
        java.util.Map $r2;
        twitter4j.http.HttpClient $r3;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: twitter4j.http.HttpClientWrapperConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClientWrapperConfiguration wrapperConf> = $r1;

        $r2 = interfaceinvoke $r1.<twitter4j.http.HttpClientWrapperConfiguration: java.util.Map getRequestHeaders()>();

        r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders> = $r2;

        $r3 = new twitter4j.http.HttpClient;

        specialinvoke $r3.<twitter4j.http.HttpClient: void <init>(twitter4j.http.HttpClientConfiguration)>($r1);

        r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClient http> = $r3;

        return;
    }

    private twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponseEvent $r2;
        twitter4j.http.HttpResponse $r4;
        twitter4j.http.HttpClient $r3;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpResponseListener $r5;
        twitter4j.http.HttpRequest $r1;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: twitter4j.http.HttpRequest;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClient http>;

        $r4 = virtualinvoke $r3.<twitter4j.http.HttpClient: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r1);

        $r5 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponseListener httpResponseListener>;

        if $r5 == null goto label1;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponseListener httpResponseListener>;

        $r2 = new twitter4j.http.HttpResponseEvent;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpClient http>;

        specialinvoke $r2.<twitter4j.http.HttpResponseEvent: void <init>(twitter4j.http.HttpClient,twitter4j.http.HttpRequest,twitter4j.http.HttpResponse)>($r3, $r1, $r4);

        interfaceinvoke $r5.<twitter4j.http.HttpResponseListener: void httpResponseReceived(twitter4j.http.HttpResponseEvent)>($r2);

     label1:
        return $r4;
    }

    public twitter4j.http.HttpResponse delete(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r4;
        java.util.Map $r3;
        twitter4j.http.RequestMethod $r2;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r5;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r5 = new twitter4j.http.HttpRequest;

        $r2 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod DELETE>;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r5.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r2, $r1, null, null, $r3);

        $r4 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r5);

        return $r4;
    }

    public twitter4j.http.HttpResponse delete(java.lang.String, twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.Authorization $r2;
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod DELETE>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, null, $r2, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse delete(java.lang.String, twitter4j.http.HttpParameter[]) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod DELETE>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, $r2, null, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse delete(java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpRequest $r7;
        twitter4j.http.Authorization $r3;
        twitter4j.http.HttpResponse $r6;
        java.util.Map $r5;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r4;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r3 := @parameter2: twitter4j.http.Authorization;

        $r7 = new twitter4j.http.HttpRequest;

        $r4 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod DELETE>;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r7.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r4, $r1, $r2, $r3, $r5);

        $r6 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r7);

        return $r6;
    }

    public twitter4j.http.HttpResponse get(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r4;
        java.util.Map $r3;
        twitter4j.http.RequestMethod $r2;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r5;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r5 = new twitter4j.http.HttpRequest;

        $r2 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod GET>;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r5.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r2, $r1, null, null, $r3);

        $r4 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r5);

        return $r4;
    }

    public twitter4j.http.HttpResponse get(java.lang.String, twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.Authorization $r2;
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod GET>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, null, $r2, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse get(java.lang.String, twitter4j.http.HttpParameter[]) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod GET>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, $r2, null, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse get(java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpRequest $r7;
        twitter4j.http.Authorization $r3;
        twitter4j.http.HttpResponse $r6;
        java.util.Map $r5;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r4;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r3 := @parameter2: twitter4j.http.Authorization;

        $r7 = new twitter4j.http.HttpRequest;

        $r4 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod GET>;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r7.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r4, $r1, $r2, $r3, $r5);

        $r6 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r7);

        return $r6;
    }

    public twitter4j.http.HttpResponse head(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r4;
        java.util.Map $r3;
        twitter4j.http.RequestMethod $r2;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r5;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r5 = new twitter4j.http.HttpRequest;

        $r2 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod HEAD>;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r5.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r2, $r1, null, null, $r3);

        $r4 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r5);

        return $r4;
    }

    public twitter4j.http.HttpResponse head(java.lang.String, twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.Authorization $r2;
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod HEAD>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, null, $r2, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse head(java.lang.String, twitter4j.http.HttpParameter[]) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod HEAD>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, $r2, null, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse head(java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpRequest $r7;
        twitter4j.http.Authorization $r3;
        twitter4j.http.HttpResponse $r6;
        java.util.Map $r5;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r4;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r3 := @parameter2: twitter4j.http.Authorization;

        $r7 = new twitter4j.http.HttpRequest;

        $r4 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod HEAD>;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r7.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r4, $r1, $r2, $r3, $r5);

        $r6 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r7);

        return $r6;
    }

    public twitter4j.http.HttpResponse post(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r4;
        java.util.Map $r3;
        twitter4j.http.RequestMethod $r2;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r5;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r5 = new twitter4j.http.HttpRequest;

        $r2 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod POST>;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r5.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r2, $r1, null, null, $r3);

        $r4 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r5);

        return $r4;
    }

    public twitter4j.http.HttpResponse post(java.lang.String, twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.Authorization $r2;
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod POST>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, null, $r2, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse post(java.lang.String, twitter4j.http.HttpParameter[]) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod POST>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, $r2, null, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse post(java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpRequest $r7;
        twitter4j.http.Authorization $r3;
        twitter4j.http.HttpResponse $r6;
        java.util.Map $r5;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r4;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r3 := @parameter2: twitter4j.http.Authorization;

        $r7 = new twitter4j.http.HttpRequest;

        $r4 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod POST>;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r7.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r4, $r1, $r2, $r3, $r5);

        $r6 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r7);

        return $r6;
    }

    public twitter4j.http.HttpResponse put(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r4;
        java.util.Map $r3;
        twitter4j.http.RequestMethod $r2;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r5;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r5 = new twitter4j.http.HttpRequest;

        $r2 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod PUT>;

        $r3 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r5.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r2, $r1, null, null, $r3);

        $r4 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r5);

        return $r4;
    }

    public twitter4j.http.HttpResponse put(java.lang.String, twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.Authorization $r2;
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.Authorization;

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod PUT>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, null, $r2, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse put(java.lang.String, twitter4j.http.HttpParameter[]) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpResponse $r5;
        java.util.Map $r4;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r3;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpRequest $r6;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r6 = new twitter4j.http.HttpRequest;

        $r3 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod PUT>;

        $r4 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r6.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r3, $r1, $r2, null, $r4);

        $r5 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r6);

        return $r5;
    }

    public twitter4j.http.HttpResponse put(java.lang.String, twitter4j.http.HttpParameter[], twitter4j.http.Authorization) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpRequest $r7;
        twitter4j.http.Authorization $r3;
        twitter4j.http.HttpResponse $r6;
        java.util.Map $r5;
        twitter4j.http.HttpParameter[] $r2;
        twitter4j.http.RequestMethod $r4;
        java.lang.String $r1;
        twitter4j.http.HttpClientWrapper r0;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        $r3 := @parameter2: twitter4j.http.Authorization;

        $r7 = new twitter4j.http.HttpRequest;

        $r4 = <twitter4j.http.RequestMethod: twitter4j.http.RequestMethod PUT>;

        $r5 = r0.<twitter4j.http.HttpClientWrapper: java.util.Map requestHeaders>;

        specialinvoke $r7.<twitter4j.http.HttpRequest: void <init>(twitter4j.http.RequestMethod,java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization,java.util.Map)>($r4, $r1, $r2, $r3, $r5);

        $r6 = specialinvoke r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse request(twitter4j.http.HttpRequest)>($r7);

        return $r6;
    }

    public void setHttpResponseListener(twitter4j.http.HttpResponseListener)
    {
        twitter4j.http.HttpClientWrapper r0;
        twitter4j.http.HttpResponseListener $r1;

        r0 := @this: twitter4j.http.HttpClientWrapper;

        $r1 := @parameter0: twitter4j.http.HttpResponseListener;

        r0.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponseListener httpResponseListener> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <twitter4j.http.HttpClientWrapper: long serialVersionUID> = -6511977105603119379L;

        return;
    }
}
