public class com.inmobi.androidsdk.ai.container.IMWebView extends android.webkit.WebView implements android.view.ViewTreeObserver$OnGlobalLayoutListener, java.io.Serializable
{
    public static final java.lang.String ACTION_KEY;
    private static final java.lang.String AD_PATH;
    protected static final int BACKGROUND_ID;
    private static final java.lang.String CURRENT_FILE;
    public static final java.lang.String DIMENSIONS;
    private static final java.lang.String ERROR_ACTION;
    private static final java.lang.String ERROR_MESSAGE;
    public static final java.lang.String EXPAND_URL;
    private static final int MESSAGE_CLOSE;
    private static final int MESSAGE_EXPAND;
    private static final int MESSAGE_HIDE;
    private static final int MESSAGE_OPEN;
    private static final int MESSAGE_RAISE_ERROR;
    private static final int MESSAGE_RESIZE;
    private static final int MESSAGE_SEND_EXPAND_CLOSE;
    private static final int MESSAGE_SHOW;
    protected static final int PLACEHOLDER_ID;
    public static final java.lang.String PLAYER_PROPERTIES;
    private static final java.lang.String RESIZE_HEIGHT;
    private static final java.lang.String RESIZE_WIDTH;
    private static int[] attrs;
    private static java.lang.String mBridgeScriptPath;
    private static java.lang.String mScriptPath;
    private static com.inmobi.androidsdk.ai.controller.util.AVPlayer player;
    private static final long serialVersionUID;
    private boolean bGotLayoutParams;
    private boolean bKeyboardOut;
    private boolean bPageFinished;
    private android.app.Activity mActivity;
    private com.inmobi.androidsdk.impl.AdUnit mAdUnit;
    private int mContentViewHeight;
    private int mDefaultHeight;
    private int mDefaultWidth;
    private float mDensity;
    private android.os.Handler mHandler;
    private android.view.ViewGroup mIMWebViewParent;
    private int mIndex;
    private int mInitLayoutHeight;
    private int mInitLayoutWidth;
    private boolean mIsInterstitialAd;
    private boolean mIsViewable;
    private com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener;
    private java.lang.String mLocalFilePath;
    private android.os.Message mMsgOnPageFinished;
    private android.os.Message mMsgOnSearchAdClicked;
    private int mOrientation;
    private com.inmobi.androidsdk.ai.container.IMWebView$TimeOut mTimeOut;
    private com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController;
    private com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState;
    android.webkit.WebChromeClient mWebChromeClient;
    android.webkit.WebViewClient mWebViewClient;
    private final java.util.HashSet registeredProtocols;

    static void <clinit>()
    {
        int[] $r0;

        <com.inmobi.androidsdk.ai.container.IMWebView: long serialVersionUID> = 7098506283154473782L;

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String RESIZE_WIDTH> = "resize_width";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String RESIZE_HEIGHT> = "resize_height";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String PLAYER_PROPERTIES> = "player_properties";

        <com.inmobi.androidsdk.ai.container.IMWebView: int PLACEHOLDER_ID> = 333;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_SHOW> = 1003;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_SEND_EXPAND_CLOSE> = 1005;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_RESIZE> = 1000;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_RAISE_ERROR> = 1009;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_OPEN> = 1006;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_HIDE> = 1002;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_EXPAND> = 1004;

        <com.inmobi.androidsdk.ai.container.IMWebView: int MESSAGE_CLOSE> = 1001;

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String EXPAND_URL> = "expand_url";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String ERROR_MESSAGE> = "message";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String ERROR_ACTION> = "action";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String DIMENSIONS> = "expand_dimensions";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String CURRENT_FILE> = "_mraid_current";

        <com.inmobi.androidsdk.ai.container.IMWebView: int BACKGROUND_ID> = 435;

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String AD_PATH> = "AD_PATH";

        <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String ACTION_KEY> = "action";

        $r0 = newarray (int)[2];

        $r0[0] = 16843039;

        $r0[1] = 16843040;

        <com.inmobi.androidsdk.ai.container.IMWebView: int[] attrs> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void <init>(android.content.Context,boolean)>($r1, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView$1 $r8;
        android.content.res.TypedArray $r5;
        java.util.HashSet $r7;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.util.AttributeSet $r2;
        int[] $r3;
        com.inmobi.androidsdk.ai.controller.JSUtilityController $r6;
        int $i0, $i1;
        com.inmobi.androidsdk.ai.container.IMWebView$3 $r10;
        com.inmobi.androidsdk.ai.container.IMWebView$2 $r9;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r4;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState LOADING>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r4;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols> = $r7;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsInterstitialAd> = 0;

        $r8 = new com.inmobi.androidsdk.ai.container.IMWebView$1;

        specialinvoke $r8.<com.inmobi.androidsdk.ai.container.IMWebView$1: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler> = $r8;

        $r9 = new com.inmobi.androidsdk.ai.container.IMWebView$2;

        specialinvoke $r9.<com.inmobi.androidsdk.ai.container.IMWebView$2: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebViewClient mWebViewClient> = $r9;

        $r10 = new com.inmobi.androidsdk.ai.container.IMWebView$3;

        specialinvoke $r10.<com.inmobi.androidsdk.ai.container.IMWebView$3: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebChromeClient mWebChromeClient> = $r10;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable> = 1;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void initialize()>();

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        $r3 = <com.inmobi.androidsdk.ai.container.IMWebView: int[] attrs>;

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $i0 = -1;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, $i0);

        $i1 = -1;

        $i1 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, $i1);

        if $i0 <= 0 goto label1;

        if $i1 <= 0 goto label1;

        $r6 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke $r6.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void setMaxSize(int,int)>($i0, $i1);

     label1:
        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.content.Context, com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener)
    {
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView$1 $r5;
        com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener $r2;
        java.util.HashSet $r4;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$3 $r7;
        com.inmobi.androidsdk.ai.container.IMWebView$2 $r6;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r3;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        $r3 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState LOADING>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols> = $r4;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsInterstitialAd> = 0;

        $r5 = new com.inmobi.androidsdk.ai.container.IMWebView$1;

        specialinvoke $r5.<com.inmobi.androidsdk.ai.container.IMWebView$1: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler> = $r5;

        $r6 = new com.inmobi.androidsdk.ai.container.IMWebView$2;

        specialinvoke $r6.<com.inmobi.androidsdk.ai.container.IMWebView$2: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebViewClient mWebViewClient> = $r6;

        $r7 = new com.inmobi.androidsdk.ai.container.IMWebView$3;

        specialinvoke $r7.<com.inmobi.androidsdk.ai.container.IMWebView$3: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebChromeClient mWebChromeClient> = $r7;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable> = 1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setListener(com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener)>($r2);

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void initialize()>();

        return;
    }

    public void <init>(android.content.Context, boolean)
    {
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView$1 $r4;
        java.util.HashSet $r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$3 $r6;
        com.inmobi.androidsdk.ai.container.IMWebView$2 $r5;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r2;
        android.app.Activity $r7;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState LOADING>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols> = $r3;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsInterstitialAd> = 0;

        $r4 = new com.inmobi.androidsdk.ai.container.IMWebView$1;

        specialinvoke $r4.<com.inmobi.androidsdk.ai.container.IMWebView$1: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler> = $r4;

        $r5 = new com.inmobi.androidsdk.ai.container.IMWebView$2;

        specialinvoke $r5.<com.inmobi.androidsdk.ai.container.IMWebView$2: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebViewClient mWebViewClient> = $r5;

        $r6 = new com.inmobi.androidsdk.ai.container.IMWebView$3;

        specialinvoke $r6.<com.inmobi.androidsdk.ai.container.IMWebView$3: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebChromeClient mWebChromeClient> = $r6;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable> = 1;

        $r7 = (android.app.Activity) $r1;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.app.Activity mActivity> = $r7;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsInterstitialAd> = $z0;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void initialize()>();

        return;
    }

    static com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener access$0(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener>;

        return r1;
    }

    static void access$1(com.inmobi.androidsdk.ai.container.IMWebView, com.inmobi.androidsdk.ai.container.IMWebView$ViewState)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter1: com.inmobi.androidsdk.ai.container.IMWebView$ViewState;

        $r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r1;

        return;
    }

    static void access$10(com.inmobi.androidsdk.ai.container.IMWebView, int)
    {
        int $i0;
        com.inmobi.androidsdk.ai.container.IMWebView $r0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $i0 := @parameter1: int;

        $r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mDefaultWidth> = $i0;

        return;
    }

    static com.inmobi.androidsdk.ai.controller.JSUtilityController access$11(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        com.inmobi.androidsdk.ai.controller.JSUtilityController r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        return r1;
    }

    static com.inmobi.androidsdk.impl.AdUnit access$12(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        com.inmobi.androidsdk.impl.AdUnit r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.impl.AdUnit mAdUnit>;

        return r1;
    }

    static android.os.Message access$13(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        android.os.Message r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Message mMsgOnSearchAdClicked>;

        return r1;
    }

    static boolean access$14(com.inmobi.androidsdk.ai.container.IMWebView, android.net.Uri)
    {
        android.net.Uri $r1;
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        boolean $z0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter1: android.net.Uri;

        $z0 = specialinvoke $r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean isRegisteredProtocol(android.net.Uri)>($r1);

        return $z0;
    }

    static com.inmobi.androidsdk.ai.container.IMWebView$ViewState access$2(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        return r1;
    }

    static void access$3(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        specialinvoke $r0.<com.inmobi.androidsdk.ai.container.IMWebView: void closeResized()>();

        return;
    }

    static boolean access$4(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        boolean z0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        z0 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsInterstitialAd>;

        return z0;
    }

    static android.app.Activity access$5(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        android.app.Activity r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.app.Activity mActivity>;

        return r1;
    }

    static void access$6(com.inmobi.androidsdk.ai.container.IMWebView, android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.inmobi.androidsdk.ai.container.IMWebView $r0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter1: android.os.Bundle;

        specialinvoke $r0.<com.inmobi.androidsdk.ai.container.IMWebView: void doExpand(android.os.Bundle)>($r1);

        return;
    }

    static android.os.Message access$7(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        com.inmobi.androidsdk.ai.container.IMWebView $r0;
        android.os.Message r1;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Message mMsgOnPageFinished>;

        return r1;
    }

    static float access$8(com.inmobi.androidsdk.ai.container.IMWebView)
    {
        float f0;
        com.inmobi.androidsdk.ai.container.IMWebView $r0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        f0 = $r0.<com.inmobi.androidsdk.ai.container.IMWebView: float mDensity>;

        return f0;
    }

    static void access$9(com.inmobi.androidsdk.ai.container.IMWebView, int)
    {
        int $i0;
        com.inmobi.androidsdk.ai.container.IMWebView $r0;

        $r0 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView;

        $i0 := @parameter1: int;

        $r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mDefaultHeight> = $i0;

        return;
    }

    public static void appendBridgeJSFiles(java.lang.StringBuffer)
    {
        java.lang.StringBuffer $r0;

        $r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(0, "<script>(function(){var mraid=window.mraid={};var STATES=mraid.STATES={LOADING:\"loading\",DEFAULT:\"default\",RESIZED:\"resized\",EXPANDED:\"expanded\"};var EVENTS=mraid.EVENTS={READY:\"ready\",ERROR:\"error\",STATECHANGE:\"stateChange\",VIEWABLECHANGE:\"viewableChange\"};var size={width:0,height:0};var defaultPosition={x:0,y:0,width:0,height:0};var maxSize={width:0,height:0};var listeners={};var EventListeners=function(event){this.event=event;this.count=0;var listeners={};this.add=function(func){var id=String(func);if(!listeners[id]){listeners[id]=func;this.count++}};this.remove=function(func){var id=String(func);if(listeners[id]){listeners[id]=null;delete listeners[id];this.count--;return true}else return false};this.removeAll=function(){for(var id in listeners)this.remove(listeners[id])};this.broadcast=function(args){for(var id in listeners)listeners[id].apply({},args)};this.toString=function(){var out=[event,\":\"];for(var id in listeners)out.push(\"|\",id,\"|\");return out.join(\"\")}};mraidview.addEventListener(EVENTS.READY,function(){broadcastEvent(EVENTS.READY)});mraidview.addEventListener(EVENTS.STATECHANGE,function(state){broadcastEvent(EVENTS.STATECHANGE,state)});mraidview.addEventListener(EVENTS.VIEWABLECHANGE,function(state){broadcastEvent(EVENTS.VIEWABLECHANGE,state)});mraidview.addEventListener(\"error\",function(message,action){broadcastEvent(EVENTS.ERROR,message,action)});var clone=function(obj){var f=function(){};f.prototype=obj;return new f};var stringify=function(obj){if(typeof obj==\"object\")if(obj.push){var out=[];for(var p in obj)out.push(obj[p]);return\"[\"+out.join(\",\")+\"]\"}else{var out=[];for(var p in obj)out.push(\"\'\"+p+\"\':\"+obj[p]);return\"{\"+out.join(\",\")+\"}\"}else return String(obj)};var valid=function(obj,validators,action,full){if(full)if(obj===undefined){broadcastEvent(EVENTS.ERROR,\"Required object missing.\",action);return false}else for(var i in validators)if(obj[i]===undefined){broadcastEvent(EVENTS.ERROR,\"Object missing required property \"+i,action);return false}for(var i in obj)if(!validators[i]){broadcastEvent(EVENTS.ERROR,\"Invalid property specified - \"+i+\".\",action);return false}else if(!validators[i](obj[i])){broadcastEvent(EVENTS.ERROR,\"Value of property \"+i+\"<\"+obj[i]+\">\"+\" is not valid type.\",action);return false}return true};var contains=function(value,array){for(var i in array)if(array[i]==value)return true;return false};var broadcastEvent=function(){var args=new Array(arguments.length);for(var i=0;i<arguments.length;i++)args[i]=arguments[i];var event=args.shift();try{if(listeners[event])listeners[event].broadcast(args)}catch(e){}};var trim=function(s){var l=0;var r=s.length-1;while(l<s.length&&s[l]==\" \")l++;while(r>l&&s[r]==\" \")r-=1;return s.substring(l,r+1)};mraid.addEventListener=function(event,listener){mraid.log(\"In mraid addEventListener\");if(!event||!listener)broadcastEvent(EVENTS.ERROR,\"Both event and listener are required.\",\"addEventListener\");else if(!contains(event,EVENTS))broadcastEvent(EVENTS.ERROR,\"Unknown event: \"+event,\"addEventListener\");else{if(!listeners[event])listeners[event]=new EventListeners(event);listeners[event].add(listener)}};mraid.close=function(){mraidview.close()};mraid.expand=function(URL,dimensions){mraid.log(\"URL: \"+URL);mraidview.expand(URL,dimensions)};mraid.getMaxSize=function(){return clone(maxSize)};mraid.getSize=function(){return clone(size)};mraid.getState=function(){return mraidview.getState()};mraid.getViewable=function(){return mraidview.getViewable()};mraid.open=function(URL){if(!URL)broadcastEvent(EVENTS.ERROR,\"URL is required.\",\"open\");else mraidview.open(URL)};mraid.removeEventListener=function(event,listener){if(!event)broadcastEvent(EVENTS.ERROR,\"Must specify an event.\",\"removeEventListener\");else{if(listener&&(!listeners[event]||!listeners[event].remove(listener))){broadcastEvent(EVENTS.ERROR,\"Listener not currently registered for event\",\"removeEventListener\");return}else if(listeners[event])listeners[event].removeAll();if(listeners[event]&&listeners[event].count==0){listeners[event]=null;delete listeners[event]}}};mraid.resize=function(width,height){if(width==null||height==null||isNaN(width)||isNaN(height)||width<0||height<0)broadcastEvent(EVENTS.ERROR,\"Requested size must be numeric values between 0 and maxSize.\",\"resize\");else if(width>maxSize.width||height>maxSize.height)broadcastEvent(EVENTS.ERROR,\"Request (\"+width+\" x \"+height+\") exceeds maximum allowable size of (\"+maxSize.width+\" x \"+maxSize.height+\")\",\"resize\");else if(width==size.width&&height==size.height)broadcastEvent(EVENTS.ERROR,\"Requested size equals current size.\",\"resize\");else mraidview.resize(width,height)};mraid.log=function(message){if(!message)broadcastEvent(EVENTS.ERROR,\"message is required.\",\"log\");else mraidview.log(message)};mraid.asyncPing=function(URL){if(!URL)broadcastEvent(EVENTS.ERROR,\"URL is required.\",\"asyncPing\");else mraidview.asyncPing(URL)};mraid.makeCall=function(number){mraid.log(\"heelo\");if(!number||typeof number!=\"string\"||trim(number).length==0)broadcastEvent(EVENTS.ERROR,\"Request must provide a number to call.\",\"makeCall\");else{mraid.log(\"mraid makecall\");mraidview.makeCall(number)}};mraid.sendMail=function(recipient,subject,body){if(!recipient||typeof recipient!=\"string\"||trim(recipient).length==0)broadcastEvent(EVENTS.ERROR,\"Request must specify a recipient.\",\"sendMail\");else mraidview.sendMail(recipient,subject,body)};mraid.sendSMS=function(recipient,body){if(!recipient||typeof recipient!=\"string\"||trim(recipient).length==0)broadcastEvent(EVENTS.ERROR,\"Request must specify a recipient.\",\"sendSMS\");else mraidview.sendSMS(recipient,body)}})();</script>");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(0, "<script>(function(){var c=window.mraidview={},f={};c.fireReadyEvent=function(){c.log(\"In mraidview.fireReadyEvent\");var a=f.ready;if(a!=null)for(var b=0;b<a.length;b++)a[b]();return\"OK\"};c.fireStateChangeEvent=function(a){c.log(\"In mraidview.fireStateChangeEvent\");var b=f.stateChange;if(b!=null)for(var d=0;d<b.length;d++)b[d](a);return\"OK\"};c.fireViewableChangeEvent=function(a){c.log(\"In mraidview.fireViewableChangeEvent\");var b=f.viewableChange;if(b!=null)for(var d=0;d<b.length;d++)b[d](a);return\"OK\"};c.fireErrorEvent=function(a,b){var d=f.error;if(d!=null)for(var c=0;c<d.length;c++)d[c](a,b);return\"OK\"};c.showAlert=function(a){utilityController.showAlert(a)};c.zeroPad=function(a){var b=\"\";a<10&&(b+=\"0\");b+=a;return b};c.addEventListener=function(a,b){var c=f[a];c==null&&(f[a]=[],c=f[a]);for(var e in c)if(b==e)return;c.push(b)};c.removeEventListener=function(a,b){var c=f[a];c!=null&&c.remove(b)};c.close=function(){try{displayController.close()}catch(a){c.showAlert(\"close: \"+a)}};c.expand=function(a,b){try{b?this.dimensions=b:b=null,c.log(\"mraidview expand\"),displayController.expand(a,c.stringify(b))}catch(d){c.showAlert(\"executeNativeExpand: \"+d+\", dimensions = \"+b+\", URL = \"+a)}};c.open=function(a){try{displayController.open(a)}catch(b){c.showAlert(\"open: \"+b)}};c.resize=function(a,b){try{displayController.resize(a,b)}catch(d){c.showAlert(\"resize: \"+d)}};c.getState=function(){try{return String(displayController.getState())}catch(a){c.showAlert(\"getState: \"+a)}};c.getViewable=function(){try{return displayController.getViewable()}catch(a){c.showAlert(\"getViewable: \"+a)}};c.log=function(a){try{utilityController.log(a)}catch(b){c.showAlert(\"log: \"+b)}};c.asyncPing=function(a){try{utilityController.asyncPing(a)}catch(b){c.showAlert(\"asyncPing: \"+b)}};c.close=function(){try{displayController.close()}catch(a){c.showAlert(\"close: \"+a)}};c.makeCall=function(a){try{utilityController.makeCall(a)}catch(b){c.showAlert(\"makeCall: \"+b)}};c.sendMail=function(a,b,d){try{utilityController.sendMail(a,b,d)}catch(e){c.showAlert(\"sendMail: \"+e)}};c.sendSMS=function(a,b){try{utilityController.sendSMS(a,b)}catch(d){c.showAlert(\"sendSMS: \"+d)}};c.stringify=function(a){if(typeof JSON===\"undefined\"){var b=\"\",d;if(typeof a.length==\"undefined\")return c.stringifyArg(a);for(d=0;d<a.length;d++)d>0&&(b+=\",\"),b+=c.stringifyArg(a[d]);b+=\"]\";return b}else return JSON.stringify(a)};c.stringifyArg=function(a){var b,d,e;d=typeof a;b=\"\";if(d===\"number\"||d===\"boolean\")b+=args;else if(a instanceof Array)b=b+\"[\"+a+\"]\";else if(a instanceof Object){d=!0;b+=\"{\";for(e in a)a[e]!==null&&(d||(b+=\",\"),b=b+\'\"\'+e+\'\":\',d=typeof a[e],d===\"number\"||d===\"boolean\"?b+=a[e]:typeof a[e]===\"function\"?b+=\'\"\"\':a[e]instanceof Object?b+=this.stringify(args[i][e]):b=b+\'\"\'+a[e]+\'\"\',d=!1);b+=\"}\"}else a=a.replace(/\\\\/g,\"\\\\\\\\\"),a=a.replace(/\"/g,\'\\\\\"\'),b=b+\'\"\'+a+\'\"\';c.showAlert(\"json:\"+b);return b}})();</script>");

        return;
    }

    public static android.graphics.Bitmap bitmapFromJar(java.lang.String)
    {
        java.lang.Throwable $r12;
        java.net.URL $r6;
        java.util.jar.JarFile r2;
        java.util.jar.JarEntry $r9;
        int $i0;
        java.lang.String $r0, $r7, r8;
        boolean $z0;
        java.lang.Exception r1, $r13, $r14, $r15;
        android.graphics.Bitmap $r11;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.io.InputStream r3, $r10;

        $r0 := @parameter0: java.lang.String;

        r3 = null;

        $r4 = class "Lcom/inmobi/androidsdk/ai/controller/JSAssetController;";

     label01:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String getFile()>();

     label02:
        r8 = $r7;

     label03:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(5);

     label06:
        r8 = $r7;

     label07:
        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>("!");

     label08:
        if $i0 <= 0 goto label11;

     label09:
        $r7 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label10:
        r8 = $r7;

     label11:
        r2 = new java.util.jar.JarFile;

     label12:
        specialinvoke r2.<java.util.jar.JarFile: void <init>(java.lang.String)>(r8);

        $r9 = virtualinvoke r2.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>($r0);

        $r10 = virtualinvoke r2.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r9);

     label13:
        r3 = $r10;

     label14:
        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r10);

     label15:
        if $r10 == null goto label31;

     label16:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label17:
        return $r11;

     label18:
        r1 := @caughtexception;

     label19:
        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

     label20:
        if $z0 == 0 goto label22;

     label21:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception in reading bitmap from Jar", r1);

     label22:
        if r3 == null goto label24;

     label23:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label24:
        return null;

     label25:
        $r12 := @caughtexception;

        if r3 == null goto label27;

     label26:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label27:
        throw $r12;

     label28:
        $r13 := @caughtexception;

        goto label17;

     label29:
        $r14 := @caughtexception;

        goto label24;

     label30:
        $r15 := @caughtexception;

        goto label27;

     label31:
        return $r11;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Exception from label16 to label17 with label28;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label29;
        catch java.lang.Exception from label26 to label27 with label30;
    }

    private void buildCloseButton(android.view.ViewGroup)
    {
        android.content.Context $r4;
        android.widget.ImageView r2, $r7;
        android.view.ViewGroup $r1;
        android.widget.RelativeLayout$LayoutParams r3, $r6;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.graphics.Bitmap $r5;
        com.inmobi.androidsdk.ai.container.IMWebView$4 $r8;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.view.ViewGroup;

        $r6 = new android.widget.RelativeLayout$LayoutParams;

        r3 = $r6;

        specialinvoke $r6.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r3.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(9);

        $r7 = new android.widget.ImageView;

        r2 = $r7;

        $r4 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r7.<android.widget.ImageView: void <init>(android.content.Context)>($r4);

        $r5 = staticinvoke <com.inmobi.androidsdk.ai.container.IMWebView: android.graphics.Bitmap bitmapFromJar(java.lang.String)>("bitmaps/close_button.png");

        virtualinvoke r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r5);

        virtualinvoke $r1.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r3);

        $r8 = new com.inmobi.androidsdk.ai.container.IMWebView$4;

        specialinvoke $r8.<com.inmobi.androidsdk.ai.container.IMWebView$4: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        virtualinvoke r2.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>($r8);

        return;
    }

    private android.widget.FrameLayout changeContentArea(com.inmobi.androidsdk.ai.controller.JSController$Dimensions)
    {
        android.content.Context $r10;
        android.view.ViewParent $r8;
        android.widget.FrameLayout r4, r7, $r12;
        android.widget.RelativeLayout$LayoutParams $r17;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSController$Dimensions $r1;
        int $i0, i1, $i2;
        android.view.View $r6;
        android.widget.FrameLayout$LayoutParams r3, r11, $r15;
        android.view.ViewGroup$LayoutParams $r13;
        android.view.ViewGroup r9;
        android.widget.ScrollView r2, $r14;
        android.widget.RelativeLayout r5, $r16;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.controller.JSController$Dimensions;

        $r6 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.View getRootView()>();

        $r6 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>(16908290);

        r7 = (android.widget.FrameLayout) $r6;

        $r8 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewParent getParent()>();

        r9 = (android.view.ViewGroup) $r8;

        $i0 = virtualinvoke r9.<android.view.ViewGroup: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 < $i0 goto label5;

     label2:
        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mIndex> = i1;

        $r12 = new android.widget.FrameLayout;

        r4 = $r12;

        $r10 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r12.<android.widget.FrameLayout: void <init>(android.content.Context)>($r10);

        virtualinvoke r4.<android.widget.FrameLayout: void setId(int)>(333);

        $r13 = new android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getHeight()>();

        specialinvoke $r13.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>($i0, $i2);

        virtualinvoke r9.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r4, i1, $r13);

        virtualinvoke r9.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup mIMWebViewParent> = r9;

        $r14 = new android.widget.ScrollView;

        r2 = $r14;

        $r10 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r14.<android.widget.ScrollView: void <init>(android.content.Context)>($r10);

        r11 = new android.widget.FrameLayout$LayoutParams;

        r3 = r11;

        specialinvoke r11.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r2.<android.widget.FrameLayout: void setId(int)>(435);

        if $r1 == null goto label3;

        i1 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        $i0 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        virtualinvoke r2.<android.widget.FrameLayout: void setPadding(int,int,int,int)>(i1, $i0, 0, 0);

     label3:
        if $r1 != null goto label6;

        $r15 = new android.widget.FrameLayout$LayoutParams;

        r11 = $r15;

        specialinvoke $r15.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

     label4:
        $r16 = new android.widget.RelativeLayout;

        r5 = $r16;

        $r10 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r16.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r10);

        $r17 = new android.widget.RelativeLayout$LayoutParams;

        specialinvoke $r17.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r5.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r0, $r17);

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void buildCloseButton(android.view.ViewGroup)>(r5);

        virtualinvoke r2.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r11);

        virtualinvoke r7.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r2, r3);

        return r2;

     label5:
        $r6 = virtualinvoke r9.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        if $r6 == r0 goto label2;

        i1 = i1 + 1;

        goto label1;

     label6:
        $r15 = new android.widget.FrameLayout$LayoutParams;

        r11 = $r15;

        i1 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width>;

        $i0 = $r1.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height>;

        specialinvoke $r15.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(i1, $i0);

        goto label4;
    }

    private void closeResized()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;
        com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener>;

        if $r1 == null goto label1;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener>;

        interfaceinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener: boolean onResizeClose()>();

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.mraidview.fireChangeEvent({ state: \'default\', size: { width: ");

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mDefaultWidth>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height: ");

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mDefaultHeight>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("});");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("IMWebView-> closeResized: injection: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r4);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>($r3);

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void resetLayout()>();

        return;
    }

    private void doExpand(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable $r4;
        android.widget.FrameLayout $r8;
        com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener $r9;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSController$Dimensions r5;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r2, $r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        $r3 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState DEFAULT>;

        if $r2 == $r3 goto label1;

        return;

     label1:
        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void handleOrientation()>();

        $r4 = virtualinvoke $r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("expand_dimensions");

        r5 = (com.inmobi.androidsdk.ai.controller.JSController$Dimensions) $r4;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Dimentions: {");

        $i0 = r5.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int x>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $i0 = r5.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int y>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $i0 = r5.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int width>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $i0 = r5.<com.inmobi.androidsdk.ai.controller.JSController$Dimensions: int height>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r7);

     label2:
        $r7 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("expand_url");

        $z0 = staticinvoke <android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>($r7);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void loadUrl(java.lang.String)>($r7);

     label3:
        $r8 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.widget.FrameLayout changeContentArea(com.inmobi.androidsdk.ai.controller.JSController$Dimensions)>(r5);

        virtualinvoke $r8.<android.widget.FrameLayout: void setBackgroundColor(int)>(0);

        $r9 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener>;

        if $r9 == null goto label4;

        $r9 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener>;

        interfaceinvoke $r9.<com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener: boolean onExpand()>();

     label4:
        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState EXPANDED>;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setState(com.inmobi.androidsdk.ai.container.IMWebView$ViewState)>($r2);

        return;
    }

    private int getContentViewHeight()
    {
        int $i0;
        android.view.View $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.View getRootView()>();

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(16908290);

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        return $i0;

     label1:
        return -1;
    }

    private static java.lang.String getStringFromFile(java.io.InputStream)
    {
        java.lang.StringBuilder r3;
        java.io.BufferedReader r1;
        java.lang.String $r5;
        java.io.InputStreamReader $r4;
        java.lang.Exception r2;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        r1 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

     label01:
        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke r1.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label02:
        r3 = new java.lang.StringBuilder;

     label03:
        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

     label04:
        $r5 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r5 != null goto label08;

     label06:
        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        return $r5;

     label08:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label09:
        goto label04;

     label10:
        r2 := @caughtexception;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label11;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception reading the JS file", r2);

     label11:
        return null;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private void handleOrientation()
    {
        java.lang.Exception r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.content.res.Configuration $r4;
        int i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.app.Activity $r2;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

     label1:
        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.app.Activity mActivity>;

        i0 = virtualinvoke $r2.<android.app.Activity: int getRequestedOrientation()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mOrientation> = i0;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.app.Activity mActivity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = $r4.<android.content.res.Configuration: int orientation>;

     label2:
        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label8;

        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Current requested orientation: ");

        $i1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mOrientation>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r6);

     label4:
        $r5 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Current orientation: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r6);

     label6:
        return;

     label7:
        r1 := @caughtexception;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label8;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception handling the orientation", r1);

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private void initStates()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", "IMWebView-> initStates");

     label1:
        $r1 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState LOADING>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r1;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable> = 0;

        return;
    }

    private void initialize()
    {
        android.content.Context $r2;
        android.view.WindowManager r4;
        android.util.DisplayMetrics r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.webkit.WebSettings $r6;
        com.inmobi.androidsdk.ai.controller.JSUtilityController $r7;
        android.webkit.WebViewClient $r8;
        int $i0;
        android.view.Display $r5;
        float $f0;
        android.view.ViewTreeObserver $r10;
        java.lang.Object $r3;
        android.webkit.WebChromeClient $r9;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setScrollContainer(boolean)>(0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setVerticalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setBackgroundColor(int)>(0);

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: float mDensity> = $f0;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bPageFinished> = 0;

        $r6 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r6.<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>(1);

        $r7 = new com.inmobi.androidsdk.ai.controller.JSUtilityController;

        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r7.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void <init>(com.inmobi.androidsdk.ai.container.IMWebView,android.content.Context)>(r0, $r2);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController> = $r7;

        $r7 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r7, "utilityController");

        $r8 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebViewClient mWebViewClient>;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setWebViewClient(android.webkit.WebViewClient)>($r8);

        $r9 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.webkit.WebChromeClient mWebChromeClient>;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setWebChromeClient(android.webkit.WebChromeClient)>($r9);

        $i0 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight> = $i0;

        $r10 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r10.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        return;
    }

    private boolean isRegisteredProtocol(android.net.Uri)
    {
        java.util.Iterator $r4;
        android.net.Uri $r1;
        java.util.HashSet $r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.Object $r5;
        java.lang.String $r2, r6;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols>;

        $r4 = virtualinvoke $r3.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label3:
        return 0;
    }

    private void loadInputStream(java.io.InputStream, java.lang.String)
    {
        java.lang.Throwable r9, r10, $r11;
        java.lang.IllegalStateException $r19;
        java.util.Timer r8, $r18;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.String $r1, $r2, $r3;
        java.io.IOException $r20;
        java.lang.Exception $r12, $r13, $r14, $r15;
        com.inmobi.androidsdk.ai.container.IMWebView$TimeOut $r5, $r16;
        com.inmobi.androidsdk.ai.controller.JSUtilityController r6;
        java.lang.StringBuilder $r7, $r17;
        java.io.InputStream $r4;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r4 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void reset()>();

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$TimeOut mTimeOut>;

        if $r5 == null goto label01;

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$TimeOut mTimeOut>;

        virtualinvoke $r5.<com.inmobi.androidsdk.ai.container.IMWebView$TimeOut: boolean cancel()>();

     label01:
        $r16 = new com.inmobi.androidsdk.ai.container.IMWebView$TimeOut;

        specialinvoke $r16.<com.inmobi.androidsdk.ai.container.IMWebView$TimeOut: void <init>(com.inmobi.androidsdk.ai.container.IMWebView)>(r0);

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$TimeOut mTimeOut> = $r16;

     label02:
        r6 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mBridgeScriptPath>;

        $r3 = <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mScriptPath>;

     label03:
        $r2 = virtualinvoke r6.<com.inmobi.androidsdk.ai.controller.JSUtilityController: java.lang.String writeToDiskWrap(java.io.InputStream,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>($r4, "_mraid_current", 1, $r1, $r2, $r3);

     label04:
        r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mLocalFilePath> = $r2;

        $r17 = new java.lang.StringBuilder;

     label05:
        $r7 = $r17;

     label06:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("file://");

     label07:
        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mLocalFilePath>;

     label08:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label09:
        $r2 = <java.io.File: java.lang.String separator>;

     label10:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_mraid_current");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r18 = new java.util.Timer;

     label12:
        r8 = $r18;

     label13:
        specialinvoke $r18.<java.util.Timer: void <init>()>();

     label14:
        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$TimeOut mTimeOut>;

     label15:
        virtualinvoke r8.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r5, 2000L, 2000L);

     label16:
        if $r1 == null goto label18;

     label17:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>($r1);

     label18:
        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r2);

     label19:
        if $r4 == null goto label21;

     label20:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label21:
        return;

     label22:
        r9 := @caughtexception;

     label23:
        $r19 = (java.lang.IllegalStateException) r9;

        virtualinvoke $r19.<java.lang.IllegalStateException: void printStackTrace()>();

     label24:
        if $r4 == null goto label26;

     label25:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label26:
        return;

     label27:
        r10 := @caughtexception;

     label28:
        $r20 = (java.io.IOException) r10;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

     label29:
        if $r4 == null goto label31;

     label30:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label31:
        return;

     label32:
        $r11 := @caughtexception;

        if $r4 == null goto label34;

     label33:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label34:
        throw $r11;

     label35:
        $r12 := @caughtexception;

        goto label26;

     label36:
        $r13 := @caughtexception;

        goto label31;

     label37:
        $r14 := @caughtexception;

        goto label34;

     label38:
        $r15 := @caughtexception;

        goto label21;

        catch java.lang.IllegalStateException from label03 to label04 with label22;
        catch java.lang.IllegalStateException from label06 to label07 with label22;
        catch java.lang.IllegalStateException from label08 to label09 with label22;
        catch java.lang.IllegalStateException from label10 to label11 with label22;
        catch java.lang.IllegalStateException from label13 to label14 with label22;
        catch java.lang.IllegalStateException from label15 to label16 with label22;
        catch java.lang.IllegalStateException from label17 to label19 with label22;
        catch java.io.IOException from label03 to label04 with label27;
        catch java.io.IOException from label06 to label07 with label27;
        catch java.io.IOException from label08 to label09 with label27;
        catch java.io.IOException from label10 to label11 with label27;
        catch java.io.IOException from label13 to label14 with label27;
        catch java.io.IOException from label15 to label16 with label27;
        catch java.io.IOException from label17 to label19 with label27;
        catch java.lang.Throwable from label02 to label05 with label32;
        catch java.lang.Throwable from label06 to label12 with label32;
        catch java.lang.Throwable from label13 to label16 with label32;
        catch java.lang.Throwable from label17 to label19 with label32;
        catch java.lang.Exception from label20 to label21 with label38;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Throwable from label28 to label29 with label32;
        catch java.lang.Exception from label30 to label31 with label36;
        catch java.lang.Exception from label33 to label34 with label37;
    }

    public static java.lang.String readFileFromJar(java.lang.String)
    {
        java.lang.Throwable $r11;
        java.net.URL $r6;
        java.util.jar.JarFile r2;
        java.util.jar.JarEntry $r9;
        int $i0;
        java.lang.String $r0, $r7, r8;
        boolean $z0;
        java.lang.Exception r1, $r12, $r13, $r14;
        java.lang.Class $r4;
        java.lang.ClassLoader $r5;
        java.io.InputStream r3, $r10;

        $r0 := @parameter0: java.lang.String;

        r3 = null;

        $r4 = class "Lcom/inmobi/androidsdk/ai/controller/JSAssetController;";

     label01:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String getFile()>();

     label02:
        r8 = $r7;

     label03:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("file:");

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(5);

     label06:
        r8 = $r7;

     label07:
        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>("!");

     label08:
        if $i0 <= 0 goto label11;

     label09:
        $r7 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label10:
        r8 = $r7;

     label11:
        r2 = new java.util.jar.JarFile;

     label12:
        specialinvoke r2.<java.util.jar.JarFile: void <init>(java.lang.String)>(r8);

        $r9 = virtualinvoke r2.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>($r0);

        $r10 = virtualinvoke r2.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>($r9);

     label13:
        r3 = $r10;

     label14:
        $r0 = staticinvoke <com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String getStringFromFile(java.io.InputStream)>($r10);

     label15:
        if $r10 == null goto label31;

     label16:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label17:
        return $r0;

     label18:
        r1 := @caughtexception;

     label19:
        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

     label20:
        if $z0 == 0 goto label22;

     label21:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception in reading File from JAR", r1);

     label22:
        if r3 == null goto label24;

     label23:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label24:
        return null;

     label25:
        $r11 := @caughtexception;

        if r3 == null goto label27;

     label26:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label27:
        throw $r11;

     label28:
        $r12 := @caughtexception;

        goto label17;

     label29:
        $r13 := @caughtexception;

        goto label24;

     label30:
        $r14 := @caughtexception;

        goto label27;

     label31:
        return $r0;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label04 with label25;
        catch java.lang.Throwable from label05 to label06 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label13 with label25;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Exception from label16 to label17 with label28;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label29;
        catch java.lang.Exception from label26 to label27 with label30;
    }

    private void reset()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSUtilityController $r3;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1, $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState EXPANDED>;

        if $r1 != $r2 goto label2;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void closeExpanded()>();

     label1:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void invalidate()>();

        $r3 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke $r3.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void deleteOldAds()>();

        $r3 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke $r3.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void stopAllListeners()>();

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void resetLayout()>();

        return;

     label2:
        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState RESIZED>;

        if $r1 != $r2 goto label1;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void closeResized()>();

        goto label1;
    }

    private void resetLayout()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bGotLayoutParams>;

        if $z0 == 0 goto label1;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mInitLayoutHeight>;

        $r1.<android.view.ViewGroup$LayoutParams: int height> = $i0;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mInitLayoutWidth>;

        $r1.<android.view.ViewGroup$LayoutParams: int width> = $i0;

     label1:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setVisibility(int)>(0);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void requestLayout()>();

        return;
    }

    public void addJavascriptObject(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r1, $r2);

        return;
    }

    public void clearView()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void reset()>();

        specialinvoke r0.<android.webkit.WebView: void clearView()>();

        return;
    }

    public void close()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Handler $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1001);

        return;
    }

    protected void closeExpanded()
    {
        java.lang.Throwable $r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Handler $r2;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        entermonitor r0;

     label1:
        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void resetContents()>();

        $r1 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState DEFAULT>;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setState(com.inmobi.androidsdk.ai.container.IMWebView$ViewState)>($r1);

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessage(int)>(1005);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void setVisibility(int)>(0);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void closeOpened(android.view.View)
    {
        android.content.Context $r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.view.View $r1, $r5;
        android.app.Activity $r3;
        android.view.Window $r4;
        android.view.ViewGroup $r6;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        $r3 = (android.app.Activity) $r2;

        $r4 = virtualinvoke $r3.<android.app.Activity: android.view.Window getWindow()>();

        $r5 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        $r6 = (android.view.ViewGroup) $r5;

        virtualinvoke $r6.<android.view.ViewGroup: void removeView(android.view.View)>($r1);

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void requestLayout()>();

        return;
    }

    public void deregisterProtocol(java.lang.String)
    {
        java.util.HashSet $r2;
        java.lang.String $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void expand(java.lang.String, com.inmobi.androidsdk.ai.controller.JSController$Dimensions)
    {
        android.os.Bundle r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSController$Dimensions $r2;
        android.os.Message $r4;
        android.os.Handler $r5;
        java.lang.String $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.inmobi.androidsdk.ai.controller.JSController$Dimensions;

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(1004);

        r3 = new android.os.Bundle;

        specialinvoke r3.<android.os.Bundle: void <init>()>();

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("expand_dimensions", $r2);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("expand_url", $r1);

        virtualinvoke $r4.<android.os.Message: void setData(android.os.Bundle)>(r3);

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public com.inmobi.androidsdk.impl.AdUnit getAdUnit()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.impl.AdUnit r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.impl.AdUnit mAdUnit>;

        return r1;
    }

    public android.net.ConnectivityManager getConnectivityManager()
    {
        android.net.ConnectivityManager $r3;
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.Object $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        return $r3;
    }

    com.inmobi.androidsdk.ai.controller.util.AVPlayer getPlayer()
    {
        android.content.Context $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.util.AVPlayer $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.util.AVPlayer player>;

        if $r2 == null goto label1;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.util.AVPlayer player>;

        virtualinvoke $r2.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void releasePlayer()>();

     label1:
        $r2 = new com.inmobi.androidsdk.ai.controller.util.AVPlayer;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke $r2.<com.inmobi.androidsdk.ai.controller.util.AVPlayer: void <init>(android.content.Context)>($r1);

        <com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.util.AVPlayer player> = $r2;

        $r2 = <com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.util.AVPlayer player>;

        return $r2;
    }

    public java.lang.String getSize()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        int $i0;
        float $f0, $f1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("{ width: ");

        $i0 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height: ");

        $i0 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getHeight()>();

        $f0 = (float) $i0;

        $f1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: float mDensity>;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getState()
    {
        java.lang.String $r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        $r2 = virtualinvoke $r1.<com.inmobi.androidsdk.ai.container.IMWebView$ViewState: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        return $r2;
    }

    public boolean getViewable()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        boolean z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        z0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable>;

        return z0;
    }

    public void hide()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Handler $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1002);

        return;
    }

    public void injectJavaScript(java.lang.String)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label2;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Injecting JavaScript: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r3);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("javascript:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r1);

     label2:
        return;
    }

    public boolean isExpanded()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1, $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState>;

        $r1 = <com.inmobi.androidsdk.ai.container.IMWebView$ViewState: com.inmobi.androidsdk.ai.container.IMWebView$ViewState EXPANDED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPageFinished()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        boolean z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        z0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bPageFinished>;

        return z0;
    }

    public void loadData(java.lang.String, java.lang.String, java.lang.String)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>($r1, "text/html", null);

        return;
    }

    public void loadFile(java.io.File, java.lang.String)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.String $r2;
        java.io.FileInputStream $r4;
        java.io.File $r1;
        java.lang.Exception r3;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.String;

        $r4 = new java.io.FileInputStream;

     label1:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void loadInputStream(java.io.InputStream,java.lang.String)>($r4, $r2);

     label2:
        return;

     label3:
        r3 := @caughtexception;

        $z0 = <com.inmobi.androidsdk.impl.Constants: boolean DEBUG>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception loading file", r3);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void loadUrl(java.lang.String)
    {
        java.lang.String $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void initStates()>();

        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r1);

        return;
    }

    public void loadUrl(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void loadUrl(java.lang.String,boolean,java.lang.String)>($r1, 0, $r2);

        return;
    }

    public void loadUrl(java.lang.String, boolean, java.lang.String)
    {
        java.lang.Throwable r3, $r9;
        android.content.Context $r6;
        java.net.URL r4, $r10;
        java.io.IOException $r11;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.content.res.AssetManager $r7;
        java.lang.String $r1, $r2, $r5;
        boolean $z0, $z1;
        java.io.InputStream $r8;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $z1 = staticinvoke <android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>($r1);

        if $z1 == 0 goto label11;

        if $z0 != 0 goto label10;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bPageFinished> = 0;

        $r10 = new java.net.URL;

        r4 = $r10;

     label01:
        specialinvoke $r10.<java.net.URL: void <init>(java.lang.String)>($r1);

        virtualinvoke r4.<java.net.URL: java.lang.String getFile()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("file:///android_asset/");

     label02:
        if $z0 == 0 goto label06;

     label03:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("file:///android_asset/", "");

        $r6 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r5);

     label04:
        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void loadInputStream(java.io.InputStream,java.lang.String)>($r8, $r2);

     label05:
        return;

     label06:
        $r8 = virtualinvoke r4.<java.net.URL: java.io.InputStream openStream()>();

     label07:
        goto label04;

     label08:
        r3 := @caughtexception;

        $r11 = (java.io.IOException) r3;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

        return;

     label09:
        $r9 := @caughtexception;

     label10:
        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r1);

     label11:
        return;

        catch java.net.MalformedURLException from label01 to label02 with label09;
        catch java.net.MalformedURLException from label03 to label04 with label09;
        catch java.net.MalformedURLException from label04 to label05 with label09;
        catch java.net.MalformedURLException from label06 to label07 with label09;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label04 to label05 with label08;
        catch java.io.IOException from label06 to label07 with label08;
    }

    protected void onAttachedToWindow()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $z0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bGotLayoutParams>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i0 = $r1.<android.view.ViewGroup$LayoutParams: int height>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mInitLayoutHeight> = $i0;

        $i0 = $r1.<android.view.ViewGroup$LayoutParams: int width>;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mInitLayoutWidth> = $i0;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bGotLayoutParams> = 1;

     label1:
        specialinvoke r0.<android.webkit.WebView: void onAttachedToWindow()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSUtilityController $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke $r1.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void stopAllListeners()>();

        specialinvoke r0.<android.webkit.WebView: void onDetachedFromWindow()>();

        return;
    }

    public void onGlobalLayout()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        int $i0, $i1;
        boolean z0, $z1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        z0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bKeyboardOut>;

        $z1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bKeyboardOut>;

        if $z1 != 0 goto label1;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight>;

        if $i0 < 0 goto label1;

        $i0 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        if $i0 < 0 goto label1;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight>;

        $i1 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        if $i0 == $i1 goto label1;

        z0 = 1;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>("window.mraidview.fireChangeEvent({ keyboardState: true});");

     label1:
        $z1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bKeyboardOut>;

        if $z1 == 0 goto label2;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight>;

        if $i0 < 0 goto label2;

        $i0 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        if $i0 < 0 goto label2;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight>;

        $i1 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        if $i0 != $i1 goto label2;

        z0 = 0;

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>("window.mraidview.fireChangeEvent({ keyboardState: false});");

     label2:
        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight>;

        if $i0 >= 0 goto label3;

        $i0 = specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: int getContentViewHeight()>();

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mContentViewHeight> = $i0;

     label3:
        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean bKeyboardOut> = z0;

        return;
    }

    public void open(java.lang.String)
    {
        android.content.Context $r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.content.Intent r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r5;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        r2 = new android.content.Intent;

        $r3 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        specialinvoke r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "Lcom/inmobi/androidsdk/IMBrowserActivity;");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("IMWebView-> open:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r5);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("extra_url", $r1);

        $r3 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        virtualinvoke $r3.<android.content.Context: void startActivity(android.content.Intent)>(r2);

        return;
    }

    public void openMap(java.lang.String, boolean)
    {
        java.lang.Throwable r1;
        android.content.Context $r7;
        android.net.Uri $r6;
        android.content.Intent r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r3 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("IMWebView-> Opening Map Url ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r5);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r3 = staticinvoke <com.inmobi.androidsdk.ai.controller.util.Utils: java.lang.String convert(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        r2 = new android.content.Intent;

     label1:
        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        specialinvoke r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r6);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r7 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.content.Context getContext()>();

        virtualinvoke $r7.<android.content.Context: void startActivity(android.content.Intent)>(r2);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Activity not found.", r1);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public void raiseError(java.lang.String, java.lang.String)
    {
        android.os.Bundle r3;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Message $r4;
        android.os.Handler $r5;
        java.lang.String $r1, $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(1009);

        r3 = new android.os.Bundle;

        specialinvoke r3.<android.os.Bundle: void <init>()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("message", $r1);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("action", $r2);

        virtualinvoke $r4.<android.os.Message: void setData(android.os.Bundle)>(r3);

        $r5 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public void registerProtocol(java.lang.String)
    {
        java.util.HashSet $r2;
        java.lang.String $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.util.HashSet registeredProtocols>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public void removeListener()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener> = null;

        return;
    }

    public void requestOnPageFinishedCallback(android.os.Message)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Message $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.os.Message;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Message mMsgOnPageFinished> = $r1;

        return;
    }

    public void requestOnSearchAdClicked(android.os.Message)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Message $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.os.Message;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Message mMsgOnSearchAdClicked> = $r1;

        return;
    }

    public void resetContents()
    {
        android.view.ViewParent $r9;
        android.widget.FrameLayout r3, r4, r5;
        java.lang.Exception r1, $r10;
        android.view.ViewGroup $r8;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        int $i0;
        android.view.View $r2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

     label1:
        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.View getRootView()>();

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(16908290);

        r3 = (android.widget.FrameLayout) $r2;

        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.View getRootView()>();

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(333);

        r4 = (android.widget.FrameLayout) $r2;

        $r2 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.View getRootView()>();

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(435);

        r5 = (android.widget.FrameLayout) $r2;

     label2:
        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("PlaceHolder ID: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Bg ID: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InMobiAndroidSDK_3.0.1", $r7);

        $r2 = virtualinvoke r5.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r8 = (android.view.ViewGroup) $r2;

        virtualinvoke $r8.<android.view.ViewGroup: void removeView(android.view.View)>(r0);

        virtualinvoke r3.<android.widget.FrameLayout: void removeView(android.view.View)>(r5);

        specialinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void resetLayout()>();

        $r8 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup mIMWebViewParent>;

        $i0 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: int mIndex>;

        virtualinvoke $r8.<android.view.ViewGroup: void addView(android.view.View,int)>(r0, $i0);

        $r8 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup mIMWebViewParent>;

        virtualinvoke $r8.<android.view.ViewGroup: void removeView(android.view.View)>(r4);

        $r8 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewGroup mIMWebViewParent>;

        virtualinvoke $r8.<android.view.ViewGroup: void invalidate()>();

     label4:
        return;

     label5:
        r1 := @caughtexception;

     label6:
        $r9 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.view.ViewParent getParent()>();

        $r8 = (android.view.ViewGroup) $r9;

        virtualinvoke $r8.<android.view.ViewGroup: void removeAllViews()>();

        $r9 = virtualinvoke $r8.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        $r8 = (android.view.ViewGroup) $r9;

        virtualinvoke $r8.<android.view.ViewGroup: void removeAllViews()>();

     label7:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InMobiAndroidSDK_3.0.1", "Exception while closing the expanded Ad", r1);

        return;

     label8:
        $r10 := @caughtexception;

        goto label7;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void resize(int, int)
    {
        android.os.Bundle r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Message $r2;
        android.os.Handler $r3;
        int $i0, $i1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r3 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(1000);

        r1 = new android.os.Bundle;

        specialinvoke r1.<android.os.Bundle: void <init>()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("resize_width", $i0);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("resize_height", $i1);

        virtualinvoke $r2.<android.os.Message: void setData(android.os.Bundle)>(r1);

        $r3 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    public android.webkit.WebBackForwardList restoreState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("AD_PATH");

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mLocalFilePath> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("file://");

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mLocalFilePath>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_mraid_current");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r2);

        return null;
    }

    public android.webkit.WebBackForwardList saveState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        java.lang.String $r2;
        com.inmobi.androidsdk.ai.container.IMWebView r0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String mLocalFilePath>;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("AD_PATH", $r2);

        return null;
    }

    public void setActivity(android.app.Activity)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.app.Activity $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: android.app.Activity;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.app.Activity mActivity> = $r1;

        return;
    }

    public void setAdUnit(com.inmobi.androidsdk.impl.AdUnit)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.impl.AdUnit $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: com.inmobi.androidsdk.impl.AdUnit;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.impl.AdUnit mAdUnit> = $r1;

        return;
    }

    public void setListener(com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener mListener> = $r1;

        return;
    }

    public void setMaxSize(int, int)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        com.inmobi.androidsdk.ai.controller.JSUtilityController $r1;
        int $i0, $i1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.controller.JSUtilityController mUtilityController>;

        virtualinvoke $r1.<com.inmobi.androidsdk.ai.controller.JSUtilityController: void setMaxSize(int,int)>($i0, $i1);

        return;
    }

    public void setState(com.inmobi.androidsdk.ai.container.IMWebView$ViewState)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        com.inmobi.androidsdk.ai.container.IMWebView$ViewState $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 := @parameter0: com.inmobi.androidsdk.ai.container.IMWebView$ViewState;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: com.inmobi.androidsdk.ai.container.IMWebView$ViewState mViewState> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.mraidview.fireStateChangeEvent(\'");

        $r3 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: java.lang.String getState()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\');");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>($r3);

        return;
    }

    public void setViewable(boolean)
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $z0 := @parameter0: boolean;

        r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean mIsViewable> = 0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("window.mraidview.fireViewableChangeEvent(");

        $z0 = virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: boolean getViewable()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.inmobi.androidsdk.ai.container.IMWebView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void show()
    {
        com.inmobi.androidsdk.ai.container.IMWebView r0;
        android.os.Handler $r1;

        r0 := @this: com.inmobi.androidsdk.ai.container.IMWebView;

        $r1 = r0.<com.inmobi.androidsdk.ai.container.IMWebView: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1003);

        return;
    }
}
