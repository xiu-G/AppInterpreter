public class me.hypertext.wml.llk.utils.GameMathematics extends java.lang.Object
{
    private final int a;
    private android.content.Context b;
    private android.os.Handler c;
    private android.widget.AbsoluteLayout d;
    private me.hypertext.wml.llk.activity.PlayGameActivity e;

    public void <init>(android.content.Context, android.widget.AbsoluteLayout)
    {
        android.content.Context $r2;
        android.widget.AbsoluteLayout $r1;
        android.os.Handler $r3;
        me.hypertext.wml.llk.activity.PlayGameActivity $r4;
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.widget.AbsoluteLayout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<me.hypertext.wml.llk.utils.GameMathematics: int a> = 200;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<me.hypertext.wml.llk.utils.GameMathematics: android.os.Handler c> = $r3;

        r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b> = $r2;

        r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d> = $r1;

        $r4 = (me.hypertext.wml.llk.activity.PlayGameActivity) $r2;

        r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e> = $r4;

        return;
    }

    public static java.lang.String checkDirection(android.graphics.Point, android.graphics.Point, android.graphics.Point)
    {
        android.graphics.Point $r0, $r1, $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: android.graphics.Point;

        $r1 := @parameter1: android.graphics.Point;

        $r2 := @parameter2: android.graphics.Point;

        $r3 = "right";

        $r4 = "Top";

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 != $i1 goto label3;

        $i0 = $r0.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 <= $i1 goto label3;

        $r4 = "Top";

        $i0 = $r2.<android.graphics.Point: int y>;

        $i1 = $r0.<android.graphics.Point: int y>;

        if $i0 <= $i1 goto label2;

        $r3 = "left";

     label1:
        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $r3 = "right";

        goto label1;

     label3:
        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 != $i1 goto label5;

        $i0 = $r0.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 >= $i1 goto label5;

        $r4 = "Bottom";

        $i0 = $r2.<android.graphics.Point: int y>;

        $i1 = $r1.<android.graphics.Point: int y>;

        if $i0 >= $i1 goto label4;

        $r3 = "right";

        goto label1;

     label4:
        $r3 = "left";

        goto label1;

     label5:
        $i0 = $r2.<android.graphics.Point: int y>;

        $i1 = $r1.<android.graphics.Point: int y>;

        if $i0 != $i1 goto label7;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r0.<android.graphics.Point: int y>;

        if $i0 <= $i1 goto label7;

        $r3 = "right";

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 <= $i1 goto label6;

        $r4 = "Top";

        goto label1;

     label6:
        $r4 = "Bottom";

        goto label1;

     label7:
        $i0 = $r2.<android.graphics.Point: int y>;

        $i1 = $r1.<android.graphics.Point: int y>;

        if $i0 != $i1 goto label1;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r0.<android.graphics.Point: int y>;

        if $i0 >= $i1 goto label1;

        $r3 = "left";

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 <= $i1 goto label8;

        $r4 = "Top";

        goto label1;

     label8:
        $r4 = "Bottom";

        goto label1;
    }

    public boolean baoza()
    {
        me.hypertext.wml.llk.view.SpriteView[][] $r9;
        me.hypertext.wml.llk.view.SpriteView[] $r10;
        int[] $r1;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r2, $r3, $r8;
        me.hypertext.wml.llk.activity.PlayGameActivity $r15;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        me.hypertext.wml.llk.view.SpriteView $r11, $r12, $r13, $r14;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i0 = lengthof $r1;

        if $i0 > 0 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i1 = $r1[$i0];

        if $i1 <= 0 goto label4;

        $i1 = $i0 + 1;

     label3:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label5;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = $r1[$i0];

        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i3 = $r1[$i1];

        if $i2 != $i3 goto label6;

        $r2 = new android.graphics.Point;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i0 / $i2;

        $i2 = $i2 + 1;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i3 = $i0 % $i3;

        $i3 = $i3 + 1;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i2, $i3);

        $r3 = new android.graphics.Point;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i1 / $i2;

        $i2 = $i2 + 1;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i3 = $i1 % $i3;

        $i3 = $i3 + 1;

        specialinvoke $r3.<android.graphics.Point: void <init>(int,int)>($i2, $i3);

        $i2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: int checkout(android.graphics.Point,android.graphics.Point,boolean)>($r2, $r3, 1);

        if $i2 == 0 goto label6;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r5 = new java.lang.StringBuilder;

        $i0 = $r2.<android.graphics.Point: int x>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i0 = $r2.<android.graphics.Point: int y>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (android.graphics.Point) $r7;

        $r9 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $r10 = $r9[$i0];

        $i0 = $r8.<android.graphics.Point: int y>;

        $r11 = $r10[$i0];

        $r9 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $r10 = $r9[$i0];

        $i0 = $r8.<android.graphics.Point: int y>;

        $r12 = $r10[$i0];

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r5 = new java.lang.StringBuilder;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i0 = $r3.<android.graphics.Point: int y>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (android.graphics.Point) $r7;

        $r9 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $r10 = $r9[$i0];

        $i0 = $r8.<android.graphics.Point: int y>;

        $r13 = $r10[$i0];

        $r9 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i0 = $r8.<android.graphics.Point: int x>;

        $r10 = $r9[$i0];

        $i0 = $r8.<android.graphics.Point: int y>;

        $r14 = $r10[$i0];

        $r15 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        virtualinvoke $r15.<me.hypertext.wml.llk.activity.PlayGameActivity: void xiaoquNodj(android.graphics.Point,android.graphics.Point,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView)>($r2, $r3, $r12, $r11, $r14, $r13);

        return 1;

     label6:
        $i1 = $i1 + 1;

        goto label3;

     label7:
        return 0;
    }

    public boolean checkLink(boolean)
    {
        me.hypertext.wml.llk.utils.e $r14;
        me.hypertext.wml.llk.utils.f $r15;
        me.hypertext.wml.llk.view.SpriteView[][] $r8;
        me.hypertext.wml.llk.view.SpriteView[] $r9;
        int[] $r1;
        java.util.Map $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r6;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0;
        android.graphics.Point $r2, $r3;
        java.lang.StringBuilder $r5;
        java.lang.Object $r7;
        me.hypertext.wml.llk.view.SpriteView $r10, $r11, $r12, $r13;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $z0 := @parameter0: boolean;

        $i0 = 0;

     label1:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        return 0;

     label2:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i1 = $r1[$i0];

        if $i1 <= 0 goto label4;

        $r2 = new android.graphics.Point;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i1 = $i0 / $i1;

        $i1 = $i1 + 1;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i2 = $i0 % $i2;

        $i2 = $i2 + 1;

        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i2);

        $i1 = $i0 + 1;

     label3:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label5;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = $r1[$i0];

        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i3 = $r1[$i1];

        if $i2 != $i3 goto label7;

        $r3 = new android.graphics.Point;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i1 / $i2;

        $i2 = $i2 + 1;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i3 = $i1 % $i3;

        $i3 = $i3 + 1;

        specialinvoke $r3.<android.graphics.Point: void <init>(int,int)>($i2, $i3);

        $i2 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: int checkout(android.graphics.Point,android.graphics.Point,boolean)>($r2, $r3, 0);

        if $i2 == 0 goto label7;

        if $z0 == 0 goto label6;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r5 = new java.lang.StringBuilder;

        $i0 = $r2.<android.graphics.Point: int x>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i0 = $r2.<android.graphics.Point: int y>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r2 = (android.graphics.Point) $r7;

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i0 = $r2.<android.graphics.Point: int x>;

        $r9 = $r8[$i0];

        $i0 = $r2.<android.graphics.Point: int y>;

        $r10 = $r9[$i0];

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i0 = $r2.<android.graphics.Point: int x>;

        $r9 = $r8[$i0];

        $i0 = $r2.<android.graphics.Point: int y>;

        $r11 = $r9[$i0];

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r5 = new java.lang.StringBuilder;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $i0 = $r3.<android.graphics.Point: int y>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r3 = (android.graphics.Point) $r7;

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r9 = $r8[$i0];

        $i0 = $r3.<android.graphics.Point: int y>;

        $r12 = $r9[$i0];

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r9 = $r8[$i0];

        $i0 = $r3.<android.graphics.Point: int y>;

        $r13 = $r9[$i0];

        virtualinvoke $r11.<me.hypertext.wml.llk.view.SpriteView: void setVisibility(int)>(4);

        virtualinvoke $r13.<me.hypertext.wml.llk.view.SpriteView: void setVisibility(int)>(4);

        virtualinvoke $r10.<me.hypertext.wml.llk.view.SpriteView: void setVisibility(int)>(0);

        virtualinvoke $r12.<me.hypertext.wml.llk.view.SpriteView: void setVisibility(int)>(0);

        $r14 = new me.hypertext.wml.llk.utils.e;

        specialinvoke $r14.<me.hypertext.wml.llk.utils.e: void <init>(me.hypertext.wml.llk.utils.GameMathematics,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView,me.hypertext.wml.llk.view.SpriteView)>(r0, $r11, $r13, $r10, $r12);

        $r15 = new me.hypertext.wml.llk.utils.f;

        specialinvoke $r15.<me.hypertext.wml.llk.utils.f: void <init>(me.hypertext.wml.llk.utils.GameMathematics,android.os.Handler)>(r0, $r14);

        virtualinvoke $r14.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r15, 500L);

     label6:
        return 1;

     label7:
        $i1 = $i1 + 1;

        goto label3;
    }

    public int checkout(android.graphics.Point, android.graphics.Point, boolean)
    {
        int[][] $r3;
        android.graphics.Point $r1, $r2;
        int[] $r4;
        int $i0, $i1;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0, $z1;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i0 = $r1.<android.graphics.Point: int x>;

        $r4 = $r3[$i0];

        $i0 = $r1.<android.graphics.Point: int y>;

        $i0 = $r4[$i0];

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r2.<android.graphics.Point: int x>;

        $r4 = $r3[$i1];

        $i1 = $r2.<android.graphics.Point: int y>;

        $i1 = $r4[$i1];

        if $i0 != $i1 goto label3;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean noCorner(android.graphics.Point,android.graphics.Point,boolean)>($r1, $r2, $z0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean oneCorner(android.graphics.Point,android.graphics.Point,boolean)>($r1, $r2, $z0);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $z0 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean twoCorner(android.graphics.Point,android.graphics.Point,boolean)>($r1, $r2, $z0);

        if $z0 == 0 goto label3;

        return 3;

     label3:
        return 0;
    }

    public void drawLineOne(android.graphics.Point, android.graphics.Point)
    {
        android.content.Context $r4;
        me.hypertext.wml.llk.utils.GameImage $r5;
        android.graphics.Bitmap[] $r8;
        android.widget.AbsoluteLayout$LayoutParams $r13;
        int[] $r9;
        android.widget.AbsoluteLayout $r10;
        java.util.Map $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        me.hypertext.wml.llk.view.Sprite $r12;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r1, $r2;
        java.lang.Object $r7;
        me.hypertext.wml.llk.view.SpriteView $r3, $r11;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int x>;

        if $i0 != $i1 goto label4;

        $i1 = $r1.<android.graphics.Point: int y>;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i2 = $r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i2;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = $r1.<android.graphics.Point: int y>;

        $i3 = $r2.<android.graphics.Point: int y>;

        if $i2 <= $i3 goto label1;

        $i1 = $r2.<android.graphics.Point: int y>;

     label1:
        $i2 = 1;

     label2:
        if $i2 < $i0 goto label3;

        return;

     label3:
        $r11 = new me.hypertext.wml.llk.view.SpriteView;

        $r3 = $r11;

        $r4 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        specialinvoke $r11.<me.hypertext.wml.llk.view.SpriteView: void <init>(android.content.Context)>($r4);

        $r5 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r6 = $r5.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("horiz");

        $r8 = (android.graphics.Bitmap[]) $r7;

        $r9 = newarray (int)[2];

        $r9[0] = 100;

        $r9[1] = 100;

        $r12 = new me.hypertext.wml.llk.view.Sprite;

        specialinvoke $r12.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r8, $r9);

        virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: void setBitmaps(me.hypertext.wml.llk.view.Sprite,boolean)>($r12, 0);

        $r13 = new android.widget.AbsoluteLayout$LayoutParams;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i4 = $i1 + $i2;

        $i5 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i4 = $i4 * $i5;

        $i3 = $i3 + $i4;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i5 = $r1.<android.graphics.Point: int x>;

        $i6 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i5 = $i5 * $i6;

        $i4 = $i4 + $i5;

        specialinvoke $r13.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i3, $i4);

        $r10 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d>;

        virtualinvoke $r10.<android.widget.AbsoluteLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r13);

        virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: void startAnimation()>();

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $i1 = $r1.<android.graphics.Point: int x>;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i2 = $r2.<android.graphics.Point: int x>;

        $i0 = $i0 - $i2;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = $r1.<android.graphics.Point: int x>;

        $i3 = $r2.<android.graphics.Point: int x>;

        if $i2 <= $i3 goto label5;

        $i1 = $r2.<android.graphics.Point: int x>;

     label5:
        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i3 = $r1.<android.graphics.Point: int y>;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i3 = $i3 * $i4;

        $i3 = $i3 + $i2;

        $i2 = 1;

     label6:
        if $i2 >= $i0 goto label9;

        $r11 = new me.hypertext.wml.llk.view.SpriteView;

        $r3 = $r11;

        $r4 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        specialinvoke $r11.<me.hypertext.wml.llk.view.SpriteView: void <init>(android.content.Context)>($r4);

        $r5 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r6 = $r5.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("vertical");

        $r8 = (android.graphics.Bitmap[]) $r7;

        $r9 = newarray (int)[2];

        $r9[0] = 100;

        $r9[1] = 100;

        $r12 = new me.hypertext.wml.llk.view.Sprite;

        specialinvoke $r12.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r8, $r9);

        virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: void setBitmaps(me.hypertext.wml.llk.view.Sprite,boolean)>($r12, 0);

        if $i3 < 0 goto label8;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i5 = virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i5 = $i5 / 2;

        $i4 = $i4 - $i5;

        if $i3 <= $i4 goto label7;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i4 = virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i4 = $i4 / 2;

        $i3 = $i3 - $i4;

     label7:
        $r13 = new android.widget.AbsoluteLayout$LayoutParams;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i5 = $i2 + $i1;

        $i6 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i5 = $i5 * $i6;

        $i4 = $i4 + $i5;

        specialinvoke $r13.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i3, $i4);

        $r10 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d>;

        virtualinvoke $r10.<android.widget.AbsoluteLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r3, $r13);

        virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: void startAnimation()>();

        $i2 = $i2 + 1;

        goto label6;

     label8:
        $i3 = virtualinvoke $r3.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i3 = neg $i3;

        $i3 = $i3 / 2;

        goto label7;

     label9:
        return;
    }

    public void drawLineThree(android.graphics.Point, android.graphics.Point, android.graphics.Point, android.graphics.Point)
    {
        android.content.Context $r6;
        me.hypertext.wml.llk.utils.GameImage $r7;
        android.graphics.Bitmap[] $r11;
        android.widget.AbsoluteLayout$LayoutParams $r17;
        int[] $r12;
        android.widget.AbsoluteLayout $r14;
        java.util.Map $r8;
        int $i0, $i1, $i2, $i3;
        me.hypertext.wml.llk.view.Sprite $r15;
        java.lang.String $r9;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r1, $r2, $r3, $r4;
        java.lang.Object $r10;
        me.hypertext.wml.llk.view.SpriteView $r5, $r13, $r16;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $r3 := @parameter2: android.graphics.Point;

        $r4 := @parameter3: android.graphics.Point;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r1, $r2);

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r2, $r3);

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r3, $r4);

        $r13 = new me.hypertext.wml.llk.view.SpriteView;

        $r5 = $r13;

        $r6 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        specialinvoke $r13.<me.hypertext.wml.llk.view.SpriteView: void <init>(android.content.Context)>($r6);

        $r7 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r8 = $r7.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        $r9 = staticinvoke <me.hypertext.wml.llk.utils.GameMathematics: java.lang.String checkDirection(android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r2, $r3);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (android.graphics.Bitmap[]) $r10;

        $r12 = newarray (int)[2];

        $r12[0] = 100;

        $r12[1] = 100;

        $r15 = new me.hypertext.wml.llk.view.Sprite;

        specialinvoke $r15.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r11, $r12);

        virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: void setBitmaps(me.hypertext.wml.llk.view.Sprite,boolean)>($r15, 0);

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i1 = $r2.<android.graphics.Point: int y>;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i1 = $i1 * $i2;

        $i0 = $i0 + $i1;

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i0 = neg $i0;

        $i0 = $i0 / 2;

     label1:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i2 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i2 = $i2 / 2;

        $i1 = $i1 - $i2;

        if $i0 <= $i1 goto label2;

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i1 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

     label2:
        $r16 = new me.hypertext.wml.llk.view.SpriteView;

        $r13 = $r16;

        $r6 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        specialinvoke $r16.<me.hypertext.wml.llk.view.SpriteView: void <init>(android.content.Context)>($r6);

        $r7 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r8 = $r7.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        $r9 = staticinvoke <me.hypertext.wml.llk.utils.GameMathematics: java.lang.String checkDirection(android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r2, $r3, $r4);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (android.graphics.Bitmap[]) $r10;

        $r12 = newarray (int)[2];

        $r12[0] = 100;

        $r12[1] = 100;

        $r15 = new me.hypertext.wml.llk.view.Sprite;

        specialinvoke $r15.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r11, $r12);

        virtualinvoke $r13.<me.hypertext.wml.llk.view.SpriteView: void setBitmaps(me.hypertext.wml.llk.view.Sprite,boolean)>($r15, 0);

        $r17 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i2 = $r2.<android.graphics.Point: int x>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        specialinvoke $r17.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i0, $i1);

        $r14 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d>;

        virtualinvoke $r14.<android.widget.AbsoluteLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r5, $r17);

        virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: void startAnimation()>();

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i1 = $i1 * $i2;

        $i0 = $i0 + $i1;

        if $i0 >= 0 goto label3;

        $i0 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i0 = neg $i0;

        $i0 = $i0 / 2;

     label3:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i2 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i2 = $i2 / 2;

        $i1 = $i1 - $i2;

        if $i0 <= $i1 goto label4;

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i1 = virtualinvoke $r5.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

     label4:
        $r17 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        specialinvoke $r17.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i0, $i1);

        $r14 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d>;

        virtualinvoke $r14.<android.widget.AbsoluteLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r13, $r17);

        virtualinvoke $r13.<me.hypertext.wml.llk.view.SpriteView: void startAnimation()>();

        return;
    }

    public void drawLineTwo(android.graphics.Point, android.graphics.Point, android.graphics.Point)
    {
        android.content.Context $r6;
        me.hypertext.wml.llk.utils.GameImage $r7;
        android.graphics.Bitmap[] $r10;
        android.widget.AbsoluteLayout$LayoutParams $r15;
        int[] $r11;
        android.widget.AbsoluteLayout $r12;
        java.util.Map $r8;
        int $i0, $i1, $i2, $i3;
        me.hypertext.wml.llk.view.Sprite $r14;
        java.lang.String $r5;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r1, $r2, $r3;
        java.lang.Object $r9;
        me.hypertext.wml.llk.view.SpriteView $r4, $r13;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $r3 := @parameter2: android.graphics.Point;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r1, $r2);

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r2, $r3);

        $r5 = staticinvoke <me.hypertext.wml.llk.utils.GameMathematics: java.lang.String checkDirection(android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r2, $r3);

        $r13 = new me.hypertext.wml.llk.view.SpriteView;

        $r4 = $r13;

        $r6 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        specialinvoke $r13.<me.hypertext.wml.llk.view.SpriteView: void <init>(android.content.Context)>($r6);

        $r7 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r8 = $r7.<me.hypertext.wml.llk.utils.GameImage: java.util.Map linkBit>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r10 = (android.graphics.Bitmap[]) $r9;

        $r11 = newarray (int)[2];

        $r11[0] = 100;

        $r11[1] = 100;

        $r14 = new me.hypertext.wml.llk.view.Sprite;

        specialinvoke $r14.<me.hypertext.wml.llk.view.Sprite: void <init>(android.graphics.Bitmap[],int[])>($r10, $r11);

        virtualinvoke $r4.<me.hypertext.wml.llk.view.SpriteView: void setBitmaps(me.hypertext.wml.llk.view.Sprite,boolean)>($r14, 0);

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i1 = $r2.<android.graphics.Point: int y>;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i1 = $i1 * $i2;

        $i0 = $i0 + $i1;

        if $i0 >= 0 goto label1;

        $i0 = virtualinvoke $r4.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i0 = neg $i0;

        $i0 = $i0 / 2;

     label1:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i2 = virtualinvoke $r4.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i2 = $i2 / 2;

        $i1 = $i1 - $i2;

        if $i0 <= $i1 goto label2;

        $i0 = <me.hypertext.wml.llk.utils.GameConfig: int SCREENWIDTH>;

        $i1 = virtualinvoke $r4.<me.hypertext.wml.llk.view.SpriteView: int getmWidth()>();

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

     label2:
        $r15 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i2 = $r2.<android.graphics.Point: int x>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        specialinvoke $r15.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i0, $i1);

        $r12 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.widget.AbsoluteLayout d>;

        virtualinvoke $r12.<android.widget.AbsoluteLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r4, $r15);

        virtualinvoke $r4.<me.hypertext.wml.llk.view.SpriteView: void startAnimation()>();

        return;
    }

    public void gameWay(android.graphics.Point, android.graphics.Point, int)
    {
        int $i0;
        android.graphics.Point $r1, $r2;
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $i0 := @parameter2: int;

        return;
    }

    public boolean horizonMatch(android.graphics.Point, android.graphics.Point)
    {
        int[][] $r3;
        int[] $r4;
        int $i0, $i1;
        android.graphics.Point $r1, $r2;
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int x>;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int x>;

        if $i0 != $i1 goto label2;

        return 0;

     label2:
        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int x>;

        if $i0 <= $i1 goto label7;

        $i0 = $r2.<android.graphics.Point: int x>;

        $i0 = $i0 + 1;

     label3:
        $i1 = $r1.<android.graphics.Point: int x>;

        if $i0 < $i1 goto label5;

     label4:
        return 1;

     label5:
        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r4 = $r3[$i0];

        $i1 = $r1.<android.graphics.Point: int y>;

        $i1 = $r4[$i1];

        if $i1 == 0 goto label6;

        return 0;

     label6:
        $i0 = $i0 + 1;

        goto label3;

     label7:
        $i0 = $r1.<android.graphics.Point: int x>;

        $i0 = $i0 + 1;

     label8:
        $i1 = $r2.<android.graphics.Point: int x>;

        if $i0 >= $i1 goto label4;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r4 = $r3[$i0];

        $i1 = $r1.<android.graphics.Point: int y>;

        $i1 = $r4[$i1];

        if $i1 == 0 goto label9;

        return 0;

     label9:
        $i0 = $i0 + 1;

        goto label8;
    }

    public void mirror()
    {
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void reset()>();

        return;
    }

    public boolean noCorner(android.graphics.Point, android.graphics.Point, boolean)
    {
        int $i0, $i1;
        android.graphics.Point $r1, $r2;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0, $z1;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $z1 = 0;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int x>;

        if $i0 != $i1 goto label2;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r1, $r2);

     label1:
        if $z1 == 0 goto label3;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineOne(android.graphics.Point,android.graphics.Point)>($r1, $r2);

        return $z1;

     label2:
        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r2.<android.graphics.Point: int y>;

        if $i0 != $i1 goto label1;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r1, $r2);

        goto label1;

     label3:
        return $z1;
    }

    public boolean oneCorner(android.graphics.Point, android.graphics.Point, boolean)
    {
        int[][] $r5;
        android.graphics.Point $r1, $r2, $r3, $r4;
        int[] $r6;
        int $i0, $i1;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0, $z1;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $r3 = new android.graphics.Point;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $r2.<android.graphics.Point: int y>;

        specialinvoke $r3.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r4 = new android.graphics.Point;

        $i0 = $r2.<android.graphics.Point: int x>;

        $i1 = $r1.<android.graphics.Point: int y>;

        specialinvoke $r4.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r5 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i0 = $r3.<android.graphics.Point: int x>;

        $r6 = $r5[$i0];

        $i0 = $r3.<android.graphics.Point: int y>;

        $i0 = $r6[$i0];

        if $i0 != 0 goto label1;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r1, $r3);

        if $z1 == 0 goto label1;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r3, $r2);

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineTwo(android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r3, $r2);

        return 1;

     label1:
        $r5 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i0 = $r4.<android.graphics.Point: int x>;

        $r6 = $r5[$i0];

        $i0 = $r4.<android.graphics.Point: int y>;

        $i0 = $r6[$i0];

        if $i0 != 0 goto label2;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r1, $r4);

        if $z1 == 0 goto label2;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r4, $r2);

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineTwo(android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r4, $r2);

        return 1;

     label2:
        return 0;

     label3:
        return 1;
    }

    public void randomPic(int, int)
    {
        int[][] $r6;
        me.hypertext.wml.llk.utils.GameImage $r4;
        java.util.Random $r12;
        int[] $r1, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.LinkedList $r2, $r10;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r7, $r11;
        me.hypertext.wml.llk.activity.PlayGameActivity $r3;
        java.util.List $r5;
        java.lang.Object $r8;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = 0;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void randomPic1(int,int)>($i0, $i1);

        $r10 = new java.util.LinkedList;

        $r2 = $r10;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        $i0 = 0;

     label01:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i1 = $i1 + 2;

        if $i0 < $i1 goto label05;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $r1 = newarray (int)[$i0];

        $r3 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $r3.<me.hypertext.wml.llk.activity.PlayGameActivity: int pokerNumber> = $i0;

        $i0 = 1;

        $i1 = 0;

     label02:
        $i3 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i3 = $i3 / 2;

        if $i0 <= $i3 goto label09;

        $r4 = staticinvoke <me.hypertext.wml.llk.utils.GameImage: me.hypertext.wml.llk.utils.GameImage getInstand()>();

        $r5 = $r4.<me.hypertext.wml.llk.utils.GameImage: java.util.List aniImgSpr>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label03:
        $i1 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i1 > 0 goto label14;

        $i0 = 1;

     label04:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        if $i0 <= $i1 goto label16;

        return;

     label05:
        $i1 = 0;

     label06:
        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i3 = $i3 + 2;

        if $i1 < $i3 goto label07;

        $i0 = $i0 + 1;

        goto label01;

     label07:
        $r6 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r1 = $r6[$i0];

        $i3 = $r1[$i1];

        if $i3 != 1 goto label08;

        $r11 = new android.graphics.Point;

        specialinvoke $r11.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label08:
        $i1 = $i1 + 1;

        goto label06;

     label09:
        if $i0 <= 4 goto label13;

        $i3 = $i0 + -5;

        $r3 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        $i4 = $r3.<me.hypertext.wml.llk.activity.PlayGameActivity: int pokerNumber>;

        if $i4 > 26 goto label11;

        $i3 = $i3 % 8;

        $i3 = $i3 + 5;

        $r1[$i1] = $i3;

        $i1 = $i1 + 1;

        $r1[$i1] = $i3;

     label10:
        $i1 = $i1 + 1;

        $i0 = $i0 + 1;

        goto label02;

     label11:
        $r3 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        $i4 = $r3.<me.hypertext.wml.llk.activity.PlayGameActivity: int pokerNumber>;

        if $i4 > 42 goto label12;

        $i3 = $i3 % 13;

        $i3 = $i3 + 5;

        $r1[$i1] = $i3;

        $i1 = $i1 + 1;

        $r1[$i1] = $i3;

        goto label10;

     label12:
        $r3 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        $i4 = $r3.<me.hypertext.wml.llk.activity.PlayGameActivity: int pokerNumber>;

        if $i4 > 56 goto label13;

        $i3 = $i3 % 18;

        $i3 = $i3 + 5;

        $r1[$i1] = $i3;

        $i1 = $i1 + 1;

        $r1[$i1] = $i3;

        goto label10;

     label13:
        $r1[$i1] = $i0;

        $i1 = $i1 + 1;

        $r1[$i1] = $i0;

        goto label10;

     label14:
        $r12 = new java.util.Random;

        specialinvoke $r12.<java.util.Random: void <init>()>();

        $i1 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        $i1 = virtualinvoke $r12.<java.util.Random: int nextInt(int)>($i1);

        $r8 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object get(int)>($i1);

        $r7 = (android.graphics.Point) $r8;

        $i1 = $r1[$i2];

        $i1 = $i1 % $i0;

        if $i1 != 0 goto label15;

        $i1 = $i0;

     label15:
        $r6 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i3 = $r7.<android.graphics.Point: int x>;

        $r9 = $r6[$i3];

        $i3 = $r7.<android.graphics.Point: int y>;

        $r9[$i3] = $i1;

        $i2 = $i2 + 1;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>($r7);

        goto label03;

     label16:
        $i1 = 1;

     label17:
        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        if $i1 <= $i2 goto label18;

        $i0 = $i0 + 1;

        goto label04;

     label18:
        $r1 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = $i1 + -1;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i2 * $i3;

        $i2 = $i2 + $i0;

        $i2 = $i2 + -1;

        $r6 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r9 = $r6[$i1];

        $i3 = $r9[$i0];

        $r1[$i2] = $i3;

        $i1 = $i1 + 1;

        goto label17;
    }

    public void randomPic1(int, int)
    {
        int[][] $r2;
        java.util.Random $r3;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i2 * $i3;

        $r1 = newarray (int)[$i2];

        <me.hypertext.wml.llk.utils.GameConfig: int[] array> = $r1;

        if $i1 != 1 goto label2;

        if $i0 > 20 goto label1;

        $r2 = staticinvoke <me.hypertext.wml.llk.utils.GameGuanka: int[][] class_map(int)>($i0);

        <me.hypertext.wml.llk.utils.GameConfig: int[][] map> = $r2;

        return;

     label1:
        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(8);

        $i0 = $i0 + 12;

        $r2 = staticinvoke <me.hypertext.wml.llk.utils.GameGuanka: int[][] class_map(int)>($i0);

        <me.hypertext.wml.llk.utils.GameConfig: int[][] map> = $r2;

        return;

     label2:
        if $i1 != 2 goto label4;

        if $i0 > 20 goto label3;

        $r2 = staticinvoke <me.hypertext.wml.llk.utils.GameGuanka: int[][] class_map(int)>($i0);

        <me.hypertext.wml.llk.utils.GameConfig: int[][] map> = $r2;

        return;

     label3:
        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(8);

        $i0 = $i0 + 12;

        $r2 = staticinvoke <me.hypertext.wml.llk.utils.GameGuanka: int[][] class_map(int)>($i0);

        <me.hypertext.wml.llk.utils.GameConfig: int[][] map> = $r2;

        return;

     label4:
        if $i0 > 3 goto label6;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(3);

        $i0 = $i0 + 1;

     label5:
        $r2 = staticinvoke <me.hypertext.wml.llk.utils.GameGuanka: int[][] endless_map(int)>($i0);

        <me.hypertext.wml.llk.utils.GameConfig: int[][] map> = $r2;

        return;

     label6:
        if $i0 > 6 goto label7;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(4);

        $i0 = $i0 + 3;

        goto label5;

     label7:
        if $i0 > 10 goto label8;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(5);

        $i0 = $i0 + 6;

        goto label5;

     label8:
        if $i0 > 15 goto label9;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(10);

        $i0 = $i0 + 6;

        goto label5;

     label9:
        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(20);

        $i0 = $i0 + 3;

        goto label5;
    }

    public void reset()
    {
        int[][] $r4;
        java.util.Random $r24;
        android.widget.AbsoluteLayout$LayoutParams $r14, $r26;
        int[] $r5, $r13;
        android.view.animation.TranslateAnimation $r19, $r20, $r27;
        java.util.Map $r8;
        android.view.animation.Interpolator $r22;
        me.hypertext.wml.llk.activity.PlayGameActivity $r2;
        float $f0, $f1;
        java.lang.StringBuilder $r9, $r25;
        android.content.Context $r21;
        me.hypertext.wml.llk.view.SpriteView[][] $r15;
        java.util.ArrayList $r1, $r23;
        me.hypertext.wml.llk.view.SpriteView[] $r16;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        android.graphics.Point $r3, $r7, $r11, $r12;
        java.lang.Object $r6;
        me.hypertext.wml.llk.view.SpriteView $r17, $r18;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r2 = r0.<me.hypertext.wml.llk.utils.GameMathematics: me.hypertext.wml.llk.activity.PlayGameActivity e>;

        $r3 = $r2.<me.hypertext.wml.llk.activity.PlayGameActivity: android.graphics.Point oldPoint>;

        virtualinvoke $r3.<android.graphics.Point: void set(int,int)>(0, 0);

        $r23 = new java.util.ArrayList;

        $r1 = $r23;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $i0 = 1;

     label01:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        if $i0 <= $i1 goto label04;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label02:
        if $i0 > 0 goto label08;

        $i0 = 1;

     label03:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        if $i0 <= $i1 goto label09;

        return;

     label04:
        $i1 = 1;

     label05:
        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int vertNum>;

        if $i1 <= $i2 goto label06;

        $i0 = $i0 + 1;

        goto label01;

     label06:
        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r5 = $r4[$i0];

        $i2 = $r5[$i1];

        if $i2 <= 0 goto label07;

        $r7 = new android.graphics.Point;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label07:
        $i1 = $i1 + 1;

        goto label05;

     label08:
        $r24 = new java.util.Random;

        specialinvoke $r24.<java.util.Random: void <init>()>();

        $i1 = virtualinvoke $r24.<java.util.Random: int nextInt(int)>($i0);

        $r6 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.graphics.Point) $r6;

        $r6 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (android.graphics.Point) $r6;

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r25 = new java.lang.StringBuilder;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $i1 = $r3.<android.graphics.Point: int y>;

        $r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (android.graphics.Point) $r6;

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r25 = new java.lang.StringBuilder;

        $i1 = $r7.<android.graphics.Point: int x>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $i1 = $r7.<android.graphics.Point: int y>;

        $r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r12 = (android.graphics.Point) $r6;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r5 = $r4[$i1];

        $i1 = $r3.<android.graphics.Point: int y>;

        $i1 = $r5[$i1];

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $r5 = $r4[$i2];

        $i2 = $r3.<android.graphics.Point: int y>;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i3 = $r7.<android.graphics.Point: int x>;

        $r13 = $r4[$i3];

        $i3 = $r7.<android.graphics.Point: int y>;

        $i3 = $r13[$i3];

        $r5[$i2] = $i3;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i2 = $r7.<android.graphics.Point: int x>;

        $r5 = $r4[$i2];

        $i2 = $r7.<android.graphics.Point: int y>;

        $r5[$i2] = $i1;

        $r14 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i2 = $r7.<android.graphics.Point: int y>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i3 = $r7.<android.graphics.Point: int x>;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        specialinvoke $r14.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i1, $i2);

        $r26 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i3 = $r3.<android.graphics.Point: int x>;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        specialinvoke $r26.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i1, $i2);

        $r15 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i1 = $r11.<android.graphics.Point: int x>;

        $r16 = $r15[$i1];

        $i1 = $r11.<android.graphics.Point: int y>;

        $r17 = $r16[$i1];

        $r15 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] minSprite>;

        $i1 = $r12.<android.graphics.Point: int x>;

        $r16 = $r15[$i1];

        $i1 = $r12.<android.graphics.Point: int y>;

        $r18 = $r16[$i1];

        virtualinvoke $r17.<me.hypertext.wml.llk.view.SpriteView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r14);

        virtualinvoke $r18.<me.hypertext.wml.llk.view.SpriteView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r26);

        $r20 = new android.view.animation.TranslateAnimation;

        $r19 = $r20;

        $i1 = $r7.<android.graphics.Point: int y>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i1 = $i1 * $i2;

        $f0 = (float) $i1;

        $i1 = $r7.<android.graphics.Point: int x>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i1 = $i1 * $i2;

        $f1 = (float) $i1;

        specialinvoke $r20.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>($f0, 0.0F, $f1, 0.0F);

        virtualinvoke $r19.<android.view.animation.TranslateAnimation: void setDuration(long)>(500L);

        $r27 = new android.view.animation.TranslateAnimation;

        $r20 = $r27;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i2 = $r7.<android.graphics.Point: int y>;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i1 = $i1 * $i2;

        $f0 = (float) $i1;

        $i1 = $r3.<android.graphics.Point: int x>;

        $i2 = $r7.<android.graphics.Point: int x>;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i1 = $i1 * $i2;

        $f1 = (float) $i1;

        specialinvoke $r27.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>($f0, 0.0F, $f1, 0.0F);

        virtualinvoke $r20.<android.view.animation.TranslateAnimation: void setDuration(long)>(500L);

        virtualinvoke $r17.<me.hypertext.wml.llk.view.SpriteView: void setPoint(android.graphics.Point)>($r7);

        virtualinvoke $r18.<me.hypertext.wml.llk.view.SpriteView: void setPoint(android.graphics.Point)>($r3);

        $r21 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        $r22 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r21, 17432582);

        virtualinvoke $r19.<android.view.animation.TranslateAnimation: void setInterpolator(android.view.animation.Interpolator)>($r22);

        $r21 = r0.<me.hypertext.wml.llk.utils.GameMathematics: android.content.Context b>;

        $r22 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r21, 17432582);

        virtualinvoke $r20.<android.view.animation.TranslateAnimation: void setInterpolator(android.view.animation.Interpolator)>($r22);

        virtualinvoke $r17.<me.hypertext.wml.llk.view.SpriteView: void startAnimation(android.view.animation.Animation)>($r20);

        virtualinvoke $r18.<me.hypertext.wml.llk.view.SpriteView: void startAnimation(android.view.animation.Animation)>($r19);

        $r14 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i2 = $r7.<android.graphics.Point: int y>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int imgWidth>;

        $i2 = $i2 / 4;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i3 = $r7.<android.graphics.Point: int x>;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int imgHeight>;

        $i3 = $i3 / 4;

        $i2 = $i2 - $i3;

        specialinvoke $r14.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i1, $i2);

        $r26 = new android.widget.AbsoluteLayout$LayoutParams;

        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int paddingLeft>;

        $i2 = $r3.<android.graphics.Point: int y>;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int colWeight>;

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int imgWidth>;

        $i2 = $i2 / 4;

        $i1 = $i1 - $i2;

        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int paddingTop>;

        $i3 = $r3.<android.graphics.Point: int x>;

        $i4 = <me.hypertext.wml.llk.utils.GameConfig: int colHeight>;

        $i3 = $i3 * $i4;

        $i2 = $i2 + $i3;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int imgHeight>;

        $i3 = $i3 / 4;

        $i2 = $i2 - $i3;

        specialinvoke $r26.<android.widget.AbsoluteLayout$LayoutParams: void <init>(int,int,int,int)>(-2, -2, $i1, $i2);

        $r15 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i1 = $r11.<android.graphics.Point: int x>;

        $r16 = $r15[$i1];

        $i1 = $r11.<android.graphics.Point: int y>;

        $r17 = $r16[$i1];

        $r15 = <me.hypertext.wml.llk.utils.GameConfig: me.hypertext.wml.llk.view.SpriteView[][] bigSprite>;

        $i1 = $r12.<android.graphics.Point: int x>;

        $r16 = $r15[$i1];

        $i1 = $r12.<android.graphics.Point: int y>;

        $r18 = $r16[$i1];

        virtualinvoke $r17.<me.hypertext.wml.llk.view.SpriteView: void setPoint(android.graphics.Point)>($r7);

        virtualinvoke $r18.<me.hypertext.wml.llk.view.SpriteView: void setPoint(android.graphics.Point)>($r3);

        virtualinvoke $r17.<me.hypertext.wml.llk.view.SpriteView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r14);

        virtualinvoke $r18.<me.hypertext.wml.llk.view.SpriteView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r26);

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r25 = new java.lang.StringBuilder;

        $i1 = $r3.<android.graphics.Point: int x>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $i1 = $r3.<android.graphics.Point: int y>;

        $r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r8 = <me.hypertext.wml.llk.utils.GameConfig: java.util.Map spriteMap>;

        $r25 = new java.lang.StringBuilder;

        $i1 = $r7.<android.graphics.Point: int x>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $i1 = $r7.<android.graphics.Point: int y>;

        $r9 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        $i0 = $i0 + -1;

        goto label02;

     label09:
        $i1 = 1;

     label10:
        $i2 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        if $i1 <= $i2 goto label11;

        $i0 = $i0 + 1;

        goto label03;

     label11:
        $r5 = <me.hypertext.wml.llk.utils.GameConfig: int[] array>;

        $i2 = $i1 + -1;

        $i3 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i2 = $i2 * $i3;

        $i2 = $i2 + $i0;

        $i2 = $i2 + -1;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r13 = $r4[$i1];

        $i3 = $r13[$i0];

        $r5[$i2] = $i3;

        $i1 = $i1 + 1;

        goto label10;
    }

    public java.util.Vector scan(android.graphics.Point, android.graphics.Point)
    {
        int[][] $r4;
        me.hypertext.wml.llk.utils.MyLine $r10;
        android.graphics.Point $r1, $r2, $r6, $r7, $r9;
        java.util.Vector $r3, $r8;
        int[] $r5;
        int $i0, $i1;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $r8 = new java.util.Vector;

        $r3 = $r8;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        $i0 = $r1.<android.graphics.Point: int y>;

        $i0 = $i0 + 1;

     label01:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i1 = $i1 + 2;

        if $i0 < $i1 goto label08;

     label02:
        $i0 = $r1.<android.graphics.Point: int x>;

        $i0 = $i0 + 1;

     label03:
        $i1 = <me.hypertext.wml.llk.utils.GameConfig: int horizNum>;

        $i1 = $i1 + 2;

        if $i0 < $i1 goto label10;

     label04:
        $i0 = $r1.<android.graphics.Point: int x>;

        $i0 = $i0 + -1;

     label05:
        if $i0 >= 0 goto label12;

     label06:
        $i0 = $r1.<android.graphics.Point: int y>;

        $i0 = $i0 + -1;

     label07:
        if $i0 >= 0 goto label14;

        return $r3;

     label08:
        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r1.<android.graphics.Point: int x>;

        $r5 = $r4[$i1];

        $i1 = $r5[$i0];

        if $i1 != 0 goto label09;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r2.<android.graphics.Point: int x>;

        $r5 = $r4[$i1];

        $i1 = $r5[$i0];

        if $i1 != 0 goto label09;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int x>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int x>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $z0 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r7, $r9);

        if $z0 == 0 goto label09;

        $r10 = new me.hypertext.wml.llk.utils.MyLine;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int x>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int x>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        specialinvoke $r10.<me.hypertext.wml.llk.utils.MyLine: void <init>(android.graphics.Point,android.graphics.Point,int)>($r7, $r9, 1);

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r10);

        goto label02;

     label09:
        $i0 = $i0 + 1;

        goto label01;

     label10:
        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r5 = $r4[$i0];

        $i1 = $r1.<android.graphics.Point: int y>;

        $i1 = $r5[$i1];

        if $i1 != 0 goto label11;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r5 = $r4[$i0];

        $i1 = $r2.<android.graphics.Point: int y>;

        $i1 = $r5[$i1];

        if $i1 != 0 goto label11;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int y>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int y>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $z0 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r7, $r9);

        if $z0 == 0 goto label11;

        $r10 = new me.hypertext.wml.llk.utils.MyLine;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int y>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int y>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        specialinvoke $r10.<me.hypertext.wml.llk.utils.MyLine: void <init>(android.graphics.Point,android.graphics.Point,int)>($r7, $r9, 0);

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r10);

        goto label04;

     label11:
        $i0 = $i0 + 1;

        goto label03;

     label12:
        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r5 = $r4[$i0];

        $i1 = $r1.<android.graphics.Point: int y>;

        $i1 = $r5[$i1];

        if $i1 != 0 goto label13;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $r5 = $r4[$i0];

        $i1 = $r2.<android.graphics.Point: int y>;

        $i1 = $r5[$i1];

        if $i1 != 0 goto label13;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int y>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int y>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $z0 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r7, $r9);

        if $z0 == 0 goto label13;

        $r10 = new me.hypertext.wml.llk.utils.MyLine;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int y>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int y>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        specialinvoke $r10.<me.hypertext.wml.llk.utils.MyLine: void <init>(android.graphics.Point,android.graphics.Point,int)>($r7, $r9, 0);

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r10);

        goto label06;

     label13:
        $i0 = $i0 + -1;

        goto label05;

     label14:
        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r1.<android.graphics.Point: int x>;

        $r5 = $r4[$i1];

        $i1 = $r5[$i0];

        if $i1 != 0 goto label15;

        $r4 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r2.<android.graphics.Point: int x>;

        $r5 = $r4[$i1];

        $i1 = $r5[$i0];

        if $i1 != 0 goto label15;

        $r7 = new android.graphics.Point;

        $i1 = $r1.<android.graphics.Point: int x>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r9 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int x>;

        specialinvoke $r9.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $z0 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r7, $r9);

        if $z0 == 0 goto label15;

        $r10 = new me.hypertext.wml.llk.utils.MyLine;

        $r7 = new android.graphics.Point;

        $r6 = $r7;

        $i1 = $r1.<android.graphics.Point: int x>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        $r7 = new android.graphics.Point;

        $i1 = $r2.<android.graphics.Point: int x>;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        specialinvoke $r10.<me.hypertext.wml.llk.utils.MyLine: void <init>(android.graphics.Point,android.graphics.Point,int)>($r6, $r7, 1);

        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>($r10);

        return $r3;

     label15:
        $i0 = $i0 + -1;

        goto label07;
    }

    public boolean twoCorner(android.graphics.Point, android.graphics.Point, boolean)
    {
        me.hypertext.wml.llk.utils.MyLine $r5;
        android.graphics.Point $r1, $r2, $r6, $r7;
        java.util.Vector $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        me.hypertext.wml.llk.utils.GameMathematics r0;
        boolean $z0, $z1;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: java.util.Vector scan(android.graphics.Point,android.graphics.Point)>($r1, $r2);

        $z1 = virtualinvoke $r3.<java.util.Vector: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i0 >= $i1 goto label7;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        $r5 = (me.hypertext.wml.llk.utils.MyLine) $r4;

        $i1 = $r5.<me.hypertext.wml.llk.utils.MyLine: int direct>;

        if $i1 != 1 goto label4;

        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point a>;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r1, $r6);

        if $z1 == 0 goto label4;

        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point b>;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean verticalMatch(android.graphics.Point,android.graphics.Point)>($r2, $r6);

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point a>;

        $r7 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point b>;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineThree(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r6, $r7, $r2);

     label3:
        return 1;

     label4:
        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point a>;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r1, $r6);

        if $z1 == 0 goto label6;

        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point b>;

        $z1 = virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: boolean horizonMatch(android.graphics.Point,android.graphics.Point)>($r2, $r6);

        if $z1 == 0 goto label6;

        if $z0 == 0 goto label5;

        $r6 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point a>;

        $r7 = $r5.<me.hypertext.wml.llk.utils.MyLine: android.graphics.Point b>;

        virtualinvoke r0.<me.hypertext.wml.llk.utils.GameMathematics: void drawLineThree(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point)>($r1, $r6, $r7, $r2);

     label5:
        return 1;

     label6:
        $i0 = $i0 + 1;

        goto label2;

     label7:
        return 0;
    }

    public boolean verticalMatch(android.graphics.Point, android.graphics.Point)
    {
        int[][] $r3;
        int[] $r4;
        int $i0, $i1;
        android.graphics.Point $r1, $r2;
        me.hypertext.wml.llk.utils.GameMathematics r0;

        r0 := @this: me.hypertext.wml.llk.utils.GameMathematics;

        $r1 := @parameter0: android.graphics.Point;

        $r2 := @parameter1: android.graphics.Point;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r2.<android.graphics.Point: int y>;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r2.<android.graphics.Point: int y>;

        if $i0 != $i1 goto label2;

        return 0;

     label2:
        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $r2.<android.graphics.Point: int y>;

        if $i0 <= $i1 goto label7;

        $i0 = $r2.<android.graphics.Point: int y>;

        $i0 = $i0 + 1;

     label3:
        $i1 = $r1.<android.graphics.Point: int y>;

        if $i0 < $i1 goto label5;

     label4:
        return 1;

     label5:
        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r1.<android.graphics.Point: int x>;

        $r4 = $r3[$i1];

        $i1 = $r4[$i0];

        if $i1 == 0 goto label6;

        return 0;

     label6:
        $i0 = $i0 + 1;

        goto label3;

     label7:
        $i0 = $r1.<android.graphics.Point: int y>;

        $i0 = $i0 + 1;

     label8:
        $i1 = $r2.<android.graphics.Point: int y>;

        if $i0 >= $i1 goto label4;

        $r3 = <me.hypertext.wml.llk.utils.GameConfig: int[][] map>;

        $i1 = $r1.<android.graphics.Point: int x>;

        $r4 = $r3[$i1];

        $i1 = $r4[$i0];

        if $i1 == 0 goto label9;

        return 0;

     label9:
        $i0 = $i0 + 1;

        goto label8;
    }
}
