public class org.htmlparser.nodes.TextNode extends org.htmlparser.nodes.AbstractNode implements org.htmlparser.Text
{
    protected java.lang.String f;

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.htmlparser.nodes.AbstractNode: void <init>(kr,int,int)>(null, 0, 0);

        virtualinvoke r0.<org.htmlparser.nodes.TextNode: void setText(java.lang.String)>($r1);

        return;
    }

    public void <init>(kr, int, int)
    {
        kr $r1;
        int $i0, $i1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 := @parameter0: kr;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<org.htmlparser.nodes.AbstractNode: void <init>(kr,int,int)>($r1, $i0, $i1);

        r0.<org.htmlparser.nodes.TextNode: java.lang.String f> = null;

        return;
    }

    public void accept(lp)
    {
        lp $r1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 := @parameter0: lp;

        return;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: java.lang.String toHtml()>();

        return $r1;
    }

    public boolean isWhiteSpace()
    {
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        if $r1 == null goto label1;

        $r1 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void setText(java.lang.String)
    {
        int $i0;
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 := @parameter0: java.lang.String;

        r0.<org.htmlparser.nodes.TextNode: java.lang.String f> = $r1;

        r0.<org.htmlparser.nodes.TextNode: int b> = 0;

        $r1 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        r0.<org.htmlparser.nodes.TextNode: int c> = $i0;

        return;
    }

    public java.lang.String toHtml(boolean)
    {
        kr $r2;
        int $i0, $i1;
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;
        boolean $z0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $z0 := @parameter0: boolean;

        $r1 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        if $r1 != null goto label1;

        $r2 = r0.<org.htmlparser.nodes.TextNode: kr a>;

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: int getStartPosition()>();

        $i1 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: int getEndPosition()>();

        $r1 = virtualinvoke $r2.<kr: java.lang.String a(int,int)>($i0, $i1);

     label1:
        return $r1;
    }

    public java.lang.String toPlainTextString()
    {
        java.lang.String $r1;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $r1 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: java.lang.String toHtml()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        kr $r4;
        char $c3;
        org.htmlparser.lexer.Cursor $r3, $r5, $r8;
        java.lang.StringBuffer $r1, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        li $r6;
        org.htmlparser.nodes.TextNode r0;

        r0 := @this: org.htmlparser.nodes.TextNode;

        $i0 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: int getStartPosition()>();

        $i1 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: int getEndPosition()>();

        $r7 = new java.lang.StringBuffer;

        $r1 = $r7;

        $i2 = $i1 - $i0;

        $i2 = $i2 + 20;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r2 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        if $r2 != null goto label14;

        $r5 = new org.htmlparser.lexer.Cursor;

        $r3 = $r5;

        $r4 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: kr getPage()>();

        specialinvoke $r5.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r4, $i0);

        $r8 = new org.htmlparser.lexer.Cursor;

        $r4 = virtualinvoke r0.<org.htmlparser.nodes.TextNode: kr getPage()>();

        specialinvoke $r8.<org.htmlparser.lexer.Cursor: void <init>(kr,int)>($r4, $i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Txt (");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): ");

     label01:
        $i0 = virtualinvoke $r3.<org.htmlparser.lexer.Cursor: int getPosition()>();

        if $i0 >= $i1 goto label06;

        $r4 = r0.<org.htmlparser.nodes.TextNode: kr a>;

     label02:
        $c3 = virtualinvoke $r4.<kr: char a(org.htmlparser.lexer.Cursor)>($r3);

     label03:
        $i0 = (int) $c3;

        lookupswitch($i0)
        {
            case 9: goto label07;
            case 10: goto label10;
            case 11: goto label04;
            case 12: goto label04;
            case 13: goto label12;
            default: goto label04;
        };

     label04:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label05:
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if 77 > $i0 goto label01;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

     label06:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label07:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

     label08:
        goto label05;

     label09:
        $r6 := @caughtexception;

        goto label05;

     label10:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

     label11:
        goto label05;

     label12:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

     label13:
        goto label05;

     label14:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Txt (");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): ");

        $i1 = 0;

     label15:
        $r2 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 >= $i0 goto label06;

        $r2 = r0.<org.htmlparser.nodes.TextNode: java.lang.String f>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $i0 = (int) $c3;

        lookupswitch($i0)
        {
            case 9: goto label18;
            case 10: goto label19;
            case 11: goto label16;
            case 12: goto label16;
            case 13: goto label20;
            default: goto label16;
        };

     label16:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label17:
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if 77 > $i0 goto label21;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        goto label06;

     label18:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label17;

     label19:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label17;

     label20:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label17;

     label21:
        $i1 = $i1 + 1;

        goto label15;

        catch li from label02 to label03 with label09;
        catch li from label04 to label05 with label09;
        catch li from label07 to label08 with label09;
        catch li from label10 to label11 with label09;
        catch li from label12 to label13 with label09;
    }
}
