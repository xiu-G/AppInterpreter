public final class com.millennialmedia.android.Base64 extends java.lang.Object
{

    public void <init>()
    {
        com.millennialmedia.android.Base64 r0;

        r0 := @this: com.millennialmedia.android.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String) throws java.io.IOException
    {
        byte[] r1, $r3;
        char $c2;
        java.io.IOException $r4;
        byte $b4;
        int $i0, $i1, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 % 4;

        if $i0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 4;

        $i0 = $i0 * 3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = -2;

        $i1 = $i1 + $i3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        if $i1 != 61 goto label5;

        $i1 = -2;

        $i0 = $i0 + $i1;

     label2:
        r1 = newarray (byte)[$i0];

        $i0 = 0;

     label3:
        $i1 = $i0 * 4;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i3 goto label7;

        $i1 = $i0 * 4;

        $i3 = $i0 * 4;

        $i3 = $i3 + 4;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        $r3 = staticinvoke <com.millennialmedia.android.Base64: byte[] mapChars(java.lang.String)>($r2);

        $i1 = 0;

     label4:
        $i3 = lengthof $r3;

        if $i1 >= $i3 goto label6;

        $i3 = $i0 * 3;

        $i3 = $i3 + $i1;

        $b4 = $r3[$i1];

        r1[$i3] = $b4;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = -1;

        $i1 = $i1 + $i3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        if $i1 != 61 goto label2;

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label2;

     label6:
        $i0 = $i0 + 1;

        goto label3;

     label7:
        return r1;
    }

    public static java.lang.String encode(byte[])
    {
        byte[] $r0, r1;
        byte $b3;
        int i0, $i1, $i2;
        java.lang.StringBuilder r2, $r4;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $r4 = new java.lang.StringBuilder;

        r2 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = newarray (byte)[3];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        $i2 = lengthof $r0;

        $i2 = $i2 % 3;

        $i1 = $i1 - $i2;

        if i0 >= $i1 goto label2;

        $b3 = $r0[i0];

        r1[0] = $b3;

        $i1 = i0 + 1;

        $b3 = $r0[$i1];

        r1[1] = $b3;

        $i1 = i0 + 2;

        $b3 = $r0[$i1];

        r1[2] = $b3;

        $r3 = staticinvoke <com.millennialmedia.android.Base64: java.lang.String mapBits(byte[])>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i0 = i0 + 3;

        goto label1;

     label2:
        i0 = lengthof $r0;

        i0 = i0 % 3;

        if i0 != 1 goto label4;

        r1 = newarray (byte)[1];

        i0 = lengthof $r0;

        i0 = i0 + -1;

        $b3 = $r0[i0];

        r1[0] = $b3;

        $r3 = staticinvoke <com.millennialmedia.android.Base64: java.lang.String mapBits(byte[])>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label3:
        $r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label4:
        i0 = lengthof $r0;

        i0 = i0 % 3;

        if i0 != 2 goto label3;

        r1 = newarray (byte)[2];

        i0 = lengthof $r0;

        i0 = i0 + -2;

        $b3 = $r0[i0];

        r1[0] = $b3;

        i0 = lengthof $r0;

        i0 = i0 + -1;

        $b3 = $r0[i0];

        r1[1] = $b3;

        $r3 = staticinvoke <com.millennialmedia.android.Base64: java.lang.String mapBits(byte[])>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label3;
    }

    private static java.lang.String mapBits(byte[])
    {
        byte[] $r0;
        char $c5;
        short $s4;
        byte $b3;
        int i0, i1, $i2;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuilder;

        r1 = $r3;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label2;

        i0 = i0 << 8;

        $b3 = $r0[i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i2 = (int) $s4;

        i0 = i0 | $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        i1 = lengthof $r0;

        if i1 != 2 goto label5;

        i0 = i0 << 2;

     label3:
        i1 = lengthof $r0;

        i1 = i1 * 6;

     label4:
        if i1 < 0 goto label6;

        $i2 = i0 >> i1;

        $i2 = $i2 & 63;

        $c5 = staticinvoke <com.millennialmedia.android.Base64: char mapValue(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i1 = i1 + -6;

        goto label4;

     label5:
        i1 = lengthof $r0;

        if i1 != 1 goto label3;

        i0 = i0 << 4;

        goto label3;

     label6:
        i0 = lengthof $r0;

        if i0 != 2 goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

     label7:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label8:
        i0 = lengthof $r0;

        if i0 != 1 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==");

        goto label7;
    }

    private static int mapChar(char) throws java.io.IOException
    {
        int $i1, $i2;
        char $c0;
        java.io.IOException $r0;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 65 goto label1;

        $i1 = (int) $c0;

        if $i1 > 90 goto label1;

        $i1 = (int) $c0;

        $i2 = -65;

        $i1 = $i1 + $i2;

        return $i1;

     label1:
        $i1 = (int) $c0;

        if $i1 < 97 goto label2;

        $i1 = (int) $c0;

        if $i1 > 122 goto label2;

        $i1 = (int) $c0;

        $i2 = -97;

        $i1 = $i1 + $i2;

        $i1 = $i1 + 26;

        return $i1;

     label2:
        $i1 = (int) $c0;

        if $i1 < 48 goto label3;

        $i1 = (int) $c0;

        if $i1 > 57 goto label3;

        $i1 = (int) $c0;

        $i2 = -48;

        $i1 = $i1 + $i2;

        $i1 = $i1 + 52;

        return $i1;

     label3:
        $i1 = (int) $c0;

        if $i1 != 43 goto label4;

        return 62;

     label4:
        $i1 = (int) $c0;

        if $i1 != 47 goto label5;

        return 63;

     label5:
        $r0 = new java.io.IOException;

        specialinvoke $r0.<java.io.IOException: void <init>()>();

        throw $r0;
    }

    private static byte[] mapChars(java.lang.String) throws java.io.IOException
    {
        byte[] r1;
        byte $b4;
        int i0, i1, $i2;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $i2 = (int) $c3;

        if $i2 != 61 goto label3;

     label2:
        if i1 != 2 goto label4;

        r1 = newarray (byte)[1];

        i0 = i0 >> 4;

        i0 = i0 & 255;

        $b4 = (byte) i0;

        r1[0] = $b4;

        return r1;

     label3:
        i0 = i0 << 6;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        $i2 = staticinvoke <com.millennialmedia.android.Base64: int mapChar(char)>($c3);

        i0 = i0 | $i2;

        i1 = i1 + 1;

        goto label1;

     label4:
        if i1 != 3 goto label5;

        r1 = newarray (byte)[2];

        i1 = i0 >> 2;

        i1 = i1 & 255;

        $b4 = (byte) i1;

        r1[1] = $b4;

        i0 = i0 >> 10;

        i0 = i0 & 255;

        $b4 = (byte) i0;

        r1[0] = $b4;

        return r1;

     label5:
        r1 = newarray (byte)[3];

        i1 = i0 & 255;

        $b4 = (byte) i1;

        r1[2] = $b4;

        i1 = i0 >> 8;

        i1 = i1 & 255;

        $b4 = (byte) i1;

        r1[1] = $b4;

        i0 = i0 >> 16;

        i0 = i0 & 255;

        $b4 = (byte) i0;

        r1[0] = $b4;

        return r1;
    }

    private static char mapValue(int)
    {
        int $i0;
        char $c1;

        $i0 := @parameter0: int;

        if $i0 >= 26 goto label1;

        $i0 = $i0 + 65;

        $c1 = (char) $i0;

        return $c1;

     label1:
        if $i0 >= 52 goto label2;

        $i0 = $i0 + -26;

        $i0 = $i0 + 97;

        $c1 = (char) $i0;

        return $c1;

     label2:
        if $i0 >= 62 goto label3;

        $i0 = $i0 + -52;

        $i0 = $i0 + 48;

        $c1 = (char) $i0;

        return $c1;

     label3:
        if $i0 != 62 goto label4;

        return 43;

     label4:
        return 47;
    }
}
