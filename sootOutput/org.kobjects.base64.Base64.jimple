public class org.kobjects.base64.Base64 extends java.lang.Object
{
    static final char[] charTab;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.kobjects.base64.Base64: char[] charTab> = $r0;

        return;
    }

    public void <init>()
    {
        org.kobjects.base64.Base64 r0;

        r0 := @this: org.kobjects.base64.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int decode(char)
    {
        int $i1;
        char $c0;
        java.lang.StringBuilder $r0, $r2;
        java.lang.String $r1;
        java.lang.RuntimeException $r3;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 < 65 goto label1;

        $i1 = (int) $c0;

        if $i1 > 90 goto label1;

        $i1 = (int) $c0;

        $i1 = $i1 + -65;

        return $i1;

     label1:
        $i1 = (int) $c0;

        if $i1 < 97 goto label2;

        $i1 = (int) $c0;

        if $i1 > 122 goto label2;

        $i1 = (int) $c0;

        $i1 = $i1 + -97;

        $i1 = $i1 + 26;

        return $i1;

     label2:
        $i1 = (int) $c0;

        if $i1 < 48 goto label3;

        $i1 = (int) $c0;

        if $i1 > 57 goto label3;

        $i1 = (int) $c0;

        $i1 = $i1 + -48;

        $i1 = $i1 + 26;

        $i1 = $i1 + 26;

        return $i1;

     label3:
        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 43: goto label5;
            case 47: goto label6;
            case 61: goto label7;
            default: goto label4;
        };

     label4:
        $r3 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected code: ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label5:
        return 62;

     label6:
        return 63;

     label7:
        return 0;
    }

    public static void decode(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        int i0, i1, $i2, $i4;
        char $c3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.OutputStream;

        i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label1:
        if i1 >= $i2 goto label2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = (int) $c3;

        if i0 > 32 goto label2;

        i1 = i1 + 1;

        goto label1;

     label2:
        if i1 != $i2 goto label3;

        return;

     label3:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i1);

        i0 = staticinvoke <org.kobjects.base64.Base64: int decode(char)>($c3);

        i0 = i0 << 18;

        $i4 = i1 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = staticinvoke <org.kobjects.base64.Base64: int decode(char)>($c3);

        $i4 = $i4 << 12;

        i0 = i0 + $i4;

        $i4 = i1 + 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = staticinvoke <org.kobjects.base64.Base64: int decode(char)>($c3);

        $i4 = $i4 << 6;

        i0 = i0 + $i4;

        $i4 = i1 + 3;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = staticinvoke <org.kobjects.base64.Base64: int decode(char)>($c3);

        i0 = i0 + $i4;

        $i4 = i0 >> 16;

        $i4 = $i4 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i4);

        $i4 = i1 + 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = (int) $c3;

        if $i4 == 61 goto label4;

        $i4 = i0 >> 8;

        $i4 = $i4 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i4);

        $i4 = i1 + 3;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = (int) $c3;

        if $i4 == 61 goto label4;

        i0 = i0 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        i1 = i1 + 4;

        goto label1;

     label4:
        return;
    }

    public static byte[] decode(java.lang.String)
    {
        java.lang.Throwable r2;
        byte[] $r3;
        java.io.ByteArrayOutputStream r1;
        java.lang.String $r0;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <org.kobjects.base64.Base64: void decode(java.lang.String,java.io.OutputStream)>($r0, r1);

     label2:
        $r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

     label3:
        r2 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String encode(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <org.kobjects.base64.Base64: java.lang.StringBuffer encode(byte[],int,int,java.lang.StringBuffer)>($r0, 0, $i0, null);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.StringBuffer encode(byte[], int, int, java.lang.StringBuffer)
    {
        byte[] $r0;
        char $c9;
        short $s6;
        byte $b5;
        java.lang.StringBuffer r1, $r3;
        int $i0, $i1, i2, $i3, i4, $i7, $i8;
        char[] $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r1 := @parameter3: java.lang.StringBuffer;

        $r3 = new java.lang.StringBuffer;

        r1 = $r3;

        $i3 = lengthof $r0;

        $i3 = $i3 * 3;

        $i3 = $i3 / 2;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i3);

        i2 = $i1 + -3;

        $i3 = 0;

        i4 = 0;

     label1:
        if $i3 > i2 goto label3;

        $b5 = $r0[$i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i7 = (int) $s6;

        $i7 = $i7 << 16;

        $i8 = $i3 + 1;

        $b5 = $r0[$i8];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i8 = (int) $s6;

        $i8 = $i8 << 8;

        $i7 = $i7 | $i8;

        $i8 = $i3 + 2;

        $b5 = $r0[$i8];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i8 = (int) $s6;

        $i7 = $i7 | $i8;

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i8 = $i7 >> 18;

        $i8 = $i8 & 63;

        $c9 = $r2[$i8];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i8 = $i7 >> 12;

        $i8 = $i8 & 63;

        $c9 = $r2[$i8];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i8 = $i7 >> 6;

        $i8 = $i8 & 63;

        $c9 = $r2[$i8];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i7 = $i7 & 63;

        $c9 = $r2[$i7];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $i3 = $i3 + 3;

        $i7 = i4 + 1;

        if i4 < 14 goto label2;

        $i7 = 0;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label2:
        i4 = $i7;

        goto label1;

     label3:
        i2 = 0 + $i1;

        i2 = i2 + -2;

        if $i3 != i2 goto label4;

        $b5 = $r0[$i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i0 = (int) $s6;

        $i0 = $i0 << 16;

        $i1 = $i3 + 1;

        $b5 = $r0[$i1];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i1 = (int) $s6;

        $i1 = $i1 << 8;

        $i0 = $i0 | $i1;

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i1 = $i0 >> 18;

        $i1 = $i1 & 63;

        $c9 = $r2[$i1];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i1 = $i0 >> 12;

        $i1 = $i1 & 63;

        $c9 = $r2[$i1];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i0 = $i0 >> 6;

        $i0 = $i0 & 63;

        $c9 = $r2[$i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        return r1;

     label4:
        $i0 = 0 + $i1;

        $i0 = $i0 + -1;

        if $i3 != $i0 goto label5;

        $b5 = $r0[$i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i0 = (int) $s6;

        $i0 = $i0 << 16;

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i1 = $i0 >> 18;

        $i1 = $i1 & 63;

        $c9 = $r2[$i1];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        $r2 = <org.kobjects.base64.Base64: char[] charTab>;

        $i0 = $i0 >> 12;

        $i0 = $i0 & 63;

        $c9 = $r2[$i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c9);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("==");

     label5:
        return r1;
    }
}
