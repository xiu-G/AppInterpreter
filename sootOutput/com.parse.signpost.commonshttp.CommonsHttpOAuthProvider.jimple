public class com.parse.signpost.commonshttp.CommonsHttpOAuthProvider extends com.parse.signpost.AbstractOAuthProvider
{
    private static final long serialVersionUID;
    private transient org.apache.http.client.HttpClient httpClient;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.http.impl.client.DefaultHttpClient $r4;
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r4 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        r0.<com.parse.signpost.commonshttp.CommonsHttpOAuthProvider: org.apache.http.client.HttpClient httpClient> = $r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, org.apache.http.client.HttpClient)
    {
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        org.apache.http.client.HttpClient $r4;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.apache.http.client.HttpClient;

        specialinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        r0.<com.parse.signpost.commonshttp.CommonsHttpOAuthProvider: org.apache.http.client.HttpClient httpClient> = $r4;

        return;
    }

    protected void closeConnection(com.parse.signpost.http.HttpRequest, com.parse.signpost.http.HttpResponse)
    {
        com.parse.signpost.http.HttpResponse $r2;
        java.lang.Throwable $r6;
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        org.apache.http.HttpEntity $r5;
        java.io.IOException $r7;
        com.parse.signpost.http.HttpRequest $r1;
        org.apache.http.HttpResponse $r4;
        java.lang.Object $r3;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.http.HttpRequest;

        $r2 := @parameter1: com.parse.signpost.http.HttpResponse;

        if $r2 == null goto label4;

        $r3 = interfaceinvoke $r2.<com.parse.signpost.http.HttpResponse: java.lang.Object unwrap()>();

        $r4 = (org.apache.http.HttpResponse) $r3;

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r5 == null goto label4;

     label1:
        interfaceinvoke $r5.<org.apache.http.HttpEntity: void consumeContent()>();

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        $r7 = (java.io.IOException) $r6;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected com.parse.signpost.http.HttpRequest createRequest(java.lang.String)
    {
        org.apache.http.client.methods.HttpPost $r2;
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        com.parse.signpost.commonshttp.HttpRequestAdapter $r3;
        java.lang.String $r1;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r2.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        $r3 = new com.parse.signpost.commonshttp.HttpRequestAdapter;

        specialinvoke $r3.<com.parse.signpost.commonshttp.HttpRequestAdapter: void <init>(org.apache.http.client.methods.HttpUriRequest)>($r2);

        return $r3;
    }

    protected com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest)
    {
        com.parse.signpost.http.HttpRequest $r1;
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        org.apache.http.client.HttpClient $r2;
        org.apache.http.HttpResponse $r5;
        java.lang.Object $r3;
        com.parse.signpost.commonshttp.HttpResponseAdapter $r6;
        org.apache.http.client.methods.HttpUriRequest $r4;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.http.HttpRequest;

        $r2 = r0.<com.parse.signpost.commonshttp.CommonsHttpOAuthProvider: org.apache.http.client.HttpClient httpClient>;

        $r3 = interfaceinvoke $r1.<com.parse.signpost.http.HttpRequest: java.lang.Object unwrap()>();

        $r4 = (org.apache.http.client.methods.HttpUriRequest) $r3;

        $r5 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r4);

        $r6 = new com.parse.signpost.commonshttp.HttpResponseAdapter;

        specialinvoke $r6.<com.parse.signpost.commonshttp.HttpResponseAdapter: void <init>(org.apache.http.HttpResponse)>($r5);

        return $r6;
    }

    public void setHttpClient(org.apache.http.client.HttpClient)
    {
        com.parse.signpost.commonshttp.CommonsHttpOAuthProvider r0;
        org.apache.http.client.HttpClient $r1;

        r0 := @this: com.parse.signpost.commonshttp.CommonsHttpOAuthProvider;

        $r1 := @parameter0: org.apache.http.client.HttpClient;

        r0.<com.parse.signpost.commonshttp.CommonsHttpOAuthProvider: org.apache.http.client.HttpClient httpClient> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <com.parse.signpost.commonshttp.CommonsHttpOAuthProvider: long serialVersionUID> = 1L;

        return;
    }
}
