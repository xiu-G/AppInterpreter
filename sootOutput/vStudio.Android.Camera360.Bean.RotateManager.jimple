public class vStudio.Android.Camera360.Bean.RotateManager extends java.lang.Object implements android.hardware.SensorEventListener
{
    private static final int ANIMATION_DELAY;
    private static int DURATION;
    private vStudio.Android.Camera360.Views.RotateView$Direction mDirection;
    private float mLastAngle;
    private long mLastTime;
    private java.util.LinkedList mRotateViewList;
    private android.hardware.SensorManager mSensorManager;

    static void <clinit>()
    {
        <vStudio.Android.Camera360.Bean.RotateManager: int ANIMATION_DELAY> = 700;

        <vStudio.Android.Camera360.Bean.RotateManager: int DURATION> = 350;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.hardware.SensorManager $r4;
        vStudio.Android.Camera360.Bean.RotateManager r0;
        java.lang.Object $r3;
        android.hardware.Sensor $r5;
        java.util.LinkedList $r2;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<vStudio.Android.Camera360.Bean.RotateManager: java.util.LinkedList mRotateViewList> = $r2;

        r0.<vStudio.Android.Camera360.Bean.RotateManager: long mLastTime> = -1L;

        $z0 = <vStudio.Android.GPhoto.VersionControl: boolean ENABLE_ANMI>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("sensor");

        $r4 = (android.hardware.SensorManager) $r3;

        r0.<vStudio.Android.Camera360.Bean.RotateManager: android.hardware.SensorManager mSensorManager> = $r4;

        $r4 = r0.<vStudio.Android.Camera360.Bean.RotateManager: android.hardware.SensorManager mSensorManager>;

        $r5 = virtualinvoke $r4.<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>(3);

        $r4 = r0.<vStudio.Android.Camera360.Bean.RotateManager: android.hardware.SensorManager mSensorManager>;

        virtualinvoke $r4.<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>(r0, $r5, 2);

     label1:
        return;
    }

    private void startRotate(float, float)
    {
        java.util.Iterator $r2;
        vStudio.Android.Camera360.Views.RotateView r4;
        vStudio.Android.Camera360.Bean.RotateManager r0;
        float $f0, $f1;
        java.lang.Object $r3;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<vStudio.Android.Camera360.Bean.RotateManager: java.util.LinkedList mRotateViewList>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (vStudio.Android.Camera360.Views.RotateView) $r3;

        virtualinvoke r4.<vStudio.Android.Camera360.Views.RotateView: void setRotate(float,float)>($f0, $f1);

        virtualinvoke r4.<vStudio.Android.Camera360.Views.RotateView: void startRotate()>();

        goto label1;
    }

    public void add(vStudio.Android.Camera360.Views.RotateView)
    {
        vStudio.Android.Camera360.Bean.RotateManager r0;
        vStudio.Android.Camera360.Views.RotateView $r1;
        java.util.LinkedList $r2;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $r1 := @parameter0: vStudio.Android.Camera360.Views.RotateView;

        if $r1 == null goto label1;

        $r2 = r0.<vStudio.Android.Camera360.Bean.RotateManager: java.util.LinkedList mRotateViewList>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r1);

     label1:
        return;
    }

    public boolean isMemberRotating()
    {
        vStudio.Android.Camera360.Views.RotateView r4;
        java.util.Iterator $r2;
        vStudio.Android.Camera360.Bean.RotateManager r0;
        java.lang.Object $r3;
        android.view.animation.Animation $r5;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $r1 = r0.<vStudio.Android.Camera360.Bean.RotateManager: java.util.LinkedList mRotateViewList>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (vStudio.Android.Camera360.Views.RotateView) $r3;

        $r5 = virtualinvoke r4.<vStudio.Android.Camera360.Views.RotateView: android.view.animation.Animation getAnimation()>();

        if $r5 == null goto label1;

        $z0 = virtualinvoke $r5.<android.view.animation.Animation: boolean hasStarted()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r5.<android.view.animation.Animation: boolean hasEnded()>();

        if $z0 != 0 goto label1;

        return 1;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        int $i0;
        vStudio.Android.Camera360.Bean.RotateManager r0;
        android.hardware.Sensor $r1;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $r1 := @parameter0: android.hardware.Sensor;

        $i0 := @parameter1: int;

        return;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        float[] $r3;
        long $l1, $l2;
        vStudio.Android.Camera360.Views.RotateView$Direction r2, $r4;
        android.hardware.SensorEvent $r1;
        byte $b3;
        int i0, $i4;
        vStudio.Android.Camera360.Bean.RotateManager r0;
        float f0, $f1;
        boolean $z0;

        r0 := @this: vStudio.Android.Camera360.Bean.RotateManager;

        $r1 := @parameter0: android.hardware.SensorEvent;

        f0 = r0.<vStudio.Android.Camera360.Bean.RotateManager: float mLastAngle>;

        r2 = <vStudio.Android.Camera360.Views.RotateView$Direction: vStudio.Android.Camera360.Views.RotateView$Direction left>;

        $r3 = $r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r3[2];

        i0 = (int) $f1;

        if i0 < 60 goto label2;

        f0 = 0.0F;

        r2 = <vStudio.Android.Camera360.Views.RotateView$Direction: vStudio.Android.Camera360.Views.RotateView$Direction left>;

     label1:
        $z0 = virtualinvoke r0.<vStudio.Android.Camera360.Bean.RotateManager: boolean isMemberRotating()>();

        if $z0 == 0 goto label4;

        return;

     label2:
        if i0 > 30 goto label3;

        $i4 = -30;

        if i0 < $i4 goto label3;

        f0 = -90.0F;

        r2 = <vStudio.Android.Camera360.Views.RotateView$Direction: vStudio.Android.Camera360.Views.RotateView$Direction up>;

        goto label1;

     label3:
        $r4 = r0.<vStudio.Android.Camera360.Bean.RotateManager: vStudio.Android.Camera360.Views.RotateView$Direction mDirection>;

        if r2 != $r4 goto label1;

        return;

     label4:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = r0.<vStudio.Android.Camera360.Bean.RotateManager: long mLastTime>;

        $l1 = $l1 - $l2;

        $b3 = $l1 cmp 700L;

        i0 = (int) $b3;

        if i0 < 0 goto label5;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<vStudio.Android.Camera360.Bean.RotateManager: long mLastTime> = $l1;

        $f1 = r0.<vStudio.Android.Camera360.Bean.RotateManager: float mLastAngle>;

        specialinvoke r0.<vStudio.Android.Camera360.Bean.RotateManager: void startRotate(float,float)>($f1, f0);

        r0.<vStudio.Android.Camera360.Bean.RotateManager: float mLastAngle> = f0;

        r0.<vStudio.Android.Camera360.Bean.RotateManager: vStudio.Android.Camera360.Views.RotateView$Direction mDirection> = r2;

     label5:
        return;
    }
}
