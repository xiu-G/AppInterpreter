public class com.mobclick.android.o extends java.lang.Object
{
    static java.lang.String a;
    public static int b;

    static void <clinit>()
    {
        <com.mobclick.android.o: java.lang.String a> = "utf-8";

        return;
    }

    public void <init>()
    {
        com.mobclick.android.o r0;

        r0 := @this: com.mobclick.android.o;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a()
    {
        java.lang.Throwable $r4, $r5;
        int $i0;
        java.lang.String $r0, $r3;
        java.io.FileReader $r1;
        java.io.BufferedReader $r2;

        $r0 = null;

        $r1 = new java.io.FileReader;

     label01:
        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>("/proc/cpuinfo");

     label02:
        $r2 = new java.io.BufferedReader;

     label03:
        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r1, 1024);

        $r3 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        $r0 = $r3;

     label05:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        virtualinvoke $r1.<java.io.FileReader: void close()>();

     label06:
        $r0 = $r3;

     label07:
        if $r0 == null goto label08;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label08:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label09:
        $r4 := @caughtexception;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read from file /proc/cpuinfo", $r4);

     label11:
        goto label07;

     label12:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not open file /proc/cpuinfo", $r5);

        goto label07;

        catch java.io.FileNotFoundException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        java.security.MessageDigest $r2;
        short $s3;
        byte $b2;
        java.lang.StringBuffer $r1, $r5;
        java.security.NoSuchAlgorithmException $r6;
        int $i0, $i1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r5 = new java.lang.StringBuffer;

        $r1 = $r5;

     label03:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label08;

     label06:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return $r0;

     label08:
        $b2 = $r3[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

     label09:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label10:
        $i0 = $i0 + 1;

        goto label05;

     label11:
        $r4 := @caughtexception;

        $r6 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke $r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label11;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label11;
    }

    public static java.lang.String a(byte[], int)
    {
        java.lang.Throwable $r2, $r3;
        byte[] $r0;
        java.util.zip.Inflater $r1, $r4;
        int $i0;
        java.util.zip.DataFormatException $r7;
        java.lang.String $r5;
        java.io.UnsupportedEncodingException $r6;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r4 = new java.util.zip.Inflater;

        $r1 = $r4;

     label01:
        specialinvoke $r4.<java.util.zip.Inflater: void <init>()>();

        virtualinvoke $r1.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r0, 0, $i0);

     label02:
        $r0 = newarray (byte)[100];

     label03:
        $i0 = virtualinvoke $r1.<java.util.zip.Inflater: int inflate(byte[])>($r0);

        virtualinvoke $r1.<java.util.zip.Inflater: void end()>();

     label04:
        $r5 = new java.lang.String;

     label05:
        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, 0, $i0, "utf-8");

     label06:
        return $r5;

     label07:
        $r2 := @caughtexception;

        $r6 = (java.io.UnsupportedEncodingException) $r2;

     label08:
        virtualinvoke $r6.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label09:
        return null;

     label10:
        $r3 := @caughtexception;

        $r7 = (java.util.zip.DataFormatException) $r3;

        virtualinvoke $r7.<java.util.zip.DataFormatException: void printStackTrace()>();

        return null;

        catch java.util.zip.DataFormatException from label01 to label02 with label10;
        catch java.util.zip.DataFormatException from label03 to label04 with label10;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
        catch java.util.zip.DataFormatException from label05 to label06 with label10;
        catch java.util.zip.DataFormatException from label08 to label09 with label10;
    }

    public static void a(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.widget.Toast $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.mobclick.android.n: java.lang.String o(android.content.Context)>($r0);

        $r2 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r1, 0);

        virtualinvoke $r2.<android.widget.Toast: void show()>();

        return;
    }

    public static boolean a(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        int $i0;
        java.lang.String $r1, $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>($r1, $r3);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static java.lang.String[] a(javax.microedition.khronos.opengles.GL10)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

        $r1 = newarray (java.lang.String)[2];

     label1:
        $r2 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7936);

        $r3 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7937);

        $r1[0] = $r2;

        $r1[1] = $r3;

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read gpu infor:", $r4);

        $r1 = newarray (java.lang.String)[0];

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String b(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "No IMEI.");

     label1:
        $z0 = staticinvoke <com.mobclick.android.o: boolean a(android.content.Context,java.lang.String)>($r0, "android.permission.READ_PHONE_STATE");

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label4:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "No IMEI.");

        $r3 = staticinvoke <com.mobclick.android.o: java.lang.String c(android.content.Context)>($r0);

        if $r3 != null goto label7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MobclickAgent", "Failed to take mac as IMEI.");

        return null;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

     label6:
        $r3 = "";

        goto label4;

     label7:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static byte[] b(java.lang.String)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r2;
        java.util.zip.Deflater $r1;
        int $i0, $i1;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        <com.mobclick.android.o: int b> = 0;

        $r3 = <com.mobclick.android.o: java.lang.String a>;

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        $r1 = new java.util.zip.Deflater;

        specialinvoke $r1.<java.util.zip.Deflater: void <init>()>();

        virtualinvoke $r1.<java.util.zip.Deflater: void setInput(byte[])>($r4);

        virtualinvoke $r1.<java.util.zip.Deflater: void finish()>();

        $r4 = newarray (byte)[8192];

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $z0 = virtualinvoke $r1.<java.util.zip.Deflater: boolean finished()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.util.zip.Deflater: void end()>();

        $r4 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;

     label2:
        $i0 = virtualinvoke $r1.<java.util.zip.Deflater: int deflate(byte[])>($r4);

        $i1 = <com.mobclick.android.o: int b>;

        $i1 = $i1 + $i0;

        <com.mobclick.android.o: int b> = $i1;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, 0, $i0);

        goto label1;
    }

    private static java.lang.String c(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager $r2;
        android.net.wifi.WifiInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r2 = (android.net.wifi.WifiManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r4 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("MobclickAgent", "Could not read MAC, forget to include ACCESS_WIFI_STATE permission?", $r5);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
