public class proguard.obfuscate.Utf8UsageMarker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor, proguard.classfile.constant.visitor.ConstantVisitor, proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.attribute.visitor.InnerClassesInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableInfoVisitor, proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor, proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor
{
    private static final java.lang.Object USED;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <proguard.obfuscate.Utf8UsageMarker: java.lang.Object USED> = $r0;

        return;
    }

    public void <init>()
    {
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    static boolean isUsed(proguard.classfile.VisitorAccepter)
    {
        java.lang.Object $r1, $r2;
        proguard.classfile.VisitorAccepter $r0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r2 = interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: java.lang.Object getVisitorInfo()>();

        $r1 = <proguard.obfuscate.Utf8UsageMarker: java.lang.Object USED>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static void markAsUsed(proguard.classfile.VisitorAccepter)
    {
        java.lang.Object $r1;
        proguard.classfile.VisitorAccepter $r0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter;

        $r1 = <proguard.obfuscate.Utf8UsageMarker: java.lang.Object USED>;

        interfaceinvoke $r0.<proguard.classfile.VisitorAccepter: void setVisitorInfo(java.lang.Object)>($r1);

        return;
    }

    private void markCpUtf8Entry(proguard.classfile.Clazz, int)
    {
        proguard.classfile.Clazz $r2;
        proguard.classfile.constant.Constant $r0;
        int $i0;
        proguard.classfile.constant.Utf8Constant r4;
        proguard.classfile.ProgramClass $r3;
        proguard.obfuscate.Utf8UsageMarker r1;

        r1 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r2 := @parameter0: proguard.classfile.Clazz;

        $i0 := @parameter1: int;

        $r3 = (proguard.classfile.ProgramClass) $r2;

        $r0 = virtualinvoke $r3.<proguard.classfile.ProgramClass: proguard.classfile.constant.Constant getConstant(int)>($i0);

        r4 = (proguard.classfile.constant.Utf8Constant) $r0;

        staticinvoke <proguard.obfuscate.Utf8UsageMarker: void markAsUsed(proguard.classfile.VisitorAccepter)>(r4);

        return;
    }

    public void visitAnnotation(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.Annotation: int u2typeIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.Annotation: void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, r0);

        return;
    }

    public void visitAnnotationDefaultAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute $r3;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.AnnotationDefaultAttribute: void defaultValueAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, r0);

        return;
    }

    public void visitAnnotationElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.AnnotationElementValue)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.'annotation'.AnnotationElementValue $r3;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.AnnotationElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: int u2elementNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.AnnotationElementValue: void annotationAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, r0);

        return;
    }

    public void visitAnyAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.AnnotationsAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute $r2;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $i0 = $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, r0);

        return;
    }

    public void visitAnyConstant(proguard.classfile.Clazz, proguard.classfile.constant.Constant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.Constant $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.Constant;

        return;
    }

    public void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute $r3;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, r0);

        return;
    }

    public void visitArrayElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ArrayElementValue)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.ArrayElementValue $r3;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ArrayElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: int u2elementNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ArrayElementValue: void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation,proguard.classfile.attribute.'annotation'.visitor.ElementValueVisitor)>($r1, $r2, r0);

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $i0 = $r2.<proguard.classfile.constant.ClassConstant: int u2nameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitClassElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ClassElementValue)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.attribute.'annotation'.ClassElementValue $r3;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ClassElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2elementNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ClassElementValue: int u2classInfoIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r3.<proguard.classfile.attribute.CodeAttribute: void attributesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r2, r0);

        return;
    }

    public void visitConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.ConstantElementValue)
    {
        proguard.classfile.attribute.'annotation'.ConstantElementValue $r3;
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ConstantElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2elementNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u1tag>;

        if $i0 != 115 goto label2;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.ConstantElementValue: int u2constantValueIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label2:
        return;
    }

    public void visitConstantValueAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.ConstantValueAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.ConstantValueAttribute $r3;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.ConstantValueAttribute;

        $i0 = $r3.<proguard.classfile.attribute.ConstantValueAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitDeprecatedAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.DeprecatedAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.DeprecatedAttribute $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.DeprecatedAttribute;

        $i0 = $r2.<proguard.classfile.attribute.DeprecatedAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitEnclosingMethodAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.EnclosingMethodAttribute)
    {
        proguard.classfile.attribute.EnclosingMethodAttribute $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.EnclosingMethodAttribute;

        $i0 = $r2.<proguard.classfile.attribute.EnclosingMethodAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitEnumConstantElementValue(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.Annotation, proguard.classfile.attribute.'annotation'.EnumConstantElementValue)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.'annotation'.EnumConstantElementValue $r3;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.Annotation;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.EnumConstantElementValue;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2elementNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2elementNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        $i0 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2typeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r3.<proguard.classfile.attribute.'annotation'.EnumConstantElementValue: int u2constantNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitExceptionsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.ExceptionsAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.ExceptionsAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.ExceptionsAttribute;

        $i0 = $r3.<proguard.classfile.attribute.ExceptionsAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitInnerClassesAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesAttribute)
    {
        proguard.classfile.attribute.InnerClassesAttribute $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesAttribute;

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r2.<proguard.classfile.attribute.InnerClassesAttribute: void innerClassEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.InnerClassesInfoVisitor)>($r1, r0);

        return;
    }

    public void visitInnerClassesInfo(proguard.classfile.Clazz, proguard.classfile.attribute.InnerClassesInfo)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.InnerClassesInfo $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.InnerClassesInfo;

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerNameIndex>;

        if $i0 == 0 goto label1;

        $i0 = $r2.<proguard.classfile.attribute.InnerClassesInfo: int u2innerNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

     label1:
        return;
    }

    public void visitLineNumberTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LineNumberTableAttribute)
    {
        proguard.classfile.attribute.LineNumberTableAttribute $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LineNumberTableAttribute;

        $i0 = $r4.<proguard.classfile.attribute.LineNumberTableAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitLocalVariableInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableInfo)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.LocalVariableInfo $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableInfo;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2nameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableInfo: int u2descriptorIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitLocalVariableTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTableAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTableAttribute $r4;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTableAttribute;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r4.<proguard.classfile.attribute.LocalVariableTableAttribute: void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableInfoVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitLocalVariableTypeInfo(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeInfo)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTypeInfo $r4;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeInfo;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2nameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeInfo: int u2signatureIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.LocalVariableTypeTableAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.LocalVariableTypeTableAttribute $r4;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.LocalVariableTypeTableAttribute;

        $i0 = $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r4.<proguard.classfile.attribute.LocalVariableTypeTableAttribute: void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor)>($r1, $r2, $r3, r0);

        return;
    }

    public void visitNameAndTypeConstant(proguard.classfile.Clazz, proguard.classfile.constant.NameAndTypeConstant)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.constant.NameAndTypeConstant $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.NameAndTypeConstant;

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2nameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r2.<proguard.classfile.constant.NameAndTypeConstant: int u2descriptorIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        proguard.classfile.ProgramClass $r1;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void fieldsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void methodsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor)>(r0);

        return;
    }

    public void visitProgramMember(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r2;
        int $i0;
        proguard.classfile.ProgramClass $r1;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMember;

        $i0 = $r2.<proguard.classfile.ProgramMember: int u2nameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r2.<proguard.classfile.ProgramMember: int u2descriptorIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        virtualinvoke $r2.<proguard.classfile.ProgramMember: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        return;
    }

    public void visitSignatureAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SignatureAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.SignatureAttribute $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SignatureAttribute;

        $i0 = $r2.<proguard.classfile.attribute.SignatureAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r2.<proguard.classfile.attribute.SignatureAttribute: int u2signatureIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitSourceDirAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceDirAttribute)
    {
        proguard.classfile.attribute.SourceDirAttribute $r2;
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceDirAttribute;

        $i0 = $r2.<proguard.classfile.attribute.SourceDirAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r2.<proguard.classfile.attribute.SourceDirAttribute: int u2sourceDirIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitSourceFileAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SourceFileAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.SourceFileAttribute $r2;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SourceFileAttribute;

        $i0 = $r2.<proguard.classfile.attribute.SourceFileAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        $i0 = $r2.<proguard.classfile.attribute.SourceFileAttribute: int u2sourceFileIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitStackMapAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.StackMapAttribute $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapAttribute;

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitStackMapTableAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.preverification.StackMapTableAttribute)
    {
        proguard.classfile.attribute.preverification.StackMapTableAttribute $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.preverification.StackMapTableAttribute;

        $i0 = $r4.<proguard.classfile.attribute.preverification.StackMapTableAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.constant.StringConstant $r2;
        int $i0;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $i0 = $r2.<proguard.classfile.constant.StringConstant: int u2stringIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitSyntheticAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.SyntheticAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.SyntheticAttribute $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.SyntheticAttribute;

        $i0 = $r2.<proguard.classfile.attribute.SyntheticAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }

    public void visitUnknownAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.UnknownAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.classfile.attribute.UnknownAttribute $r2;
        proguard.obfuscate.Utf8UsageMarker r0;

        r0 := @this: proguard.obfuscate.Utf8UsageMarker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.UnknownAttribute;

        $i0 = $r2.<proguard.classfile.attribute.UnknownAttribute: int u2attributeNameIndex>;

        specialinvoke r0.<proguard.obfuscate.Utf8UsageMarker: void markCpUtf8Entry(proguard.classfile.Clazz,int)>($r1, $i0);

        return;
    }
}
