public class com.entaz.security.DES extends java.lang.Object
{

    public void <init>()
    {
        com.entaz.security.DES r0;

        r0 := @this: com.entaz.security.DES;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decodeBase64(byte[])
    {
        byte[] $r0;
        java.lang.Object[] $r4;
        java.lang.Class[] r1;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.reflect.Method $r3;
        java.lang.Exception $r6;

        $r0 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.commons.codec.binary.Base64");

     label2:
        r1 = newarray (java.lang.Class)[1];

     label3:
        r1[0] = class "[B";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("decodeBase64", r1);

     label4:
        $r4 = newarray (java.lang.Object)[1];

     label5:
        $r4[0] = $r0;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

        $r0 = (byte[]) $r5;

     label6:
        return $r0;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String decrypt(java.lang.String) throws java.lang.Exception
    {
        java.security.Key $r3;
        byte[] $r4;
        int $i0;
        java.lang.String $r0, $r1;
        javax.crypto.Cipher $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = staticinvoke <com.entaz.security.DES: java.lang.String key()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 24 goto label4;

        $r1 = "DESede/ECB/PKCS5Padding";

     label3:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        $r3 = staticinvoke <com.entaz.security.DES: java.security.Key getKey()>();

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r3);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <com.entaz.security.DES: byte[] decodeBase64(byte[])>($r4);

        $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF8");

        return $r0;

     label4:
        $r1 = "DES/ECB/PKCS5Padding";

        goto label3;
    }

    public static byte[] encodeBase64(byte[])
    {
        byte[] $r0;
        java.lang.Object[] $r4;
        java.lang.Class[] r1;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.reflect.Method $r3;
        java.lang.Exception $r6;

        $r0 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.commons.codec.binary.Base64");

     label2:
        r1 = newarray (java.lang.Class)[1];

     label3:
        r1[0] = class "[B";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("encodeBase64", r1);

     label4:
        $r4 = newarray (java.lang.Object)[1];

     label5:
        $r4[0] = $r0;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

        $r0 = (byte[]) $r5;

     label6:
        return $r0;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String encrypt(java.lang.String) throws java.lang.Exception
    {
        java.security.Key $r3;
        byte[] $r4;
        int $i0;
        java.lang.String $r0, $r1;
        javax.crypto.Cipher $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = "entaz_comicplus_go_comic";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 24 goto label4;

        $r1 = "DESede/ECB/PKCS5Padding";

     label3:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        $r3 = staticinvoke <com.entaz.security.DES: java.security.Key getKey()>();

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r3);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

        $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        $r4 = staticinvoke <com.entaz.security.DES: byte[] encodeBase64(byte[])>($r4);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF8");

        return $r0;

     label4:
        $r1 = "DES/ECB/PKCS5Padding";

        goto label3;
    }

    public static java.security.Key getKey() throws java.lang.Exception
    {
        int $i0;
        java.security.Key $r1;
        java.lang.String $r0;

        $r0 = "entaz_comicplus_go_comic";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 24 goto label1;

        $r1 = staticinvoke <com.entaz.security.DES: java.security.Key getKey2(java.lang.String)>("entaz_comicplus_go_comic");

        return $r1;

     label1:
        $r1 = staticinvoke <com.entaz.security.DES: java.security.Key getKey1(java.lang.String)>("entaz_comicplus_go_comic");

        return $r1;
    }

    public static java.security.Key getKey1(java.lang.String) throws java.lang.Exception
    {
        byte[] $r2;
        javax.crypto.SecretKeyFactory $r3;
        javax.crypto.spec.DESKeySpec r1;
        java.lang.String $r0;
        javax.crypto.SecretKey $r4;

        $r0 := @parameter0: java.lang.String;

        r1 = new javax.crypto.spec.DESKeySpec;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke r1.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r2);

        $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1);

        return $r4;
    }

    public static java.security.Key getKey2(java.lang.String) throws java.lang.Exception
    {
        byte[] $r2;
        javax.crypto.SecretKeyFactory $r3;
        java.lang.String $r0;
        javax.crypto.SecretKey $r4;
        javax.crypto.spec.DESedeKeySpec r1;

        $r0 := @parameter0: java.lang.String;

        r1 = new javax.crypto.spec.DESedeKeySpec;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke r1.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>($r2);

        $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DESede");

        $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1);

        return $r4;
    }

    public static java.lang.String key()
    {
        return "entaz_comicplus_go_comic";
    }
}
