public class com.baidu.appx.f.b extends java.lang.Object
{
    private static final org.json.JSONObject a;

    static void <clinit>()
    {
        org.json.JSONObject $r0;

        $r0 = staticinvoke <com.baidu.appx.f.b: org.json.JSONObject a()>();

        <com.baidu.appx.f.b: org.json.JSONObject a> = $r0;

        return;
    }

    public static java.lang.String a(int)
    {
        org.json.JSONObject $r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.String $r3;
        java.lang.Integer $r2;

        $i0 := @parameter0: int;

        $r0 = <com.baidu.appx.f.b: org.json.JSONObject a>;

        if $r0 == null goto label1;

        $r0 = <com.baidu.appx.f.b: org.json.JSONObject a>;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r1);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String optString(java.lang.String)>($r3);

        return $r3;

     label1:
        return "";
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("foramt error : ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResultCode");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private static org.json.JSONObject a()
    {
        byte[] r1;
        java.io.ByteArrayOutputStream r0, $r8;
        java.lang.Exception r2;
        com.baidu.appx.a.d $r3;
        org.json.JSONObject $r10;
        int $i0;
        java.lang.StringBuilder $r6, $r9;
        java.lang.String $r5, $r7;
        java.io.InputStream $r4;

        $r3 = staticinvoke <com.baidu.appx.a.d: com.baidu.appx.a.d a()>();

        $r4 = staticinvoke <com.baidu.appx.g.f: java.io.InputStream a(java.lang.String,java.lang.Object)>("res_bdappx/values/bdappx_errorDescription", $r3);

        if $r4 != null goto label01;

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.String)>("failed to load error description file");

        return null;

     label01:
        $r8 = new java.io.ByteArrayOutputStream;

        r0 = $r8;

     label02:
        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        r1 = newarray (byte)[1024];

     label04:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>(r1);

     label05:
        if $i0 != -1 goto label12;

     label06:
        $r5 = virtualinvoke r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke r0.<java.io.ByteArrayOutputStream: void close()>();

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label07:
        $r9 = new java.lang.StringBuilder;

        $r6 = $r9;

     label08:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("error descripiton jsonStr:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.String)>($r7);

     label09:
        $r10 = new org.json.JSONObject;

     label10:
        specialinvoke $r10.<org.json.JSONObject: void <init>(java.lang.String)>($r5);

     label11:
        return $r10;

     label12:
        virtualinvoke r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

     label13:
        goto label04;

     label14:
        r2 := @caughtexception;

        staticinvoke <com.baidu.appx.g.i: void a(java.lang.String)>("failed to read error json string");

        return null;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("absent key : ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResultCode");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }
}
