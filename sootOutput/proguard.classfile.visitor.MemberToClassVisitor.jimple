public class proguard.classfile.visitor.MemberToClassVisitor extends java.lang.Object implements proguard.classfile.visitor.MemberVisitor
{
    private final proguard.classfile.visitor.ClassVisitor classVisitor;
    private proguard.classfile.Clazz lastVisitedClass;

    public void <init>(proguard.classfile.visitor.ClassVisitor)
    {
        proguard.classfile.visitor.MemberToClassVisitor r0;
        proguard.classfile.visitor.ClassVisitor $r1;

        r0 := @this: proguard.classfile.visitor.MemberToClassVisitor;

        $r1 := @parameter0: proguard.classfile.visitor.ClassVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor> = $r1;

        return;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.Clazz $r3;
        proguard.classfile.visitor.ClassVisitor $r4;
        proguard.classfile.LibraryField $r2;
        proguard.classfile.visitor.MemberToClassVisitor r0;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.MemberToClassVisitor;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        $r3 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.ClassVisitor: void visitLibraryClass(proguard.classfile.LibraryClass)>($r1);

        r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass> = $r1;

     label1:
        return;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.classfile.Clazz $r3;
        proguard.classfile.visitor.ClassVisitor $r4;
        proguard.classfile.LibraryMethod $r2;
        proguard.classfile.visitor.MemberToClassVisitor r0;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.MemberToClassVisitor;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r3 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.ClassVisitor: void visitLibraryClass(proguard.classfile.LibraryClass)>($r1);

        r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass> = $r1;

     label1:
        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.ProgramField $r2;
        proguard.classfile.Clazz $r3;
        proguard.classfile.visitor.ClassVisitor $r4;
        proguard.classfile.visitor.MemberToClassVisitor r0;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.MemberToClassVisitor;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.ClassVisitor: void visitProgramClass(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass> = $r1;

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.Clazz $r3;
        proguard.classfile.visitor.ClassVisitor $r4;
        proguard.classfile.ProgramMethod $r2;
        proguard.classfile.visitor.MemberToClassVisitor r0;
        proguard.classfile.ProgramClass $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.visitor.MemberToClassVisitor;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.visitor.ClassVisitor classVisitor>;

        interfaceinvoke $r4.<proguard.classfile.visitor.ClassVisitor: void visitProgramClass(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.visitor.MemberToClassVisitor: proguard.classfile.Clazz lastVisitedClass> = $r1;

     label1:
        return;
    }
}
