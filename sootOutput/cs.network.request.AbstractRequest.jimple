public abstract class cs.network.request.AbstractRequest extends java.lang.Object implements cs.network.request.IRequest, java.lang.Runnable
{
    private static java.util.HashMap apiResultCache;
    private static int cacheTime;
    private static cs.gson.Gson gson;
    private static java.util.HashMap lastUpdateTime;
    private boolean canCache;
    private java.net.HttpURLConnection conn;
    private android.content.Context context;
    cs.network.request.IRequestLinsener requestLinsener;
    private java.lang.Thread thread;
    private int timeOut;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <cs.network.request.AbstractRequest: java.util.HashMap apiResultCache> = $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <cs.network.request.AbstractRequest: java.util.HashMap lastUpdateTime> = $r0;

        <cs.network.request.AbstractRequest: int cacheTime> = 10000;

        <cs.network.request.AbstractRequest: cs.gson.Gson gson> = null;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cs.network.request.AbstractRequest r0;

        r0 := @this: cs.network.request.AbstractRequest;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cs.network.request.AbstractRequest: boolean canCache> = 0;

        r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener> = null;

        r0.<cs.network.request.AbstractRequest: java.lang.Thread thread> = null;

        r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn> = null;

        r0.<cs.network.request.AbstractRequest: int timeOut> = 15000;

        r0.<cs.network.request.AbstractRequest: android.content.Context context> = $r1;

        return;
    }

    private void addToCache(java.lang.String, java.lang.String)
    {
        cs.network.request.AbstractRequest r0;
        java.lang.Long $r4;
        java.util.HashMap $r3;
        long $l0;
        java.lang.String $r1, $r2;

        r0 := @this: cs.network.request.AbstractRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = <cs.network.request.AbstractRequest: java.util.HashMap apiResultCache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r3 = <cs.network.request.AbstractRequest: java.util.HashMap lastUpdateTime>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        return;
    }

    private java.lang.String buildParams(java.util.Map) throws java.io.IOException
    {
        android.content.Context $r3;
        java.lang.Object[] r10;
        long $l0;
        java.util.Map r1;
        int $i1, $i2;
        java.lang.String $r4, $r8;
        boolean $z0;
        cs.network.request.AbstractRequest r0;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.util.List r12;
        java.lang.StringBuilder r2, $r7, $r11, $r13;
        java.lang.Object $r9;

        r0 := @this: cs.network.request.AbstractRequest;

        r1 := @parameter0: java.util.Map;

        $r3 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getAppID(android.content.Context)>($r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appID", $r4);

        $r3 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getAppPassword(android.content.Context)>($r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appPassword", $r4);

        $r3 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getClientUUID(android.content.Context)>($r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientUUID", $r4);

        $r7 = new java.lang.StringBuilder;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("time", $r4);

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getSignType()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("signType", $r4);

        $r3 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getAppPackageName(android.content.Context)>($r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("appPackageName", $r4);

        $r4 = staticinvoke <cs.network.configs.Config: java.lang.String getApiver()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sdkVersion", $r4);

        $r7 = new java.lang.StringBuilder;

        r2 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        if r1 == null goto label2;

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        if $i1 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        $i1 = $i1 + -1;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>($i1);

     label2:
        $r3 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r4 = staticinvoke <cs.utils.security.SignUtil: java.lang.String getSignature(java.util.Map,android.content.Context)>(r1, $r3);

        $i1 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label8;

        $r11 = new java.lang.StringBuilder;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&sign=");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r9;

        $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r9 == null goto label1;

        $z0 = $r9 instanceof java.lang.Object[];

        if $z0 == 0 goto label5;

        r10 = (java.lang.Object[]) $r9;

        $i1 = 0;

     label4:
        $i2 = lengthof r10;

        if $i1 >= $i2 goto label1;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r9 = r10[$i1];

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "utf-8");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $i1 = $i1 + 1;

        goto label4;

     label5:
        $z0 = $r9 instanceof java.util.List;

        if $z0 == 0 goto label7;

        r12 = (java.util.List) $r9;

        $i1 = 0;

     label6:
        $i2 = interfaceinvoke r12.<java.util.List: int size()>();

        if $i1 >= $i2 goto label1;

        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r9 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>($i1);

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "utf-8");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, "utf-8");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label1;

     label8:
        $r11 = new java.lang.StringBuilder;

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?sign=");

        r2 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private java.lang.String getCacheResult(java.lang.String)
    {
        cs.network.request.AbstractRequest r0;
        long $l0, $l1;
        java.util.HashMap $r2;
        byte $b3;
        java.lang.Long r4;
        int $i2;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: cs.network.request.AbstractRequest;

        $r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = <cs.network.request.AbstractRequest: java.util.HashMap lastUpdateTime>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.Long) $r3;

        if r4 != null goto label1;

        r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

     label1:
        $l1 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        $l0 = $l0 - $l1;

        $i2 = <cs.network.request.AbstractRequest: int cacheTime>;

        $l1 = (long) $i2;

        $b3 = $l0 cmp $l1;

        $i2 = (int) $b3;

        if $i2 >= 0 goto label2;

        $r2 = <cs.network.request.AbstractRequest: java.util.HashMap apiResultCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = (java.lang.String) $r3;

        return $r1;

     label2:
        return null;
    }

    public void cancelRequest()
    {
        java.net.HttpURLConnection $r2;
        java.lang.Throwable $r5;
        cs.network.request.AbstractRequest r0;
        java.lang.Thread $r3;
        cs.network.request.IRequestLinsener r1;
        java.lang.Exception $r4;

        r0 := @this: cs.network.request.AbstractRequest;

        r1 = null;

     label01:
        r1 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

        r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener> = null;

        $r2 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

     label02:
        if $r2 == null goto label04;

     label03:
        $r2 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        virtualinvoke $r2.<java.net.HttpURLConnection: void disconnect()>();

        r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn> = null;

     label04:
        $r3 = r0.<cs.network.request.AbstractRequest: java.lang.Thread thread>;

     label05:
        if $r3 == null goto label07;

     label06:
        $r3 = r0.<cs.network.request.AbstractRequest: java.lang.Thread thread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        r0.<cs.network.request.AbstractRequest: java.lang.Thread thread> = null;

     label07:
        if r1 == null goto label11;

        interfaceinvoke r1.<cs.network.request.IRequestLinsener: void onLastAction()>();

        return;

     label08:
        $r4 := @caughtexception;

        if r1 == null goto label11;

        interfaceinvoke r1.<cs.network.request.IRequestLinsener: void onLastAction()>();

        return;

     label09:
        $r5 := @caughtexception;

        if r1 == null goto label10;

        interfaceinvoke r1.<cs.network.request.IRequestLinsener: void onLastAction()>();

     label10:
        throw $r5;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public abstract cs.network.result.InterfaceResult parseInterfaceResult(cs.gson.Gson, java.lang.String);

    public void query(cs.network.request.IRequestLinsener)
    {
        cs.network.request.AbstractRequest r0;
        cs.network.request.IRequestLinsener r1;

        r0 := @this: cs.network.request.AbstractRequest;

        r1 := @parameter0: cs.network.request.IRequestLinsener;

        virtualinvoke r0.<cs.network.request.AbstractRequest: void query(cs.network.request.IRequestLinsener,boolean)>(r1, 1);

        return;
    }

    public void query(cs.network.request.IRequestLinsener, boolean)
    {
        android.content.Context $r2;
        cs.network.request.AbstractRequest r0;
        java.lang.Thread $r3;
        cs.network.request.IRequestLinsener r1;
        boolean $z0;

        r0 := @this: cs.network.request.AbstractRequest;

        r1 := @parameter0: cs.network.request.IRequestLinsener;

        $z0 := @parameter1: boolean;

        r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener> = r1;

        $r2 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        interfaceinvoke r1.<cs.network.request.IRequestLinsener: void setContext(android.content.Context)>($r2);

        interfaceinvoke r1.<cs.network.request.IRequestLinsener: void setRequest(cs.network.request.IRequest)>(r0);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r0.<cs.network.request.AbstractRequest: java.lang.Thread thread> = $r3;

        $r3 = r0.<cs.network.request.AbstractRequest: java.lang.Thread thread>;

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;

     label1:
        virtualinvoke r0.<cs.network.request.AbstractRequest: void run()>();

        return;
    }

    public void run()
    {
        cs.network.result.InterfaceResult $r12;
        java.net.HttpURLConnection $r18;
        java.lang.Throwable $r21;
        android.content.Context $r15;
        java.net.URL $r16;
        java.net.URLConnection $r17;
        java.util.Map $r7;
        int $i0;
        java.lang.String r3, $r6, $r9, $r19;
        cs.network.request.IRequestLinsener $r13;
        boolean $z0;
        java.io.PrintStream $r8;
        cs.gson.GsonBuilder $r11;
        cs.network.request.AbstractRequest r0;
        cs.network.request.AbstractRequest$2 $r4;
        cs.network.request.AbstractRequest$1 $r14;
        java.lang.Exception r1;
        cs.gson.Gson $r10;
        java.lang.StringBuilder $r5;
        java.io.InputStream r2, $r20;

        r0 := @this: cs.network.request.AbstractRequest;

        r2 = null;

        r3 = null;

     label01:
        $r4 = new cs.network.request.AbstractRequest$2;

     label02:
        specialinvoke $r4.<cs.network.request.AbstractRequest$2: void <init>(cs.network.request.AbstractRequest)>(r0);

        staticinvoke <cs.utils.ui.MyPost: boolean post(java.lang.Runnable)>($r4);

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        $r6 = virtualinvoke r0.<cs.network.request.AbstractRequest: java.lang.String getInterfaceURI()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<cs.network.request.AbstractRequest: java.util.Map getParrams()>();

        $r6 = specialinvoke r0.<cs.network.request.AbstractRequest: java.lang.String buildParams(java.util.Map)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $z0 = <cs.utils.system.SystemUtil: boolean debug>;

     label06:
        if $z0 == 0 goto label09;

     label07:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u63a5\u53e3:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label09:
        $z0 = r0.<cs.network.request.AbstractRequest: boolean canCache>;

     label10:
        if $z0 == 0 goto label29;

     label11:
        $r9 = specialinvoke r0.<cs.network.request.AbstractRequest: java.lang.String getCacheResult(java.lang.String)>($r6);

     label12:
        r3 = $r9;

        if $r9 == null goto label29;

     label13:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u83b7\u5f97\u7f13\u5b58\u6570\u636e:url=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label15:
        $r10 = <cs.network.request.AbstractRequest: cs.gson.Gson gson>;

     label16:
        if $r10 != null goto label20;

     label17:
        $r11 = new cs.gson.GsonBuilder;

     label18:
        specialinvoke $r11.<cs.gson.GsonBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<cs.gson.GsonBuilder: cs.gson.GsonBuilder setDateFormat(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r11 = virtualinvoke $r11.<cs.gson.GsonBuilder: cs.gson.GsonBuilder serializeNulls()>();

        $r11 = virtualinvoke $r11.<cs.gson.GsonBuilder: cs.gson.GsonBuilder enableComplexMapKeySerialization()>();

        $r10 = virtualinvoke $r11.<cs.gson.GsonBuilder: cs.gson.Gson create()>();

     label19:
        <cs.network.request.AbstractRequest: cs.gson.Gson gson> = $r10;

     label20:
        $r10 = <cs.network.request.AbstractRequest: cs.gson.Gson gson>;

     label21:
        $r12 = virtualinvoke r0.<cs.network.request.AbstractRequest: cs.network.result.InterfaceResult parseInterfaceResult(cs.gson.Gson,java.lang.String)>($r10, r3);

        $r6 = virtualinvoke $r12.<cs.network.result.InterfaceResult: java.lang.String getStatusCode()>();

     label22:
        $r9 = <cs.network.result.StatusCodes: java.lang.String OK>;

     label23:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label24:
        if $z0 != 0 goto label53;

     label25:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

     label26:
        if $r13 == null goto label28;

     label27:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

        interfaceinvoke $r13.<cs.network.request.IRequestLinsener: void onFail(boolean,java.lang.Exception,cs.network.result.InterfaceResult,java.lang.String)>(0, null, $r12, r3);

     label28:
        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>(r2, null);

        $r14 = new cs.network.request.AbstractRequest$1;

        specialinvoke $r14.<cs.network.request.AbstractRequest$1: void <init>(cs.network.request.AbstractRequest)>(r0);

        staticinvoke <cs.utils.ui.MyPost: boolean post(java.lang.Runnable)>($r14);

        return;

     label29:
        $r15 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        $r9 = staticinvoke <cs.network.request.ClientSessionManager: java.lang.String getSession(android.content.Context)>($r15);

     label30:
        $r16 = new java.net.URL;

     label31:
        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r17 = virtualinvoke $r16.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (java.net.HttpURLConnection) $r17;

        r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn> = $r18;

        $r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent");

        $r19 = virtualinvoke $r19.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("1", "l");

        $r19 = virtualinvoke $r19.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("i", "l");

        $r18 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r19);

        $r18 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        $i0 = r0.<cs.network.request.AbstractRequest: int timeOut>;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

     label32:
        if $r9 == null goto label36;

     label33:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("");

     label34:
        if $z0 != 0 goto label36;

     label35:
        $r18 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r9);

     label36:
        $r18 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        $r20 = virtualinvoke $r18.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label37:
        r2 = $r20;

     label38:
        $r9 = staticinvoke <cs.utils.io.StreamUtils: java.lang.String inputToString(java.io.InputStream)>($r20);

     label39:
        r3 = $r9;

     label40:
        $z0 = r0.<cs.network.request.AbstractRequest: boolean canCache>;

     label41:
        if $z0 == 0 goto label43;

     label42:
        specialinvoke r0.<cs.network.request.AbstractRequest: void addToCache(java.lang.String,java.lang.String)>($r6, $r9);

     label43:
        $z0 = <cs.utils.system.SystemUtil: boolean debug>;

     label44:
        if $z0 == 0 goto label15;

     label45:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

     label46:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u63a5\u53e3\u8fd4\u56de\u6570\u636e:");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label47:
        goto label15;

     label48:
        r1 := @caughtexception;

     label49:
        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

     label50:
        if $r13 == null goto label52;

     label51:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

        interfaceinvoke $r13.<cs.network.request.IRequestLinsener: void onFail(boolean,java.lang.Exception,cs.network.result.InterfaceResult,java.lang.String)>(1, r1, null, r3);

     label52:
        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>(r2, null);

        $r14 = new cs.network.request.AbstractRequest$1;

        specialinvoke $r14.<cs.network.request.AbstractRequest$1: void <init>(cs.network.request.AbstractRequest)>(r0);

        staticinvoke <cs.utils.ui.MyPost: boolean post(java.lang.Runnable)>($r14);

        return;

     label53:
        $z0 = r0.<cs.network.request.AbstractRequest: boolean canCache>;

     label54:
        if $z0 != 0 goto label58;

     label55:
        $r18 = r0.<cs.network.request.AbstractRequest: java.net.HttpURLConnection conn>;

        $r6 = virtualinvoke $r18.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Set-Cookie");

     label56:
        if $r6 == null goto label58;

     label57:
        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(";");

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r15 = r0.<cs.network.request.AbstractRequest: android.content.Context context>;

        staticinvoke <cs.network.request.ClientSessionManager: void setSession(java.lang.String,android.content.Context)>($r6, $r15);

     label58:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

     label59:
        if $r13 == null goto label28;

     label60:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

     label61:
        if $r13 == null goto label28;

     label62:
        $r13 = r0.<cs.network.request.AbstractRequest: cs.network.request.IRequestLinsener requestLinsener>;

        interfaceinvoke $r13.<cs.network.request.IRequestLinsener: void onSuccess(cs.network.result.InterfaceResult,java.lang.String)>($r12, r3);

     label63:
        goto label28;

     label64:
        $r21 := @caughtexception;

        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>(r2, null);

        $r14 = new cs.network.request.AbstractRequest$1;

        specialinvoke $r14.<cs.network.request.AbstractRequest$1: void <init>(cs.network.request.AbstractRequest)>(r0);

        staticinvoke <cs.utils.ui.MyPost: boolean post(java.lang.Runnable)>($r14);

        throw $r21;

        catch java.lang.Exception from label02 to label03 with label48;
        catch java.lang.Exception from label04 to label05 with label48;
        catch java.lang.Exception from label08 to label10 with label48;
        catch java.lang.Exception from label11 to label12 with label48;
        catch java.lang.Exception from label14 to label15 with label48;
        catch java.lang.Exception from label18 to label19 with label48;
        catch java.lang.Exception from label21 to label22 with label48;
        catch java.lang.Exception from label23 to label24 with label48;
        catch java.lang.Exception from label25 to label26 with label48;
        catch java.lang.Exception from label27 to label28 with label48;
        catch java.lang.Throwable from label01 to label06 with label64;
        catch java.lang.Throwable from label07 to label10 with label64;
        catch java.lang.Throwable from label11 to label12 with label64;
        catch java.lang.Throwable from label13 to label16 with label64;
        catch java.lang.Throwable from label17 to label24 with label64;
        catch java.lang.Throwable from label25 to label26 with label64;
        catch java.lang.Throwable from label27 to label28 with label64;
        catch java.lang.Exception from label29 to label30 with label48;
        catch java.lang.Exception from label31 to label32 with label48;
        catch java.lang.Exception from label33 to label34 with label48;
        catch java.lang.Exception from label35 to label37 with label48;
        catch java.lang.Exception from label38 to label39 with label48;
        catch java.lang.Exception from label40 to label41 with label48;
        catch java.lang.Exception from label42 to label43 with label48;
        catch java.lang.Exception from label46 to label47 with label48;
        catch java.lang.Throwable from label29 to label32 with label64;
        catch java.lang.Throwable from label33 to label34 with label64;
        catch java.lang.Throwable from label35 to label37 with label64;
        catch java.lang.Throwable from label38 to label39 with label64;
        catch java.lang.Throwable from label40 to label41 with label64;
        catch java.lang.Throwable from label42 to label44 with label64;
        catch java.lang.Throwable from label45 to label47 with label64;
        catch java.lang.Throwable from label49 to label50 with label64;
        catch java.lang.Throwable from label51 to label52 with label64;
        catch java.lang.Exception from label53 to label54 with label48;
        catch java.lang.Exception from label55 to label56 with label48;
        catch java.lang.Exception from label57 to label59 with label48;
        catch java.lang.Exception from label60 to label61 with label48;
        catch java.lang.Exception from label62 to label63 with label48;
        catch java.lang.Throwable from label53 to label54 with label64;
        catch java.lang.Throwable from label55 to label56 with label64;
        catch java.lang.Throwable from label57 to label59 with label64;
        catch java.lang.Throwable from label60 to label61 with label64;
        catch java.lang.Throwable from label62 to label63 with label64;
    }
}
