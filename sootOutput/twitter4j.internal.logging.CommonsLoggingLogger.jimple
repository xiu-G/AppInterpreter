final class twitter4j.internal.logging.CommonsLoggingLogger extends twitter4j.internal.logging.Logger
{
    private final org.apache.commons.logging.Log LOGGER;

    void <init>(org.apache.commons.logging.Log)
    {
        org.apache.commons.logging.Log $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: org.apache.commons.logging.Log;

        specialinvoke r0.<twitter4j.internal.logging.Logger: void <init>()>();

        r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER> = $r1;

        return;
    }

    public final void debug(java.lang.String)
    {
        org.apache.commons.logging.Log $r2;
        java.lang.String $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

        return;
    }

    public final void debug(java.lang.String, java.lang.String)
    {
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

        return;
    }

    public final void error(java.lang.String)
    {
        org.apache.commons.logging.Log $r2;
        java.lang.String $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r1);

        return;
    }

    public final void error(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        org.apache.commons.logging.Log $r3;
        java.lang.String $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Got an exception while running a task:", $r2);

        return;
    }

    public final void info(java.lang.String)
    {
        org.apache.commons.logging.Log $r2;
        java.lang.String $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r1);

        return;
    }

    public final void info(java.lang.String, java.lang.String)
    {
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r1);

        return;
    }

    public final boolean isDebugEnabled()
    {
        org.apache.commons.logging.Log $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        return $z0;
    }

    public final boolean isErrorEnabled()
    {
        org.apache.commons.logging.Log $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        return $z0;
    }

    public final boolean isInfoEnabled()
    {
        org.apache.commons.logging.Log $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        return $z0;
    }

    public final boolean isWarnEnabled()
    {
        org.apache.commons.logging.Log $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;
        boolean $z0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        return $z0;
    }

    public final void warn(java.lang.String)
    {
        org.apache.commons.logging.Log $r2;
        java.lang.String $r1;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r1);

        return;
    }

    public final void warn(java.lang.String, java.lang.String)
    {
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r1, $r2;
        twitter4j.internal.logging.CommonsLoggingLogger r0;

        r0 := @this: twitter4j.internal.logging.CommonsLoggingLogger;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.internal.logging.CommonsLoggingLogger: org.apache.commons.logging.Log LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r1);

        return;
    }
}
