public class com.adwhirl.AdWhirlLayout extends android.widget.RelativeLayout
{
    public static final java.lang.String ADWHIRL_KEY;
    public com.adwhirl.obj.Ration activeRation;
    public java.lang.ref.WeakReference activityReference;
    public com.adwhirl.AdWhirlLayout$AdWhirlInterface adWhirlInterface;
    public com.adwhirl.AdWhirlManager adWhirlManager;
    public com.adwhirl.obj.Custom custom;
    public com.adwhirl.obj.Extra extra;
    public final android.os.Handler handler;
    private boolean hasWindow;
    private boolean isScheduled;
    private java.lang.String keyAdWhirl;
    private int maxHeight;
    private int maxWidth;
    public com.adwhirl.obj.Ration nextRation;
    public final java.util.concurrent.ScheduledExecutorService scheduler;
    public java.lang.ref.WeakReference superViewReference;

    public void <init>(android.app.Activity, java.lang.String)
    {
        android.os.Handler $r4;
        java.util.concurrent.ScheduledExecutorService $r3;
        java.lang.String $r2;
        com.adwhirl.AdWhirlLayout r0;
        android.app.Activity $r1;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.adwhirl.AdWhirlLayout: android.os.Handler handler> = $r4;

        $r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1);

        r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler> = $r3;

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void init(android.app.Activity,java.lang.String)>($r1, "1425ea9bf0b049d79ad4fdfad6e80ed0");

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r1;
        android.os.Handler $r3;
        java.util.concurrent.ScheduledExecutorService $r4;
        java.lang.String $r5;
        com.adwhirl.AdWhirlLayout r0;
        android.app.Activity $r6;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r2, $r1);

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.adwhirl.AdWhirlLayout: android.os.Handler handler> = $r3;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1);

        r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler> = $r4;

        $r5 = virtualinvoke r0.<com.adwhirl.AdWhirlLayout: java.lang.String getAdWhirlKey(android.content.Context)>($r2);

        $r6 = (android.app.Activity) $r2;

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void init(android.app.Activity,java.lang.String)>($r6, $r5);

        return;
    }

    static boolean access$0(com.adwhirl.AdWhirlLayout)
    {
        com.adwhirl.AdWhirlLayout $r0;
        boolean z0;

        $r0 := @parameter0: com.adwhirl.AdWhirlLayout;

        z0 = $r0.<com.adwhirl.AdWhirlLayout: boolean hasWindow>;

        return z0;
    }

    static void access$1(com.adwhirl.AdWhirlLayout, boolean)
    {
        com.adwhirl.AdWhirlLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.adwhirl.AdWhirlLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.adwhirl.AdWhirlLayout: boolean isScheduled> = 0;

        return;
    }

    static void access$2(com.adwhirl.AdWhirlLayout)
    {
        com.adwhirl.AdWhirlLayout $r0;

        $r0 := @parameter0: com.adwhirl.AdWhirlLayout;

        specialinvoke $r0.<com.adwhirl.AdWhirlLayout: void rotateAd()>();

        return;
    }

    static void access$3(com.adwhirl.AdWhirlLayout)
    {
        com.adwhirl.AdWhirlLayout $r0;

        $r0 := @parameter0: com.adwhirl.AdWhirlLayout;

        specialinvoke $r0.<com.adwhirl.AdWhirlLayout: void handleAd()>();

        return;
    }

    private void countClick()
    {
        java.lang.Object[] $r2;
        com.adwhirl.AdWhirlLayout r0;
        java.lang.Integer $r5;
        java.util.concurrent.TimeUnit $r8;
        com.adwhirl.AdWhirlLayout$PingUrlRunnable $r7;
        com.adwhirl.AdWhirlManager $r3;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r6;
        com.adwhirl.obj.Ration $r1;
        java.lang.String $r4;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        if $r1 == null goto label1;

        $r2 = newarray (java.lang.Object)[6];

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String keyAdWhirl>;

        $r2[0] = $r4;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        $r4 = $r1.<com.adwhirl.obj.Ration: java.lang.String nid>;

        $r2[1] = $r4;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        $i0 = $r1.<com.adwhirl.obj.Ration: int type>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[2] = $r5;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String deviceIDHash>;

        $r2[3] = $r4;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String localeString>;

        $r2[4] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(300);

        $r2[5] = $r5;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://met.adwhirl.com/exclick.php?appid=%s&nid=%s&type=%d&uuid=%s&country_code=%s&appver=%d&client=2", $r2);

        $r6 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r7 = new com.adwhirl.AdWhirlLayout$PingUrlRunnable;

        specialinvoke $r7.<com.adwhirl.AdWhirlLayout$PingUrlRunnable: void <init>(java.lang.String)>($r4);

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r7, 0L, $r8);

     label1:
        return;
    }

    private void countImpression()
    {
        java.lang.Object[] $r2;
        com.adwhirl.AdWhirlLayout r0;
        java.lang.Integer $r5;
        java.util.concurrent.TimeUnit $r8;
        com.adwhirl.AdWhirlLayout$PingUrlRunnable $r7;
        com.adwhirl.AdWhirlManager $r3;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r6;
        com.adwhirl.obj.Ration $r1;
        java.lang.String $r4;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        if $r1 == null goto label1;

        $r2 = newarray (java.lang.Object)[6];

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String keyAdWhirl>;

        $r2[0] = $r4;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        $r4 = $r1.<com.adwhirl.obj.Ration: java.lang.String nid>;

        $r2[1] = $r4;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        $i0 = $r1.<com.adwhirl.obj.Ration: int type>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[2] = $r5;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String deviceIDHash>;

        $r2[3] = $r4;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r4 = $r3.<com.adwhirl.AdWhirlManager: java.lang.String localeString>;

        $r2[4] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(300);

        $r2[5] = $r5;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://met.adwhirl.com/exmet.php?appid=%s&nid=%s&type=%d&uuid=%s&country_code=%s&appver=%d&client=2", $r2);

        $r6 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r7 = new com.adwhirl.AdWhirlLayout$PingUrlRunnable;

        specialinvoke $r7.<com.adwhirl.AdWhirlLayout$PingUrlRunnable: void <init>(java.lang.String)>($r4);

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r7, 0L, $r8);

     label1:
        return;
    }

    private void handleAd()
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r2;
        int $i0;
        com.adwhirl.obj.Ration $r1;
        java.lang.String $r3;
        com.adwhirl.AdWhirlLayout r0;
        java.lang.Integer $r4;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdWhirl SDK", "nextRation is null!");

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void rotateThreadedDelayed()>();

        return;

     label1:
        $r2 = newarray (java.lang.Object)[5];

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        $r3 = $r1.<com.adwhirl.obj.Ration: java.lang.String nid>;

        $r2[0] = $r3;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        $r3 = $r1.<com.adwhirl.obj.Ration: java.lang.String name>;

        $r2[1] = $r3;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        $i0 = $r1.<com.adwhirl.obj.Ration: int type>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[2] = $r4;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        $r3 = $r1.<com.adwhirl.obj.Ration: java.lang.String key>;

        $r2[3] = $r3;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        $r3 = $r1.<com.adwhirl.obj.Ration: java.lang.String key2>;

        $r2[4] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Showing ad:\n\tnid: %s\n\tname: %s\n\ttype: %d\n\tkey: %s\n\tkey2: %s", $r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdWhirl SDK", $r3);

     label2:
        $r1 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        staticinvoke <com.adwhirl.adapters.AdWhirlAdapter: void handle(com.adwhirl.AdWhirlLayout,com.adwhirl.obj.Ration)>(r0, $r1);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AdWhirl SDK", "Caught an exception in adapter:", $r5);

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void rollover()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void rotateAd()
    {
        com.adwhirl.AdWhirlManager $r2;
        android.os.Handler $r3;
        com.adwhirl.obj.Ration $r1;
        com.adwhirl.AdWhirlLayout r0;
        boolean $z0;
        com.adwhirl.AdWhirlLayout$HandleAdRunnable $r4;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $z0 = r0.<com.adwhirl.AdWhirlLayout: boolean hasWindow>;

        if $z0 != 0 goto label1;

        r0.<com.adwhirl.AdWhirlLayout: boolean isScheduled> = 0;

        return;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AdWhirl SDK", "Rotating Ad");

        $r2 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r1 = virtualinvoke $r2.<com.adwhirl.AdWhirlManager: com.adwhirl.obj.Ration getRation()>();

        r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation> = $r1;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: android.os.Handler handler>;

        $r4 = new com.adwhirl.AdWhirlLayout$HandleAdRunnable;

        specialinvoke $r4.<com.adwhirl.AdWhirlLayout$HandleAdRunnable: void <init>(com.adwhirl.AdWhirlLayout)>(r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;
    }

    protected java.lang.String getAdWhirlKey(android.content.Context)
    {
        java.lang.Throwable $r10, $r11;
        android.content.Context $r1;
        android.os.Bundle $r8;
        android.content.pm.PackageManager $r6;
        android.content.ComponentName $r2;
        com.adwhirl.AdWhirlLayout r0;
        android.content.pm.ActivityInfo $r7;
        java.lang.Class $r4;
        java.lang.String $r3, $r5;
        android.content.pm.ApplicationInfo $r9;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = new android.content.ComponentName;

     label01:
        specialinvoke $r2.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r2, 128);

     label02:
        $r8 = $r7.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r8 == null goto label05;

     label03:
        $r3 = virtualinvoke $r8.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ADWHIRL_KEY");

     label04:
        return $r3;

     label05:
        $r9 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label06:
        $r8 = $r9.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r8 == null goto label11;

     label07:
        $r3 = virtualinvoke $r8.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ADWHIRL_KEY");

     label08:
        return $r3;

     label09:
        $r10 := @caughtexception;

        return null;

     label10:
        $r11 := @caughtexception;

     label11:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
    }

    protected void init(android.app.Activity, java.lang.String)
    {
        java.util.concurrent.TimeUnit $r3;
        com.adwhirl.AdWhirlLayout$InitRunnable $r6;
        java.util.concurrent.ScheduledExecutorService $r5;
        java.lang.String $r2;
        java.lang.ref.WeakReference $r4;
        com.adwhirl.AdWhirlLayout r0;
        android.app.Activity $r1;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.adwhirl.AdWhirlLayout: java.lang.ref.WeakReference activityReference> = $r4;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<com.adwhirl.AdWhirlLayout: java.lang.ref.WeakReference superViewReference> = $r4;

        r0.<com.adwhirl.AdWhirlLayout: java.lang.String keyAdWhirl> = "1425ea9bf0b049d79ad4fdfad6e80ed0";

        r0.<com.adwhirl.AdWhirlLayout: boolean hasWindow> = 1;

        r0.<com.adwhirl.AdWhirlLayout: boolean isScheduled> = 1;

        $r5 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r6 = new com.adwhirl.AdWhirlLayout$InitRunnable;

        specialinvoke $r6.<com.adwhirl.AdWhirlLayout$InitRunnable: void <init>(com.adwhirl.AdWhirlLayout,java.lang.String)>(r0, "1425ea9bf0b049d79ad4fdfad6e80ed0");

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r6, 0L, $r3);

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void setVerticalScrollBarEnabled(boolean)>(0);

        r0.<com.adwhirl.AdWhirlLayout: int maxWidth> = 0;

        r0.<com.adwhirl.AdWhirlLayout: int maxHeight> = 0;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.net.Uri $r6;
        com.adwhirl.obj.Custom $r3;
        android.content.Intent $r5;
        com.adwhirl.AdWhirlLayout r0;
        java.lang.Exception $r10;
        android.view.MotionEvent $r1;
        int $i0;
        java.lang.Object $r8;
        java.lang.StringBuilder $r11;
        com.adwhirl.obj.Ration $r2;
        java.lang.String $r4;
        java.lang.ref.WeakReference $r7;
        android.app.Activity $r9;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label02;
            default: goto label01;
        };

     label01:
        return 0;

     label02:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdWhirl SDK", "Intercepted ACTION_DOWN event");

        $r2 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        if $r2 == null goto label11;

        specialinvoke r0.<com.adwhirl.AdWhirlLayout: void countClick()>();

        $r2 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation>;

        $i0 = $r2.<com.adwhirl.obj.Ration: int type>;

        if $i0 != 9 goto label11;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Custom custom>;

        if $r3 == null goto label10;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Custom custom>;

        $r4 = $r3.<com.adwhirl.obj.Custom: java.lang.String link>;

        if $r4 == null goto label10;

        $r5 = new android.content.Intent;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Custom custom>;

        $r4 = $r3.<com.adwhirl.obj.Custom: java.lang.String link>;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

     label03:
        $r7 = r0.<com.adwhirl.AdWhirlLayout: java.lang.ref.WeakReference activityReference>;

     label04:
        if $r7 == null goto label11;

     label05:
        $r7 = r0.<com.adwhirl.AdWhirlLayout: java.lang.ref.WeakReference activityReference>;

        $r8 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r9 = (android.app.Activity) $r8;

     label06:
        if $r9 == null goto label11;

     label07:
        virtualinvoke $r9.<android.app.Activity: void startActivity(android.content.Intent)>($r5);

     label08:
        return 0;

     label09:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not handle click to ");

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Custom custom>;

        $r4 = $r3.<com.adwhirl.obj.Custom: java.lang.String link>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AdWhirl SDK", $r4, $r10);

        return 0;

     label10:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AdWhirl SDK", "In onInterceptTouchEvent(), but custom or custom.link is null");

     label11:
        return 0;

        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected void onMeasure(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;
        com.adwhirl.AdWhirlLayout r0;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i4 = r0.<com.adwhirl.AdWhirlLayout: int maxWidth>;

        if $i4 <= 0 goto label1;

        $i4 = r0.<com.adwhirl.AdWhirlLayout: int maxWidth>;

        if $i2 <= $i4 goto label1;

        $i0 = r0.<com.adwhirl.AdWhirlLayout: int maxWidth>;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, -2147483648);

     label1:
        $i2 = r0.<com.adwhirl.AdWhirlLayout: int maxHeight>;

        if $i2 <= 0 goto label2;

        $i2 = r0.<com.adwhirl.AdWhirlLayout: int maxHeight>;

        if $i3 <= $i2 goto label2;

        $i1 = r0.<com.adwhirl.AdWhirlLayout: int maxHeight>;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, -2147483648);

     label2:
        specialinvoke r0.<android.widget.RelativeLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        com.adwhirl.AdWhirlLayout r0;
        com.adwhirl.obj.Extra $r2;
        java.util.concurrent.TimeUnit $r1;
        com.adwhirl.AdWhirlLayout$InitRunnable $r4;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r3;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        r0.<com.adwhirl.AdWhirlLayout: boolean hasWindow> = 1;

        $z0 = r0.<com.adwhirl.AdWhirlLayout: boolean isScheduled>;

        if $z0 != 0 goto label3;

        r0.<com.adwhirl.AdWhirlLayout: boolean isScheduled> = 1;

        $r2 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Extra extra>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.adwhirl.AdWhirlLayout: void rotateThreadedNow()>();

        return;

     label1:
        $r3 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r4 = new com.adwhirl.AdWhirlLayout$InitRunnable;

        $r5 = r0.<com.adwhirl.AdWhirlLayout: java.lang.String keyAdWhirl>;

        specialinvoke $r4.<com.adwhirl.AdWhirlLayout$InitRunnable: void <init>(com.adwhirl.AdWhirlLayout,java.lang.String)>(r0, $r5);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r4, 0L, $r1);

        return;

     label2:
        r0.<com.adwhirl.AdWhirlLayout: boolean hasWindow> = 0;

     label3:
        return;
    }

    public void pushSubView(android.view.ViewGroup)
    {
        com.adwhirl.AdWhirlLayout r0;
        android.view.ViewGroup $r1;
        android.widget.RelativeLayout$LayoutParams $r5, $r7;
        android.widget.RelativeLayout $r4;
        java.lang.Object $r2;
        com.adwhirl.obj.Ration $r6;
        java.lang.ref.WeakReference $r3;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: android.view.ViewGroup;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: java.lang.ref.WeakReference superViewReference>;

        $r2 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r4 = (android.widget.RelativeLayout) $r2;

        if $r4 != null goto label1;

        return;

     label1:
        virtualinvoke $r4.<android.widget.RelativeLayout: void removeAllViews()>();

        $r7 = new android.widget.RelativeLayout$LayoutParams;

        $r5 = $r7;

        specialinvoke $r7.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke $r5.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(13);

        virtualinvoke $r4.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdWhirl SDK", "Added subview");

        $r6 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation>;

        r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration activeRation> = $r6;

        specialinvoke r0.<com.adwhirl.AdWhirlLayout: void countImpression()>();

        return;
    }

    public void rollover()
    {
        com.adwhirl.AdWhirlManager $r3;
        android.os.Handler $r4;
        com.adwhirl.obj.Ration $r2;
        com.adwhirl.AdWhirlLayout r0;
        com.adwhirl.AdWhirlLayout$HandleAdRunnable $r1;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlManager adWhirlManager>;

        $r2 = virtualinvoke $r3.<com.adwhirl.AdWhirlManager: com.adwhirl.obj.Ration getRollover()>();

        r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Ration nextRation> = $r2;

        $r4 = r0.<com.adwhirl.AdWhirlLayout: android.os.Handler handler>;

        $r1 = new com.adwhirl.AdWhirlLayout$HandleAdRunnable;

        specialinvoke $r1.<com.adwhirl.AdWhirlLayout$HandleAdRunnable: void <init>(com.adwhirl.AdWhirlLayout)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void rotateThreadedDelayed()
    {
        long $l1;
        com.adwhirl.AdWhirlLayout r0;
        com.adwhirl.obj.Extra $r3;
        java.util.concurrent.TimeUnit $r1;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r5;
        java.lang.StringBuilder $r2;
        java.lang.String $r4;
        com.adwhirl.AdWhirlLayout$RotateAdRunnable $r6;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Will call rotateAd() in ");

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Extra extra>;

        $i0 = $r3.<com.adwhirl.obj.Extra: int cycleTime>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdWhirl SDK", $r4);

        $r5 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r6 = new com.adwhirl.AdWhirlLayout$RotateAdRunnable;

        specialinvoke $r6.<com.adwhirl.AdWhirlLayout$RotateAdRunnable: void <init>(com.adwhirl.AdWhirlLayout)>(r0);

        $r3 = r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.obj.Extra extra>;

        $i0 = $r3.<com.adwhirl.obj.Extra: int cycleTime>;

        $l1 = (long) $i0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r6, $l1, $r1);

        return;
    }

    public void rotateThreadedNow()
    {
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.ScheduledExecutorService $r1;
        com.adwhirl.AdWhirlLayout$RotateAdRunnable $r2;
        com.adwhirl.AdWhirlLayout r0;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 = r0.<com.adwhirl.AdWhirlLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r2 = new com.adwhirl.AdWhirlLayout$RotateAdRunnable;

        specialinvoke $r2.<com.adwhirl.AdWhirlLayout$RotateAdRunnable: void <init>(com.adwhirl.AdWhirlLayout)>(r0);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r2, 0L, $r3);

        return;
    }

    public void setAdWhirlInterface(com.adwhirl.AdWhirlLayout$AdWhirlInterface)
    {
        com.adwhirl.AdWhirlLayout r0;
        com.adwhirl.AdWhirlLayout$AdWhirlInterface $r1;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $r1 := @parameter0: com.adwhirl.AdWhirlLayout$AdWhirlInterface;

        r0.<com.adwhirl.AdWhirlLayout: com.adwhirl.AdWhirlLayout$AdWhirlInterface adWhirlInterface> = $r1;

        return;
    }

    public void setMaxHeight(int)
    {
        int $i0;
        com.adwhirl.AdWhirlLayout r0;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $i0 := @parameter0: int;

        r0.<com.adwhirl.AdWhirlLayout: int maxHeight> = $i0;

        return;
    }

    public void setMaxWidth(int)
    {
        int $i0;
        com.adwhirl.AdWhirlLayout r0;

        r0 := @this: com.adwhirl.AdWhirlLayout;

        $i0 := @parameter0: int;

        r0.<com.adwhirl.AdWhirlLayout: int maxWidth> = $i0;

        return;
    }

    public static void <clinit>()
    {
        <com.adwhirl.AdWhirlLayout: java.lang.String ADWHIRL_KEY> = "ADWHIRL_KEY";

        return;
    }
}
