public final class com.admogo.encryption.Base64 extends java.lang.Object
{
    private static final char[] CA;
    private static final int[] IA;
    private static final byte[] decodingTable;
    private static final byte[] encodingTable;

    static void <clinit>()
    {
        byte[] $r3;
        char $c3;
        byte $b4;
        int[] $r0;
        int $i0, $i1, $i2, $i5;
        char[] $r1;
        java.lang.String $r2;

        $i0 = 0;

        $r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        $r1 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <com.admogo.encryption.Base64: char[] CA> = $r1;

        $r0 = newarray (int)[256];

        <com.admogo.encryption.Base64: int[] IA> = $r0;

        $r0 = <com.admogo.encryption.Base64: int[] IA>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r0, -1);

        $r1 = <com.admogo.encryption.Base64: char[] CA>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label01:
        if $i2 < $i1 goto label06;

        $r0 = <com.admogo.encryption.Base64: int[] IA>;

        $r0[61] = 0;

        $r3 = newarray (byte)[64];

        $r3[0] = 65;

        $r3[1] = 66;

        $r3[2] = 67;

        $r3[3] = 68;

        $r3[4] = 69;

        $r3[5] = 70;

        $r3[6] = 71;

        $r3[7] = 72;

        $r3[8] = 73;

        $r3[9] = 74;

        $r3[10] = 75;

        $r3[11] = 76;

        $r3[12] = 77;

        $r3[13] = 78;

        $r3[14] = 79;

        $r3[15] = 80;

        $r3[16] = 81;

        $r3[17] = 82;

        $r3[18] = 83;

        $r3[19] = 84;

        $r3[20] = 85;

        $r3[21] = 86;

        $r3[22] = 87;

        $r3[23] = 88;

        $r3[24] = 89;

        $r3[25] = 90;

        $r3[26] = 97;

        $r3[27] = 98;

        $r3[28] = 99;

        $r3[29] = 100;

        $r3[30] = 101;

        $r3[31] = 102;

        $r3[32] = 103;

        $r3[33] = 104;

        $r3[34] = 105;

        $r3[35] = 106;

        $r3[36] = 107;

        $r3[37] = 108;

        $r3[38] = 109;

        $r3[39] = 110;

        $r3[40] = 111;

        $r3[41] = 112;

        $r3[42] = 113;

        $r3[43] = 114;

        $r3[44] = 115;

        $r3[45] = 116;

        $r3[46] = 117;

        $r3[47] = 118;

        $r3[48] = 119;

        $r3[49] = 120;

        $r3[50] = 121;

        $r3[51] = 122;

        $r3[52] = 48;

        $r3[53] = 49;

        $r3[54] = 50;

        $r3[55] = 51;

        $r3[56] = 52;

        $r3[57] = 53;

        $r3[58] = 54;

        $r3[59] = 55;

        $r3[60] = 56;

        $r3[61] = 57;

        $r3[62] = 43;

        $r3[63] = 47;

        <com.admogo.encryption.Base64: byte[] encodingTable> = $r3;

        $r3 = newarray (byte)[128];

        <com.admogo.encryption.Base64: byte[] decodingTable> = $r3;

     label02:
        if $i0 < 128 goto label07;

        $i0 = 65;

     label03:
        if $i0 <= 90 goto label08;

        $i0 = 97;

     label04:
        if $i0 <= 122 goto label09;

        $i0 = 48;

     label05:
        if $i0 <= 57 goto label10;

        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $r3[43] = 62;

        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $r3[47] = 63;

        return;

     label06:
        $r0 = <com.admogo.encryption.Base64: int[] IA>;

        $r1 = <com.admogo.encryption.Base64: char[] CA>;

        $c3 = $r1[$i2];

        $i5 = (int) $c3;

        $r0[$i5] = $i2;

        $i2 = $i2 + 1;

        goto label01;

     label07:
        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $r3[$i0] = -1;

        $i0 = $i0 + 1;

        goto label02;

     label08:
        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i1 = $i0 + -65;

        $b4 = (byte) $i1;

        $r3[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label03;

     label09:
        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i1 = $i0 + -97;

        $i1 = $i1 + 26;

        $b4 = (byte) $i1;

        $r3[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label04;

     label10:
        $r3 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i1 = $i0 + -48;

        $i1 = $i1 + 52;

        $b4 = (byte) $i1;

        $r3[$i0] = $b4;

        $i0 = $i0 + 1;

        goto label05;
    }

    public void <init>()
    {
        com.admogo.encryption.Base64 r0;

        r0 := @this: com.admogo.encryption.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final byte[] decode(java.lang.String)
    {
        byte[] $r1, $r2;
        char $c2;
        byte $b4, $b5, $b6, $b7;
        int $i0, $i1, $i3, $i8, $i9;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $r0 = staticinvoke <com.admogo.encryption.Base64: java.lang.String discardNonBase64Chars(java.lang.String)>($r0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + -2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        if $i1 != 61 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 / 4;

        $i1 = $i1 + -1;

        $i1 = $i1 * 3;

        $i1 = $i1 + 1;

        $r1 = newarray (byte)[$i1];

     label1:
        $i1 = 0;

     label2:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i3 = $i3 + -4;

        if $i1 < $i3 goto label5;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        if $i0 != 61 goto label6;

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b4 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b5 = $r2[$i0];

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b4;

        $i1 = $i1 << 2;

        $i3 = (int) $b5;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        return $r1;

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c2;

        if $i1 != 61 goto label4;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 / 4;

        $i1 = $i1 + -1;

        $i1 = $i1 * 3;

        $i1 = $i1 + 2;

        $r1 = newarray (byte)[$i1];

        goto label1;

     label4:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i1 / 4;

        $i1 = $i1 * 3;

        $r1 = newarray (byte)[$i1];

        goto label1;

     label5:
        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i3 = (int) $c2;

        $b6 = $r2[$i3];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i3 = $i1 + 1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c2;

        $b7 = $r2[$i3];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i3 = $i1 + 2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c2;

        $b4 = $r2[$i3];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i3 = $i1 + 3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i3 = (int) $c2;

        $b5 = $r2[$i3];

        $i3 = (int) $b6;

        $i3 = $i3 << 2;

        $i8 = (int) $b7;

        $i8 = $i8 >> 4;

        $i3 = $i3 | $i8;

        $b6 = (byte) $i3;

        $r1[$i0] = $b6;

        $i3 = $i0 + 1;

        $i8 = (int) $b7;

        $i8 = $i8 << 4;

        $i9 = (int) $b4;

        $i9 = $i9 >> 2;

        $i8 = $i8 | $i9;

        $b7 = (byte) $i8;

        $r1[$i3] = $b7;

        $i3 = $i0 + 2;

        $i8 = (int) $b4;

        $i8 = $i8 << 6;

        $i9 = (int) $b5;

        $i8 = $i8 | $i9;

        $b4 = (byte) $i8;

        $r1[$i3] = $b4;

        $i1 = $i1 + 4;

        $i0 = $i0 + 3;

        goto label2;

     label6:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        if $i0 != 61 goto label7;

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b5 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b4 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b7 = $r2[$i0];

        $i0 = lengthof $r1;

        $i0 = $i0 + -2;

        $i1 = (int) $b5;

        $i1 = $i1 << 2;

        $i3 = (int) $b4;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b5 = (byte) $i1;

        $r1[$i0] = $b5;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b4;

        $i1 = $i1 << 4;

        $i3 = (int) $b7;

        $i3 = $i3 >> 2;

        $i1 = $i1 | $i3;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        return $r1;

     label7:
        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b6 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b5 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -2;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b4 = $r2[$i0];

        $r2 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i0 = (int) $c2;

        $b7 = $r2[$i0];

        $i0 = lengthof $r1;

        $i0 = $i0 + -3;

        $i1 = (int) $b6;

        $i1 = $i1 << 2;

        $i3 = (int) $b5;

        $i3 = $i3 >> 4;

        $i1 = $i1 | $i3;

        $b6 = (byte) $i1;

        $r1[$i0] = $b6;

        $i0 = lengthof $r1;

        $i0 = $i0 + -2;

        $i1 = (int) $b5;

        $i1 = $i1 << 4;

        $i3 = (int) $b4;

        $i3 = $i3 >> 2;

        $i1 = $i1 | $i3;

        $b5 = (byte) $i1;

        $r1[$i0] = $b5;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $i1 = (int) $b4;

        $i1 = $i1 << 6;

        $i3 = (int) $b7;

        $i1 = $i1 | $i3;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        return $r1;
    }

    public static final byte[] decode(byte[])
    {
        byte[] $r0, $r2;
        short $s4;
        byte $b3;
        int[] $r1;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i1 = 0;

        $i2 = 0;

     label01:
        if $i1 < $i0 goto label02;

        $i1 = $i0 - $i2;

        $i1 = $i1 % 4;

        if $i1 == 0 goto label04;

        return null;

     label02:
        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $b3 = $r0[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i5 = (int) $s4;

        $i5 = $r1[$i5];

        if $i5 >= 0 goto label03;

        $i2 = $i2 + 1;

     label03:
        $i1 = $i1 + 1;

        goto label01;

     label04:
        $i5 = $i0;

        $i1 = 0;

     label05:
        $b3 = $r0[$i5];

        $i6 = (int) $b3;

        if $i6 != 61 goto label06;

        $i1 = $i1 + 1;

     label06:
        if $i5 > 1 goto label09;

     label07:
        $i0 = $i0 - $i2;

        $i0 = $i0 * 6;

        $i0 = $i0 >> 3;

        $i0 = $i0 - $i1;

        $r2 = newarray (byte)[$i0];

        $i1 = 0;

        $i2 = 0;

     label08:
        if $i1 < $i0 goto label10;

        return $r2;

     label09:
        $i6 = -1;

        $i5 = $i5 + $i6;

        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $b3 = $r0[$i5];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i6 = (int) $s4;

        $i6 = $r1[$i6];

        if $i6 <= 0 goto label05;

        goto label07;

     label10:
        $i7 = $i2;

        $i2 = 0;

        $i5 = 0;

     label11:
        if $i5 < 4 goto label13;

        $i5 = $i1 + 1;

        $i6 = $i2 >> 16;

        $b3 = (byte) $i6;

        $r2[$i1] = $b3;

        if $i5 >= $i0 goto label12;

        $i1 = $i5 + 1;

        $i6 = $i2 >> 8;

        $b3 = (byte) $i6;

        $r2[$i5] = $b3;

        if $i1 >= $i0 goto label16;

        $i5 = $i1 + 1;

        $b3 = (byte) $i2;

        $r2[$i1] = $b3;

     label12:
        $i1 = $i5;

        $i2 = $i7;

        goto label08;

     label13:
        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i6 = $i7 + 1;

        $b3 = $r0[$i7];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i7 = (int) $s4;

        $i7 = $r1[$i7];

        if $i7 < 0 goto label15;

        $i8 = $i5 * 6;

        $i8 = 18 - $i8;

        $i7 = $i7 << $i8;

        $i2 = $i2 | $i7;

     label14:
        $i5 = $i5 + 1;

        $i7 = $i6;

        goto label11;

     label15:
        $i7 = -1;

        $i5 = $i5 + $i7;

        goto label14;

     label16:
        $i2 = $i7;

        goto label08;
    }

    public static final byte[] decode(char[])
    {
        byte[] $r1;
        char $c3;
        byte $b7;
        int[] $r2;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8;
        char[] $r0;

        $r0 := @parameter0: char[];

        if $r0 == null goto label02;

        $i0 = lengthof $r0;

     label01:
        if $i0 != 0 goto label03;

        $r1 = newarray (byte)[0];

        return $r1;

     label02:
        $i0 = 0;

        goto label01;

     label03:
        $i1 = 0;

        $i2 = 0;

     label04:
        if $i1 < $i0 goto label05;

        $i1 = $i0 - $i2;

        $i1 = $i1 % 4;

        if $i1 == 0 goto label07;

        return null;

     label05:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c3 = $r0[$i1];

        $i4 = (int) $c3;

        $i4 = $r2[$i4];

        if $i4 >= 0 goto label06;

        $i2 = $i2 + 1;

     label06:
        $i1 = $i1 + 1;

        goto label04;

     label07:
        $i4 = $i0;

        $i1 = 0;

     label08:
        $c3 = $r0[$i4];

        $i5 = (int) $c3;

        if $i5 != 61 goto label09;

        $i1 = $i1 + 1;

     label09:
        if $i4 > 1 goto label12;

     label10:
        $i0 = $i0 - $i2;

        $i0 = $i0 * 6;

        $i0 = $i0 >> 3;

        $i0 = $i0 - $i1;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

        $i2 = 0;

     label11:
        if $i1 < $i0 goto label13;

        return $r1;

     label12:
        $i5 = -1;

        $i4 = $i4 + $i5;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c3 = $r0[$i4];

        $i5 = (int) $c3;

        $i5 = $r2[$i5];

        if $i5 <= 0 goto label08;

        goto label10;

     label13:
        $i6 = $i2;

        $i2 = 0;

        $i4 = 0;

     label14:
        if $i4 < 4 goto label16;

        $i4 = $i1 + 1;

        $i5 = $i2 >> 16;

        $b7 = (byte) $i5;

        $r1[$i1] = $b7;

        if $i4 >= $i0 goto label15;

        $i1 = $i4 + 1;

        $i5 = $i2 >> 8;

        $b7 = (byte) $i5;

        $r1[$i4] = $b7;

        if $i1 >= $i0 goto label19;

        $i4 = $i1 + 1;

        $b7 = (byte) $i2;

        $r1[$i1] = $b7;

     label15:
        $i1 = $i4;

        $i2 = $i6;

        goto label11;

     label16:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i5 = $i6 + 1;

        $c3 = $r0[$i6];

        $i6 = (int) $c3;

        $i6 = $r2[$i6];

        if $i6 < 0 goto label18;

        $i8 = $i4 * 6;

        $i8 = 18 - $i8;

        $i6 = $i6 << $i8;

        $i2 = $i2 | $i6;

     label17:
        $i4 = $i4 + 1;

        $i6 = $i5;

        goto label14;

     label18:
        $i6 = -1;

        $i4 = $i4 + $i6;

        goto label17;

     label19:
        $i2 = $i6;

        goto label11;
    }

    public static final byte[] decodeFast(java.lang.String)
    {
        byte[] $r1;
        byte $b7, $b13;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r0;
        char $c5;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label01;

        $r1 = newarray (byte)[0];

        return $r1;

     label01:
        $i3 = -1;

        $i3 = $i2 + $i3;

        $i4 = 0;

     label02:
        $i4 = $i4 + 1;

        if $i4 < $i3 goto label12;

     label03:
        if $i3 <= 0 goto label04;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $c5 = $c5 & 255;

        $i6 = (int) $c5;

        $i6 = $r2[$i6];

        if $i6 < 0 goto label13;

     label04:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i6 = (int) $c5;

        if $i6 != 61 goto label14;

        $b7 = 1;

     label05:
        $i6 = $i3 - $i4;

        $i6 = $i6 + 1;

        if $i2 <= 76 goto label17;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(76);

        $i2 = (int) $c5;

        if $i2 != 13 goto label16;

        $i2 = $i6 / 78;

     label06:
        $i8 = $i2 << 1;

     label07:
        $i2 = $i6 - $i8;

        $i2 = $i2 * 6;

        $i2 = $i2 >> 3;

        $i2 = $i2 - $b7;

        $r1 = newarray (byte)[$i2];

        $i6 = $i2 / 3;

        $i0 = $i6 * 3;

        $i9 = 0;

        $i6 = 0;

     label08:
        if $i6 < $i0 goto label18;

        if $i6 >= $i2 goto label11;

        $i9 = $i4;

        $i8 = 0;

     label09:
        $i0 = $i3 - $b7;

        if $i9 <= $i0 goto label20;

        $i1 = 16;

     label10:
        if $i6 < $i2 goto label21;

     label11:
        return $r1;

     label12:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $c5 = $c5 & 255;

        $i6 = (int) $c5;

        $i6 = $r2[$i6];

        if $i6 < 0 goto label02;

        goto label03;

     label13:
        $i6 = -1;

        $i3 = $i3 + $i6;

        goto label03;

     label14:
        $i6 = -1;

        $i6 = $i3 + $i6;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i6);

        $i6 = (int) $c5;

        if $i6 != 61 goto label15;

        $b7 = 2;

        goto label05;

     label15:
        $b7 = 0;

        goto label05;

     label16:
        $i2 = 0;

        goto label06;

     label17:
        $i8 = 0;

        goto label07;

     label18:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i10 = $i4 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = (int) $c5;

        $i4 = $r2[$i4];

        $i11 = $i4 << 18;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i10 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i10);

        $i10 = (int) $c5;

        $i10 = $r2[$i10];

        $i10 = $i10 << 12;

        $i11 = $i11 | $i10;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i10 = $i4 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $i4 = (int) $c5;

        $i4 = $r2[$i4];

        $i4 = $i4 << 6;

        $i11 = $i11 | $i4;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i10 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i10);

        $i10 = (int) $c5;

        $i10 = $r2[$i10];

        $i10 = $i10 | $i11;

        $i11 = $i6 + 1;

        $i12 = $i10 >> 16;

        $b13 = (byte) $i12;

        $r1[$i6] = $b13;

        $i12 = $i11 + 1;

        $i6 = $i10 >> 8;

        $b13 = (byte) $i6;

        $r1[$i11] = $b13;

        $i6 = $i12 + 1;

        $b13 = (byte) $i10;

        $r1[$i12] = $b13;

        if $i8 > 0 goto label19;

        goto label08;

     label19:
        $i9 = $i9 + 1;

        if $i9 != 19 goto label22;

        $i9 = 0;

        $i4 = $i4 + 2;

        goto label08;

     label20:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i0 = $i9 + 1;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i9);

        $i9 = (int) $c5;

        $i9 = $r2[$i9];

        $i4 = $i1 * 6;

        $i4 = 18 - $i4;

        $i9 = $i9 << $i4;

        $i1 = $i1 + 1;

        $i8 = $i9 | $i8;

        $i9 = $i0;

        goto label09;

     label21:
        $i3 = $i6 + 1;

        $i0 = $i8 >> $i1;

        $b7 = (byte) $i0;

        $r1[$i6] = $b7;

        $i6 = -8;

        $i1 = $i1 + $i6;

        $i6 = $i3;

        goto label10;

     label22:
        goto label08;
    }

    public static final byte[] decodeFast(byte[])
    {
        byte[] $r0, $r2;
        short $s6;
        byte $b5, $b8;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i9, $i10, $i11, $i12, $i13;

        $r0 := @parameter0: byte[];

        $i1 = 0;

        $i2 = lengthof $r0;

        if $i2 != 0 goto label01;

        $r0 = newarray (byte)[0];

        return $r0;

     label01:
        $i3 = -1;

        $i3 = $i2 + $i3;

        $i4 = 0;

     label02:
        $i4 = $i4 + 1;

        if $i4 < $i3 goto label12;

     label03:
        if $i3 <= 0 goto label04;

        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $b5 = $r0[$i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i7 = (int) $s6;

        $i7 = $r1[$i7];

        if $i7 < 0 goto label13;

     label04:
        $b5 = $r0[$i3];

        $i7 = (int) $b5;

        if $i7 != 61 goto label14;

        $b5 = 1;

     label05:
        $i7 = $i3 - $i4;

        $i7 = $i7 + 1;

        if $i2 <= 76 goto label17;

        $b8 = $r0[76];

        $i2 = (int) $b8;

        if $i2 != 13 goto label16;

        $i2 = $i7 / 78;

     label06:
        $i9 = $i2 << 1;

     label07:
        $i2 = $i7 - $i9;

        $i2 = $i2 * 6;

        $i2 = $i2 >> 3;

        $i2 = $i2 - $b5;

        $r2 = newarray (byte)[$i2];

        $i7 = $i2 / 3;

        $i0 = $i7 * 3;

        $i10 = 0;

        $i7 = 0;

     label08:
        if $i7 < $i0 goto label18;

        if $i7 >= $i2 goto label11;

        $i10 = $i4;

        $i9 = 0;

     label09:
        $i0 = $i3 - $b5;

        if $i10 <= $i0 goto label20;

        $i1 = 16;

     label10:
        if $i7 < $i2 goto label21;

     label11:
        return $r2;

     label12:
        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $b5 = $r0[$i4];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i7 = (int) $s6;

        $i7 = $r1[$i7];

        if $i7 < 0 goto label02;

        goto label03;

     label13:
        $i7 = -1;

        $i3 = $i3 + $i7;

        goto label03;

     label14:
        $i7 = -1;

        $i7 = $i3 + $i7;

        $b5 = $r0[$i7];

        $i7 = (int) $b5;

        if $i7 != 61 goto label15;

        $b5 = 2;

        goto label05;

     label15:
        $b5 = 0;

        goto label05;

     label16:
        $i2 = 0;

        goto label06;

     label17:
        $i9 = 0;

        goto label07;

     label18:
        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i11 = $i4 + 1;

        $b8 = $r0[$i4];

        $i4 = (int) $b8;

        $i4 = $r1[$i4];

        $i12 = $i4 << 18;

        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i11 + 1;

        $b8 = $r0[$i11];

        $i11 = (int) $b8;

        $i11 = $r1[$i11];

        $i11 = $i11 << 12;

        $i12 = $i12 | $i11;

        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i11 = $i4 + 1;

        $b8 = $r0[$i4];

        $i4 = (int) $b8;

        $i4 = $r1[$i4];

        $i4 = $i4 << 6;

        $i12 = $i12 | $i4;

        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i11 + 1;

        $b8 = $r0[$i11];

        $i11 = (int) $b8;

        $i11 = $r1[$i11];

        $i11 = $i11 | $i12;

        $i12 = $i7 + 1;

        $i13 = $i11 >> 16;

        $b8 = (byte) $i13;

        $r2[$i7] = $b8;

        $i13 = $i12 + 1;

        $i7 = $i11 >> 8;

        $b8 = (byte) $i7;

        $r2[$i12] = $b8;

        $i7 = $i13 + 1;

        $b8 = (byte) $i11;

        $r2[$i13] = $b8;

        if $i9 > 0 goto label19;

        goto label08;

     label19:
        $i10 = $i10 + 1;

        if $i10 != 19 goto label22;

        $i10 = 0;

        $i4 = $i4 + 2;

        goto label08;

     label20:
        $r1 = <com.admogo.encryption.Base64: int[] IA>;

        $i0 = $i10 + 1;

        $b8 = $r0[$i10];

        $i10 = (int) $b8;

        $i10 = $r1[$i10];

        $i4 = $i1 * 6;

        $i4 = 18 - $i4;

        $i10 = $i10 << $i4;

        $i1 = $i1 + 1;

        $i9 = $i10 | $i9;

        $i10 = $i0;

        goto label09;

     label21:
        $i3 = $i7 + 1;

        $i0 = $i9 >> $i1;

        $b5 = (byte) $i0;

        $r2[$i7] = $b5;

        $i7 = -8;

        $i1 = $i1 + $i7;

        $i7 = $i3;

        goto label10;

     label22:
        goto label08;
    }

    public static final byte[] decodeFast(char[])
    {
        byte[] $r1;
        byte $b7, $b13;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12;
        char $c5;
        char[] $r0;

        $r0 := @parameter0: char[];

        $i1 = 0;

        $i2 = lengthof $r0;

        if $i2 != 0 goto label01;

        $r1 = newarray (byte)[0];

        return $r1;

     label01:
        $i3 = -1;

        $i3 = $i2 + $i3;

        $i4 = 0;

     label02:
        $i4 = $i4 + 1;

        if $i4 < $i3 goto label12;

     label03:
        if $i3 <= 0 goto label04;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c5 = $r0[$i3];

        $i6 = (int) $c5;

        $i6 = $r2[$i6];

        if $i6 < 0 goto label13;

     label04:
        $c5 = $r0[$i3];

        $i6 = (int) $c5;

        if $i6 != 61 goto label14;

        $b7 = 1;

     label05:
        $i6 = $i3 - $i4;

        $i6 = $i6 + 1;

        if $i2 <= 76 goto label17;

        $c5 = $r0[76];

        $i2 = (int) $c5;

        if $i2 != 13 goto label16;

        $i2 = $i6 / 78;

     label06:
        $i8 = $i2 << 1;

     label07:
        $i2 = $i6 - $i8;

        $i2 = $i2 * 6;

        $i2 = $i2 >> 3;

        $i2 = $i2 - $b7;

        $r1 = newarray (byte)[$i2];

        $i6 = $i2 / 3;

        $i0 = $i6 * 3;

        $i9 = 0;

        $i6 = 0;

     label08:
        if $i6 < $i0 goto label18;

        if $i6 >= $i2 goto label11;

        $i9 = $i4;

        $i8 = 0;

     label09:
        $i0 = $i3 - $b7;

        if $i9 <= $i0 goto label20;

        $i1 = 16;

     label10:
        if $i6 < $i2 goto label21;

     label11:
        return $r1;

     label12:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $c5 = $r0[$i4];

        $i6 = (int) $c5;

        $i6 = $r2[$i6];

        if $i6 < 0 goto label02;

        goto label03;

     label13:
        $i6 = -1;

        $i3 = $i3 + $i6;

        goto label03;

     label14:
        $i6 = -1;

        $i6 = $i3 + $i6;

        $c5 = $r0[$i6];

        $i6 = (int) $c5;

        if $i6 != 61 goto label15;

        $b7 = 2;

        goto label05;

     label15:
        $b7 = 0;

        goto label05;

     label16:
        $i2 = 0;

        goto label06;

     label17:
        $i8 = 0;

        goto label07;

     label18:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i10 = $i4 + 1;

        $c5 = $r0[$i4];

        $i4 = (int) $c5;

        $i4 = $r2[$i4];

        $i11 = $i4 << 18;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i10 + 1;

        $c5 = $r0[$i10];

        $i10 = (int) $c5;

        $i10 = $r2[$i10];

        $i10 = $i10 << 12;

        $i11 = $i11 | $i10;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i10 = $i4 + 1;

        $c5 = $r0[$i4];

        $i4 = (int) $c5;

        $i4 = $r2[$i4];

        $i4 = $i4 << 6;

        $i11 = $i11 | $i4;

        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i4 = $i10 + 1;

        $c5 = $r0[$i10];

        $i10 = (int) $c5;

        $i10 = $r2[$i10];

        $i10 = $i10 | $i11;

        $i11 = $i6 + 1;

        $i12 = $i10 >> 16;

        $b13 = (byte) $i12;

        $r1[$i6] = $b13;

        $i12 = $i11 + 1;

        $i6 = $i10 >> 8;

        $b13 = (byte) $i6;

        $r1[$i11] = $b13;

        $i6 = $i12 + 1;

        $b13 = (byte) $i10;

        $r1[$i12] = $b13;

        if $i8 > 0 goto label19;

        goto label08;

     label19:
        $i9 = $i9 + 1;

        if $i9 != 19 goto label22;

        $i9 = 0;

        $i4 = $i4 + 2;

        goto label08;

     label20:
        $r2 = <com.admogo.encryption.Base64: int[] IA>;

        $i0 = $i9 + 1;

        $c5 = $r0[$i9];

        $i9 = (int) $c5;

        $i9 = $r2[$i9];

        $i4 = $i1 * 6;

        $i4 = 18 - $i4;

        $i9 = $i9 << $i4;

        $i1 = $i1 + 1;

        $i8 = $i9 | $i8;

        $i9 = $i0;

        goto label09;

     label21:
        $i3 = $i6 + 1;

        $i0 = $i8 >> $i1;

        $b7 = (byte) $i0;

        $r1[$i6] = $b7;

        $i6 = -8;

        $i1 = $i1 + $i6;

        $i6 = $i3;

        goto label10;

     label22:
        goto label08;
    }

    private static java.lang.String discardNonBase64Chars(java.lang.String)
    {
        byte $b3;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        char $c2;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label2:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $b3 = (byte) $c2;

        $z0 = staticinvoke <com.admogo.encryption.Base64: boolean isValidBase64Byte(byte)>($b3);

        if $z0 == 0 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public static final byte[] encodeToByte(byte[], boolean)
    {
        byte[] $r0, $r1;
        short $s8;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12;
        boolean $z0;
        char $c9;
        char[] $r2;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $i2 = 0;

        if $r0 == null goto label02;

        $i3 = lengthof $r0;

     label01:
        if $i3 != 0 goto label03;

        $r0 = newarray (byte)[0];

        return $r0;

     label02:
        $i3 = 0;

        goto label01;

     label03:
        $i1 = $i3 / 3;

        $i0 = $i1 * 3;

        $i1 = -1;

        $i1 = $i3 + $i1;

        $i1 = $i1 / 3;

        $i1 = $i1 + 1;

        $i1 = $i1 << 2;

        if $z0 == 0 goto label09;

        $i4 = -1;

        $i4 = $i1 + $i4;

        $i4 = $i4 / 76;

        $i4 = $i4 << 1;

     label04:
        $i1 = $i1 + $i4;

        $r1 = newarray (byte)[$i1];

        $i4 = 0;

        $i5 = 0;

        $i6 = 0;

     label05:
        if $i6 < $i0 goto label10;

        $i4 = $i3 - $i0;

        if $i4 <= 0 goto label08;

        $b7 = $r0[$i0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i0 = (int) $s8;

        $i0 = $i0 << 10;

        if $i4 != 2 goto label06;

        $i2 = -1;

        $i2 = $i3 + $i2;

        $b7 = $r0[$i2];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i2 = (int) $s8;

        $i2 = $i2 << 2;

     label06:
        $i2 = $i2 | $i0;

        $i3 = -4;

        $i3 = $i1 + $i3;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i0 = $i2 >> 12;

        $c9 = $r2[$i0];

        $b7 = (byte) $c9;

        $r1[$i3] = $b7;

        $i3 = -3;

        $i3 = $i1 + $i3;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i0 = $i2 >>> 6;

        $i0 = $i0 & 63;

        $c9 = $r2[$i0];

        $b7 = (byte) $c9;

        $r1[$i3] = $b7;

        $i3 = -2;

        $i3 = $i1 + $i3;

        if $i4 != 2 goto label11;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i2 = $i2 & 63;

        $c9 = $r2[$i2];

        $b7 = (byte) $c9;

     label07:
        $r1[$i3] = $b7;

        $i2 = -1;

        $i1 = $i1 + $i2;

        $r1[$i1] = 61;

     label08:
        return $r1;

     label09:
        $i4 = 0;

        goto label04;

     label10:
        $i10 = $i6 + 1;

        $b7 = $r0[$i6];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i6 = $i6 << 16;

        $i11 = $i10 + 1;

        $b7 = $r0[$i10];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i10 = (int) $s8;

        $i10 = $i10 << 8;

        $i10 = $i10 | $i6;

        $i6 = $i11 + 1;

        $b7 = $r0[$i11];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i11 = (int) $s8;

        $i11 = $i10 | $i11;

        $i10 = $i5 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 18;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $b7 = (byte) $c9;

        $r1[$i5] = $b7;

        $i5 = $i10 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 12;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $b7 = (byte) $c9;

        $r1[$i10] = $b7;

        $i10 = $i5 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 6;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $b7 = (byte) $c9;

        $r1[$i5] = $b7;

        $i5 = $i10 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i11 = $i11 & 63;

        $c9 = $r2[$i11];

        $b7 = (byte) $c9;

        $r1[$i10] = $b7;

        if $z0 == 0 goto label05;

        $i4 = $i4 + 1;

        if $i4 != 19 goto label05;

        $i11 = -2;

        $i11 = $i1 + $i11;

        if $i5 >= $i11 goto label05;

        $i4 = $i5 + 1;

        $r1[$i5] = 13;

        $r1[$i4] = 10;

        $i5 = $i4 + 1;

        $i4 = 0;

        goto label05;

     label11:
        $b7 = 61;

        goto label07;
    }

    public static final char[] encodeToChar(byte[], boolean)
    {
        byte[] $r0;
        short $s8;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12;
        boolean $z0;
        char $c9;
        char[] $r1, $r2;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $i2 = 0;

        if $r0 == null goto label02;

        $i3 = lengthof $r0;

     label01:
        if $i3 != 0 goto label03;

        $r1 = newarray (char)[0];

        return $r1;

     label02:
        $i3 = 0;

        goto label01;

     label03:
        $i1 = $i3 / 3;

        $i0 = $i1 * 3;

        $i1 = $i3 + -1;

        $i1 = $i1 / 3;

        $i1 = $i1 + 1;

        $i1 = $i1 << 2;

        goto label09;

     label04:
        $i1 = $i1 + $i4;

        $r1 = newarray (char)[$i1];

        $i5 = 0;

        $i6 = 0;

     label05:
        if $i6 < $i0 goto label10;

        $i4 = $i3 - $i0;

        if $i4 <= 0 goto label08;

        $b7 = $r0[$i0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i0 = (int) $s8;

        $i0 = $i0 << 10;

        if $i4 != 2 goto label06;

        $i2 = $i3 + -1;

        $b7 = $r0[$i2];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i2 = (int) $s8;

        $i2 = $i2 << 2;

     label06:
        $i2 = $i2 | $i0;

        $i3 = $i1 + -4;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i0 = $i2 >> 12;

        $c9 = $r2[$i0];

        $r1[$i3] = $c9;

        $i3 = $i1 + -3;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i0 = $i2 >>> 6;

        $i0 = $i0 & 63;

        $c9 = $r2[$i0];

        $r1[$i3] = $c9;

        $i3 = $i1 + -2;

        if $i4 != 2 goto label11;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i2 = $i2 & 63;

        $c9 = $r2[$i2];

     label07:
        $r1[$i3] = $c9;

        $i1 = $i1 + -1;

        $r1[$i1] = 61;

     label08:
        return $r1;

     label09:
        $i4 = 0;

        goto label04;

     label10:
        $i10 = $i6 + 1;

        $b7 = $r0[$i6];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i6 = (int) $s8;

        $i6 = $i6 << 16;

        $i11 = $i10 + 1;

        $b7 = $r0[$i10];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i10 = (int) $s8;

        $i10 = $i10 << 8;

        $i10 = $i10 | $i6;

        $i6 = $i11 + 1;

        $b7 = $r0[$i11];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i11 = (int) $s8;

        $i11 = $i10 | $i11;

        $i10 = $i5 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 18;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $r1[$i5] = $c9;

        $i5 = $i10 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 12;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $r1[$i10] = $c9;

        $i10 = $i5 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i12 = $i11 >>> 6;

        $i12 = $i12 & 63;

        $c9 = $r2[$i12];

        $r1[$i5] = $c9;

        $i5 = $i10 + 1;

        $r2 = <com.admogo.encryption.Base64: char[] CA>;

        $i11 = $i11 & 63;

        $c9 = $r2[$i11];

        $r1[$i10] = $c9;

        goto label05;

     label11:
        $c9 = 61;

        goto label07;
    }

    public static final java.lang.String encodeToString(byte[], boolean)
    {
        byte[] $r0;
        char[] $r2;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: byte[];

        $z0 := @parameter1: boolean;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.admogo.encryption.Base64: char[] encodeToChar(byte[],boolean)>($r0, 0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }

    private static boolean isValidBase64Byte(byte)
    {
        int $i1;
        byte[] $r0;
        byte $b0;

        $b0 := @parameter0: byte;

        $i1 = (int) $b0;

        if $i1 != 61 goto label1;

        return 1;

     label1:
        $i1 = (int) $b0;

        if $i1 < 0 goto label2;

        $i1 = (int) $b0;

        if $i1 < 128 goto label3;

     label2:
        return 0;

     label3:
        $r0 = <com.admogo.encryption.Base64: byte[] decodingTable>;

        $i1 = (int) $b0;

        $b0 = $r0[$i1];

        $i1 = (int) $b0;

        if $i1 != -1 goto label4;

        return 0;

     label4:
        return 1;
    }
}
