public class com.vpon.adon.android.utils.PhoneStateUtils extends java.lang.Object
{

    public void <init>()
    {
        com.vpon.adon.android.utils.PhoneStateUtils r0;

        r0 := @this: com.vpon.adon.android.utils.PhoneStateUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getAndroidId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r2;
        android.content.ContentResolver $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "android_id");

        return $r2;
    }

    public static java.lang.String getDeviceName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String r2;
        java.lang.Exception $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $z0 = staticinvoke <com.vpon.adon.android.utils.StringUtils: boolean isBlank(java.lang.String)>("");

     label2:
        if $z0 == 0 goto label4;

        r2 = <android.os.Build: java.lang.String MODEL>;

        return r2;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label4:
        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getIMEI(android.content.Context)
    {
        android.content.Context $r0;
        android.telephony.TelephonyManager $r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        java.lang.Exception $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label2:
        $z0 = staticinvoke <com.vpon.adon.android.utils.StringUtils: boolean isBlank(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        $r3 = staticinvoke <com.vpon.adon.android.utils.PhoneStateUtils: java.lang.String getWifiAddress(android.content.Context)>($r0);

        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        $r3 = "";

        goto label2;

     label4:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.vpon.adon.android.entity.ScreenSize getScreenSize(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager $r4;
        android.util.DisplayMetrics $r2;
        java.lang.Exception $r6;
        com.vpon.adon.android.entity.ScreenSize $r1;
        int $i0;
        android.view.Display $r5;
        java.lang.Object $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.vpon.adon.android.entity.ScreenSize;

        specialinvoke $r1.<com.vpon.adon.android.entity.ScreenSize: void <init>()>();

        $r2 = new android.util.DisplayMetrics;

     label1:
        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        $i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        virtualinvoke $r1.<com.vpon.adon.android.entity.ScreenSize: void setScreenWidth(int)>($i0);

        $i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        virtualinvoke $r1.<com.vpon.adon.android.entity.ScreenSize: void setScreenHeight(int)>($i0);

     label2:
        return $r1;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getSdkOsVersion()
    {
        java.lang.String r0;

        r0 = <android.os.Build$VERSION: java.lang.String SDK>;

        return r0;
    }

    public static java.lang.String getWifiAddress(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiManager $r2;
        android.net.wifi.WifiInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r2 = (android.net.wifi.WifiManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r4 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
