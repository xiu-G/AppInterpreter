public class coconutlabs.game.playcurling.CCLObject extends java.lang.Object
{
    private float ChangeDegree;
    android.graphics.Canvas c;
    private android.graphics.Bitmap m_bmpImg;
    android.graphics.PaintFlagsDrawFilter m_dfRec;
    android.graphics.PaintFlagsDrawFilter m_dfSet;
    private float m_fPosX;
    private float m_fPosY;
    private float m_nDegree;
    public int m_nHeight;
    private int m_nID;
    private int m_nLeftTopX;
    private int m_nLeftTopY;
    public int m_nWidth;

    public void <init>()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.PaintFlagsDrawFilter $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nID> = -1;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX> = 0.0F;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY> = 0.0F;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX> = 0;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY> = 0;

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg> = null;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth> = 0;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight> = 0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree> = 0.0F;

        r0.<coconutlabs.game.playcurling.CCLObject: float ChangeDegree> = 0.0F;

        $r1 = new android.graphics.PaintFlagsDrawFilter;

        specialinvoke $r1.<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>(0, 2);

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.PaintFlagsDrawFilter m_dfSet> = $r1;

        $r1 = new android.graphics.PaintFlagsDrawFilter;

        specialinvoke $r1.<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>(2, 0);

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.PaintFlagsDrawFilter m_dfRec> = $r1;

        return;
    }

    public void DirectDraw(android.graphics.Canvas, float, float)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r2;
        float $f0, $f1;
        android.graphics.Canvas $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r2 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, $f0, $f1, null);

        return;
    }

    public void Draw(android.graphics.Canvas, coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r4;
        int $i0;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;
        android.graphics.Paint r3;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: coconutlabs.game.playcurling.Renderer;

        r3 = new android.graphics.Paint;

        specialinvoke r3.<android.graphics.Paint: void <init>()>();

        virtualinvoke r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r4 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopX()>();

        $f0 = $f0 - $f1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f1 = $f1 - $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r4, $f0, $f1, r3);

        return;
    }

    public void DrawDisplayCoord(android.graphics.Canvas)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r2;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, $f0, $f1, null);

        return;
    }

    public void DrawDisplayCoord(android.graphics.Canvas, int)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r3;
        int $i0;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        android.graphics.Paint r2;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        r2 = new android.graphics.Paint;

        specialinvoke r2.<android.graphics.Paint: void <init>()>();

        virtualinvoke r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        $r3 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, $f0, $f1, r2);

        return;
    }

    public void DrawRelative(android.graphics.Canvas, coconutlabs.game.playcurling.Renderer, int, int)
    {
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r3;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;
        android.graphics.Canvas $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: coconutlabs.game.playcurling.Renderer;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i2;

        $f1 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopX()>();

        $f0 = $f0 - $f1;

        $f1 = (float) 0;

        $f0 = $f0 + $f1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f1 = $f1 - $f2;

        $f2 = (float) $i1;

        $f1 = $f1 + $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, $f0, $f1, null);

        return;
    }

    public void FreeBitmap()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg> = null;

        return;
    }

    public int GetBottom()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int GetHeight()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        return i0;
    }

    public int GetId()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nID>;

        return i0;
    }

    public int GetLeft()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public int GetLeftTopX()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        return i0;
    }

    public int GetLeftTopY()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        return i0;
    }

    public int GetPosX()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        return $i0;
    }

    public int GetPosY()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $i0 = (int) $f0;

        return $i0;
    }

    public int GetRight()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public int GetScreenPosX(coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        coconutlabs.game.playcurling.Renderer $r1;
        int $i0;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: coconutlabs.game.playcurling.Renderer;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        return $i0;
    }

    public int GetScreenPosY(coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        coconutlabs.game.playcurling.Renderer $r1;
        int $i0;
        float $f0, $f1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: coconutlabs.game.playcurling.Renderer;

        $f1 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $f0 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f0 = $f1 - $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    public int GetTop()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        return $i0;
    }

    public int GetWidth()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        return i0;
    }

    public boolean IsVisible(coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        byte $b1;
        coconutlabs.game.playcurling.Renderer $r1;
        int $i0;
        float $f0, $f1, $f2;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: coconutlabs.game.playcurling.Renderer;

        $i0 = virtualinvoke r0.<coconutlabs.game.playcurling.CCLObject: int GetTop()>();

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f2 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetHeightCam()>();

        $f1 = $f1 + $f2;

        $b1 = $f0 cmpl $f1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $i0 = virtualinvoke r0.<coconutlabs.game.playcurling.CCLObject: int GetBottom()>();

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $b1 = $f0 cmpg $f1;

        $i0 = (int) $b1;

        if $i0 < 0 goto label1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetWidthCam()>();

        $b1 = $f0 cmpl $f1;

        $i0 = (int) $b1;

        if $i0 > 0 goto label1;

        $i0 = virtualinvoke r0.<coconutlabs.game.playcurling.CCLObject: int GetRight()>();

        if $i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void Move(double, double)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;
        double $d0, $d1, $d2;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $d2 = (double) $f0;

        $d0 = $d2 + $d0;

        $f0 = (float) $d0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $d0 = (double) $f0;

        $d0 = $d0 + $d1;

        $f0 = (float) $d0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX> = $i0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY> = $i0;

        return;
    }

    public void Rotate()
    {
        coconutlabs.game.playcurling.CCLObject r0;
        float $f0, $f1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree>;

        $f1 = r0.<coconutlabs.game.playcurling.CCLObject: float ChangeDegree>;

        $f0 = $f0 + $f1;

        $f0 = $f0 % 360.0F;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree> = $f0;

        return;
    }

    public void RotateDraw(android.graphics.Canvas, coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.Renderer $r2;
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.PaintFlagsDrawFilter $r3;
        android.graphics.Bitmap $r4;
        int $i0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Canvas $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: coconutlabs.game.playcurling.Renderer;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree>;

        $f1 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $f2 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $f3 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f2 = $f2 - $f3;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);

        $r3 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.PaintFlagsDrawFilter m_dfSet>;

        virtualinvoke $r1.<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>($r3);

        $r4 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopX()>();

        $f0 = $f0 - $f1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $f1 = (float) $i0;

        $f2 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f1 = $f1 - $f2;

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r4, $f0, $f1, null);

        $r3 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.PaintFlagsDrawFilter m_dfRec>;

        virtualinvoke $r1.<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>($r3);

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree>;

        $f0 = neg $f0;

        $f1 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $f2 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $f3 = virtualinvoke $r2.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f2 = $f2 - $f3;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>($f0, $f1, $f2);

        return;
    }

    public void SetBitmap(android.content.res.Resources, int, float)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        android.graphics.Bitmap $r2;
        int $i0, $i1;
        float $f0, $f1;
        android.content.res.Resources $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $r1 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $f0 := @parameter2: float;

        $r2 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>($r1, $i0);

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg> = $r2;

        $r2 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight> = $i0;

        $r2 = r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg>;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r2, $i0, $i1, 1);

        r0.<coconutlabs.game.playcurling.CCLObject: android.graphics.Bitmap m_bmpImg> = $r2;

        return;
    }

    public void SetLeftTopPos(int, int)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX> = $i0;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY> = $i1;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i2 = $i2 / 2;

        $i0 = $i2 + $i0;

        $f0 = (float) $i0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX> = $f0;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i0 = $i0 / 2;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY> = $f0;

        return;
    }

    public void SetPos(int, int)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $f0 = (float) $i0;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX> = $f0;

        $f0 = (float) $i1;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY> = $f0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosX>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX> = $i0;

        $f0 = r0.<coconutlabs.game.playcurling.CCLObject: float m_fPosY>;

        $i0 = (int) $f0;

        $i1 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY> = $i0;

        return;
    }

    public void SetRotate(float)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 := @parameter0: float;

        r0.<coconutlabs.game.playcurling.CCLObject: float m_nDegree> = $f0;

        return;
    }

    public boolean isTouched(int, int, coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1, $i2, $i3;
        coconutlabs.game.playcurling.Renderer $r1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: coconutlabs.game.playcurling.Renderer;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        if $i0 <= $i2 goto label1;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        if $i1 <= $i2 goto label1;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        $i3 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        $i2 = $i2 + $i3;

        if $i0 >= $i2 goto label1;

        $i0 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        $i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        $i0 = $i0 + $i2;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTouchedCircle(int, int, coconutlabs.game.playcurling.Renderer)
    {
        coconutlabs.game.playcurling.Renderer $r1;
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0, $i1, i2, i3, i4, $i5;
        float $f0, $f1;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: coconutlabs.game.playcurling.Renderer;

        i4 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopX>;

        i2 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nWidth>;

        i2 = i2 / 2;

        i2 = i4 + i2;

        i4 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nLeftTopY>;

        i3 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        i3 = i3 / 2;

        i4 = i4 + i3;

        $f1 = (float) i4;

        $f0 = virtualinvoke $r1.<coconutlabs.game.playcurling.Renderer: float GetLeftTopY()>();

        $f0 = $f1 - $f0;

        i3 = (int) $f0;

        i4 = r0.<coconutlabs.game.playcurling.CCLObject: int m_nHeight>;

        i4 = i4 / 2;

        $i5 = $i0 - i2;

        $i0 = $i0 - i2;

        $i0 = $i5 * $i0;

        i2 = $i1 - i3;

        $i1 = $i1 - i3;

        $i1 = i2 * $i1;

        $i0 = $i0 + $i1;

        $i1 = i4 * i4;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setChangeDegree(float)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        float $f0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $f0 := @parameter0: float;

        r0.<coconutlabs.game.playcurling.CCLObject: float ChangeDegree> = $f0;

        return;
    }

    public void setM_nID(int)
    {
        coconutlabs.game.playcurling.CCLObject r0;
        int $i0;

        r0 := @this: coconutlabs.game.playcurling.CCLObject;

        $i0 := @parameter0: int;

        r0.<coconutlabs.game.playcurling.CCLObject: int m_nID> = $i0;

        return;
    }
}
