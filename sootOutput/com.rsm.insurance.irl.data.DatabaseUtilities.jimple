public class com.rsm.insurance.irl.data.DatabaseUtilities extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String CREATE_ClaimInfoTable;
    private static final java.lang.String DB_NAME;
    private static final int DB_VERSION_NUMBER;
    public static final java.lang.String tblAuth_colData;
    public static final java.lang.String tblAuth_colID;
    public static final java.lang.String tblAuth_colPhoneNo;
    public static final java.lang.String tblAuth_colPolicyNumber;
    public static final java.lang.String tblClaimInfo;
    private android.database.sqlite.SQLiteDatabase sqliteDBInstance;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "rsmData.db", null, 1);

        r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance> = null;

        return;
    }

    public void DeleteClaimDetails()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("ClaimInfo", null, null);

        return;
    }

    public java.util.ArrayList GetClaimDetails()
    {
        android.database.sqlite.SQLiteDatabase $r3;
        com.rsm.insurance.irl.data.ClaimsData r2;
        java.lang.String $r5;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;
        java.util.ArrayList r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT * FROM ClaimInfo", null);

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label2;

     label1:
        r2 = new com.rsm.insurance.irl.data.ClaimsData;

        specialinvoke r2.<com.rsm.insurance.irl.data.ClaimsData: void <init>()>();

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(1);

        virtualinvoke r2.<com.rsm.insurance.irl.data.ClaimsData: void setPhoneNumber(java.lang.String)>($r5);

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(2);

        virtualinvoke r2.<com.rsm.insurance.irl.data.ClaimsData: void setPolicyNumber(java.lang.String)>($r5);

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(3);

        virtualinvoke r2.<com.rsm.insurance.irl.data.ClaimsData: void setData(java.lang.String)>($r5);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 != 0 goto label1;

     label2:
        if $r4 == null goto label3;

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label3;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label3:
        return r1;
    }

    public void closeDB()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        if $r1 == null goto label1;

        $r1 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        return;
    }

    public long insertClaimsInfo(java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r5;
        long $l0;
        java.lang.String $r1, $r2, $r3;
        android.content.ContentValues r4;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        r4 = new android.content.ContentValues;

        specialinvoke r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("PhoneNo", $r1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("PolicyNumber", $r2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("Data", $r3);

        $r5 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        $l0 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("ClaimInfo", null, r4);

        return $l0;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("onCreate", "Creating the database...");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("create table ClaimInfo (_id integer primary key autoincrement, PhoneNo text not null, PolicyNumber text, Data text);)");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS ClaimInfo");

        virtualinvoke r0.<com.rsm.insurance.irl.data.DatabaseUtilities: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }

    public void openDB() throws android.database.SQLException
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.DatabaseUtilities r0;

        r0 := @this: com.rsm.insurance.irl.data.DatabaseUtilities;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("openDB", "Checking sqliteDBInstance...");

        $r1 = r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("openDB", "Creating sqliteDBInstance...");

        $r1 = virtualinvoke r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.rsm.insurance.irl.data.DatabaseUtilities: android.database.sqlite.SQLiteDatabase sqliteDBInstance> = $r1;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String tblClaimInfo> = "ClaimInfo";

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String tblAuth_colPolicyNumber> = "PolicyNumber";

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String tblAuth_colPhoneNo> = "PhoneNo";

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String tblAuth_colID> = "_id";

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String tblAuth_colData> = "Data";

        <com.rsm.insurance.irl.data.DatabaseUtilities: int DB_VERSION_NUMBER> = 1;

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String DB_NAME> = "rsmData.db";

        <com.rsm.insurance.irl.data.DatabaseUtilities: java.lang.String CREATE_ClaimInfoTable> = "create table ClaimInfo (_id integer primary key autoincrement, PhoneNo text not null, PolicyNumber text, Data text);)";

        return;
    }
}
