public class com.adview.AdViewLayout extends android.widget.RelativeLayout
{
    public com.adview.obj.Ration activeRation;
    public final java.lang.ref.WeakReference activityReference;
    public com.adview.AdViewInterface adViewInterface;
    public com.adview.AdViewManager adViewManager;
    public android.widget.RelativeLayout baiduView;
    public java.lang.String channel;
    public com.adview.obj.Extra extra;
    public final android.os.Handler handler;
    private boolean hasWindow;
    private boolean isScheduled;
    private java.lang.String keyAdView;
    public java.lang.String keyDev;
    private int maxHeight;
    private int maxWidth;
    public java.lang.String netType;
    public com.adview.obj.Ration nextRation;
    public java.lang.String osVer;
    public java.lang.String platform;
    public java.lang.String resolution;
    public final java.util.concurrent.ScheduledExecutorService scheduler;
    public java.lang.String servicePro;
    public java.lang.ref.WeakReference superViewReference;
    public java.lang.String typeDev;
    public android.widget.RelativeLayout umengView;

    public void <init>(android.app.Activity, java.lang.String)
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewLayout$InitRunnable $r8;
        java.util.concurrent.TimeUnit $r3;
        android.os.Handler $r7;
        java.util.concurrent.ScheduledExecutorService $r4;
        java.lang.String $r2, $r5;
        java.lang.ref.WeakReference $r6;
        android.app.Activity $r1;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context)>($r1);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("000000000000000");

        r0.<com.adview.AdViewLayout: java.lang.String keyDev> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("SDK");

        r0.<com.adview.AdViewLayout: java.lang.String typeDev> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("2.1-update1");

        r0.<com.adview.AdViewLayout: java.lang.String osVer> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("320*480");

        r0.<com.adview.AdViewLayout: java.lang.String resolution> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("46000");

        r0.<com.adview.AdViewLayout: java.lang.String servicePro> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("2G/3G");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("unknown");

        r0.<com.adview.AdViewLayout: java.lang.String channel> = $r5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("android");

        r0.<com.adview.AdViewLayout: java.lang.String platform> = $r5;

        r0.<com.adview.AdViewLayout: android.widget.RelativeLayout umengView> = null;

        r0.<com.adview.AdViewLayout: android.widget.RelativeLayout baiduView> = null;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference activityReference> = $r6;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference superViewReference> = $r6;

        r0.<com.adview.AdViewLayout: java.lang.String keyAdView> = $r2;

        r0.<com.adview.AdViewLayout: boolean hasWindow> = 1;

        $r7 = new android.os.Handler;

        specialinvoke $r7.<android.os.Handler: void <init>()>();

        r0.<com.adview.AdViewLayout: android.os.Handler handler> = $r7;

        $r4 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1);

        r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler> = $r4;

        r0.<com.adview.AdViewLayout: boolean isScheduled> = 1;

        $r4 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r8 = new com.adview.AdViewLayout$InitRunnable;

        specialinvoke $r8.<com.adview.AdViewLayout$InitRunnable: void <init>(com.adview.AdViewLayout,java.lang.String)>(r0, $r2);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r4.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r8, 0L, $r3);

        virtualinvoke r0.<com.adview.AdViewLayout: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.adview.AdViewLayout: void setVerticalScrollBarEnabled(boolean)>(0);

        specialinvoke r0.<com.adview.AdViewLayout: void getAppInfo(android.content.Context)>($r1);

        virtualinvoke r0.<com.adview.AdViewLayout: void appReport()>();

        r0.<com.adview.AdViewLayout: int maxWidth> = 0;

        r0.<com.adview.AdViewLayout: int maxHeight> = 0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.adview.AdViewLayout r0;
        android.content.Context $r1;
        com.adview.AdViewLayout$InitRunnable $r10;
        java.util.concurrent.TimeUnit $r3;
        android.util.AttributeSet $r2;
        android.os.Handler $r8;
        java.util.concurrent.ScheduledExecutorService $r9;
        java.lang.String $r4, r5;
        java.lang.ref.WeakReference $r7;
        android.app.Activity r6;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("000000000000000");

        r0.<com.adview.AdViewLayout: java.lang.String keyDev> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("SDK");

        r0.<com.adview.AdViewLayout: java.lang.String typeDev> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("2.1-update1");

        r0.<com.adview.AdViewLayout: java.lang.String osVer> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("320*480");

        r0.<com.adview.AdViewLayout: java.lang.String resolution> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("46000");

        r0.<com.adview.AdViewLayout: java.lang.String servicePro> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("2G/3G");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("unknown");

        r0.<com.adview.AdViewLayout: java.lang.String channel> = $r4;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>("android");

        r0.<com.adview.AdViewLayout: java.lang.String platform> = $r4;

        r0.<com.adview.AdViewLayout: android.widget.RelativeLayout umengView> = null;

        r0.<com.adview.AdViewLayout: android.widget.RelativeLayout baiduView> = null;

        $r4 = specialinvoke r0.<com.adview.AdViewLayout: java.lang.String getAdViewSDKKey(android.content.Context)>($r1);

        r5 = $r4;

        if $r4 != null goto label1;

        r5 = "";

     label1:
        r6 = (android.app.Activity) $r1;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r6);

        r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference activityReference> = $r7;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference superViewReference> = $r7;

        r0.<com.adview.AdViewLayout: java.lang.String keyAdView> = r5;

        r0.<com.adview.AdViewLayout: boolean hasWindow> = 1;

        $r8 = new android.os.Handler;

        specialinvoke $r8.<android.os.Handler: void <init>()>();

        r0.<com.adview.AdViewLayout: android.os.Handler handler> = $r8;

        $r9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int)>(1);

        r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler> = $r9;

        r0.<com.adview.AdViewLayout: boolean isScheduled> = 1;

        $r9 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r10 = new com.adview.AdViewLayout$InitRunnable;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String keyAdView>;

        specialinvoke $r10.<com.adview.AdViewLayout$InitRunnable: void <init>(com.adview.AdViewLayout,java.lang.String)>(r0, $r4);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r9.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r10, 0L, $r3);

        virtualinvoke r0.<com.adview.AdViewLayout: void setHorizontalScrollBarEnabled(boolean)>(0);

        virtualinvoke r0.<com.adview.AdViewLayout: void setVerticalScrollBarEnabled(boolean)>(0);

        specialinvoke r0.<com.adview.AdViewLayout: void getAppInfo(android.content.Context)>($r1);

        virtualinvoke r0.<com.adview.AdViewLayout: void appReport()>();

        r0.<com.adview.AdViewLayout: int maxWidth> = 0;

        r0.<com.adview.AdViewLayout: int maxHeight> = 0;

        return;
    }

    static boolean access$0(com.adview.AdViewLayout)
    {
        com.adview.AdViewLayout $r0;
        boolean z0;

        $r0 := @parameter0: com.adview.AdViewLayout;

        z0 = $r0.<com.adview.AdViewLayout: boolean hasWindow>;

        return z0;
    }

    static void access$1(com.adview.AdViewLayout, boolean)
    {
        com.adview.AdViewLayout $r0;
        boolean $z0;

        $r0 := @parameter0: com.adview.AdViewLayout;

        $z0 := @parameter1: boolean;

        $r0.<com.adview.AdViewLayout: boolean isScheduled> = 0;

        return;
    }

    static void access$2(com.adview.AdViewLayout)
    {
        com.adview.AdViewLayout $r0;

        $r0 := @parameter0: com.adview.AdViewLayout;

        specialinvoke $r0.<com.adview.AdViewLayout: void rotateAd()>();

        return;
    }

    static void access$3(com.adview.AdViewLayout)
    {
        com.adview.AdViewLayout $r0;

        $r0 := @parameter0: com.adview.AdViewLayout;

        specialinvoke $r0.<com.adview.AdViewLayout: void handleAd()>();

        return;
    }

    private void countClick()
    {
        com.adview.AdViewLayout r0;
        java.lang.Object[] $r3;
        com.adview.AdViewLayout$PingUrlRunnable $r8;
        com.adview.AdViewInterface $r10;
        java.lang.Integer $r6;
        com.adview.AdViewManager $r4;
        java.util.concurrent.TimeUnit $r9;
        com.adview.obj.Ration $r1;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.String $r2, $r5;

        r0 := @this: com.adview.AdViewLayout;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        if $r1 == null goto label1;

        $r2 = <com.adview.util.AdViewUtil: java.lang.String urlClick>;

        $r3 = newarray (java.lang.Object)[6];

        $r4 = r0.<com.adview.AdViewLayout: com.adview.AdViewManager adViewManager>;

        $r5 = $r4.<com.adview.AdViewManager: java.lang.String keyAdView>;

        $r3[0] = $r5;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        $r5 = $r1.<com.adview.obj.Ration: java.lang.String nid>;

        $r3[1] = $r5;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        $i0 = $r1.<com.adview.obj.Ration: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3[3] = $r6;

        $r3[4] = "hello";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255);

        $r3[5] = $r6;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r3);

        $r7 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r8 = new com.adview.AdViewLayout$PingUrlRunnable;

        specialinvoke $r8.<com.adview.AdViewLayout$PingUrlRunnable: void <init>(java.lang.String)>($r2);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r8, 0L, $r9);

        $r10 = r0.<com.adview.AdViewLayout: com.adview.AdViewInterface adViewInterface>;

        if $r10 == null goto label1;

        $r10 = r0.<com.adview.AdViewLayout: com.adview.AdViewInterface adViewInterface>;

        interfaceinvoke $r10.<com.adview.AdViewInterface: void onClickAd()>();

     label1:
        return;
    }

    private void countImpression()
    {
        com.adview.AdViewLayout r0;
        java.lang.Object[] $r3;
        com.adview.AdViewLayout$PingUrlRunnable $r8;
        com.adview.AdViewInterface $r10;
        java.lang.Integer $r6;
        com.adview.AdViewManager $r4;
        java.util.concurrent.TimeUnit $r9;
        com.adview.obj.Ration $r1;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.String $r2, $r5;

        r0 := @this: com.adview.AdViewLayout;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        if $r1 == null goto label1;

        $r2 = <com.adview.util.AdViewUtil: java.lang.String urlImpression>;

        $r3 = newarray (java.lang.Object)[6];

        $r4 = r0.<com.adview.AdViewLayout: com.adview.AdViewManager adViewManager>;

        $r5 = $r4.<com.adview.AdViewManager: java.lang.String keyAdView>;

        $r3[0] = $r5;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        $r5 = $r1.<com.adview.obj.Ration: java.lang.String nid>;

        $r3[1] = $r5;

        $r1 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        $i0 = $r1.<com.adview.obj.Ration: int type>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3[3] = $r6;

        $r3[4] = "hello";

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(255);

        $r3[5] = $r6;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r3);

        $r7 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r8 = new com.adview.AdViewLayout$PingUrlRunnable;

        specialinvoke $r8.<com.adview.AdViewLayout$PingUrlRunnable: void <init>(java.lang.String)>($r2);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r8, 0L, $r9);

        $r10 = r0.<com.adview.AdViewLayout: com.adview.AdViewInterface adViewInterface>;

        if $r10 == null goto label1;

        $r10 = r0.<com.adview.AdViewLayout: com.adview.AdViewInterface adViewInterface>;

        interfaceinvoke $r10.<com.adview.AdViewInterface: void onDisplayAd()>();

     label1:
        return;
    }

    private java.lang.String getAdViewSDKKey(android.content.Context)
    {
        java.lang.Throwable $r11, $r12;
        com.adview.AdViewLayout r0;
        android.content.Context $r1;
        android.os.Bundle r9;
        android.content.pm.PackageManager $r5;
        android.content.ComponentName $r7;
        android.content.pm.ActivityInfo $r8;
        java.lang.Class $r3;
        java.lang.String $r2, $r4, r6;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r6 = "";

        $r7 = new android.content.ComponentName;

     label01:
        specialinvoke $r7.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r2, $r4);

        $r8 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r7, 128);

     label02:
        r9 = $r8.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if r9 == null goto label05;

     label03:
        $r4 = virtualinvoke r9.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ADVIEW_SDK_KEY");

     label04:
        r6 = $r4;

     label05:
        $r10 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, 128);

     label06:
        r9 = $r10.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if r9 == null goto label11;

     label07:
        $r2 = virtualinvoke r9.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ADVIEW_SDK_KEY");

     label08:
        return $r2;

     label09:
        $r11 := @caughtexception;

        return r6;

     label10:
        $r12 := @caughtexception;

        goto label05;

     label11:
        return r6;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label10;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
    }

    private void getAppInfo(android.content.Context)
    {
        com.adview.AdViewLayout r0;
        android.content.Context $r1;
        android.view.WindowManager $r9;
        com.adview.AdViewTargeting$Channel $r14;
        android.telephony.TelephonyManager r4;
        int $i0;
        android.view.Display $r10;
        java.lang.String $r5, $r6;
        java.lang.ref.WeakReference $r7;
        boolean $z0;
        android.net.ConnectivityManager r12;
        android.net.NetworkInfo $r13;
        android.util.DisplayMetrics r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r11;
        android.app.Activity $r8;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.content.Context;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r4 = (android.telephony.TelephonyManager) $r3;

        if r4 == null goto label8;

        $r5 = virtualinvoke r4.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        if $r5 == null goto label2;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(java.lang.String)>($r5);

        r0.<com.adview.AdViewLayout: java.lang.String keyDev> = $r6;

     label2:
        $r5 = new java.lang.String;

        $r6 = <android.os.Build: java.lang.String MODEL>;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r6);

        r0.<com.adview.AdViewLayout: java.lang.String typeDev> = $r5;

        $r5 = r0.<com.adview.AdViewLayout: java.lang.String typeDev>;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");

        r0.<com.adview.AdViewLayout: java.lang.String typeDev> = $r5;

        $r5 = new java.lang.String;

        $r6 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r6);

        r0.<com.adview.AdViewLayout: java.lang.String osVer> = $r5;

        $r5 = r0.<com.adview.AdViewLayout: java.lang.String osVer>;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");

        r0.<com.adview.AdViewLayout: java.lang.String osVer> = $r5;

        r2 = new android.util.DisplayMetrics;

        specialinvoke r2.<android.util.DisplayMetrics: void <init>()>();

        if r2 == null goto label8;

        $r7 = r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference activityReference>;

        $r3 = virtualinvoke $r7.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r8 = (android.app.Activity) $r3;

        $r9 = virtualinvoke $r8.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r10 = interfaceinvoke $r9.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r10.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r2);

        $r5 = new java.lang.String;

        $r11 = new java.lang.StringBuilder;

        $i0 = r2.<android.util.DisplayMetrics: int widthPixels>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i0 = r2.<android.util.DisplayMetrics: int heightPixels>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r6);

        r0.<com.adview.AdViewLayout: java.lang.String resolution> = $r5;

        $i0 = virtualinvoke r4.<android.telephony.TelephonyManager: int getSimState()>();

        if $i0 != 5 goto label3;

        $r5 = virtualinvoke r4.<android.telephony.TelephonyManager: java.lang.String getSimOperator()>();

        if $r5 == null goto label3;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(java.lang.String)>($r5);

        r0.<com.adview.AdViewLayout: java.lang.String servicePro> = $r6;

     label3:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r12 = (android.net.ConnectivityManager) $r3;

        $r13 = virtualinvoke r12.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r13 == null goto label7;

        $r5 = virtualinvoke $r13.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mobile");

        if $z0 == 0 goto label5;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("2G/3G");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r5;

     label4:
        $r14 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$Channel getChannel()>();

        if $r14 == null goto label8;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke $r14.<com.adview.AdViewTargeting$Channel: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r6);

        r0.<com.adview.AdViewLayout: java.lang.String channel> = $r5;

        return;

     label5:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("wifi");

        if $z0 == 0 goto label6;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("Wi-Fi");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r5;

        goto label4;

     label6:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("Wi-Fi");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r5;

        goto label4;

     label7:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>("Wi-Fi");

        r0.<com.adview.AdViewLayout: java.lang.String netType> = $r5;

        goto label4;

     label8:
        return;
    }

    private void handleAd()
    {
        java.lang.Throwable r1;
        com.adview.AdViewLayout r0;
        java.lang.Object[] $r5;
        com.adview.obj.Ration $r2;
        com.adview.AdViewTargeting$RunMode $r3, $r4;
        java.lang.String $r6;

        r0 := @this: com.adview.AdViewLayout;

        $r2 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        if $r2 != null goto label2;

        $r3 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r4 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r3 != $r4 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "nextRation is null!");

     label1:
        virtualinvoke r0.<com.adview.AdViewLayout: void rotateThreadedDelayed()>();

        return;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        $r6 = $r2.<com.adview.obj.Ration: java.lang.String name>;

        $r5[0] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Showing ad:\nname: %s", $r5);

        $r3 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r4 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r3 != $r4 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", $r6);

     label3:
        $r2 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        staticinvoke <com.adview.adapters.AdViewAdapter: void handle(com.adview.AdViewLayout,com.adview.obj.Ration)>(r0, $r2);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        $r3 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r4 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r3 != $r4 goto label6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AdView SDK v1.6.1", "Caught an exception in adapter:", r1);

     label6:
        virtualinvoke r0.<com.adview.AdViewLayout: void rollover()>();

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private void rotateAd()
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewLayout$HandleAdRunnable $r6;
        com.adview.AdViewTargeting$RunMode $r1, $r2;
        com.adview.AdViewManager $r3;
        com.adview.obj.Ration $r4;
        android.os.Handler $r5;
        boolean $z0;

        r0 := @this: com.adview.AdViewLayout;

        $z0 = r0.<com.adview.AdViewLayout: boolean hasWindow>;

        if $z0 != 0 goto label1;

        r0.<com.adview.AdViewLayout: boolean isScheduled> = 0;

        return;

     label1:
        $r1 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r2 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r1 != $r2 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "Rotating Ad");

     label2:
        $r3 = r0.<com.adview.AdViewLayout: com.adview.AdViewManager adViewManager>;

        $r4 = virtualinvoke $r3.<com.adview.AdViewManager: com.adview.obj.Ration getRation()>();

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation> = $r4;

        $r5 = r0.<com.adview.AdViewLayout: android.os.Handler handler>;

        $r6 = new com.adview.AdViewLayout$HandleAdRunnable;

        specialinvoke $r6.<com.adview.AdViewLayout$HandleAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    public void appReport()
    {
        java.util.concurrent.TimeUnit $r1;
        com.adview.AdViewLayout r0;
        java.lang.Object[] $r3;
        com.adview.AdViewLayout$PingUrlRunnable $r6;
        java.util.concurrent.ScheduledExecutorService $r5;
        java.lang.String $r2, $r4;

        r0 := @this: com.adview.AdViewLayout;

        $r2 = <com.adview.util.AdViewUtil: java.lang.String appReport>;

        $r3 = newarray (java.lang.Object)[9];

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String keyAdView>;

        $r3[0] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String keyDev>;

        $r3[1] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String typeDev>;

        $r3[2] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String osVer>;

        $r3[3] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String resolution>;

        $r3[4] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String servicePro>;

        $r3[5] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String netType>;

        $r3[6] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String channel>;

        $r3[7] = $r4;

        $r4 = r0.<com.adview.AdViewLayout: java.lang.String platform>;

        $r3[8] = $r4;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r2, $r3);

        $r5 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r6 = new com.adview.AdViewLayout$PingUrlRunnable;

        specialinvoke $r6.<com.adview.AdViewLayout$PingUrlRunnable: void <init>(java.lang.String)>($r2);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r5.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r6, 0L, $r1);

        return;
    }

    public void fetchConfigThreadedDelayed(int)
    {
        com.adview.AdViewLayout r0;
        long $l1;
        com.adview.AdViewTargeting$UpdateMode $r2, $r3;
        java.util.concurrent.TimeUnit $r1;
        com.adview.AdViewLayout$GetConfigRunnable $r5;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r4;

        r0 := @this: com.adview.AdViewLayout;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$UpdateMode getUpdateMode()>();

        $r3 = <com.adview.AdViewTargeting$UpdateMode: com.adview.AdViewTargeting$UpdateMode DEFAULT>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r5 = new com.adview.AdViewLayout$GetConfigRunnable;

        specialinvoke $r5.<com.adview.AdViewLayout$GetConfigRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        $l1 = (long) $i0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r4.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r5, $l1, $r1);

     label1:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.adview.AdViewLayout r0;
        android.view.MotionEvent $r1;
        com.adview.obj.Ration $r4;
        int $i0;
        com.adview.AdViewTargeting$RunMode $r2, $r3;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i0)
        {
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        $r2 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r3 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r2 != $r3 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "Intercepted ACTION_DOWN event");

     label3:
        $r4 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation>;

        if $r4 == null goto label1;

        specialinvoke r0.<com.adview.AdViewLayout: void countClick()>();

        goto label1;
    }

    protected void onMeasure(int, int)
    {
        com.adview.AdViewLayout r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.adview.AdViewLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i4 = r0.<com.adview.AdViewLayout: int maxWidth>;

        if $i4 <= 0 goto label1;

        $i4 = r0.<com.adview.AdViewLayout: int maxWidth>;

        if $i2 <= $i4 goto label1;

        $i0 = r0.<com.adview.AdViewLayout: int maxWidth>;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, -2147483648);

     label1:
        $i2 = r0.<com.adview.AdViewLayout: int maxHeight>;

        if $i2 <= 0 goto label2;

        $i2 = r0.<com.adview.AdViewLayout: int maxHeight>;

        if $i3 <= $i2 goto label2;

        $i1 = r0.<com.adview.AdViewLayout: int maxHeight>;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, -2147483648);

     label2:
        specialinvoke r0.<android.widget.RelativeLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewLayout$InitRunnable $r4;
        java.util.concurrent.TimeUnit $r1;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r3;
        com.adview.obj.Extra $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.adview.AdViewLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        r0.<com.adview.AdViewLayout: boolean hasWindow> = 1;

        $z0 = r0.<com.adview.AdViewLayout: boolean isScheduled>;

        if $z0 != 0 goto label3;

        r0.<com.adview.AdViewLayout: boolean isScheduled> = 1;

        $r2 = r0.<com.adview.AdViewLayout: com.adview.obj.Extra extra>;

        if $r2 == null goto label1;

        virtualinvoke r0.<com.adview.AdViewLayout: void rotateThreadedNow()>();

        return;

     label1:
        $r3 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r4 = new com.adview.AdViewLayout$InitRunnable;

        $r5 = r0.<com.adview.AdViewLayout: java.lang.String keyAdView>;

        specialinvoke $r4.<com.adview.AdViewLayout$InitRunnable: void <init>(com.adview.AdViewLayout,java.lang.String)>(r0, $r5);

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r4, 0L, $r1);

        return;

     label2:
        r0.<com.adview.AdViewLayout: boolean hasWindow> = 0;

     label3:
        return;
    }

    public void pushSubView(android.view.ViewGroup)
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewTargeting$RunMode $r7, $r8;
        android.view.ViewGroup $r1;
        android.widget.RelativeLayout$LayoutParams r6, $r9;
        com.adview.obj.Ration $r5;
        int $i0;
        android.widget.RelativeLayout r4;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r2;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 = r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference superViewReference>;

        $r3 = virtualinvoke $r2.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.widget.RelativeLayout) $r3;

        if r4 != null goto label1;

        return;

     label1:
        virtualinvoke r4.<android.widget.RelativeLayout: void removeAllViews()>();

        $r5 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        $i0 = $r5.<com.adview.obj.Ration: int type>;

        if $i0 != 33 goto label4;

        $r9 = new android.widget.RelativeLayout$LayoutParams;

        r6 = $r9;

        specialinvoke $r9.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);

     label2:
        virtualinvoke r4.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, r6);

        $r7 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r8 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r7 != $r8 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "Added subview");

     label3:
        $r5 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation> = $r5;

        specialinvoke r0.<com.adview.AdViewLayout: void countImpression()>();

        return;

     label4:
        $r9 = new android.widget.RelativeLayout$LayoutParams;

        r6 = $r9;

        specialinvoke $r9.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        goto label2;
    }

    public void pushSubViewForIzp(android.view.ViewGroup)
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewTargeting$RunMode $r6, $r7;
        android.view.ViewGroup $r1;
        android.widget.RelativeLayout$LayoutParams r2;
        com.adview.obj.Ration $r8;
        android.widget.RelativeLayout r5;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r3;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: android.view.ViewGroup;

        $r3 = r0.<com.adview.AdViewLayout: java.lang.ref.WeakReference superViewReference>;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.widget.RelativeLayout) $r4;

        if r5 != null goto label1;

        return;

     label1:
        virtualinvoke r5.<android.widget.RelativeLayout: void removeAllViews()>();

        r2 = new android.widget.RelativeLayout$LayoutParams;

        specialinvoke r2.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(320, 48);

        virtualinvoke r2.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(13);

        virtualinvoke r5.<android.widget.RelativeLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, r2);

        $r6 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r7 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r6 != $r7 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "Added subview");

     label2:
        $r8 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation> = $r8;

        specialinvoke r0.<com.adview.AdViewLayout: void countImpression()>();

        return;
    }

    public void reportImpression()
    {
        com.adview.AdViewLayout r0;
        com.adview.obj.Ration $r3;
        com.adview.AdViewTargeting$RunMode $r1, $r2;

        r0 := @this: com.adview.AdViewLayout;

        $r1 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r2 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r1 != $r2 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "reportImpression");

     label1:
        $r3 = r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation>;

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration activeRation> = $r3;

        specialinvoke r0.<com.adview.AdViewLayout: void countImpression()>();

        return;
    }

    public void rollover()
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewLayout$HandleAdRunnable $r1;
        com.adview.obj.Ration $r2;
        android.os.Handler $r4;
        com.adview.AdViewManager $r3;

        r0 := @this: com.adview.AdViewLayout;

        $r3 = r0.<com.adview.AdViewLayout: com.adview.AdViewManager adViewManager>;

        $r2 = virtualinvoke $r3.<com.adview.AdViewManager: com.adview.obj.Ration getRollover()>();

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation> = $r2;

        $r4 = r0.<com.adview.AdViewLayout: android.os.Handler handler>;

        $r1 = new com.adview.AdViewLayout$HandleAdRunnable;

        specialinvoke $r1.<com.adview.AdViewLayout$HandleAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void rotatePriAd()
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewLayout$HandleAdRunnable $r6;
        com.adview.AdViewTargeting$RunMode $r1, $r2;
        com.adview.AdViewManager $r3;
        com.adview.obj.Ration $r4;
        android.os.Handler $r5;
        boolean $z0;

        r0 := @this: com.adview.AdViewLayout;

        $z0 = r0.<com.adview.AdViewLayout: boolean hasWindow>;

        if $z0 != 0 goto label1;

        r0.<com.adview.AdViewLayout: boolean isScheduled> = 0;

        return;

     label1:
        $r1 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r2 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r1 != $r2 goto label2;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", "Rotating Pri Ad");

     label2:
        $r3 = r0.<com.adview.AdViewLayout: com.adview.AdViewManager adViewManager>;

        $r4 = virtualinvoke $r3.<com.adview.AdViewManager: com.adview.obj.Ration getRollover()>();

        r0.<com.adview.AdViewLayout: com.adview.obj.Ration nextRation> = $r4;

        $r5 = r0.<com.adview.AdViewLayout: android.os.Handler handler>;

        $r6 = new com.adview.AdViewLayout$HandleAdRunnable;

        specialinvoke $r6.<com.adview.AdViewLayout$HandleAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    public void rotateThreadedDelayed()
    {
        com.adview.AdViewLayout r0;
        com.adview.AdViewTargeting$RunMode $r2, $r3;
        long $l1;
        java.util.concurrent.TimeUnit $r1;
        int $i0;
        java.util.concurrent.ScheduledExecutorService $r7;
        java.lang.StringBuilder $r4;
        com.adview.AdViewLayout$RotateAdRunnable $r8;
        com.adview.obj.Extra $r5;
        java.lang.String $r6;

        r0 := @this: com.adview.AdViewLayout;

        $r2 = staticinvoke <com.adview.AdViewTargeting: com.adview.AdViewTargeting$RunMode getRunMode()>();

        $r3 = <com.adview.AdViewTargeting$RunMode: com.adview.AdViewTargeting$RunMode TEST>;

        if $r2 != $r3 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Will call rotateAd() in ");

        $r5 = r0.<com.adview.AdViewLayout: com.adview.obj.Extra extra>;

        $i0 = $r5.<com.adview.obj.Extra: int cycleTime>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdView SDK v1.6.1", $r6);

     label1:
        $r7 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r8 = new com.adview.AdViewLayout$RotateAdRunnable;

        specialinvoke $r8.<com.adview.AdViewLayout$RotateAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        $r5 = r0.<com.adview.AdViewLayout: com.adview.obj.Extra extra>;

        $i0 = $r5.<com.adview.obj.Extra: int cycleTime>;

        $l1 = (long) $i0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r7.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r8, $l1, $r1);

        return;
    }

    public void rotateThreadedNow()
    {
        java.util.concurrent.TimeUnit $r3;
        com.adview.AdViewLayout r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        com.adview.AdViewLayout$RotateAdRunnable $r2;

        r0 := @this: com.adview.AdViewLayout;

        $r1 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r2 = new com.adview.AdViewLayout$RotateAdRunnable;

        specialinvoke $r2.<com.adview.AdViewLayout$RotateAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r2, 0L, $r3);

        return;
    }

    public void rotateThreadedPri()
    {
        java.util.concurrent.TimeUnit $r3;
        com.adview.AdViewLayout r0;
        java.util.concurrent.ScheduledExecutorService $r1;
        com.adview.AdViewLayout$RotatePriAdRunnable $r2;

        r0 := @this: com.adview.AdViewLayout;

        $r1 = r0.<com.adview.AdViewLayout: java.util.concurrent.ScheduledExecutorService scheduler>;

        $r2 = new com.adview.AdViewLayout$RotatePriAdRunnable;

        specialinvoke $r2.<com.adview.AdViewLayout$RotatePriAdRunnable: void <init>(com.adview.AdViewLayout)>(r0);

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r2, 1L, $r3);

        return;
    }

    public void setAdViewInterface(com.adview.AdViewInterface)
    {
        com.adview.AdViewInterface $r1;
        com.adview.AdViewLayout r0;

        r0 := @this: com.adview.AdViewLayout;

        $r1 := @parameter0: com.adview.AdViewInterface;

        r0.<com.adview.AdViewLayout: com.adview.AdViewInterface adViewInterface> = $r1;

        return;
    }

    public void setMaxHeight(int)
    {
        int $i0;
        com.adview.AdViewLayout r0;

        r0 := @this: com.adview.AdViewLayout;

        $i0 := @parameter0: int;

        r0.<com.adview.AdViewLayout: int maxHeight> = $i0;

        return;
    }

    public void setMaxWidth(int)
    {
        int $i0;
        com.adview.AdViewLayout r0;

        r0 := @this: com.adview.AdViewLayout;

        $i0 := @parameter0: int;

        r0.<com.adview.AdViewLayout: int maxWidth> = $i0;

        return;
    }
}
