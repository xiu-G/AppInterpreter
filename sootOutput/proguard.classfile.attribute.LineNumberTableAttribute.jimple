public class proguard.classfile.attribute.LineNumberTableAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.attribute.LineNumberInfo[] lineNumberTable;
    public int u2lineNumberTableLength;

    public void <init>()
    {
        proguard.classfile.attribute.LineNumberTableAttribute r0;

        r0 := @this: proguard.classfile.attribute.LineNumberTableAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    public void <init>(int, int, proguard.classfile.attribute.LineNumberInfo[])
    {
        proguard.classfile.attribute.LineNumberTableAttribute r0;
        int $i0, $i1;
        proguard.classfile.attribute.LineNumberInfo[] $r1;

        r0 := @this: proguard.classfile.attribute.LineNumberTableAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: proguard.classfile.attribute.LineNumberInfo[];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength> = 0;

        r0.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable> = $r1;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.visitor.AttributeVisitor)
    {
        proguard.classfile.attribute.LineNumberTableAttribute r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.visitor.AttributeVisitor $r4;

        r0 := @this: proguard.classfile.attribute.LineNumberTableAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.visitor.AttributeVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.visitor.AttributeVisitor: void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute)>($r1, $r2, $r3, r0);

        return;
    }

    public int getLineNumber(int)
    {
        proguard.classfile.attribute.LineNumberTableAttribute r0;
        proguard.classfile.attribute.LineNumberInfo $r2;
        int $i0, $i1, $i2;
        proguard.classfile.attribute.LineNumberInfo[] $r1;

        r0 := @this: proguard.classfile.attribute.LineNumberTableAttribute;

        $i0 := @parameter0: int;

        $i2 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        $i2 = $i2 - 1;

     label1:
        if $i2 < 0 goto label3;

        $r1 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable>;

        $r2 = $r1[$i2];

        $i1 = $r2.<proguard.classfile.attribute.LineNumberInfo: int u2startPC>;

        if $i0 < $i1 goto label2;

        $i0 = $r2.<proguard.classfile.attribute.LineNumberInfo: int u2lineNumber>;

        return $i0;

     label2:
        $i2 = $i2 + -1;

        goto label1;

     label3:
        $i0 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        if $i0 <= 0 goto label4;

        $r1 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable>;

        $r2 = $r1[0];

        $i0 = $r2.<proguard.classfile.attribute.LineNumberInfo: int u2lineNumber>;

        return $i0;

     label4:
        return 0;
    }

    public void lineNumbersAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, proguard.classfile.attribute.visitor.LineNumberInfoVisitor)
    {
        proguard.classfile.attribute.LineNumberTableAttribute r0;
        proguard.classfile.attribute.LineNumberInfo $r6;
        proguard.classfile.attribute.visitor.LineNumberInfoVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0, $i1;
        proguard.classfile.attribute.LineNumberInfo[] $r5;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.attribute.LineNumberTableAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 := @parameter3: proguard.classfile.attribute.visitor.LineNumberInfoVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: int u2lineNumberTableLength>;

        if $i0 >= $i1 goto label2;

        $r5 = r0.<proguard.classfile.attribute.LineNumberTableAttribute: proguard.classfile.attribute.LineNumberInfo[] lineNumberTable>;

        $r6 = $r5[$i0];

        interfaceinvoke $r4.<proguard.classfile.attribute.visitor.LineNumberInfoVisitor: void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo)>($r1, $r2, $r3, $r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
