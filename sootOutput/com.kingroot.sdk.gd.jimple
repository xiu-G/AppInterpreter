public final class com.kingroot.sdk.gd extends java.lang.Object
{

    public static byte[] W(java.lang.String)
    {
        byte[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.kingroot.sdk.ge: byte[] W(java.lang.String)>($r0);

        return $r1;
    }

    public static void a(android.content.res.AssetManager, java.lang.String, java.io.File)
    {
        java.lang.Throwable $r6;
        android.content.res.AssetManager $r0;
        java.io.FileOutputStream $r5;
        java.lang.String $r1;
        java.io.File $r2;
        java.io.InputStream $r3, $r4;

        $r0 := @parameter0: android.content.res.AssetManager;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        $r4 = null;

     label1:
        $r3 = virtualinvoke $r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("ktools");

     label2:
        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label3:
        staticinvoke <com.kingroot.sdk.gf: long a(java.io.InputStream,java.io.OutputStream)>($r3, $r5);

     label4:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r3);

        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r5);

        return;

     label5:
        $r6 := @caughtexception;

        $r5 = null;

     label6:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r4);

        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r5);

        throw $r6;

     label7:
        $r6 := @caughtexception;

        $r5 = null;

        $r4 = $r3;

        goto label6;

     label8:
        $r6 := @caughtexception;

        $r4 = $r3;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public static void a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.kingroot.sdk.ge: void a(byte[],java.lang.String)>($r0, $r1);

        return;
    }

    public static boolean a(android.content.res.AssetManager, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r4;
        android.content.res.AssetManager $r0;
        java.lang.String $r1, $r2;
        java.io.InputStream $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.res.AssetManager;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("ktools");

     label1:
        $z0 = staticinvoke <com.kingroot.sdk.gd: boolean a(java.io.InputStream,java.lang.String)>($r3, $r2);

     label2:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r3);

        return $z0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r3);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean a(java.io.InputStream, java.lang.String)
    {
        java.util.zip.ZipInputStream $r3;
        java.io.File $r2, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r7;
        java.util.zip.ZipEntry $r4;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        $r3 = new java.util.zip.ZipInputStream;

        specialinvoke $r3.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r0);

     label1:
        $r4 = virtualinvoke $r3.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if $r4 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke $r4.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r5 = new java.io.File;

        $r1 = virtualinvoke $r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("xxx");

        $r1 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" need update");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.fq: void g(java.lang.String,java.lang.String)>("KUSdkLog", $r1);

        return 1;

     label3:
        $r5 = new java.io.File;

        $r1 = virtualinvoke $r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        $z0 = virtualinvoke $r5.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label5;

        $r1 = staticinvoke <com.kingroot.sdk.gd: java.lang.String i(java.io.File)>($r5);

        $r7 = staticinvoke <com.kingroot.sdk.gd: java.lang.String b(java.io.InputStream)>($r3);

        if $r1 == null goto label4;

        if $r7 == null goto label4;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("xxx");

        $r1 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no changed.");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.fq: void g(java.lang.String,java.lang.String)>("KUSdkLog", $r1);

        goto label1;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("xxx");

        $r1 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" need update");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.fq: void g(java.lang.String,java.lang.String)>("KUSdkLog", $r1);

        return 1;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("xxx");

        $r1 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" need update");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.fq: void g(java.lang.String,java.lang.String)>("KUSdkLog", $r1);

        return 1;
    }

    public static java.lang.String b(java.io.InputStream)
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        java.security.MessageDigest $r1;
        java.security.NoSuchAlgorithmException $r5;
        int $i0;
        java.lang.String $r3;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        $r2 = newarray (byte)[1024];

     label3:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

     label4:
        if $i0 != -1 goto label7;

     label5:
        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <com.kingroot.sdk.gk: java.lang.String c(byte[])>($r2);

     label6:
        return $r3;

     label7:
        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

     label8:
        goto label3;

     label9:
        $r4 := @caughtexception;

        $r5 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke $r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label9;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label9;
        catch java.security.NoSuchAlgorithmException from label7 to label8 with label9;
    }

    public static void b(android.content.res.AssetManager, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r3;
        android.content.res.AssetManager $r0;
        java.lang.String $r1, $r2;
        java.io.InputStream $r4;

        $r0 := @parameter0: android.content.res.AssetManager;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = virtualinvoke $r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("ktools");

     label1:
        staticinvoke <com.kingroot.sdk.gd: void b(java.io.InputStream,java.lang.String)>($r4, $r2);

     label2:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r4);

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r4);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void b(java.io.InputStream, java.lang.String)
    {
        java.lang.Throwable $r8;
        java.util.zip.ZipInputStream $r2;
        java.io.FileOutputStream $r7;
        java.io.File $r3, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r1;
        java.util.zip.ZipEntry $r4;
        java.io.InputStream $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        $r2 = new java.util.zip.ZipInputStream;

        specialinvoke $r2.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r0);

     label1:
        $r4 = virtualinvoke $r2.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

        if $r4 != null goto label2;

        return;

     label2:
        $z0 = virtualinvoke $r4.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r5 = new java.io.File;

        $r1 = virtualinvoke $r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        virtualinvoke $r5.<java.io.File: boolean mkdir()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("mkDir : ");

        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.fq: void h(java.lang.String,java.lang.String)>("FileUtil", $r1);

        goto label1;

     label3:
        $r1 = virtualinvoke $r4.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

     label4:
        virtualinvoke $r5.<java.io.File: boolean delete()>();

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label5:
        staticinvoke <com.kingroot.sdk.gf: long a(java.io.InputStream,java.io.OutputStream)>($r2, $r7);

        virtualinvoke $r7.<java.io.FileOutputStream: void flush()>();

     label6:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r7);

        goto label1;

     label7:
        $r8 := @caughtexception;

        $r7 = null;

     label8:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r7);

        throw $r8;

     label9:
        $r8 := @caughtexception;

        goto label8;

        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label9;
    }

    public static byte[] c(java.lang.String, int)
    {
        java.lang.Throwable $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte[] $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.String $r0;
        java.io.IOException $r14;
        java.io.FileInputStream $r2, $r13;
        java.io.FileNotFoundException $r15;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i2 = 0;

     label01:
        $r13 = new java.io.FileInputStream;

     label02:
        $r2 = $r13;

     label03:
        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label04:
        $r1 = newarray (byte)[$i0];

     label05:
        $i1 = $i0 - $i2;

     label06:
        $i1 = virtualinvoke $r2.<java.io.FileInputStream: int read(byte[],int,int)>($r1, $i2, $i1);

     label07:
        if $i1 != -1 goto label11;

     label08:
        if $i2 != 0 goto label13;

     label09:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label10:
        return null;

     label11:
        $i2 = $i2 + $i1;

        if $i2 >= $i0 goto label08;

        goto label05;

     label12:
        $r3 := @caughtexception;

        $r14 = (java.io.IOException) $r3;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return null;

     label13:
        if $i2 >= $i0 goto label17;

     label14:
        $r4 = newarray (byte)[$i2];

     label15:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, $i2);

     label16:
        $r1 = $r4;

     label17:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label18:
        return $r1;

     label19:
        $r5 := @caughtexception;

        $r14 = (java.io.IOException) $r5;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return $r1;

     label20:
        $r6 := @caughtexception;

        $r2 = null;

     label21:
        $r15 = (java.io.FileNotFoundException) $r6;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

     label22:
        if $r2 == null goto label40;

     label23:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label24:
        return null;

     label25:
        $r7 := @caughtexception;

        $r14 = (java.io.IOException) $r7;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return null;

     label26:
        $r8 := @caughtexception;

        $r2 = null;

     label27:
        $r14 = (java.io.IOException) $r8;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

     label28:
        if $r2 == null goto label40;

     label29:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label30:
        return null;

     label31:
        $r9 := @caughtexception;

        $r14 = (java.io.IOException) $r9;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        return null;

     label32:
        $r10 := @caughtexception;

        $r2 = null;

        $r11 = $r10;

     label33:
        if $r2 == null goto label35;

     label34:
        virtualinvoke $r2.<java.io.FileInputStream: void close()>();

     label35:
        throw $r11;

     label36:
        $r12 := @caughtexception;

        $r14 = (java.io.IOException) $r12;

        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

        goto label35;

     label37:
        $r11 := @caughtexception;

        goto label33;

     label38:
        $r8 := @caughtexception;

        goto label27;

     label39:
        $r6 := @caughtexception;

        goto label21;

     label40:
        return null;

        catch java.io.FileNotFoundException from label03 to label04 with label20;
        catch java.io.IOException from label03 to label04 with label26;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.io.FileNotFoundException from label06 to label07 with label39;
        catch java.io.IOException from label06 to label07 with label38;
        catch java.lang.Throwable from label04 to label05 with label37;
        catch java.lang.Throwable from label06 to label07 with label37;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.io.FileNotFoundException from label15 to label16 with label39;
        catch java.io.IOException from label15 to label16 with label38;
        catch java.lang.Throwable from label14 to label16 with label37;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label22 with label37;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label27 to label28 with label37;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label34 to label35 with label36;
    }

    public static long f(java.io.File)
    {
        long $l0;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <com.kingroot.sdk.ge: long f(java.io.File)>($r0);

        return $l0;

     label1:
        return 0L;
    }

    public static java.lang.String g(java.io.File)
    {
        java.lang.String $r1;
        java.io.File $r0;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.kingroot.sdk.ge: java.lang.String g(java.io.File)>($r0);

        return $r1;

     label1:
        return "";
    }

    public static java.lang.String i(java.io.File)
    {
        java.lang.Throwable $r3;
        java.io.FileInputStream $r1;
        java.lang.String $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label1:
        $r2 = staticinvoke <com.kingroot.sdk.gd: java.lang.String b(java.io.InputStream)>($r1);

     label2:
        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r1);

        return $r2;

     label3:
        $r3 := @caughtexception;

        staticinvoke <com.kingroot.sdk.gf: void a(java.io.Closeable)>($r1);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
