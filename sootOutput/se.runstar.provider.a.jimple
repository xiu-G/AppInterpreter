public final class se.runstar.provider.a extends org.xml.sax.helpers.DefaultHandler
{
    private boolean a;
    private boolean b;
    private boolean c;
    private boolean d;
    private float e;
    private double f;
    private double g;
    private double h;
    private android.content.Context i;
    private java.util.regex.Pattern j;
    private android.net.Uri k;
    private android.content.ContentValues l;
    private java.text.NumberFormat m;
    private java.lang.StringBuffer n;
    private android.text.format.Time o;
    private android.text.format.Time p;
    private java.lang.String q;
    private int r;
    private double s;
    private double t;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        se.runstar.provider.a r0;

        r0 := @this: se.runstar.provider.a;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<se.runstar.provider.a: boolean a> = 0;

        r0.<se.runstar.provider.a: boolean b> = 0;

        r0.<se.runstar.provider.a: boolean c> = 0;

        r0.<se.runstar.provider.a: boolean d> = 0;

        r0.<se.runstar.provider.a: android.content.Context i> = $r1;

        return;
    }

    public final void a(int)
    {
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13;
        android.content.Context $r3;
        java.io.BufferedInputStream $r2, $r14;
        javax.xml.parsers.SAXParserFactory $r6;
        org.xml.sax.XMLReader $r8;
        int $i0;
        javax.xml.parsers.SAXParser $r7;
        org.xml.sax.InputSource $r1, $r15;
        se.runstar.provider.a r0;
        java.io.IOException $r20;
        javax.xml.parsers.FactoryConfigurationError $r18;
        java.io.FileNotFoundException $r19;
        javax.xml.parsers.ParserConfigurationException $r16;
        org.xml.sax.SAXException $r17;
        android.content.res.Resources $r4;
        java.io.InputStream $r5;

        r0 := @this: se.runstar.provider.a;

        $i0 := @parameter0: int;

        $r3 = r0.<se.runstar.provider.a: android.content.Context i>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

     label01:
        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

     label02:
        $r15 = new org.xml.sax.InputSource;

     label03:
        $r1 = $r15;

     label04:
        $r14 = new java.io.BufferedInputStream;

     label05:
        $r2 = $r14;

     label06:
        specialinvoke $r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r15.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r2);

        interfaceinvoke $r8.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r1);

     label07:
        return;

     label08:
        $r9 := @caughtexception;

        $r16 = (javax.xml.parsers.ParserConfigurationException) $r9;

        virtualinvoke $r16.<javax.xml.parsers.ParserConfigurationException: void printStackTrace()>();

        return;

     label09:
        $r10 := @caughtexception;

        $r17 = (org.xml.sax.SAXException) $r10;

        virtualinvoke $r17.<org.xml.sax.SAXException: void printStackTrace()>();

        return;

     label10:
        $r11 := @caughtexception;

        $r18 = (javax.xml.parsers.FactoryConfigurationError) $r11;

        virtualinvoke $r18.<javax.xml.parsers.FactoryConfigurationError: void printStackTrace()>();

        return;

     label11:
        $r12 := @caughtexception;

        $r19 = (java.io.FileNotFoundException) $r12;

        virtualinvoke $r19.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

     label12:
        $r13 := @caughtexception;

        $r20 = (java.io.IOException) $r13;

        virtualinvoke $r20.<java.io.IOException: void printStackTrace()>();

        return;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label08;
        catch javax.xml.parsers.ParserConfigurationException from label06 to label07 with label08;
        catch org.xml.sax.SAXException from label01 to label02 with label09;
        catch org.xml.sax.SAXException from label06 to label07 with label09;
        catch javax.xml.parsers.FactoryConfigurationError from label01 to label03 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label04 to label05 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label06 to label07 with label10;
        catch java.io.FileNotFoundException from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label06 to label07 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label06 to label07 with label12;
    }

    public final void characters(char[], int, int)
    {
        se.runstar.provider.a r0;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        char[] $r1;
        boolean $z0;

        r0 := @this: se.runstar.provider.a;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<se.runstar.provider.a: boolean a>;

        if $z0 != 0 goto label1;

        $z0 = r0.<se.runstar.provider.a: boolean b>;

        if $z0 != 0 goto label1;

        $z0 = r0.<se.runstar.provider.a: boolean c>;

        if $z0 != 0 goto label1;

        $z0 = r0.<se.runstar.provider.a: boolean d>;

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r1, $i0, $i1);

     label2:
        return;
    }

    public final void endDocument()
    {
        android.content.Context $r1;
        se.runstar.provider.a r0;
        android.net.Uri $r8;
        android.text.format.Time $r5;
        long $l0, $l1;
        java.lang.Integer $r7;
        android.content.ContentResolver $r2;
        java.lang.Long $r6;
        int $i2;
        android.content.ContentValues $r3;
        java.lang.String $r4;

        r0 := @this: se.runstar.provider.a;

        $r1 = r0.<se.runstar.provider.a: android.content.Context i>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        virtualinvoke $r3.<android.content.ContentValues: void clear()>();

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r4 = r0.<se.runstar.provider.a: java.lang.String q>;

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r4);

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r5 = r0.<se.runstar.provider.a: android.text.format.Time o>;

        $l0 = virtualinvoke $r5.<android.text.format.Time: long toMillis(boolean)>(0);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r6);

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r5 = r0.<se.runstar.provider.a: android.text.format.Time p>;

        $l0 = virtualinvoke $r5.<android.text.format.Time: long toMillis(boolean)>(0);

        $r5 = r0.<se.runstar.provider.a: android.text.format.Time o>;

        $l1 = virtualinvoke $r5.<android.text.format.Time: long toMillis(boolean)>(0);

        $l0 = $l0 - $l1;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("duration", $r6);

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pause_duration", $r7);

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $i2 = r0.<se.runstar.provider.a: int r>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("distance", $r7);

        $r8 = r0.<se.runstar.provider.a: android.net.Uri k>;

        $r3 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        virtualinvoke $r2.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r8, $r3, null, null);

        $r8 = r0.<se.runstar.provider.a: android.net.Uri k>;

        virtualinvoke $r2.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r8, null);

        return;
    }

    public final void endElement(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Float $r7;
        android.net.Uri $r12;
        android.text.format.Time $r8, $r14;
        java.util.regex.Matcher $r19;
        byte $b1;
        java.lang.Long $r9;
        android.content.ContentResolver $r11;
        boolean $z0;
        float $f0, $f1;
        java.lang.StringBuilder $r16;
        android.content.ContentValues $r5;
        java.util.regex.Pattern $r18;
        java.lang.Throwable $r15, $r17, $r22, $r23, $r24, $r25;
        android.content.Context $r10;
        java.lang.Double $r6;
        float[] $r4;
        long $l0;
        java.text.NumberFormat $r20;
        java.lang.StringBuffer $r13;
        int $i2;
        java.lang.String $r1, $r2, $r3;
        java.lang.Number $r21;
        double $d0, $d1, $d2, $d3;
        se.runstar.provider.a r0;

        r0 := @this: se.runstar.provider.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Placemark");

        if $z0 == 0 goto label02;

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        virtualinvoke $r5.<android.content.ContentValues: void clear()>();

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $d0 = r0.<se.runstar.provider.a: double f>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("latitude", $r6);

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $d0 = r0.<se.runstar.provider.a: double g>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("longitude", $r6);

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $d0 = r0.<se.runstar.provider.a: double h>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("altitude", $r6);

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $f0 = r0.<se.runstar.provider.a: float e>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("speed", $r7);

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r8 = r0.<se.runstar.provider.a: android.text.format.Time p>;

        $l0 = virtualinvoke $r8.<android.text.format.Time: long toMillis(boolean)>(1);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("time", $r9);

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        virtualinvoke $r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>("accuracy", $r7);

        $r10 = r0.<se.runstar.provider.a: android.content.Context i>;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = r0.<se.runstar.provider.a: android.net.Uri k>;

        $r12 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r12, "locations");

        $r5 = r0.<se.runstar.provider.a: android.content.ContentValues l>;

        virtualinvoke $r11.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r12, $r5);

        $r4 = newarray (float)[1];

        $r4[0] = 0.0F;

        $d0 = r0.<se.runstar.provider.a: double s>;

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label01;

        $d1 = r0.<se.runstar.provider.a: double s>;

        $d2 = r0.<se.runstar.provider.a: double t>;

        $d3 = r0.<se.runstar.provider.a: double f>;

        $d0 = r0.<se.runstar.provider.a: double g>;

        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>($d1, $d2, $d3, $d0, $r4);

     label01:
        $i2 = r0.<se.runstar.provider.a: int r>;

        $f0 = (float) $i2;

        $f1 = $r4[0];

        $f0 = $f0 + $f1;

        $i2 = (int) $f0;

        r0.<se.runstar.provider.a: int r> = $i2;

        $d0 = r0.<se.runstar.provider.a: double f>;

        r0.<se.runstar.provider.a: double s> = $d0;

        $d0 = r0.<se.runstar.provider.a: double g>;

        r0.<se.runstar.provider.a: double t> = $d0;

        return;

     label02:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("when");

        if $z0 == 0 goto label15;

        r0.<se.runstar.provider.a: boolean a> = 0;

     label03:
        $r8 = r0.<se.runstar.provider.a: android.text.format.Time p>;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

     label04:
        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<android.text.format.Time: boolean parse(java.lang.String)>($r1);

     label05:
        $r8 = r0.<se.runstar.provider.a: android.text.format.Time o>;

     label06:
        if $r8 != null goto label10;

     label07:
        $r8 = new android.text.format.Time;

        $r14 = r0.<se.runstar.provider.a: android.text.format.Time p>;

     label08:
        specialinvoke $r8.<android.text.format.Time: void <init>(android.text.format.Time)>($r14);

     label09:
        r0.<se.runstar.provider.a: android.text.format.Time o> = $r8;

     label10:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label11:
        $r15 := @caughtexception;

     label12:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time cannot be parsed: ");

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Runstar", $r1);

     label13:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label14:
        $r17 := @caughtexception;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        throw $r17;

     label15:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("coordinates");

        if $z0 == 0 goto label30;

        r0.<se.runstar.provider.a: boolean b> = 0;

     label16:
        $r18 = r0.<se.runstar.provider.a: java.util.regex.Pattern j>;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

     label17:
        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r19.<java.util.regex.Matcher: boolean matches()>();

     label18:
        if $z0 == 0 goto label25;

     label19:
        $r1 = virtualinvoke $r19.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $d0 = staticinvoke <android.location.Location: double convert(java.lang.String)>($r1);

     label20:
        r0.<se.runstar.provider.a: double f> = $d0;

     label21:
        $r1 = virtualinvoke $r19.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $d0 = staticinvoke <android.location.Location: double convert(java.lang.String)>($r1);

     label22:
        r0.<se.runstar.provider.a: double g> = $d0;

        $r20 = r0.<se.runstar.provider.a: java.text.NumberFormat m>;

     label23:
        $r1 = virtualinvoke $r19.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $r21 = virtualinvoke $r20.<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>($r1);

        $d0 = virtualinvoke $r21.<java.lang.Number: double doubleValue()>();

     label24:
        r0.<se.runstar.provider.a: double h> = $d0;

     label25:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label26:
        $r22 := @caughtexception;

     label27:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coordinates cannot be parsed: ");

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Runstar", $r1);

     label28:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label29:
        $r23 := @caughtexception;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        throw $r23;

     label30:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("velocity");

        if $z0 == 0 goto label39;

        r0.<se.runstar.provider.a: boolean c> = 0;

     label31:
        $r20 = r0.<se.runstar.provider.a: java.text.NumberFormat m>;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

     label32:
        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = virtualinvoke $r20.<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>($r1);

        $f0 = virtualinvoke $r21.<java.lang.Number: float floatValue()>();

     label33:
        r0.<se.runstar.provider.a: float e> = $f0;

     label34:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label35:
        $r24 := @caughtexception;

     label36:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("velocity cannot be parsed: ");

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Runstar", $r1);

     label37:
        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        return;

     label38:
        $r25 := @caughtexception;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

        throw $r25;

     label39:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("description");

        if $z0 == 0 goto label40;

        r0.<se.runstar.provider.a: boolean d> = 0;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        $r1 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<se.runstar.provider.a: java.lang.String q> = $r1;

        $r13 = r0.<se.runstar.provider.a: java.lang.StringBuffer n>;

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

     label40:
        return;

        catch android.util.TimeFormatException from label04 to label05 with label11;
        catch android.util.TimeFormatException from label08 to label09 with label11;
        catch java.lang.Throwable from label03 to label06 with label14;
        catch java.lang.Throwable from label07 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.text.ParseException from label17 to label18 with label26;
        catch java.text.ParseException from label19 to label20 with label26;
        catch java.text.ParseException from label21 to label22 with label26;
        catch java.text.ParseException from label23 to label24 with label26;
        catch java.lang.Throwable from label16 to label18 with label29;
        catch java.lang.Throwable from label19 to label25 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.text.ParseException from label32 to label33 with label35;
        catch java.lang.Throwable from label31 to label34 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
    }

    public final void startDocument()
    {
        android.content.Context $r3;
        se.runstar.provider.a r0;
        android.net.Uri $r5;
        android.text.format.Time $r8;
        java.text.NumberFormat $r6;
        android.content.ContentResolver $r4;
        java.lang.StringBuffer $r7;
        java.util.regex.Pattern $r1;
        android.content.ContentValues $r2;

        r0 := @this: se.runstar.provider.a;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([0-9\\.]*),([0-9\\.]*),([0-9\\.]*)");

        r0.<se.runstar.provider.a: java.util.regex.Pattern j> = $r1;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r0.<se.runstar.provider.a: android.content.ContentValues l> = $r2;

        $r3 = r0.<se.runstar.provider.a: android.content.Context i>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<se.runstar.provider.a: android.content.Context i>;

        $r5 = staticinvoke <se.runstar.provider.WorkoutContentProvider: android.net.Uri a(android.content.Context,java.lang.String)>($r3, "running_workouts");

        $r5 = virtualinvoke $r4.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, null);

        r0.<se.runstar.provider.a: android.net.Uri k> = $r5;

        $r6 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();

        r0.<se.runstar.provider.a: java.text.NumberFormat m> = $r6;

        $r6 = r0.<se.runstar.provider.a: java.text.NumberFormat m>;

        virtualinvoke $r6.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(6);

        $r6 = r0.<se.runstar.provider.a: java.text.NumberFormat m>;

        virtualinvoke $r6.<java.text.NumberFormat: void setMinimumFractionDigits(int)>(0);

        $r6 = r0.<se.runstar.provider.a: java.text.NumberFormat m>;

        virtualinvoke $r6.<java.text.NumberFormat: void setMinimumIntegerDigits(int)>(1);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        r0.<se.runstar.provider.a: java.lang.StringBuffer n> = $r7;

        $r8 = new android.text.format.Time;

        specialinvoke $r8.<android.text.format.Time: void <init>()>();

        r0.<se.runstar.provider.a: android.text.format.Time p> = $r8;

        r0.<se.runstar.provider.a: int r> = 0;

        r0.<se.runstar.provider.a: double t> = 0.0;

        r0.<se.runstar.provider.a: double s> = 0.0;

        r0.<se.runstar.provider.a: android.text.format.Time o> = null;

        return;
    }

    public final void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        se.runstar.provider.a r0;
        org.xml.sax.Attributes $r4;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: se.runstar.provider.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("when");

        if $z0 == 0 goto label1;

        r0.<se.runstar.provider.a: boolean a> = 1;

        return;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("coordinates");

        if $z0 == 0 goto label2;

        r0.<se.runstar.provider.a: boolean b> = 1;

        return;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("velocity");

        if $z0 == 0 goto label3;

        r0.<se.runstar.provider.a: boolean c> = 1;

        return;

     label3:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("description");

        if $z0 == 0 goto label4;

        r0.<se.runstar.provider.a: boolean d> = 1;

     label4:
        return;
    }
}
