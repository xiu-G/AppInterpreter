public final class org.hzl.master.utils.g extends java.lang.Object
{

    private static org.hzl.master.entries.f a(java.lang.String[])
    {
        int $i0, $i1;
        org.hzl.master.entries.f $r2;
        java.lang.String[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.String[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r1 = $r0[$i1];

        $r1 = staticinvoke <org.hzl.master.utils.g: java.lang.String b(java.lang.String)>($r1);

        if $r1 == null goto label3;

        $r2 = new org.hzl.master.entries.f;

        specialinvoke $r2.<org.hzl.master.entries.f: void <init>(java.lang.String)>($r1);

        return $r2;

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    public static boolean a(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r16;
        java.util.ArrayList $r4;
        java.io.DataOutputStream $r12;
        int $i0, $i1;
        java.lang.String $r0, $r1, $r2, $r3, $r6, $r8;
        boolean $z0;
        java.io.OutputStream $r13;
        java.lang.Process $r11;
        java.util.Iterator $r14;
        java.lang.Runtime $r10;
        java.io.File $r5, $r17;
        java.lang.Exception $r19;
        java.lang.StringBuilder $r7, $r15;
        java.lang.Object $r18;
        java.io.File[] $r9;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = new java.util.ArrayList;

     label01:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label02:
        if $r2 != null goto label03;

        if $r0 != null goto label03;

        if $r1 == null goto label09;

     label03:
        $i0 = 0;

     label04:
        $r5 = new java.io.File;

        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";

        $r7 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label07;

        $i0 = $i0 + 1;

        goto label04;

     label07:
        $i1 = 0;

     label08:
        if $i1 < $i0 goto label20;

     label09:
        $r5 = new java.io.File;

     label10:
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>("/sys/block");

        $r9 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r9;

     label11:
        $i1 = 0;

     label12:
        if $i1 < $i0 goto label51;

     label13:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("exit\n");

        $r10 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String f()>();

        $r11 = virtualinvoke $r10.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r0);

     label14:
        $r12 = new java.io.DataOutputStream;

     label15:
        $r13 = virtualinvoke $r11.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        specialinvoke $r12.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r13);

        $r14 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

     label17:
        if $z0 != 0 goto label61;

     label18:
        $i0 = virtualinvoke $r11.<java.lang.Process: int waitFor()>();

     label19:
        if $i0 != 0 goto label64;

        return 1;

     label20:
        $r7 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("chmod 0644 ");

     label22:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor";

        $r15 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label24:
        $r7 = new java.lang.StringBuilder;

     label25:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("chmod 0664 ");

     label26:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";

        $r15 = new java.lang.StringBuilder;

     label27:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label28:
        $r7 = new java.lang.StringBuilder;

     label29:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("chmod 0664 ");

     label30:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq";

        $r15 = new java.lang.StringBuilder;

     label31:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label32:
        if $r2 == null goto label36;

        $r7 = new java.lang.StringBuilder;

     label33:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("echo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

     label34:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor";

        $r15 = new java.lang.StringBuilder;

     label35:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label36:
        if $r0 == null goto label50;

        if $r1 == null goto label50;

     label37:
        $r16 = staticinvoke <org.hzl.master.utils.g: java.lang.String[] a()>();

        $r6 = $r16[0];

     label38:
        $r7 = new java.lang.StringBuilder;

     label39:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("echo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

     label40:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";

        $r15 = new java.lang.StringBuilder;

     label41:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label42:
        $r7 = new java.lang.StringBuilder;

     label43:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("echo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

     label44:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq";

        $r15 = new java.lang.StringBuilder;

     label45:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label46:
        $r7 = new java.lang.StringBuilder;

     label47:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("echo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

     label48:
        $r6 = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";

        $r15 = new java.lang.StringBuilder;

     label49:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("cpu");

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cpu0", $r8);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label50:
        $i1 = $i1 + 1;

        goto label08;

     label51:
        $r5 = $r9[$i1];

        $z0 = virtualinvoke $r5.<java.io.File: boolean isDirectory()>();

     label52:
        if $z0 == 0 goto label60;

     label53:
        $r0 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("(loop|zram|dm-)[0-9]+");

     label54:
        if $z0 != 0 goto label60;

        $r17 = new java.io.File;

     label55:
        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "queue/scheduler");

        $z0 = virtualinvoke $r17.<java.io.File: boolean exists()>();

     label56:
        if $z0 == 0 goto label60;

        $r7 = new java.lang.StringBuilder;

     label57:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("chmod 0644 ");

        $r0 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

     label58:
        $r7 = new java.lang.StringBuilder;

     label59:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("echo ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cfq");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r0 = virtualinvoke $r17.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

     label60:
        $i1 = $i1 + 1;

        goto label12;

     label61:
        $r18 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (java.lang.String) $r18;

        virtualinvoke $r12.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r0);

        virtualinvoke $r12.<java.io.DataOutputStream: void flush()>();

     label62:
        goto label16;

     label63:
        $r19 := @caughtexception;

     label64:
        return 0;

        catch java.lang.Exception from label01 to label02 with label63;
        catch java.lang.Exception from label05 to label06 with label63;
        catch java.lang.Exception from label10 to label11 with label63;
        catch java.lang.Exception from label13 to label14 with label63;
        catch java.lang.Exception from label15 to label17 with label63;
        catch java.lang.Exception from label18 to label19 with label63;
        catch java.lang.Exception from label21 to label22 with label63;
        catch java.lang.Exception from label23 to label24 with label63;
        catch java.lang.Exception from label25 to label26 with label63;
        catch java.lang.Exception from label27 to label28 with label63;
        catch java.lang.Exception from label29 to label30 with label63;
        catch java.lang.Exception from label31 to label32 with label63;
        catch java.lang.Exception from label33 to label34 with label63;
        catch java.lang.Exception from label35 to label36 with label63;
        catch java.lang.Exception from label37 to label38 with label63;
        catch java.lang.Exception from label39 to label40 with label63;
        catch java.lang.Exception from label41 to label42 with label63;
        catch java.lang.Exception from label43 to label44 with label63;
        catch java.lang.Exception from label45 to label46 with label63;
        catch java.lang.Exception from label47 to label48 with label63;
        catch java.lang.Exception from label49 to label50 with label63;
        catch java.lang.Exception from label51 to label52 with label63;
        catch java.lang.Exception from label53 to label54 with label63;
        catch java.lang.Exception from label55 to label56 with label63;
        catch java.lang.Exception from label57 to label58 with label63;
        catch java.lang.Exception from label59 to label60 with label63;
        catch java.lang.Exception from label61 to label62 with label63;
    }

    public static java.lang.String[] a()
    {
        java.lang.String[] $r0, $r1;
        org.hzl.master.utils.h $r4;
        java.util.List $r3;
        int $i0, $i1;
        org.hzl.master.entries.f $r6;
        java.lang.Object $r5;
        java.lang.String $r7;
        org.hzl.master.entries.j $r2;

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String[] a(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies");

        $r1 = $r0;

        if $r0 != null goto label6;

        $r2 = staticinvoke <org.hzl.master.utils.g: org.hzl.master.entries.j g()>();

        if $r2 == null goto label4;

        $r3 = virtualinvoke $r2.<org.hzl.master.entries.j: java.util.List a()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r0 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label1:
        $r3 = virtualinvoke $r2.<org.hzl.master.entries.j: java.util.List a()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < $i1 goto label3;

     label2:
        if $r0 == null goto label7;

        $r4 = new org.hzl.master.utils.h;

        specialinvoke $r4.<org.hzl.master.utils.h: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r0, $r4);

        return $r0;

     label3:
        $r3 = virtualinvoke $r2.<org.hzl.master.entries.j: java.util.List a()>();

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (org.hzl.master.entries.f) $r5;

        $r7 = virtualinvoke $r6.<org.hzl.master.entries.f: java.lang.String b()>();

        $r0[$i0] = $r7;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r1 = newarray (java.lang.String)[2];

        $r7 = staticinvoke <org.hzl.master.utils.g: java.lang.String b(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq");

        $r1[0] = $r7;

        $r7 = staticinvoke <org.hzl.master.utils.g: java.lang.String b(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq");

        $r1[1] = $r7;

        $r7 = $r1[0];

        if $r7 == null goto label5;

        $r7 = $r1[1];

        if $r7 != null goto label6;

     label5:
        $r0 = null;

        goto label2;

     label6:
        $r0 = $r1;

        goto label2;

     label7:
        return $r0;
    }

    private static java.lang.String[] a(java.lang.String)
    {
        java.lang.String[] $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String b(java.lang.String)>($r0);

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        return $r1;

     label1:
        return null;
    }

    private static java.lang.String b(java.lang.String)
    {
        java.lang.String[] $r5;
        java.io.DataOutputStream $r9, $r18;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;
        java.io.OutputStream $r10;
        java.lang.Process $r8;
        java.lang.Runtime $r7;
        java.io.FileInputStream $r14;
        java.io.InputStreamReader $r4, $r15;
        java.io.File $r1, $r13;
        java.lang.Exception $r12;
        java.lang.Object $r2;
        java.lang.StringBuilder $r6, $r17;
        java.io.BufferedReader $r3, $r16;
        java.io.InputStream $r11;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $r13 = new java.io.File;

        $r1 = $r13;

     label01:
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label21;

     label03:
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

     label04:
        if $z0 == 0 goto label09;

        $r14 = new java.io.FileInputStream;

        $r2 = $r14;

     label05:
        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label06:
        $r16 = new java.io.BufferedReader;

        $r3 = $r16;

        $r15 = new java.io.InputStreamReader;

        $r4 = $r15;

     label07:
        $r11 = (java.io.InputStream) $r2;

        specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r4, 2048);

        $r0 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label08:
        return $r0;

     label09:
        $r5 = newarray (java.lang.String)[2];

        $r17 = new java.lang.StringBuilder;

        $r6 = $r17;

     label10:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("cat ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5[0] = $r0;

        $r5[1] = "exit\n";

        $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String f()>();

        $r8 = virtualinvoke $r7.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r0);

     label11:
        $r18 = new java.io.DataOutputStream;

        $r9 = $r18;

     label12:
        $r10 = virtualinvoke $r8.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        specialinvoke $r18.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r10);

        $i1 = lengthof $r5;

     label13:
        if $i0 < $i1 goto label18;

     label14:
        $i0 = virtualinvoke $r8.<java.lang.Process: int waitFor()>();

     label15:
        if $i0 != 0 goto label21;

     label16:
        $r11 = virtualinvoke $r8.<java.lang.Process: java.io.InputStream getInputStream()>();

     label17:
        $r2 = $r11;

        goto label06;

     label18:
        $r0 = $r5[$i0];

        virtualinvoke $r9.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r0);

        virtualinvoke $r9.<java.io.DataOutputStream: void flush()>();

     label19:
        $i0 = $i0 + 1;

        goto label13;

     label20:
        $r12 := @caughtexception;

     label21:
        return null;

        catch java.lang.Exception from label01 to label02 with label20;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
    }

    public static java.lang.String[] b()
    {
        java.lang.String[] $r0;

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String[] a(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors");

        return $r0;
    }

    public static org.hzl.master.entries.f c()
    {
        org.hzl.master.entries.f $r0;
        java.lang.String[] $r1;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";

        $r1[1] = "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq";

        $r0 = staticinvoke <org.hzl.master.utils.g: org.hzl.master.entries.f a(java.lang.String[])>($r1);

        return $r0;
    }

    public static org.hzl.master.entries.f d()
    {
        org.hzl.master.entries.f $r0;
        java.lang.String[] $r1;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq";

        $r1[1] = "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq";

        $r0 = staticinvoke <org.hzl.master.utils.g: org.hzl.master.entries.f a(java.lang.String[])>($r1);

        return $r0;
    }

    public static java.lang.String e()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <org.hzl.master.utils.g: java.lang.String b(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor");

        return $r0;
    }

    private static java.lang.String f()
    {
        java.io.File $r0;
        boolean $z0;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/system/bin/su");

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return "/system/bin/su";

     label1:
        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/system/xbin/su");

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        return null;

     label2:
        return "/system/xbin/su";
    }

    private static org.hzl.master.entries.j g()
    {
        java.io.DataOutputStream $r13, $r27;
        java.lang.Long $r2, $r7;
        org.hzl.master.entries.f $r16, $r28;
        org.hzl.master.entries.j $r25;
        boolean $z0;
        java.lang.Process $r12;
        java.lang.Runtime $r11;
        java.lang.StringBuilder $r10, $r26;
        java.lang.Throwable $r17, $r18;
        java.util.HashMap $r0, $r19;
        java.lang.String[] $r9;
        long $l2, $l3;
        java.util.ArrayList $r1, $r20;
        int $i0, $i1;
        java.lang.String $r8;
        java.io.OutputStream $r14;
        java.io.FileInputStream $r22;
        java.io.InputStreamReader $r6, $r23;
        java.io.File $r3, $r21;
        java.lang.Object $r4;
        java.io.BufferedReader $r5, $r24;
        java.io.InputStream $r15;

        $i0 = 0;

        $r19 = new java.util.HashMap;

        $r0 = $r19;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        $r20 = new java.util.ArrayList;

        $r1 = $r20;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r21 = new java.io.File;

        $r3 = $r21;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>("/sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state");

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label40;

     label01:
        $z0 = virtualinvoke $r3.<java.io.File: boolean canRead()>();

     label02:
        if $z0 == 0 goto label13;

        $r22 = new java.io.FileInputStream;

        $r4 = $r22;

     label03:
        specialinvoke $r22.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label04:
        $r24 = new java.io.BufferedReader;

        $r5 = $r24;

        $r23 = new java.io.InputStreamReader;

        $r6 = $r23;

        $r15 = (java.io.InputStream) $r4;

     label05:
        specialinvoke $r23.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r15);

        specialinvoke $r24.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r6, 2048);

     label06:
        $r7 = $r2;

     label07:
        $r8 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if $r8 != null goto label30;

     label09:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label10:
        $r25 = new org.hzl.master.entries.j;

     label11:
        specialinvoke $r25.<org.hzl.master.entries.j: void <init>(java.util.List,java.util.Map,java.lang.Long)>($r1, $r0, $r7);

     label12:
        return $r25;

     label13:
        $r9 = newarray (java.lang.String)[2];

        $r26 = new java.lang.StringBuilder;

        $r10 = $r26;

     label14:
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("cat ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r9[0] = $r8;

        $r9[1] = "exit\n";

     label16:
        $r11 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r8 = staticinvoke <org.hzl.master.utils.g: java.lang.String f()>();

        $r12 = virtualinvoke $r11.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r8);

     label17:
        $r27 = new java.io.DataOutputStream;

        $r13 = $r27;

     label18:
        $r14 = virtualinvoke $r12.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        specialinvoke $r27.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14);

     label19:
        $i1 = lengthof $r9;

     label20:
        if $i0 < $i1 goto label25;

     label21:
        $i0 = virtualinvoke $r12.<java.lang.Process: int waitFor()>();

     label22:
        if $i0 != 0 goto label28;

     label23:
        $r15 = virtualinvoke $r12.<java.lang.Process: java.io.InputStream getInputStream()>();

     label24:
        $r4 = $r15;

        goto label04;

     label25:
        $r8 = $r9[$i0];

     label26:
        virtualinvoke $r13.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r8);

        virtualinvoke $r13.<java.io.DataOutputStream: void flush()>();

     label27:
        $i0 = $i0 + 1;

        goto label20;

     label28:
        $r15 = virtualinvoke $r12.<java.lang.Process: java.io.InputStream getErrorStream()>();

     label29:
        $r4 = $r15;

        goto label04;

     label30:
        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label31:
        $r28 = new org.hzl.master.entries.f;

        $r16 = $r28;

        $r8 = $r9[0];

     label32:
        specialinvoke $r28.<org.hzl.master.entries.f: void <init>(java.lang.String)>($r8);

     label33:
        $r8 = $r9[1];

     label34:
        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $l2 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $l3 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

     label35:
        $l2 = $l2 + $l3;

     label36:
        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r8 = virtualinvoke $r16.<org.hzl.master.entries.f: java.lang.String b()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r2);

     label37:
        goto label07;

     label38:
        $r17 := @caughtexception;

        return null;

     label39:
        $r18 := @caughtexception;

     label40:
        return null;

        catch java.io.IOException from label01 to label02 with label38;
        catch java.io.IOException from label03 to label04 with label38;
        catch java.io.IOException from label05 to label06 with label38;
        catch java.io.IOException from label07 to label08 with label38;
        catch java.io.IOException from label09 to label10 with label38;
        catch java.io.IOException from label11 to label12 with label38;
        catch java.io.IOException from label14 to label15 with label38;
        catch java.io.IOException from label16 to label17 with label38;
        catch java.io.IOException from label18 to label19 with label38;
        catch java.io.IOException from label21 to label22 with label38;
        catch java.io.IOException from label23 to label24 with label38;
        catch java.io.IOException from label26 to label27 with label38;
        catch java.io.IOException from label28 to label29 with label38;
        catch java.io.IOException from label30 to label31 with label38;
        catch java.io.IOException from label32 to label33 with label38;
        catch java.io.IOException from label34 to label35 with label38;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.lang.InterruptedException from label01 to label02 with label39;
        catch java.lang.InterruptedException from label03 to label04 with label39;
        catch java.lang.InterruptedException from label05 to label06 with label39;
        catch java.lang.InterruptedException from label07 to label08 with label39;
        catch java.lang.InterruptedException from label09 to label10 with label39;
        catch java.lang.InterruptedException from label11 to label12 with label39;
        catch java.lang.InterruptedException from label14 to label15 with label39;
        catch java.lang.InterruptedException from label16 to label17 with label39;
        catch java.lang.InterruptedException from label18 to label19 with label39;
        catch java.lang.InterruptedException from label21 to label22 with label39;
        catch java.lang.InterruptedException from label23 to label24 with label39;
        catch java.lang.InterruptedException from label26 to label27 with label39;
        catch java.lang.InterruptedException from label28 to label29 with label39;
        catch java.lang.InterruptedException from label30 to label31 with label39;
        catch java.lang.InterruptedException from label32 to label33 with label39;
        catch java.lang.InterruptedException from label34 to label35 with label39;
        catch java.lang.InterruptedException from label36 to label37 with label39;
    }
}
