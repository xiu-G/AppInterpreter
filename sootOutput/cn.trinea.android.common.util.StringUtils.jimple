public class cn.trinea.android.common.util.StringUtils extends java.lang.Object
{

    public void <init>()
    {
        cn.trinea.android.common.util.StringUtils r0;

        r0 := @this: cn.trinea.android.common.util.StringUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String capitalizeFirstLetter(java.lang.String)
    {
        int $i1;
        char $c0;
        java.lang.StringBuilder $r1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c0);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        if $z0 != 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r0;
    }

    public static java.lang.String fullWidthToHalfWidth(java.lang.String)
    {
        char $c2;
        int $i0, $i1, $i3;
        char[] $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label3;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;

     label3:
        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        if $i1 != 12288 goto label5;

        $r1[$i0] = 32;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        $i3 = 65281;

        if $i1 < $i3 goto label6;

        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        $i3 = 65374;

        if $i1 > $i3 goto label6;

        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        $i3 = 65248;

        $i1 = $i1 - $i3;

        $c2 = (char) $i1;

        $r1[$i0] = $c2;

        goto label4;

     label6:
        $c2 = $r1[$i0];

        $r1[$i0] = $c2;

        goto label4;
    }

    public static java.lang.String getHrefInnerHtml(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(".*<[\\s]*a[\\s]*.*>(.+?)<[\\s]*/a[\\s]*>.*", 2);

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label2:
        return $r0;
    }

    public static java.lang.String halfWidthToFullWidth(java.lang.String)
    {
        char $c2;
        int $i0, $i1, $i3;
        char[] $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label3;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;

     label3:
        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        if $i1 != 32 goto label5;

        $r1[$i0] = 12288;

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        if $i1 < 33 goto label6;

        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        if $i1 > 126 goto label6;

        $c2 = $r1[$i0];

        $i1 = (int) $c2;

        $i3 = 65248;

        $i1 = $i1 + $i3;

        $c2 = (char) $i1;

        $r1[$i0] = $c2;

        goto label4;

     label6:
        $c2 = $r1[$i0];

        $r1[$i0] = $c2;

        goto label4;
    }

    public static java.lang.String htmlEscapeCharsToString(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&lt;", "<");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&gt;", ">");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&amp;", "&");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&quot;", "\"");

        return $r0;
    }

    public static boolean isBlank(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static boolean isEquals(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.ObjectUtils: boolean isEquals(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static java.lang.String nullStrToEmpty(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        return $r0;
    }

    public static java.lang.String utf8Encode(java.lang.String)
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        int $i0, $i1;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 != 0 goto label4;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == $i1 goto label4;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("UnsupportedEncodingException occurred. ", $r2);

        throw $r3;

     label4:
        return $r0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String utf8Encode(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r3;
        byte[] $r2;
        int $i0, $i1;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <cn.trinea.android.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == $i1 goto label2;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        return $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
