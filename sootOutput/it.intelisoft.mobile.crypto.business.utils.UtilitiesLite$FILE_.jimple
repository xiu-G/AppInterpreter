public final class it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ extends java.lang.Object
{
    final it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0;

    public void <init>(it.intelisoft.mobile.crypto.business.utils.UtilitiesLite)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r1;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite;

        r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite this$0> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.FileReader apriFile(java.lang.String) throws java.lang.Exception
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ $r5;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;
        java.lang.Exception $r3;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r1;
        java.io.FileReader r2;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean esisteFile(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

        r2 = new java.io.FileReader;

     label1:
        specialinvoke r2.<java.io.FileReader: void <init>(java.lang.String)>($r1);

     label2:
        return r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r5 = $r4.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ VARIE>;

        virtualinvoke $r5.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void tracciaException(java.lang.Exception)>($r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problemi nell\'aprire il file test  [");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] errore: [");

        $r1 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Problemi nell\'aprire il file test  [");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void copyFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r9, $r10;
        java.io.FileOutputStream $r7;
        long $l0;
        java.io.FileInputStream $r5;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;
        java.io.File r3, r4;
        java.lang.String $r1, $r2;
        java.nio.channels.FileChannel $r6, $r8;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r1);

        r4 = new java.io.File;

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r2);

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        $r6 = virtualinvoke $r5.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        $r8 = virtualinvoke $r7.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

     label1:
        $l0 = virtualinvoke $r6.<java.nio.channels.FileChannel: long size()>();

        virtualinvoke $r6.<java.nio.channels.FileChannel: long transferTo(long,long,java.nio.channels.WritableByteChannel)>(0L, $l0, $r8);

     label2:
        if $r6 == null goto label3;

        virtualinvoke $r6.<java.nio.channels.FileChannel: void close()>();

     label3:
        if $r8 == null goto label9;

        virtualinvoke $r8.<java.nio.channels.FileChannel: void close()>();

        return;

     label4:
        $r9 := @caughtexception;

     label5:
        throw $r9;

     label6:
        $r10 := @caughtexception;

        if $r6 == null goto label7;

        virtualinvoke $r6.<java.nio.channels.FileChannel: void close()>();

     label7:
        if $r8 == null goto label8;

        virtualinvoke $r8.<java.nio.channels.FileChannel: void close()>();

     label8:
        throw $r10;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public boolean creaFileChiaveValore(java.lang.String, java.util.Hashtable)
    {
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ $r10;
        java.util.Enumeration $r4;
        java.io.FileWriter r2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r3;
        java.lang.Exception $r8, r11, $r12;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r9;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r0, $r7;
        java.util.Hashtable $r1;
        boolean $z0;

        r3 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Hashtable;

        r2 = new java.io.FileWriter;

     label01:
        specialinvoke r2.<java.io.FileWriter: void <init>(java.lang.String)>($r0);

     label02:
        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        virtualinvoke r2.<java.io.FileWriter: void close()>();

     label06:
        return 1;

     label07:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r0 = (java.lang.String) $r5;

     label08:
        $r6 = new java.lang.StringBuilder;

     label09:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r0);

        $r0 = (java.lang.String) $r5;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r0);

     label10:
        goto label03;

     label11:
        $r8 := @caughtexception;

     label12:
        $r9 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r10 = $r9.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ VARIE>;

        virtualinvoke $r10.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void tracciaException(java.lang.Exception)>($r8);

        return 0;

     label13:
        r11 := @caughtexception;

        $r9 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r10 = $r9.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ VARIE>;

        virtualinvoke $r10.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void tracciaException(java.lang.Exception)>(r11);

        return 0;

     label14:
        $r12 := @caughtexception;

        $r8 = $r12;

        goto label12;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label02 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public boolean esisteFile(java.lang.String)
    {
        java.lang.String $r1;
        java.io.FileReader r2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;
        java.lang.Exception $r3, $r4;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.io.FileReader;

     label1:
        specialinvoke r2.<java.io.FileReader: void <init>(java.lang.String)>("/sdcard/crypto.exp");

     label2:
        virtualinvoke r2.<java.io.FileReader: void close()>();

     label3:
        return 1;

     label4:
        $r3 := @caughtexception;

     label5:
        return 0;

     label6:
        $r4 := @caughtexception;

        goto label5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label6;
    }

    public byte[] getBytesFromFile(java.lang.String) throws java.io.IOException
    {
        byte[] r2;
        long $l0;
        java.io.IOException $r5;
        java.io.FileInputStream r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;
        java.io.File r3;
        int $i1, $i2;
        java.lang.StringBuilder $r6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean esisteFile(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r1);

        r4 = new java.io.FileInputStream;

        specialinvoke r4.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        $l0 = virtualinvoke r3.<java.io.File: long length()>();

        $i1 = (int) $l0;

        r2 = newarray (byte)[$i1];

        $i1 = 0;

     label2:
        $i2 = lengthof r2;

        if $i1 >= $i2 goto label3;

        $i2 = lengthof r2;

        $i2 = $i2 - $i1;

        $i2 = virtualinvoke r4.<java.io.InputStream: int read(byte[],int,int)>(r2, $i1, $i2);

        if $i2 >= 0 goto label4;

     label3:
        $i2 = lengthof r2;

        if $i1 >= $i2 goto label5;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not completely read file ");

        $r1 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label4:
        $i1 = $i1 + $i2;

        goto label2;

     label5:
        virtualinvoke r4.<java.io.InputStream: void close()>();

        return r2;
    }

    public java.util.Hashtable loadKeyValueFromIni(java.lang.String)
    {
        java.util.Properties r2;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ $r8;
        java.util.Enumeration $r5;
        java.io.FileInputStream $r4;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_ r0;
        java.lang.Exception $r6;
        it.intelisoft.mobile.crypto.business.utils.UtilitiesLite $r7;
        java.lang.Object $r9;
        java.lang.String $r1, r10;
        java.util.Hashtable r3;
        boolean $z0;

        r0 := @this: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_;

        $r1 := @parameter0: java.lang.String;

        r2 = new java.util.Properties;

        specialinvoke r2.<java.util.Properties: void <init>()>();

        r3 = new java.util.Hashtable;

        specialinvoke r3.<java.util.Hashtable: void <init>()>();

        $z0 = virtualinvoke r0.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean esisteFile(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        return r3;

     label1:
        $r4 = new java.io.FileInputStream;

     label2:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>($r4);

     label3:
        $r5 = virtualinvoke r2.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label4:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label6;

        return r3;

     label5:
        $r6 := @caughtexception;

        $r7 = staticinvoke <it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite getInstance()>();

        $r8 = $r7.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite: it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_ VARIE>;

        virtualinvoke $r8.<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void tracciaException(java.lang.Exception)>($r6);

        return r3;

     label6:
        $r9 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = (java.lang.String) $r9;

        $r9 = virtualinvoke r2.<java.util.Properties: java.lang.Object get(java.lang.Object)>($r1);

        r10 = (java.lang.String) $r9;

        virtualinvoke r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r10);

        goto label4;

        catch java.lang.Exception from label2 to label3 with label5;
    }
}
