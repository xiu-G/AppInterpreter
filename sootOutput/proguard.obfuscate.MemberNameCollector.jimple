public class proguard.obfuscate.MemberNameCollector extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private final boolean allowAggressiveOverloading;
    private final java.util.Map descriptorMap;

    public void <init>(boolean, java.util.Map)
    {
        proguard.obfuscate.MemberNameCollector r0;
        boolean $z0;
        java.util.Map $r1;

        r0 := @this: proguard.obfuscate.MemberNameCollector;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.Map;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.obfuscate.MemberNameCollector: boolean allowAggressiveOverloading> = $z0;

        r0.<proguard.obfuscate.MemberNameCollector: java.util.Map descriptorMap> = $r1;

        return;
    }

    public void visitAnyMember(proguard.classfile.Clazz, proguard.classfile.Member)
    {
        proguard.classfile.Member $r1;
        proguard.classfile.Clazz $r0;
        proguard.obfuscate.MemberNameCollector r2;
        java.util.Map $r7;
        int $i0;
        java.lang.Object $r8;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0;

        r2 := @this: proguard.obfuscate.MemberNameCollector;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: proguard.classfile.Member;

        $r3 = interfaceinvoke $r1.<proguard.classfile.Member: java.lang.String getName(proguard.classfile.Clazz)>($r0);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.lang.String newMemberName(proguard.classfile.Member)>($r1);

        if $r4 == null goto label4;

        $r5 = interfaceinvoke $r1.<proguard.classfile.Member: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r0);

        $r6 = $r5;

        $z0 = r2.<proguard.obfuscate.MemberNameCollector: boolean allowAggressiveOverloading>;

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(41);

        $i0 = $i0 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r7 = r2.<proguard.obfuscate.MemberNameCollector: java.util.Map descriptorMap>;

        $r7 = staticinvoke <proguard.obfuscate.MemberObfuscator: java.util.Map retrieveNameMap(java.util.Map,java.lang.String)>($r7, $r6);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r5 = (java.lang.String) $r8;

        if $r5 == null goto label3;

        $z0 = staticinvoke <proguard.obfuscate.MemberObfuscator: boolean hasFixedNewMemberName(proguard.classfile.Member)>($r1);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r5);

        if $i0 >= 0 goto label4;

     label3:
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

     label4:
        return;
    }
}
