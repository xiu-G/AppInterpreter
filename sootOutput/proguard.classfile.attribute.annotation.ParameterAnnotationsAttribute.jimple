public abstract class proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations;
    public int[] u2parameterAnnotationsCount;
    public int u2parametersCount;

    protected void <init>()
    {
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute r0;

        r0 := @this: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    protected void <init>(int, int, int[], proguard.classfile.attribute.'annotation'.Annotation[][])
    {
        proguard.classfile.attribute.'annotation'.Annotation[][] $r2;
        int[] $r1;
        int $i0, $i1;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute r0;

        r0 := @this: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: proguard.classfile.attribute.'annotation'.Annotation[][];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount> = 0;

        r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int[] u2parameterAnnotationsCount> = $r1;

        r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations> = $r2;

        return;
    }

    public void annotationsAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r4;
        proguard.classfile.attribute.'annotation'.Annotation[][] $r6;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r3;
        proguard.classfile.attribute.'annotation'.Annotation[] $r7;
        proguard.classfile.Clazz $r1;
        int[] $r5;
        int $i0, $i1, $i2;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute r0;

        r0 := @this: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int u2parametersCount>;

        if $i0 >= $i1 goto label4;

        $r5 = r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: int[] u2parameterAnnotationsCount>;

        $i1 = $r5[$i0];

        $r6 = r0.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[][] parameterAnnotations>;

        $r7 = $r6[$i0];

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label3;

        $r4 = $r7[$i2];

        interfaceinvoke $r3.<proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r2, $i0, $r4);

        $i2 = $i2 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return;
    }
}
