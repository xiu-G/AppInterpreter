abstract class twitter4j.TwitterBase extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected twitter4j.http.Authorization auth;
    protected final twitter4j.conf.Configuration conf;

    void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.TwitterBase r0;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.TwitterBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.TwitterBase: twitter4j.conf.Configuration conf> = $r1;

        $r2 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getUser()>();

        $r3 = interfaceinvoke $r1.<twitter4j.conf.Configuration: java.lang.String getPassword()>();

        specialinvoke r0.<twitter4j.TwitterBase: void initBasicAuthorization(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    void <init>(twitter4j.conf.Configuration, java.lang.String, java.lang.String)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.TwitterBase r0;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.TwitterBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.TwitterBase: twitter4j.conf.Configuration conf> = $r1;

        specialinvoke r0.<twitter4j.TwitterBase: void initBasicAuthorization(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.http.Authorization)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.http.Authorization $r2;
        twitter4j.TwitterBase r0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.http.Authorization;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.TwitterBase: twitter4j.conf.Configuration conf> = $r1;

        r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth> = $r2;

        return;
    }

    private void initBasicAuthorization(java.lang.String, java.lang.String)
    {
        twitter4j.http.Authorization $r5;
        twitter4j.http.NullAuthorization $r3;
        twitter4j.http.BasicAuthorization $r4;
        twitter4j.TwitterBase r0;
        java.lang.String $r1, $r2;

        r0 := @this: twitter4j.TwitterBase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r4 = new twitter4j.http.BasicAuthorization;

        specialinvoke $r4.<twitter4j.http.BasicAuthorization: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth> = $r4;

     label1:
        $r5 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        if $r5 != null goto label2;

        $r3 = staticinvoke <twitter4j.http.NullAuthorization: twitter4j.http.NullAuthorization getInstance()>();

        r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth> = $r3;

     label2:
        return;
    }

    protected void ensureAuthorizationEnabled()
    {
        twitter4j.http.Authorization $r1;
        java.lang.IllegalStateException $r2;
        twitter4j.TwitterBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = interfaceinvoke $r1.<twitter4j.http.Authorization: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Neither user ID/password combination nor OAuth consumer key/secret combination supplied");

        throw $r2;

     label1:
        return;
    }

    protected void ensureBasicEnabled()
    {
        twitter4j.http.Authorization $r1;
        java.lang.IllegalStateException $r2;
        twitter4j.TwitterBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.BasicAuthorization;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("user ID/password combination not supplied");

        throw $r2;

     label1:
        return;
    }

    protected void ensureBasicNotEnabled()
    {
        twitter4j.http.Authorization $r1;
        java.lang.IllegalStateException $r2;
        twitter4j.TwitterBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.BasicAuthorization;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("user ID/password combination not supplied");

        throw $r2;

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        twitter4j.http.Authorization $r2, $r4;
        java.lang.Object $r1;
        twitter4j.TwitterBase r0, r3;
        boolean $z0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.TwitterBase;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (twitter4j.TwitterBase) $r1;

        $r4 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $r2 = r3.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public twitter4j.http.Authorization getAuthorization()
    {
        twitter4j.http.Authorization r1;
        twitter4j.TwitterBase r0;

        r0 := @this: twitter4j.TwitterBase;

        r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        return r1;
    }

    public int hashCode()
    {
        int $i0;
        twitter4j.http.Authorization $r1;
        twitter4j.TwitterBase r0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        if $r1 == null goto label1;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;

     label1:
        return 0;
    }

    public boolean isBasicAuthEnabled()
    {
        twitter4j.http.Authorization $r1;
        twitter4j.TwitterBase r0;
        boolean $z0;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.BasicAuthorization;

        if $z0 == 0 goto label1;

        $r1 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $z0 = interfaceinvoke $r1.<twitter4j.http.Authorization: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r1;
        twitter4j.TwitterBase r0;
        java.lang.String $r3;

        r0 := @this: twitter4j.TwitterBase;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TwitterBase{auth=");

        $r2 = r0.<twitter4j.TwitterBase: twitter4j.http.Authorization auth>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <twitter4j.TwitterBase: long serialVersionUID> = -3812176145960812140L;

        return;
    }
}
