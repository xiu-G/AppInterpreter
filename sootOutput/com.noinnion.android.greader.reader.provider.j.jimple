public final class com.noinnion.android.greader.reader.provider.j extends android.database.sqlite.SQLiteOpenHelper
{
    private boolean a;
    private java.lang.String b;
    private android.database.sqlite.SQLiteDatabase c;
    private boolean d;
    private com.noinnion.android.greader.reader.provider.ReaderProvider e;

    public void <init>(com.noinnion.android.greader.reader.provider.ReaderProvider, android.content.Context)
    {
        android.content.Context $r2;
        com.noinnion.android.greader.reader.provider.ReaderProvider $r1;
        java.lang.String $r3;
        com.noinnion.android.greader.reader.provider.j r0;
        java.io.File $r4, $r5;
        boolean $z0;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        $r1 := @parameter0: com.noinnion.android.greader.reader.provider.ReaderProvider;

        $r2 := @parameter1: android.content.Context;

        r0.<com.noinnion.android.greader.reader.provider.j: com.noinnion.android.greader.reader.provider.ReaderProvider e> = $r1;

        $r3 = <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String l>;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, $r3, null, 15);

        r0.<com.noinnion.android.greader.reader.provider.j: boolean a> = 1;

        r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b> = null;

        r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c> = null;

        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 0;

        $r3 = <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String l>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b> = $r3;

        $r3 = staticinvoke <com.noinnion.android.greader.reader.g: java.lang.String ab(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("sdcard");

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label3;

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "gReader/db");

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

     label1:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r4.<java.io.File: boolean canWrite()>();

        if $z0 == 0 goto label2;

        r0.<com.noinnion.android.greader.reader.provider.j: boolean a> = 0;

        $r5 = new java.io.File;

        $r3 = <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String l>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r3);

        $r3 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b> = $r3;

        return;

     label2:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean a> = 1;

        $r3 = <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String l>;

        $r4 = virtualinvoke $r2.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.io.File: java.lang.String toString()>();

        r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b> = $r3;

     label3:
        return;
    }

    public final void close()
    {
        java.lang.Throwable $r2;
        android.database.sqlite.SQLiteDatabase $r1;
        com.noinnion.android.greader.reader.provider.j r0;
        boolean $z0;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        entermonitor r0;

     label1:
        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void close()>();

        $z0 = r0.<com.noinnion.android.greader.reader.provider.j: boolean a>;

        if $z0 != 0 goto label2;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        if $r1 == null goto label2;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label2;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

        r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final android.database.sqlite.SQLiteDatabase getReadableDatabase()
    {
        java.lang.Throwable $r4, $r6, $r11, $r14;
        java.lang.IllegalStateException $r5;
        android.database.sqlite.SQLiteDiskIOException $r3;
        com.noinnion.android.greader.reader.provider.j r0;
        android.database.sqlite.SQLiteDatabase $r1, $r12, $r13;
        android.database.sqlite.SQLiteException $r8;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Exception $r9, $r10;
        java.lang.StringBuilder $r7;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        entermonitor r0;

     label01:
        $z0 = r0.<com.noinnion.android.greader.reader.provider.j: boolean a>;

        if $z0 == 0 goto label03;

        $r1 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label02:
        exitmonitor r0;

        return $r1;

     label03:
        $r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label05;

        $r3 = new android.database.sqlite.SQLiteDiskIOException;

        specialinvoke $r3.<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>("Cannot access external storage: not mounted");

        throw $r3;

     label04:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label05:
        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        if $r1 == null goto label06;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label06;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        goto label02;

     label06:
        $z0 = r0.<com.noinnion.android.greader.reader.provider.j: boolean d>;

        if $z0 == 0 goto label07;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getReadableDatabase called recursively");

        throw $r5;

     label07:
        $r1 = virtualinvoke r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label08:
        goto label02;

     label09:
        $r6 := @caughtexception;

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t open ");

        $r2 = <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String l>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for writing (will try read-only):");

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ReaderOpenHelper", $r2, $r6);

     label11:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 1;

        $r2 = r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b>;

        $r1 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r2, null, 1);

     label12:
        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

     label13:
        if $i0 == 15 goto label20;

        $r8 = new android.database.sqlite.SQLiteException;

        $r7 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t upgrade read-only database from version ");

        $i0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(15);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r2 = r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label15:
        $r9 := @caughtexception;

        $r10 = $r9;

     label16:
        $r8 = new android.database.sqlite.SQLiteException;

        $r2 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        specialinvoke $r8.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r2);

        throw $r8;

     label17:
        $r11 := @caughtexception;

     label18:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 0;

        if $r1 == null goto label19;

        $r12 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        if $r1 == $r12 goto label19;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label19:
        throw $r11;

     label20:
        virtualinvoke r0.<com.noinnion.android.greader.reader.provider.j: void onOpen(android.database.sqlite.SQLiteDatabase)>($r1);

        r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c> = $r1;

        $r12 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

     label21:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 0;

        if $r1 == null goto label22;

        $r13 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        if $r1 == $r13 goto label22;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label22:
        $r1 = $r12;

        goto label02;

     label23:
        $r11 := @caughtexception;

        $r1 = null;

        goto label18;

     label24:
        $r14 := @caughtexception;

        $r11 = $r14;

        goto label18;

     label25:
        $r10 := @caughtexception;

        $r1 = null;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label07 with label04;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Exception from label12 to label13 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
        catch java.lang.Throwable from label12 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label20 with label04;
        catch java.lang.Exception from label20 to label21 with label15;
        catch java.lang.Throwable from label20 to label21 with label24;
        catch java.lang.Throwable from label21 to label22 with label04;
    }

    public final android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        java.lang.Throwable $r4, $r8, $r12, $r13;
        java.lang.IllegalStateException $r5;
        android.database.sqlite.SQLiteDiskIOException $r3;
        com.noinnion.android.greader.reader.provider.j r0;
        android.database.sqlite.SQLiteDatabase $r1, $r6, $r7;
        android.database.sqlite.SQLiteException $r11;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Exception $r9, $r10, $r14;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        entermonitor r0;

     label01:
        $z0 = r0.<com.noinnion.android.greader.reader.provider.j: boolean a>;

        if $z0 == 0 goto label03;

        $r1 = specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label02:
        exitmonitor r0;

        return $r1;

     label03:
        $r2 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 != 0 goto label05;

        $r3 = new android.database.sqlite.SQLiteDiskIOException;

        specialinvoke $r3.<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>("Cannot access external storage: not mounted");

        throw $r3;

     label04:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

     label05:
        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        if $r1 == null goto label06;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label06;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>();

        if $z0 != 0 goto label06;

        $r1 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        goto label02;

     label06:
        $z0 = r0.<com.noinnion.android.greader.reader.provider.j: boolean d>;

        if $z0 == 0 goto label07;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getWritableDatabase called recursively");

        throw $r5;

     label07:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 1;

        $r2 = r0.<com.noinnion.android.greader.reader.provider.j: java.lang.String b>;

        $r6 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r2, null);

     label08:
        $r1 = $r6;

     label09:
        $i0 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

     label10:
        if $i0 == 15 goto label16;

     label11:
        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label12:
        if $i0 != 0 goto label22;

     label13:
        virtualinvoke r0.<com.noinnion.android.greader.reader.provider.j: void onCreate(android.database.sqlite.SQLiteDatabase)>($r6);

     label14:
        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>(15);

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label15:
        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label16:
        virtualinvoke r0.<com.noinnion.android.greader.reader.provider.j: void onOpen(android.database.sqlite.SQLiteDatabase)>($r6);

     label17:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 0;

        $r7 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

     label18:
        if $r7 == null goto label20;

     label19:
        $r7 = r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c>;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void close()>();

     label20:
        r0.<com.noinnion.android.greader.reader.provider.j: android.database.sqlite.SQLiteDatabase c> = $r6;

     label21:
        goto label02;

     label22:
        virtualinvoke r0.<com.noinnion.android.greader.reader.provider.j: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>($r6, $i0, 15);

     label23:
        goto label14;

     label24:
        $r8 := @caughtexception;

     label25:
        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r8;

     label26:
        $r9 := @caughtexception;

        $r1 = $r6;

        $r10 = $r9;

     label27:
        $r11 = new android.database.sqlite.SQLiteException;

        $r2 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        specialinvoke $r11.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r2);

        throw $r11;

     label28:
        $r12 := @caughtexception;

     label29:
        r0.<com.noinnion.android.greader.reader.provider.j: boolean d> = 0;

        goto label31;

     label30:
        throw $r12;

     label31:
        if $r1 == null goto label30;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label32:
        goto label30;

     label33:
        $r12 := @caughtexception;

        $r1 = null;

        goto label29;

     label34:
        $r13 := @caughtexception;

        $r1 = $r6;

        $r12 = $r13;

        goto label29;

     label35:
        $r10 := @caughtexception;

        $r1 = null;

        goto label27;

     label36:
        $r14 := @caughtexception;

        goto label20;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label07 with label04;
        catch java.lang.Exception from label07 to label08 with label35;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Exception from label11 to label12 with label26;
        catch java.lang.Throwable from label09 to label12 with label34;
        catch java.lang.Throwable from label13 to label15 with label24;
        catch java.lang.Exception from label15 to label17 with label26;
        catch java.lang.Throwable from label15 to label17 with label34;
        catch java.lang.Throwable from label17 to label18 with label04;
        catch java.lang.Exception from label19 to label20 with label36;
        catch java.lang.Throwable from label19 to label20 with label04;
        catch java.lang.Throwable from label20 to label21 with label04;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Exception from label25 to label26 with label26;
        catch java.lang.Throwable from label25 to label26 with label34;
        catch java.lang.Throwable from label27 to label28 with label28;
        catch java.lang.Throwable from label29 to label30 with label04;
        catch java.lang.Throwable from label30 to label32 with label04;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.String $r4;
        java.lang.String[][] $r2;
        com.noinnion.android.greader.reader.provider.j r0;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS subscription (_id INTEGER PRIMARY KEY, uid TEXT NOT NULL,sortid TEXT NOT NULL,title TEXT NOT NULL,html_url TEXT,icon BLOB,unread_count INTEGER NOT NULL DEFAULT 0,newest_item_time INTEGER NOT NULL DEFAULT 0,sync_time INTEGER NOT NULL DEFAULT 0,sync_excluded INTEGER NOT NULL DEFAULT 0,image_fit INTEGER NOT NULL DEFAULT 1,javascript INTEGER NOT NULL DEFAULT 0,offline_content INTEGER NOT NULL DEFAULT -1,display_content INTEGER NOT NULL DEFAULT 0,hidden INTEGER NOT NULL DEFAULT 0)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS tag (_id INTEGER PRIMARY KEY, uid TEXT NOT NULL,type INTEGER NOT NULL,sortid TEXT NOT NULL,label TEXT NOT NULL,unread_count INTEGER NOT NULL DEFAULT 0,sync_time INTEGER NOT NULL DEFAULT 0,sync_excluded INTEGER NOT NULL DEFAULT 0,hidden INTEGER NOT NULL DEFAULT 0)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS tag2sub (_id integer primary key, tag_uid text not null,sub_id integer not null,sync_time integer not null default 0)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS item (_id INTEGER PRIMARY KEY, sub_id INTEGER NOT NULL,uid TEXT NOT NULL,title TEXT NOT NULL,content TEXT,content_type TEXT,author TEXT,link TEXT,media TEXT,media_type TEXT,sharer TEXT,published_time INTEGER NOT NULL DEFAULT 0,updated_time INTEGER NOT NULL DEFAULT 0,starred INTEGER NOT NULL DEFAULT 0,broadcast INTEGER NOT NULL DEFAULT 0,like INTEGER NOT NULL DEFAULT 0,cached INTEGER NOT NULL DEFAULT 0,read INTEGER NOT NULL DEFAULT 0,read_time INTEGER NOT NULL DEFAULT 0,sync_time INTEGER NOT NULL DEFAULT 0)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS item_sync (_id INTEGER PRIMARY KEY, uid TEXT NOT NULL)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS tag2item (_id INTEGER PRIMARY KEY, tag_uid TEXT NOT NULL,item_uid TEXT NOT NULL,action INTEGER NOT NULL DEFAULT 0,sync_time INTEGER NOT NULL DEFAULT 0)");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS history (_id INTEGER PRIMARY KEY, type INTEGER NOT NULL,params TEXT NOT NULL,sync_time INTEGER NOT NULL DEFAULT 0,done integer not null default 0)");

        $r2 = <com.noinnion.android.greader.reader.provider.f: java.lang.String[][] f>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label01:
        if $i1 < $i0 goto label08;

        $r2 = <com.noinnion.android.greader.reader.provider.c: java.lang.String[][] b>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label02:
        if $i1 < $i0 goto label09;

        $r2 = <com.noinnion.android.greader.reader.provider.e: java.lang.String[][] b>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label03:
        if $i1 < $i0 goto label10;

        $r2 = <com.noinnion.android.greader.reader.provider.l: java.lang.String[][] f>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label04:
        if $i1 < $i0 goto label11;

        $r2 = <com.noinnion.android.greader.reader.provider.n: java.lang.String[][] b>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label05:
        if $i1 < $i0 goto label12;

        $r2 = <com.noinnion.android.greader.reader.provider.b: java.lang.String[][] c>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label06:
        if $i1 < $i0 goto label13;

        $r2 = <com.noinnion.android.greader.reader.provider.m: java.lang.String[][] c>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label07:
        if $i1 < $i0 goto label14;

        return;

     label08:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("subscription", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label01;

     label09:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("tag", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label02;

     label10:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("tag2sub", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label03;

     label11:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("item", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label04;

     label12:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("item_sync", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label05;

     label13:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("tag2item", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label06;

     label14:
        $r3 = $r2[$i1];

        $r4 = staticinvoke <com.noinnion.android.greader.reader.provider.ReaderProvider: java.lang.String a(java.lang.String,java.lang.String[])>("history", $r3);

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r4);

        $i1 = $i1 + 1;

        goto label07;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        java.lang.String[] $r2;
        com.noinnion.android.greader.reader.provider.j r0;
        java.lang.Exception $r4;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1, $i2;
        java.lang.String $r3;

        r0 := @this: com.noinnion.android.greader.reader.provider.j;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label01:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.f: java.lang.String[] a(int)>($i0);

        $i1 = lengthof $r2;

     label02:
        $i2 = 0;

     label03:
        if $i2 < $i1 goto label22;

     label04:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.c: java.lang.String[] a(int)>($i0);

        $i1 = lengthof $r2;

     label05:
        $i2 = 0;

     label06:
        if $i2 < $i1 goto label24;

     label07:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.e: java.lang.String[] a()>();

        $i1 = lengthof $r2;

     label08:
        $i2 = 0;

     label09:
        if $i2 < $i1 goto label26;

     label10:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.l: java.lang.String[] a(int)>($i0);

        $i1 = lengthof $r2;

     label11:
        $i2 = 0;

     label12:
        if $i2 < $i1 goto label28;

     label13:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.n: java.lang.String[] a()>();

        $i1 = lengthof $r2;

     label14:
        $i2 = 0;

     label15:
        if $i2 < $i1 goto label30;

     label16:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.b: java.lang.String[] a(int)>($i0);

        $i0 = lengthof $r2;

     label17:
        $i1 = 0;

     label18:
        if $i1 < $i0 goto label32;

     label19:
        $r2 = staticinvoke <com.noinnion.android.greader.reader.provider.m: java.lang.String[] a()>();

        $i0 = lengthof $r2;

     label20:
        $i1 = 0;

     label21:
        if $i1 < $i0 goto label34;

        return;

     label22:
        $r3 = $r2[$i2];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label23:
        $i2 = $i2 + 1;

        goto label03;

     label24:
        $r3 = $r2[$i2];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label25:
        $i2 = $i2 + 1;

        goto label06;

     label26:
        $r3 = $r2[$i2];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label27:
        $i2 = $i2 + 1;

        goto label09;

     label28:
        $r3 = $r2[$i2];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label29:
        $i2 = $i2 + 1;

        goto label12;

     label30:
        $r3 = $r2[$i2];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label31:
        $i2 = $i2 + 1;

        goto label15;

     label32:
        $r3 = $r2[$i1];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label33:
        $i1 = $i1 + 1;

        goto label18;

     label34:
        $r3 = $r2[$i1];

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r3);

     label35:
        $i1 = $i1 + 1;

        goto label21;

     label36:
        $r4 := @caughtexception;

        $r3 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("gReader", $r3);

        return;

        catch java.lang.Exception from label01 to label02 with label36;
        catch java.lang.Exception from label04 to label05 with label36;
        catch java.lang.Exception from label07 to label08 with label36;
        catch java.lang.Exception from label10 to label11 with label36;
        catch java.lang.Exception from label13 to label14 with label36;
        catch java.lang.Exception from label16 to label17 with label36;
        catch java.lang.Exception from label19 to label20 with label36;
        catch java.lang.Exception from label22 to label23 with label36;
        catch java.lang.Exception from label24 to label25 with label36;
        catch java.lang.Exception from label26 to label27 with label36;
        catch java.lang.Exception from label28 to label29 with label36;
        catch java.lang.Exception from label30 to label31 with label36;
        catch java.lang.Exception from label32 to label33 with label36;
        catch java.lang.Exception from label34 to label35 with label36;
    }
}
