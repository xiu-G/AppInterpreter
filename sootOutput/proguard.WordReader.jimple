public abstract class proguard.WordReader extends java.lang.Object
{
    private static final char COMMENT_CHARACTER;
    private java.io.File baseDir;
    private java.lang.String currentComments;
    private int currentIndex;
    private java.lang.String currentLine;
    private int currentLineLength;
    private java.lang.String currentWord;
    private proguard.WordReader includeWordReader;

    protected void <init>(java.io.File)
    {
        proguard.WordReader r0;
        java.io.File $r1;

        r0 := @this: proguard.WordReader;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.WordReader: java.io.File baseDir> = $r1;

        return;
    }

    private boolean isDelimiter(char)
    {
        proguard.WordReader r0;
        int $i2, $i3;
        char $c0, $c1;

        r0 := @this: proguard.WordReader;

        $c0 := @parameter0: char;

        $i2 = (int) $c0;

        if $i2 == 64 goto label1;

        $i2 = (int) $c0;

        if $i2 == 123 goto label1;

        $i2 = (int) $c0;

        if $i2 == 125 goto label1;

        $i2 = (int) $c0;

        if $i2 == 40 goto label1;

        $i2 = (int) $c0;

        if $i2 == 41 goto label1;

        $i2 = (int) $c0;

        if $i2 == 44 goto label1;

        $i2 = (int) $c0;

        if $i2 == 59 goto label1;

        $c1 = <java.io.File: char pathSeparatorChar>;

        $i2 = (int) $c0;

        $i3 = (int) $c1;

        if $i2 != $i3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private boolean isQuote(char)
    {
        int $i1;
        char $c0;
        proguard.WordReader r0;

        r0 := @this: proguard.WordReader;

        $c0 := @parameter0: char;

        $i1 = (int) $c0;

        if $i1 == 39 goto label1;

        $i1 = (int) $c0;

        if $i1 != 34 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        proguard.WordReader r0, $r1;

        r0 := @this: proguard.WordReader;

        $r1 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r1 == null goto label1;

        $r1 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        virtualinvoke $r1.<proguard.WordReader: void close()>();

        r0.<proguard.WordReader: proguard.WordReader includeWordReader> = null;

     label1:
        return;
    }

    public java.io.File getBaseDir()
    {
        proguard.WordReader r0, $r2;
        java.io.File $r1;

        r0 := @this: proguard.WordReader;

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r2 == null goto label1;

        r0 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        $r1 = virtualinvoke r0.<proguard.WordReader: java.io.File getBaseDir()>();

        return $r1;

     label1:
        $r1 = r0.<proguard.WordReader: java.io.File baseDir>;

        return $r1;
    }

    public void includeWordReader(proguard.WordReader)
    {
        proguard.WordReader r0, $r1, $r2;

        r0 := @this: proguard.WordReader;

        $r1 := @parameter0: proguard.WordReader;

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r2 != null goto label1;

        r0.<proguard.WordReader: proguard.WordReader includeWordReader> = $r1;

        return;

     label1:
        r0 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        virtualinvoke r0.<proguard.WordReader: void includeWordReader(proguard.WordReader)>($r1);

        return;
    }

    public java.lang.String lastComments() throws java.io.IOException
    {
        proguard.WordReader r0, $r2;
        java.lang.String $r1;

        r0 := @this: proguard.WordReader;

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r2 != null goto label1;

        $r1 = r0.<proguard.WordReader: java.lang.String currentComments>;

        r0.<proguard.WordReader: java.lang.String currentComments> = null;

        return $r1;

     label1:
        r0 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        $r1 = virtualinvoke r0.<proguard.WordReader: java.lang.String lastComments()>();

        return $r1;
    }

    protected abstract java.lang.String lineLocationDescription();

    public java.lang.String locationDescription()
    {
        proguard.WordReader r0, $r2;
        java.lang.StringBuffer $r1, $r4;
        java.lang.String $r3;

        r0 := @this: proguard.WordReader;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r2 != null goto label3;

        $r3 = r0.<proguard.WordReader: java.lang.String currentWord>;

        if $r3 != null goto label2;

        $r3 = "end of ";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke r0.<proguard.WordReader: java.lang.String lineLocationDescription()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r3 = r0.<proguard.WordReader: java.lang.String currentWord>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label3:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        $r3 = virtualinvoke $r2.<proguard.WordReader: java.lang.String locationDescription()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\n");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  included from ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;
    }

    protected abstract java.lang.String nextLine() throws java.io.IOException;

    public java.lang.String nextWord() throws java.io.IOException
    {
        proguard.WordReader r0, $r1;
        char $c2, $c4;
        java.io.IOException $r7;
        java.lang.StringBuffer $r5, $r6;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: proguard.WordReader;

        r0.<proguard.WordReader: java.lang.String currentWord> = null;

        $r1 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r1 == null goto label02;

        $r1 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        $r2 = virtualinvoke $r1.<proguard.WordReader: java.lang.String nextWord()>();

        r0.<proguard.WordReader: java.lang.String currentWord> = $r2;

        $r2 = r0.<proguard.WordReader: java.lang.String currentWord>;

        if $r2 == null goto label01;

        $r2 = r0.<proguard.WordReader: java.lang.String currentWord>;

        return $r2;

     label01:
        $r1 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        virtualinvoke $r1.<proguard.WordReader: void close()>();

        r0.<proguard.WordReader: proguard.WordReader includeWordReader> = null;

     label02:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        if $r2 == null goto label03;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = r0.<proguard.WordReader: int currentLineLength>;

        if $i0 >= $i1 goto label03;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label03;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $i0 = $i0 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i0;

        goto label02;

     label03:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        if $r2 == null goto label04;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = r0.<proguard.WordReader: int currentLineLength>;

        if $i0 != $i1 goto label11;

     label04:
        $r2 = virtualinvoke r0.<proguard.WordReader: java.lang.String nextLine()>();

        r0.<proguard.WordReader: java.lang.String currentLine> = $r2;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        if $r2 != null goto label05;

        return null;

     label05:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(35);

        if $i0 < 0 goto label10;

        r0.<proguard.WordReader: int currentLineLength> = $i0;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = $r2;

        $r4 = r0.<proguard.WordReader: java.lang.String currentComments>;

        if $r4 != null goto label09;

     label06:
        r0.<proguard.WordReader: java.lang.String currentComments> = $r3;

     label07:
        r0.<proguard.WordReader: int currentIndex> = 0;

     label08:
        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = r0.<proguard.WordReader: int currentLineLength>;

        if $i0 >= $i1 goto label03;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label03;

        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $i0 = $i0 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i0;

        goto label08;

     label09:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<proguard.WordReader: java.lang.String currentComments>;

        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label10:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        r0.<proguard.WordReader: int currentLineLength> = $i0;

        goto label07;

     label11:
        $i0 = r0.<proguard.WordReader: int currentIndex>;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $z0 = specialinvoke r0.<proguard.WordReader: boolean isDelimiter(char)>($c2);

        if $z0 == 0 goto label13;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = $i1 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i1;

     label12:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        r0.<proguard.WordReader: java.lang.String currentWord> = $r2;

        $r2 = r0.<proguard.WordReader: java.lang.String currentWord>;

        return $r2;

     label13:
        $z0 = specialinvoke r0.<proguard.WordReader: boolean isQuote(char)>($c2);

        if $z0 == 0 goto label17;

        $i0 = $i0 + 1;

     label14:
        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = $i1 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i1;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i3 = r0.<proguard.WordReader: int currentLineLength>;

        if $i1 != $i3 goto label15;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i0 = $i0 - 1;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        r0.<proguard.WordReader: java.lang.String currentWord> = $r2;

        $r7 = new java.io.IOException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing closing quote for ");

        $r2 = virtualinvoke r0.<proguard.WordReader: java.lang.String locationDescription()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r7;

     label15:
        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $i1 = (int) $c4;

        $i3 = (int) $c2;

        if $i1 != $i3 goto label14;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i3 = $i1 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i3;

        goto label12;

     label16:
        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i1 = $i1 + 1;

        r0.<proguard.WordReader: int currentIndex> = $i1;

     label17:
        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $i3 = r0.<proguard.WordReader: int currentLineLength>;

        if $i1 >= $i3 goto label18;

        $r2 = r0.<proguard.WordReader: java.lang.String currentLine>;

        $i1 = r0.<proguard.WordReader: int currentIndex>;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $z0 = specialinvoke r0.<proguard.WordReader: boolean isDelimiter(char)>($c2);

        if $z0 != 0 goto label18;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label16;

     label18:
        $i1 = r0.<proguard.WordReader: int currentIndex>;

        goto label12;
    }

    public void setBaseDir(java.io.File)
    {
        proguard.WordReader r0, $r2;
        java.io.File $r1;

        r0 := @this: proguard.WordReader;

        $r1 := @parameter0: java.io.File;

        $r2 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        if $r2 == null goto label1;

        r0 = r0.<proguard.WordReader: proguard.WordReader includeWordReader>;

        virtualinvoke r0.<proguard.WordReader: void setBaseDir(java.io.File)>($r1);

        return;

     label1:
        r0.<proguard.WordReader: java.io.File baseDir> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <proguard.WordReader: char COMMENT_CHARACTER> = 35;

        return;
    }
}
