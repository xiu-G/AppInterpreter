public class proguard.optimize.info.FieldOptimizationInfo extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private static final proguard.evaluation.ConstantValueFactory CONSTANT_VALUE_FACTORY;
    private static final proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY;
    private boolean canBeMadePrivate;
    private boolean isRead;
    private boolean isWritten;
    private proguard.evaluation.value.ReferenceValue referencedClass;
    private proguard.evaluation.value.Value value;

    static void <clinit>()
    {
        proguard.evaluation.ConstantValueFactory $r1;
        proguard.evaluation.value.SpecificValueFactory $r0;

        $r0 = new proguard.evaluation.value.SpecificValueFactory;

        specialinvoke $r0.<proguard.evaluation.value.SpecificValueFactory: void <init>()>();

        <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY> = $r0;

        $r1 = new proguard.evaluation.ConstantValueFactory;

        $r0 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        specialinvoke $r1.<proguard.evaluation.ConstantValueFactory: void <init>(proguard.evaluation.value.ValueFactory)>($r0);

        <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.ConstantValueFactory CONSTANT_VALUE_FACTORY> = $r1;

        return;
    }

    public void <init>(proguard.classfile.Clazz, proguard.classfile.Field)
    {
        proguard.classfile.attribute.visitor.AllAttributeVisitor $r3;
        proguard.classfile.Field $r2;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.optimize.info.FieldOptimizationInfo r0;
        java.lang.String $r5;
        proguard.evaluation.value.Value $r4;
        boolean $z0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean canBeMadePrivate> = 1;

        $i0 = interfaceinvoke $r2.<proguard.classfile.Field: int getAccessFlags()>();

        $i1 = $i0 & 64;

        if $i1 == 0 goto label3;

        $z0 = 1;

     label1:
        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isRead> = $z0;

        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isWritten> = $z0;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label2;

        $r3 = new proguard.classfile.attribute.visitor.AllAttributeVisitor;

        specialinvoke $r3.<proguard.classfile.attribute.visitor.AllAttributeVisitor: void <init>(proguard.classfile.attribute.visitor.AttributeVisitor)>(r0);

        interfaceinvoke $r2.<proguard.classfile.Field: void accept(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor)>($r1, $r3);

     label2:
        $i0 = $i0 & 16;

        if $i0 != 0 goto label4;

        $r4 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value>;

        if $r4 != null goto label4;

        $r5 = interfaceinvoke $r2.<proguard.classfile.Field: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r4 = specialinvoke r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value initialValue(java.lang.String)>($r5);

        r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value> = $r4;

        return;

     label3:
        $z0 = 0;

        goto label1;

     label4:
        return;
    }

    public static proguard.optimize.info.FieldOptimizationInfo getFieldOptimizationInfo(proguard.classfile.Field)
    {
        java.lang.Object $r0;
        proguard.optimize.info.FieldOptimizationInfo $r2;
        proguard.classfile.Field $r1;
        boolean $z0;

        $r1 := @parameter0: proguard.classfile.Field;

        $r0 = interfaceinvoke $r1.<proguard.classfile.Field: java.lang.Object getVisitorInfo()>();

        $z0 = $r0 instanceof proguard.optimize.info.FieldOptimizationInfo;

        if $z0 == 0 goto label1;

        $r2 = (proguard.optimize.info.FieldOptimizationInfo) $r0;

        return $r2;

     label1:
        return null;
    }

    private proguard.evaluation.value.Value initialValue(java.lang.String)
    {
        char $c0;
        java.lang.IllegalArgumentException $r10;
        proguard.evaluation.value.IntegerValue $r4;
        proguard.evaluation.value.ReferenceValue $r8;
        java.lang.StringBuffer $r2, $r9;
        proguard.evaluation.value.SpecificValueFactory $r3;
        proguard.evaluation.value.LongValue $r5;
        proguard.evaluation.value.DoubleValue $r7;
        int $i1;
        proguard.optimize.info.FieldOptimizationInfo r0;
        java.lang.String $r1;
        proguard.evaluation.value.FloatValue $r6;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 66: goto label2;
            case 67: goto label2;
            case 68: goto label5;
            case 70: goto label4;
            case 73: goto label2;
            case 74: goto label3;
            case 76: goto label6;
            case 83: goto label2;
            case 90: goto label2;
            case 91: goto label6;
            default: goto label1;
        };

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid type [");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r10;

     label2:
        $r3 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        $r4 = virtualinvoke $r3.<proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue createIntegerValue(int)>(0);

        return $r4;

     label3:
        $r3 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        $r5 = virtualinvoke $r3.<proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.LongValue createLongValue(long)>(0L);

        return $r5;

     label4:
        $r3 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        $r6 = virtualinvoke $r3.<proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue createFloatValue(float)>(0.0F);

        return $r6;

     label5:
        $r3 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        $r7 = virtualinvoke $r3.<proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.DoubleValue createDoubleValue(double)>(0.0);

        return $r7;

     label6:
        $r3 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.SpecificValueFactory VALUE_FACTORY>;

        $r8 = virtualinvoke $r3.<proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.ReferenceValue createReferenceValueNull()>();

        return $r8;
    }

    public static void setFieldOptimizationInfo(proguard.classfile.Clazz, proguard.classfile.Field)
    {
        proguard.optimize.info.FieldOptimizationInfo $r2;
        proguard.classfile.Field $r1;
        proguard.classfile.Clazz $r0;

        $r0 := @parameter0: proguard.classfile.Clazz;

        $r1 := @parameter1: proguard.classfile.Field;

        $r2 = new proguard.optimize.info.FieldOptimizationInfo;

        specialinvoke $r2.<proguard.optimize.info.FieldOptimizationInfo: void <init>(proguard.classfile.Clazz,proguard.classfile.Field)>($r0, $r1);

        interfaceinvoke $r1.<proguard.classfile.Field: void setVisitorInfo(java.lang.Object)>($r2);

        return;
    }

    public boolean canBeMadePrivate()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        z0 = r0.<proguard.optimize.info.FieldOptimizationInfo: boolean canBeMadePrivate>;

        return z0;
    }

    public void generalizeReferencedClass(proguard.evaluation.value.ReferenceValue)
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.evaluation.value.ReferenceValue $r1, $r2;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: proguard.evaluation.value.ReferenceValue;

        $r2 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.ReferenceValue referencedClass>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.ReferenceValue referencedClass>;

        $r1 = virtualinvoke $r2.<proguard.evaluation.value.ReferenceValue: proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue)>($r1);

     label1:
        r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.ReferenceValue referencedClass> = $r1;

        return;
    }

    public void generalizeValue(proguard.evaluation.value.Value)
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.evaluation.value.Value $r1, $r2;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: proguard.evaluation.value.Value;

        $r2 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value>;

        if $r2 == null goto label1;

        $r2 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value>;

        $r1 = virtualinvoke $r2.<proguard.evaluation.value.Value: proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value)>($r1);

     label1:
        r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value> = $r1;

        return;
    }

    public proguard.evaluation.value.ReferenceValue getReferencedClass()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.evaluation.value.ReferenceValue r1;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        r1 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.ReferenceValue referencedClass>;

        return r1;
    }

    public proguard.evaluation.value.Value getValue()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.evaluation.value.Value r1;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        r1 = r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value>;

        return r1;
    }

    public boolean isRead()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        z0 = r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isRead>;

        return z0;
    }

    public boolean isWritten()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        boolean z0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        z0 = r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isWritten>;

        return z0;
    }

    public void setCanNotBeMadePrivate()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean canBeMadePrivate> = 0;

        return;
    }

    public void setRead()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isRead> = 1;

        return;
    }

    public void setWritten()
    {
        proguard.optimize.info.FieldOptimizationInfo r0;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        r0.<proguard.optimize.info.FieldOptimizationInfo: boolean isWritten> = 1;

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitConstantValueAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.ConstantValueAttribute)
    {
        proguard.classfile.Clazz $r1;
        int $i0;
        proguard.evaluation.ConstantValueFactory $r5;
        proguard.optimize.info.FieldOptimizationInfo r0;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.ConstantValueAttribute $r3;
        proguard.evaluation.value.Value $r4;

        r0 := @this: proguard.optimize.info.FieldOptimizationInfo;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.ConstantValueAttribute;

        $r5 = <proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.ConstantValueFactory CONSTANT_VALUE_FACTORY>;

        $i0 = $r3.<proguard.classfile.attribute.ConstantValueAttribute: int u2constantValueIndex>;

        $r4 = virtualinvoke $r5.<proguard.evaluation.ConstantValueFactory: proguard.evaluation.value.Value constantValue(proguard.classfile.Clazz,int)>($r1, $i0);

        r0.<proguard.optimize.info.FieldOptimizationInfo: proguard.evaluation.value.Value value> = $r4;

        return;
    }
}
