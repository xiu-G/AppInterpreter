class com.facebook.AppEventsLogger$PersistedAppSessionInfo extends java.lang.Object
{
    private static final java.lang.String PERSISTED_SESSION_INFO_FILENAME;
    private static final java.lang.Runnable appSessionInfoFlushRunnable;
    private static java.util.Map appSessionInfoMap;
    private static boolean hasChanges;
    private static boolean isLoaded;
    private static final java.lang.Object staticLock;

    static void <clinit>()
    {
        java.lang.Object $r0;
        com.facebook.AppEventsLogger$PersistedAppSessionInfo$1 $r1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.String PERSISTED_SESSION_INFO_FILENAME> = "AppEventsLogger.persistedsessioninfo";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Object staticLock> = $r0;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded> = 0;

        $r1 = new com.facebook.AppEventsLogger$PersistedAppSessionInfo$1;

        specialinvoke $r1.<com.facebook.AppEventsLogger$PersistedAppSessionInfo$1: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Runnable appSessionInfoFlushRunnable> = $r1;

        return;
    }

    void <init>()
    {
        com.facebook.AppEventsLogger$PersistedAppSessionInfo r0;

        r0 := @this: com.facebook.AppEventsLogger$PersistedAppSessionInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.facebook.FacebookTimeSpentData getTimeSpentData(android.content.Context, com.facebook.AppEventsLogger$AccessTokenAppIdPair)
    {
        android.content.Context $r0;
        com.facebook.AppEventsLogger$AccessTokenAppIdPair $r1;
        java.util.Map $r2;
        com.facebook.FacebookTimeSpentData $r4;
        java.lang.Object $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.facebook.AppEventsLogger$AccessTokenAppIdPair;

        staticinvoke <com.facebook.AppEventsLogger$PersistedAppSessionInfo: void restoreAppSessionInformation(android.content.Context)>($r0);

        $r2 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (com.facebook.FacebookTimeSpentData) $r3;

        if $r4 != null goto label1;

        $r4 = new com.facebook.FacebookTimeSpentData;

        specialinvoke $r4.<com.facebook.FacebookTimeSpentData: void <init>()>();

        $r2 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return $r4;
    }

    static void onResume(android.content.Context, com.facebook.AppEventsLogger$AccessTokenAppIdPair, com.facebook.AppEventsLogger, long, java.lang.String)
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        com.facebook.AppEventsLogger$AccessTokenAppIdPair $r1;
        com.facebook.AppEventsLogger $r2;
        long $l0;
        com.facebook.FacebookTimeSpentData $r5;
        java.lang.Object $r4;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.facebook.AppEventsLogger$AccessTokenAppIdPair;

        $r2 := @parameter2: com.facebook.AppEventsLogger;

        $l0 := @parameter3: long;

        $r3 := @parameter4: java.lang.String;

        $r4 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Object staticLock>;

        entermonitor $r4;

     label1:
        $r5 = staticinvoke <com.facebook.AppEventsLogger$PersistedAppSessionInfo: com.facebook.FacebookTimeSpentData getTimeSpentData(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>($r0, $r1);

        virtualinvoke $r5.<com.facebook.FacebookTimeSpentData: void onResume(com.facebook.AppEventsLogger,long,java.lang.String)>($r2, $l0, $r3);

        staticinvoke <com.facebook.AppEventsLogger$PersistedAppSessionInfo: void onTimeSpentDataUpdate()>();

        exitmonitor $r4;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void onSuspend(android.content.Context, com.facebook.AppEventsLogger$AccessTokenAppIdPair, com.facebook.AppEventsLogger, long)
    {
        java.lang.Throwable $r5;
        android.content.Context $r0;
        com.facebook.AppEventsLogger$AccessTokenAppIdPair $r1;
        com.facebook.AppEventsLogger $r2;
        com.facebook.FacebookTimeSpentData $r4;
        long $l0;
        java.lang.Object $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.facebook.AppEventsLogger$AccessTokenAppIdPair;

        $r2 := @parameter2: com.facebook.AppEventsLogger;

        $l0 := @parameter3: long;

        $r3 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Object staticLock>;

        entermonitor $r3;

     label1:
        $r4 = staticinvoke <com.facebook.AppEventsLogger$PersistedAppSessionInfo: com.facebook.FacebookTimeSpentData getTimeSpentData(android.content.Context,com.facebook.AppEventsLogger$AccessTokenAppIdPair)>($r0, $r1);

        virtualinvoke $r4.<com.facebook.FacebookTimeSpentData: void onSuspend(com.facebook.AppEventsLogger,long)>($r2, $l0);

        staticinvoke <com.facebook.AppEventsLogger$PersistedAppSessionInfo: void onTimeSpentDataUpdate()>();

        exitmonitor $r3;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r3;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void onTimeSpentDataUpdate()
    {
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.ScheduledThreadPoolExecutor $r2;
        java.lang.Runnable $r0;
        boolean $z0;

        $z0 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges>;

        if $z0 != 0 goto label1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 1;

        $r2 = staticinvoke <com.facebook.AppEventsLogger: java.util.concurrent.ScheduledThreadPoolExecutor access$2()>();

        $r0 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Runnable appSessionInfoFlushRunnable>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        virtualinvoke $r2.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r0, 30L, $r1);

     label1:
        return;
    }

    private static void restoreAppSessionInformation(android.content.Context)
    {
        java.lang.Throwable $r9, $r10, $r16, $r17, $r18;
        android.content.Context $r0;
        java.io.ObjectInputStream $r2, $r3;
        java.util.HashMap $r6;
        com.facebook.LoggingBehavior $r7;
        java.util.Map $r8;
        java.lang.String $r13, $r15;
        boolean $z0;
        java.io.FileInputStream $r4;
        java.lang.Exception $r11, $r12;
        java.lang.Object $r1, $r5;
        java.lang.StringBuilder $r14;

        $r0 := @parameter0: android.content.Context;

        $r2 = null;

        $r1 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Object staticLock>;

        entermonitor $r1;

     label01:
        $z0 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded>;

     label02:
        if $z0 != 0 goto label11;

     label03:
        $r3 = new java.io.ObjectInputStream;

     label04:
        $r4 = virtualinvoke $r0.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>("AppEventsLogger.persistedsessioninfo");

        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r4);

     label05:
        $r5 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label06:
        $r6 = (java.util.HashMap) $r5;

     label07:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap> = $r6;

        $r7 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior APP_EVENTS>;

     label08:
        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r7, "AppEvents", "App session info loaded");

     label09:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r3);

        virtualinvoke $r0.<android.content.Context: boolean deleteFile(java.lang.String)>("AppEventsLogger.persistedsessioninfo");

        $r8 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        if $r8 != null goto label10;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap> = $r6;

     label10:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded> = 1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

     label11:
        exitmonitor $r1;

     label12:
        return;

     label13:
        $r9 := @caughtexception;

     label14:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r2);

        virtualinvoke $r0.<android.content.Context: boolean deleteFile(java.lang.String)>("AppEventsLogger.persistedsessioninfo");

        $r8 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        if $r8 != null goto label15;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap> = $r6;

     label15:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded> = 1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

        goto label11;

     label16:
        $r10 := @caughtexception;

        exitmonitor $r1;

     label17:
        throw $r10;

     label18:
        $r11 := @caughtexception;

        $r3 = null;

        $r12 = $r11;

     label19:
        $r13 = staticinvoke <com.facebook.AppEventsLogger: java.lang.String access$1()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Got unexpected exception: ");

        $r15 = virtualinvoke $r12.<java.lang.Exception: java.lang.String toString()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r13, $r15);

     label20:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r3);

        virtualinvoke $r0.<android.content.Context: boolean deleteFile(java.lang.String)>("AppEventsLogger.persistedsessioninfo");

        $r8 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        if $r8 != null goto label21;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap> = $r6;

     label21:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded> = 1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

        goto label11;

     label22:
        $r16 := @caughtexception;

        $r3 = null;

        $r17 = $r16;

     label23:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r3);

        virtualinvoke $r0.<android.content.Context: boolean deleteFile(java.lang.String)>("AppEventsLogger.persistedsessioninfo");

        $r8 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

        if $r8 != null goto label24;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap> = $r6;

     label24:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean isLoaded> = 1;

        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

        throw $r17;

     label25:
        $r17 := @caughtexception;

        goto label23;

     label26:
        $r12 := @caughtexception;

        goto label19;

     label27:
        $r18 := @caughtexception;

        $r2 = $r3;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.io.FileNotFoundException from label04 to label05 with label13;
        catch java.lang.Exception from label04 to label05 with label18;
        catch java.lang.Throwable from label03 to label05 with label22;
        catch java.io.FileNotFoundException from label05 to label06 with label27;
        catch java.io.FileNotFoundException from label08 to label09 with label27;
        catch java.lang.Exception from label05 to label07 with label26;
        catch java.lang.Exception from label08 to label09 with label26;
        catch java.lang.Throwable from label05 to label09 with label25;
        catch java.lang.Throwable from label09 to label12 with label16;
        catch java.lang.Throwable from label13 to label17 with label16;
        catch java.lang.Throwable from label19 to label20 with label25;
        catch java.lang.Throwable from label20 to label25 with label16;
    }

    static void saveAppSessionInformation(android.content.Context)
    {
        java.lang.Throwable $r11, $r12;
        android.content.Context $r0;
        java.io.FileOutputStream $r4;
        java.lang.Exception $r7;
        java.io.BufferedOutputStream $r3;
        com.facebook.LoggingBehavior $r6;
        java.util.Map $r5;
        java.lang.Object $r1;
        java.io.ObjectOutputStream $r2;
        java.lang.StringBuilder $r9;
        java.lang.String $r8, $r10;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.lang.Object staticLock>;

        entermonitor $r1;

     label01:
        $z0 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges>;

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r2 = new java.io.ObjectOutputStream;

        $r3 = new java.io.BufferedOutputStream;

     label04:
        $r4 = virtualinvoke $r0.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("AppEventsLogger.persistedsessioninfo", 0);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        specialinvoke $r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3);

     label05:
        $r5 = <com.facebook.AppEventsLogger$PersistedAppSessionInfo: java.util.Map appSessionInfoMap>;

     label06:
        virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);

     label07:
        <com.facebook.AppEventsLogger$PersistedAppSessionInfo: boolean hasChanges> = 0;

        $r6 = <com.facebook.LoggingBehavior: com.facebook.LoggingBehavior APP_EVENTS>;

     label08:
        staticinvoke <com.facebook.internal.Logger: void log(com.facebook.LoggingBehavior,java.lang.String,java.lang.String)>($r6, "AppEvents", "App session info saved");

     label09:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r2);

     label10:
        exitmonitor $r1;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

        $r2 = null;

     label13:
        $r8 = staticinvoke <com.facebook.AppEventsLogger: java.lang.String access$1()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Got unexpected exception: ");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r8, $r10);

     label14:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r2);

        goto label10;

     label15:
        $r11 := @caughtexception;

        exitmonitor $r1;

     label16:
        throw $r11;

     label17:
        $r12 := @caughtexception;

        $r2 = null;

     label18:
        staticinvoke <com.facebook.internal.Utility: void closeQuietly(java.io.Closeable)>($r2);

        throw $r12;

     label19:
        $r12 := @caughtexception;

        goto label18;

     label20:
        $r7 := @caughtexception;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Throwable from label03 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label20;
        catch java.lang.Exception from label08 to label09 with label20;
        catch java.lang.Throwable from label05 to label09 with label19;
        catch java.lang.Throwable from label09 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label14 to label16 with label15;
        catch java.lang.Throwable from label18 to label19 with label15;
    }
}
