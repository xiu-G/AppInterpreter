public class com.apperhand.common.dto.protocol.InfoResponse extends com.apperhand.common.dto.protocol.BaseResponse
{
    private static final long serialVersionUID;
    private long nextCommandInterval;

    public void <init>()
    {
        com.apperhand.common.dto.protocol.InfoResponse r0;

        r0 := @this: com.apperhand.common.dto.protocol.InfoResponse;

        specialinvoke r0.<com.apperhand.common.dto.protocol.BaseResponse: void <init>()>();

        r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval> = -1L;

        return;
    }

    public void <init>(long)
    {
        long $l0;
        com.apperhand.common.dto.protocol.InfoResponse r0;

        r0 := @this: com.apperhand.common.dto.protocol.InfoResponse;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.apperhand.common.dto.protocol.BaseResponse: void <init>()>();

        r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval> = -1L;

        r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval> = $l0;

        return;
    }

    public long getNextCommandInterval()
    {
        long l0;
        com.apperhand.common.dto.protocol.InfoResponse r0;

        r0 := @this: com.apperhand.common.dto.protocol.InfoResponse;

        l0 = r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval>;

        return l0;
    }

    public void setNextCommandInterval(long)
    {
        long $l0;
        com.apperhand.common.dto.protocol.InfoResponse r0;

        r0 := @this: com.apperhand.common.dto.protocol.InfoResponse;

        $l0 := @parameter0: long;

        r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval> = $l0;

        return;
    }

    public java.lang.String toString()
    {
        com.apperhand.common.dto.protocol.InfoResponse r0;
        java.lang.StringBuilder $r1;
        long $l0;
        java.lang.String $r2;

        r0 := @this: com.apperhand.common.dto.protocol.InfoResponse;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("InfoResponse [nextCommandInterval=");

        $l0 = r0.<com.apperhand.common.dto.protocol.InfoResponse: long nextCommandInterval>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toString()=");

        $r2 = specialinvoke r0.<com.apperhand.common.dto.protocol.BaseResponse: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <com.apperhand.common.dto.protocol.InfoResponse: long serialVersionUID> = -6549210717995475041L;

        return;
    }
}
