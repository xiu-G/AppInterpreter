public final class twitter4j.TwitterMethod extends java.lang.Object implements java.io.Serializable
{
    public static final twitter4j.TwitterMethod ADD_LIST_MEMBER;
    public static final twitter4j.TwitterMethod BLOCKING_USERS;
    public static final twitter4j.TwitterMethod BLOCKING_USERS_IDS;
    public static final twitter4j.TwitterMethod CHECK_LIST_MEMBERSHIP;
    public static final twitter4j.TwitterMethod CHECK_LIST_SUBSCRIPTION;
    public static final twitter4j.TwitterMethod CREATE_BLOCK;
    public static final twitter4j.TwitterMethod CREATE_FAVORITE;
    public static final twitter4j.TwitterMethod CREATE_FRIENDSHIP;
    public static final twitter4j.TwitterMethod CREATE_USER_LIST;
    public static final twitter4j.TwitterMethod CURRENT_TRENDS;
    public static final twitter4j.TwitterMethod DAILY_TRENDS;
    public static final twitter4j.TwitterMethod DELETE_LIST_MEMBER;
    public static final twitter4j.TwitterMethod DELETE_USER_LIST;
    public static final twitter4j.TwitterMethod DESTROY_BLOCK;
    public static final twitter4j.TwitterMethod DESTROY_DIRECT_MESSAGES;
    public static final twitter4j.TwitterMethod DESTROY_FAVORITE;
    public static final twitter4j.TwitterMethod DESTROY_FRIENDSHIP;
    public static final twitter4j.TwitterMethod DESTROY_STATUS;
    public static final twitter4j.TwitterMethod DIRECT_MESSAGES;
    public static final twitter4j.TwitterMethod DISABLE_NOTIFICATION;
    public static final twitter4j.TwitterMethod ENABLE_NOTIFICATION;
    public static final twitter4j.TwitterMethod EXISTS_BLOCK;
    public static final twitter4j.TwitterMethod EXISTS_FRIENDSHIP;
    public static final twitter4j.TwitterMethod FAVORITES;
    public static final twitter4j.TwitterMethod FOLLOWERS_IDS;
    public static final twitter4j.TwitterMethod FOLLOWERS_STATUSES;
    public static final twitter4j.TwitterMethod FRIENDS_IDS;
    public static final twitter4j.TwitterMethod FRIENDS_STATUSES;
    public static final twitter4j.TwitterMethod FRIENDS_TIMELINE;
    public static final twitter4j.TwitterMethod HOME_TIMELINE;
    public static final twitter4j.TwitterMethod LIST_MEMBERS;
    public static final twitter4j.TwitterMethod LIST_SUBSCRIBERS;
    public static final twitter4j.TwitterMethod MENTIONS;
    public static final twitter4j.TwitterMethod PUBLIC_TIMELINE;
    public static final twitter4j.TwitterMethod RATE_LIMIT_STATUS;
    public static final twitter4j.TwitterMethod REPORT_SPAM;
    public static final twitter4j.TwitterMethod RETWEETED_BY_ME;
    public static final twitter4j.TwitterMethod RETWEETED_TO_ME;
    public static final twitter4j.TwitterMethod RETWEETS;
    public static final twitter4j.TwitterMethod RETWEETS_OF_ME;
    public static final twitter4j.TwitterMethod RETWEET_STATUS;
    public static final twitter4j.TwitterMethod SEARCH;
    public static final twitter4j.TwitterMethod SEARCH_USERS;
    public static final twitter4j.TwitterMethod SEND_DIRECT_MESSAGE;
    public static final twitter4j.TwitterMethod SENT_DIRECT_MESSAGES;
    public static final twitter4j.TwitterMethod SHOW_FRIENDSHIP;
    public static final twitter4j.TwitterMethod SHOW_STATUS;
    public static final twitter4j.TwitterMethod SHOW_USER;
    public static final twitter4j.TwitterMethod SHOW_USER_LIST;
    public static final twitter4j.TwitterMethod SUBSCRIBE_LIST;
    public static final twitter4j.TwitterMethod TEST;
    public static final twitter4j.TwitterMethod TRENDS;
    public static final twitter4j.TwitterMethod UNSUBSCRIBE_LIST;
    public static final twitter4j.TwitterMethod UPDATE_DELIVERY_DEVICE;
    public static final twitter4j.TwitterMethod UPDATE_PROFILE;
    public static final twitter4j.TwitterMethod UPDATE_PROFILE_BACKGROUND_IMAGE;
    public static final twitter4j.TwitterMethod UPDATE_PROFILE_COLORS;
    public static final twitter4j.TwitterMethod UPDATE_PROFILE_IMAGE;
    public static final twitter4j.TwitterMethod UPDATE_STATUS;
    public static final twitter4j.TwitterMethod UPDATE_USER_LIST;
    public static final twitter4j.TwitterMethod USER_LISTS;
    public static final twitter4j.TwitterMethod USER_LIST_MEMBERSHIPS;
    public static final twitter4j.TwitterMethod USER_LIST_STATUSES;
    public static final twitter4j.TwitterMethod USER_LIST_SUBSCRIPTIONS;
    public static final twitter4j.TwitterMethod USER_TIMELINE;
    public static final twitter4j.TwitterMethod WEEKLY_TRENDS;
    private static final java.util.Map instances;
    private static final long serialVersionUID;
    java.lang.String name;

    static void <clinit>()
    {
        java.util.HashMap $r1;
        twitter4j.TwitterMethod $r0;

        <twitter4j.TwitterMethod: long serialVersionUID> = 5776633408291563058L;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <twitter4j.TwitterMethod: java.util.Map instances> = $r1;

        $r0 = staticinvoke <twitter4j.TwitterMethod: twitter4j.TwitterMethod getInstance(java.lang.String)>("SEARCH");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SEARCH> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("TRENDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod TRENDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CURRENT_TRENDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CURRENT_TRENDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DAILY_TRENDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DAILY_TRENDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("WEEKLY_TRENDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod WEEKLY_TRENDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("PUBLIC_TIMELINE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod PUBLIC_TIMELINE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("HOME_TIMELINE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod HOME_TIMELINE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FRIENDS_TIMELINE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FRIENDS_TIMELINE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("USER_TIMELINE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod USER_TIMELINE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("MENTIONS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod MENTIONS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RETWEETED_BY_ME");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RETWEETED_BY_ME> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RETWEETED_TO_ME");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RETWEETED_TO_ME> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RETWEETS_OF_ME");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RETWEETS_OF_ME> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SHOW_STATUS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SHOW_STATUS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_STATUS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_STATUS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DESTROY_STATUS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DESTROY_STATUS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RETWEET_STATUS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RETWEET_STATUS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RETWEETS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RETWEETS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SHOW_USER");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SHOW_USER> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SEARCH_USERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SEARCH_USERS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FRIENDS_STAUSES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FRIENDS_STATUSES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FOLLOWERS_STATUSES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FOLLOWERS_STATUSES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CREATE_USER_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CREATE_USER_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_USER_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_USER_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("USER_LISTS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod USER_LISTS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SHOW_USER_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SHOW_USER_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DELETE_USER_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DELETE_USER_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("USER_LIST_STATUSES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod USER_LIST_STATUSES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("USER_LIST_MEMBERSHIPS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod USER_LIST_MEMBERSHIPS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("USER_LIST_SUBSCRIPTIONS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod USER_LIST_SUBSCRIPTIONS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("LIST_MEMBERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod LIST_MEMBERS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("ADD_LIST_MEMBERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod ADD_LIST_MEMBER> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DELETE_LIST_MEMBERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DELETE_LIST_MEMBER> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CHECK_LIST_MEMBERSHIP");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CHECK_LIST_MEMBERSHIP> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("LIST_SUBSCRIBERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod LIST_SUBSCRIBERS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SUBSCRIBE_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SUBSCRIBE_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UNSUBSCRIBE_LIST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UNSUBSCRIBE_LIST> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CHECK_LIST_SUBSCRIPTION");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CHECK_LIST_SUBSCRIPTION> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DIRECT_MESSAGES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DIRECT_MESSAGES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SENT_DIRECT_MESSAGES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SENT_DIRECT_MESSAGES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SEND_DIRECT_MESSAGE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SEND_DIRECT_MESSAGE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DESTROY_DIRECT_MESSAGES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DESTROY_DIRECT_MESSAGES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CREATE_FRIENDSHIP");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CREATE_FRIENDSHIP> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DESTROY_FRIENDSHIP");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DESTROY_FRIENDSHIP> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("EXISTS_FRIENDSHIP");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod EXISTS_FRIENDSHIP> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("SHOW_FRIENDSHIP");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod SHOW_FRIENDSHIP> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FRIENDS_IDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FRIENDS_IDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FOLLOWERS_IDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FOLLOWERS_IDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("RATE_LIMIT_STATUS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod RATE_LIMIT_STATUS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_DELIVERY_DEVICE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_DELIVERY_DEVICE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_PROFILE_COLORS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_PROFILE_COLORS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_PROFILE_IMAGE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_PROFILE_IMAGE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_PROFILE_BACKGROUND_IMAGE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_PROFILE_BACKGROUND_IMAGE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("UPDATE_PROFILE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_PROFILE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("FAVORITES");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod FAVORITES> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CREATE_FAVORITE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CREATE_FAVORITE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DESTROY_FAVORITE");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DESTROY_FAVORITE> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("ENABLE_NOTIFICATION");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod ENABLE_NOTIFICATION> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DISABLE_NOTIFICATION");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DISABLE_NOTIFICATION> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("CREATE_BLOCK");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod CREATE_BLOCK> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("DESTROY_BLOCK");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod DESTROY_BLOCK> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("EXISTS_BLOCK");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod EXISTS_BLOCK> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("BLOCKING_USERS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod BLOCKING_USERS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("BLOCKING_USERS_IDS");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod BLOCKING_USERS_IDS> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("REPORT_SPAM");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod REPORT_SPAM> = $r0;

        $r0 = new twitter4j.TwitterMethod;

        specialinvoke $r0.<twitter4j.TwitterMethod: void <init>(java.lang.String)>("TEST");

        <twitter4j.TwitterMethod: twitter4j.TwitterMethod TEST> = $r0;

        return;
    }

    private void <init>()
    {
        java.lang.AssertionError $r1;
        twitter4j.TwitterMethod r0;

        r0 := @this: twitter4j.TwitterMethod;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    private void <init>(java.lang.String)
    {
        java.lang.String $r1;
        twitter4j.TwitterMethod r0;
        java.util.Map $r2;

        r0 := @this: twitter4j.TwitterMethod;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<twitter4j.TwitterMethod: java.lang.String name> = $r1;

        $r2 = <twitter4j.TwitterMethod: java.util.Map instances>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        return;
    }

    private static twitter4j.TwitterMethod getInstance(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r1;
        java.lang.String $r0;
        twitter4j.TwitterMethod $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <twitter4j.TwitterMethod: java.util.Map instances>;

        $r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("SEARCH");

        $r3 = (twitter4j.TwitterMethod) $r1;

        return $r3;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        java.lang.String $r1;
        twitter4j.TwitterMethod r0;

        r0 := @this: twitter4j.TwitterMethod;

        $r1 = r0.<twitter4j.TwitterMethod: java.lang.String name>;

        r0 = staticinvoke <twitter4j.TwitterMethod: twitter4j.TwitterMethod getInstance(java.lang.String)>($r1);

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        java.lang.String $r2, $r4;
        twitter4j.TwitterMethod r0, r3;
        boolean $z0;

        r0 := @this: twitter4j.TwitterMethod;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof twitter4j.TwitterMethod;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r3 = (twitter4j.TwitterMethod) $r1;

        $r4 = r0.<twitter4j.TwitterMethod: java.lang.String name>;

        $r2 = r3.<twitter4j.TwitterMethod: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        twitter4j.TwitterMethod r0;

        r0 := @this: twitter4j.TwitterMethod;

        $r1 = r0.<twitter4j.TwitterMethod: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public final java.lang.String name()
    {
        java.lang.String r1;
        twitter4j.TwitterMethod r0;

        r0 := @this: twitter4j.TwitterMethod;

        r1 = r0.<twitter4j.TwitterMethod: java.lang.String name>;

        return r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        twitter4j.TwitterMethod r0;
        java.lang.StringBuffer $r1;

        r0 := @this: twitter4j.TwitterMethod;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method{name=\'");

        $r2 = r0.<twitter4j.TwitterMethod: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
