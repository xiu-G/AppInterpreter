public final class com.google.mygson.GsonBuilder extends java.lang.Object
{
    private boolean complexMapKeySerialization;
    private java.lang.String datePattern;
    private int dateStyle;
    private boolean escapeHtmlChars;
    private com.google.mygson.internal.Excluder excluder;
    private final java.util.List factories;
    private com.google.mygson.FieldNamingStrategy fieldNamingPolicy;
    private boolean generateNonExecutableJson;
    private final java.util.List hierarchyFactories;
    private final java.util.Map instanceCreators;
    private com.google.mygson.LongSerializationPolicy longSerializationPolicy;
    private boolean prettyPrinting;
    private boolean serializeNulls;
    private boolean serializeSpecialFloatingPointValues;
    private int timeStyle;

    public void <init>()
    {
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.FieldNamingPolicy $r3;
        com.google.mygson.LongSerializationPolicy $r2;
        com.google.mygson.internal.Excluder $r1;
        java.util.HashMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.google.mygson.GsonBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder DEFAULT>;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r1;

        $r2 = <com.google.mygson.LongSerializationPolicy: com.google.mygson.LongSerializationPolicy DEFAULT>;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.LongSerializationPolicy longSerializationPolicy> = $r2;

        $r3 = <com.google.mygson.FieldNamingPolicy: com.google.mygson.FieldNamingPolicy IDENTITY>;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.FieldNamingStrategy fieldNamingPolicy> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.google.mygson.GsonBuilder: java.util.Map instanceCreators> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.google.mygson.GsonBuilder: java.util.List factories> = $r5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.google.mygson.GsonBuilder: java.util.List hierarchyFactories> = $r5;

        r0.<com.google.mygson.GsonBuilder: int dateStyle> = 2;

        r0.<com.google.mygson.GsonBuilder: int timeStyle> = 2;

        r0.<com.google.mygson.GsonBuilder: boolean escapeHtmlChars> = 1;

        return;
    }

    private void addTypeAdaptersForDate(java.lang.String, int, int, java.util.List)
    {
        com.google.mygson.GsonBuilder r0;
        java.util.List r2;
        com.google.mygson.reflect.TypeToken $r6;
        com.google.mygson.TypeAdapterFactory $r7;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4;
        com.google.mygson.DefaultDateTypeAdapter r5;
        boolean $z0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        r2 := @parameter3: java.util.List;

        if $r1 == null goto label2;

        $r3 = "";

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        r5 = new com.google.mygson.DefaultDateTypeAdapter;

        specialinvoke r5.<com.google.mygson.DefaultDateTypeAdapter: void <init>(java.lang.String)>($r1);

     label1:
        $r6 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.Class)>(class "Ljava/util/Date;");

        $r7 = staticinvoke <com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory newFactory(com.google.mygson.reflect.TypeToken,java.lang.Object)>($r6, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r6 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.Class)>(class "Ljava/sql/Timestamp;");

        $r7 = staticinvoke <com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory newFactory(com.google.mygson.reflect.TypeToken,java.lang.Object)>($r6, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r6 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.Class)>(class "Ljava/sql/Date;");

        $r7 = staticinvoke <com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory newFactory(com.google.mygson.reflect.TypeToken,java.lang.Object)>($r6, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label2:
        if $i0 == 2 goto label3;

        if $i1 == 2 goto label3;

        r5 = new com.google.mygson.DefaultDateTypeAdapter;

        specialinvoke r5.<com.google.mygson.DefaultDateTypeAdapter: void <init>(int,int)>($i0, $i1);

        goto label1;

     label3:
        return;
    }

    public com.google.mygson.GsonBuilder addDeserializationExclusionStrategy(com.google.mygson.ExclusionStrategy)
    {
        com.google.mygson.internal.Excluder $r2;
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.ExclusionStrategy $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.ExclusionStrategy;

        $r2 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r2 = virtualinvoke $r2.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder withExclusionStrategy(com.google.mygson.ExclusionStrategy,boolean,boolean)>($r1, 0, 1);

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r2;

        return r0;
    }

    public com.google.mygson.GsonBuilder addSerializationExclusionStrategy(com.google.mygson.ExclusionStrategy)
    {
        com.google.mygson.internal.Excluder $r2;
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.ExclusionStrategy $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.ExclusionStrategy;

        $r2 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r2 = virtualinvoke $r2.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder withExclusionStrategy(com.google.mygson.ExclusionStrategy,boolean,boolean)>($r1, 1, 0);

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r2;

        return r0;
    }

    public com.google.mygson.Gson create()
    {
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.Gson $r6;
        java.util.ArrayList r3;
        com.google.mygson.FieldNamingStrategy $r8;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.mygson.LongSerializationPolicy $r2;
        com.google.mygson.internal.Excluder $r7;
        java.util.List $r4;

        r0 := @this: com.google.mygson.GsonBuilder;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<com.google.mygson.GsonBuilder: java.util.List factories>;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r3);

        $r4 = r0.<com.google.mygson.GsonBuilder: java.util.List hierarchyFactories>;

        interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = r0.<com.google.mygson.GsonBuilder: java.lang.String datePattern>;

        $i0 = r0.<com.google.mygson.GsonBuilder: int dateStyle>;

        $i1 = r0.<com.google.mygson.GsonBuilder: int timeStyle>;

        specialinvoke r0.<com.google.mygson.GsonBuilder: void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)>($r5, $i0, $i1, r3);

        $r6 = new com.google.mygson.Gson;

        $r7 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r8 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.FieldNamingStrategy fieldNamingPolicy>;

        $r1 = r0.<com.google.mygson.GsonBuilder: java.util.Map instanceCreators>;

        $z0 = r0.<com.google.mygson.GsonBuilder: boolean serializeNulls>;

        $z1 = r0.<com.google.mygson.GsonBuilder: boolean complexMapKeySerialization>;

        $z2 = r0.<com.google.mygson.GsonBuilder: boolean generateNonExecutableJson>;

        $z3 = r0.<com.google.mygson.GsonBuilder: boolean escapeHtmlChars>;

        $z4 = r0.<com.google.mygson.GsonBuilder: boolean prettyPrinting>;

        $z5 = r0.<com.google.mygson.GsonBuilder: boolean serializeSpecialFloatingPointValues>;

        $r2 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.LongSerializationPolicy longSerializationPolicy>;

        specialinvoke $r6.<com.google.mygson.Gson: void <init>(com.google.mygson.internal.Excluder,com.google.mygson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.mygson.LongSerializationPolicy,java.util.List)>($r7, $r8, $r1, $z0, $z1, $z2, $z3, $z4, $z5, $r2, r3);

        return $r6;
    }

    public com.google.mygson.GsonBuilder disableHtmlEscaping()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean escapeHtmlChars> = 0;

        return r0;
    }

    public com.google.mygson.GsonBuilder disableInnerClassSerialization()
    {
        com.google.mygson.internal.Excluder $r1;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r1 = virtualinvoke $r1.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder disableInnerClassSerialization()>();

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r1;

        return r0;
    }

    public com.google.mygson.GsonBuilder enableComplexMapKeySerialization()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean complexMapKeySerialization> = 1;

        return r0;
    }

    public transient com.google.mygson.GsonBuilder excludeFieldsWithModifiers(int[])
    {
        com.google.mygson.internal.Excluder $r2;
        com.google.mygson.GsonBuilder r0;
        int[] $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: int[];

        $r2 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r2 = virtualinvoke $r2.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder withModifiers(int[])>($r1);

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r2;

        return r0;
    }

    public com.google.mygson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
    {
        com.google.mygson.internal.Excluder $r1;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r1 = virtualinvoke $r1.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder excludeFieldsWithoutExposeAnnotation()>();

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r1;

        return r0;
    }

    public com.google.mygson.GsonBuilder generateNonExecutableJson()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean generateNonExecutableJson> = 1;

        return r0;
    }

    public com.google.mygson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)
    {
        com.google.mygson.GsonBuilder r0;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r9;
        com.google.mygson.reflect.TypeToken $r8;
        java.lang.reflect.Type $r1;
        com.google.mygson.InstanceCreator $r7;
        com.google.mygson.TypeAdapterFactory $r10;
        java.util.Map $r6;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        com.google.mygson.TypeAdapter $r11;
        boolean $z0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: java.lang.reflect.Type;

        $r2 := @parameter1: java.lang.Object;

        $z0 = $r2 instanceof com.google.mygson.JsonSerializer;

        if $z0 != 0 goto label1;

        $z0 = $r2 instanceof com.google.mygson.JsonDeserializer;

        if $z0 != 0 goto label1;

        $z0 = $r2 instanceof com.google.mygson.InstanceCreator;

        if $z0 != 0 goto label1;

        $z0 = $r2 instanceof com.google.mygson.TypeAdapter;

        if $z0 == 0 goto label4;

     label1:
        $z0 = 1;

     label2:
        staticinvoke <com.google.mygson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        $z0 = staticinvoke <com.google.mygson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)>($r1);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <com.google.mygson.internal.Primitives: boolean isWrapperType(java.lang.reflect.Type)>($r1);

        if $z0 == 0 goto label5;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot register type adapters for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label4:
        $z0 = 0;

        goto label2;

     label5:
        $z0 = $r2 instanceof com.google.mygson.InstanceCreator;

        if $z0 == 0 goto label6;

        $r6 = r0.<com.google.mygson.GsonBuilder: java.util.Map instanceCreators>;

        $r7 = (com.google.mygson.InstanceCreator) $r2;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r7);

     label6:
        $z0 = $r2 instanceof com.google.mygson.JsonSerializer;

        if $z0 != 0 goto label7;

        $z0 = $r2 instanceof com.google.mygson.JsonDeserializer;

        if $z0 == 0 goto label8;

     label7:
        $r8 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r1);

        $r9 = r0.<com.google.mygson.GsonBuilder: java.util.List factories>;

        $r10 = staticinvoke <com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.mygson.reflect.TypeToken,java.lang.Object)>($r8, $r2);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

     label8:
        $z0 = $r2 instanceof com.google.mygson.TypeAdapter;

        if $z0 == 0 goto label9;

        $r9 = r0.<com.google.mygson.GsonBuilder: java.util.List factories>;

        $r8 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r1);

        $r11 = (com.google.mygson.TypeAdapter) $r2;

        $r10 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newFactory(com.google.mygson.reflect.TypeToken,com.google.mygson.TypeAdapter)>($r8, $r11);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

     label9:
        return r0;
    }

    public com.google.mygson.GsonBuilder registerTypeAdapterFactory(com.google.mygson.TypeAdapterFactory)
    {
        com.google.mygson.GsonBuilder r0;
        java.util.List $r2;
        com.google.mygson.TypeAdapterFactory $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.TypeAdapterFactory;

        $r2 = r0.<com.google.mygson.GsonBuilder: java.util.List factories>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return r0;
    }

    public com.google.mygson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)
    {
        com.google.mygson.GsonBuilder r0;
        java.util.List $r3;
        com.google.mygson.TypeAdapterFactory $r4;
        java.lang.Class r1;
        java.lang.Object r2;
        com.google.mygson.TypeAdapter r5;
        boolean $z0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $z0 = r2 instanceof com.google.mygson.JsonSerializer;

        if $z0 != 0 goto label1;

        $z0 = r2 instanceof com.google.mygson.JsonDeserializer;

        if $z0 != 0 goto label1;

        $z0 = r2 instanceof com.google.mygson.TypeAdapter;

        if $z0 == 0 goto label5;

     label1:
        $z0 = 1;

     label2:
        staticinvoke <com.google.mygson.internal.$Gson$Preconditions: void checkArgument(boolean)>($z0);

        $z0 = r2 instanceof com.google.mygson.JsonDeserializer;

        if $z0 != 0 goto label3;

        $z0 = r2 instanceof com.google.mygson.JsonSerializer;

        if $z0 == 0 goto label4;

     label3:
        $r3 = r0.<com.google.mygson.GsonBuilder: java.util.List hierarchyFactories>;

        $r4 = staticinvoke <com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)>(r1, r2);

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r4);

     label4:
        $z0 = r2 instanceof com.google.mygson.TypeAdapter;

        if $z0 == 0 goto label6;

        $r3 = r0.<com.google.mygson.GsonBuilder: java.util.List factories>;

        r5 = (com.google.mygson.TypeAdapter) r2;

        $r4 = staticinvoke <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.mygson.TypeAdapter)>(r1, r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r0;

     label5:
        $z0 = 0;

        goto label2;

     label6:
        return r0;
    }

    public com.google.mygson.GsonBuilder serializeNulls()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean serializeNulls> = 1;

        return r0;
    }

    public com.google.mygson.GsonBuilder serializeSpecialFloatingPointValues()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean serializeSpecialFloatingPointValues> = 1;

        return r0;
    }

    public com.google.mygson.GsonBuilder setDateFormat(int)
    {
        int $i0;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $i0 := @parameter0: int;

        r0.<com.google.mygson.GsonBuilder: int dateStyle> = $i0;

        r0.<com.google.mygson.GsonBuilder: java.lang.String datePattern> = null;

        return r0;
    }

    public com.google.mygson.GsonBuilder setDateFormat(int, int)
    {
        int $i0, $i1;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        r0.<com.google.mygson.GsonBuilder: int dateStyle> = $i0;

        r0.<com.google.mygson.GsonBuilder: int timeStyle> = $i1;

        r0.<com.google.mygson.GsonBuilder: java.lang.String datePattern> = null;

        return r0;
    }

    public com.google.mygson.GsonBuilder setDateFormat(java.lang.String)
    {
        com.google.mygson.GsonBuilder r0;
        java.lang.String $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: java.lang.String;

        r0.<com.google.mygson.GsonBuilder: java.lang.String datePattern> = $r1;

        return r0;
    }

    public transient com.google.mygson.GsonBuilder setExclusionStrategies(com.google.mygson.ExclusionStrategy[])
    {
        com.google.mygson.ExclusionStrategy[] $r1;
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.ExclusionStrategy r2;
        int i0, i1;
        com.google.mygson.internal.Excluder $r3;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.ExclusionStrategy[];

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        $r3 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r3 = virtualinvoke $r3.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder withExclusionStrategy(com.google.mygson.ExclusionStrategy,boolean,boolean)>(r2, 1, 1);

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public com.google.mygson.GsonBuilder setFieldNamingPolicy(com.google.mygson.FieldNamingPolicy)
    {
        com.google.mygson.GsonBuilder r0;
        com.google.mygson.FieldNamingPolicy $r1;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.FieldNamingPolicy;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.FieldNamingStrategy fieldNamingPolicy> = $r1;

        return r0;
    }

    public com.google.mygson.GsonBuilder setFieldNamingStrategy(com.google.mygson.FieldNamingStrategy)
    {
        com.google.mygson.FieldNamingStrategy $r1;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.FieldNamingStrategy;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.FieldNamingStrategy fieldNamingPolicy> = $r1;

        return r0;
    }

    public com.google.mygson.GsonBuilder setLongSerializationPolicy(com.google.mygson.LongSerializationPolicy)
    {
        com.google.mygson.LongSerializationPolicy $r1;
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $r1 := @parameter0: com.google.mygson.LongSerializationPolicy;

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.LongSerializationPolicy longSerializationPolicy> = $r1;

        return r0;
    }

    public com.google.mygson.GsonBuilder setPrettyPrinting()
    {
        com.google.mygson.GsonBuilder r0;

        r0 := @this: com.google.mygson.GsonBuilder;

        r0.<com.google.mygson.GsonBuilder: boolean prettyPrinting> = 1;

        return r0;
    }

    public com.google.mygson.GsonBuilder setVersion(double)
    {
        com.google.mygson.internal.Excluder $r1;
        com.google.mygson.GsonBuilder r0;
        double $d0;

        r0 := @this: com.google.mygson.GsonBuilder;

        $d0 := @parameter0: double;

        $r1 = r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder>;

        $r1 = virtualinvoke $r1.<com.google.mygson.internal.Excluder: com.google.mygson.internal.Excluder withVersion(double)>($d0);

        r0.<com.google.mygson.GsonBuilder: com.google.mygson.internal.Excluder excluder> = $r1;

        return r0;
    }
}
