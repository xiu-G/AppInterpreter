public class proguard.classfile.attribute.preverification.SameOneFrame extends proguard.classfile.attribute.preverification.StackMapFrame
{
    public proguard.classfile.attribute.preverification.VerificationType stackItem;

    public void <init>()
    {
        proguard.classfile.attribute.preverification.SameOneFrame r0;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        int $i0;
        proguard.classfile.attribute.preverification.SameOneFrame r0;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $i0 := @parameter0: int;

        specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: void <init>()>();

        $i0 = $i0 - 64;

        r0.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta> = $i0;

        return;
    }

    public void <init>(proguard.classfile.attribute.preverification.VerificationType)
    {
        proguard.classfile.attribute.preverification.VerificationType $r1;
        proguard.classfile.attribute.preverification.SameOneFrame r0;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $r1 := @parameter0: proguard.classfile.attribute.preverification.VerificationType;

        specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: void <init>()>();

        r0.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem> = $r1;

        return;
    }

    public void accept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.SameOneFrame r0;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor $r4;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor;

        interfaceinvoke $r4.<proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor: void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame)>($r1, $r2, $r3, $i0, r0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        proguard.classfile.attribute.preverification.VerificationType $r3, $r4;
        proguard.classfile.attribute.preverification.SameOneFrame r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = (proguard.classfile.attribute.preverification.SameOneFrame) $r1;

        $i0 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta>;

        $i1 = $r2.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta>;

        if $i0 != $i1 goto label2;

        $r3 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem>;

        $r4 = $r2.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem>;

        $z0 = virtualinvoke $r3.<proguard.classfile.attribute.preverification.VerificationType: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int getTag()
    {
        int $i0;
        proguard.classfile.attribute.preverification.SameOneFrame r0;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $i0 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta>;

        if $i0 >= 64 goto label1;

        $i0 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: int u2offsetDelta>;

        $i0 = $i0 + 64;

        return $i0;

     label1:
        return 247;
    }

    public int hashCode()
    {
        proguard.classfile.attribute.preverification.SameOneFrame r0;
        int $i0, $i1;
        proguard.classfile.attribute.preverification.VerificationType $r1;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $i0 = specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: int hashCode()>();

        $r1 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem>;

        $i1 = virtualinvoke $r1.<proguard.classfile.attribute.preverification.VerificationType: int hashCode()>();

        $i0 = $i0 ^ $i1;

        return $i0;
    }

    public void stackItemAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)
    {
        proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.attribute.preverification.SameOneFrame r0;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.preverification.VerificationType $r5;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor;

        $r5 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem>;

        virtualinvoke $r5.<proguard.classfile.attribute.preverification.VerificationType: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor)>($r1, $r2, $r3, $i0, $r4);

        return;
    }

    public java.lang.String toString()
    {
        proguard.classfile.attribute.preverification.SameOneFrame r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        proguard.classfile.attribute.preverification.VerificationType $r3;

        r0 := @this: proguard.classfile.attribute.preverification.SameOneFrame;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r0.<proguard.classfile.attribute.preverification.StackMapFrame: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Var: ..., Stack: [");

        $r3 = r0.<proguard.classfile.attribute.preverification.SameOneFrame: proguard.classfile.attribute.preverification.VerificationType stackItem>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
