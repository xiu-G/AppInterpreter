public final class a.a.a.a extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        java.lang.Throwable $r2;
        byte[] $r1;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <a.a.a.a: byte[] a(byte[])>($r1);

        $r0 = new java.lang.String;

     label1:
        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "ASCII");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("ASCII is not supported!", $r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static void a(java.io.InputStream, java.io.OutputStream)
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 == -1 goto label2;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;

     label2:
        return;
    }

    public static byte[] a(byte[])
    {
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10;
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.RuntimeException $r2;
        java.io.ByteArrayInputStream $r3;
        a.a.a.c $r4;

        $r0 := @parameter0: byte[];

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        $r4 = new a.a.a.c;

     label02:
        specialinvoke $r4.<a.a.a.c: void <init>(java.io.OutputStream)>($r1);

        staticinvoke <a.a.a.a: void a(java.io.InputStream,java.io.OutputStream)>($r3, $r4);

        virtualinvoke $r4.<a.a.a.c: void a()>();

     label03:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label04:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label05:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label06:
        $r5 := @caughtexception;

     label07:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected I/O error", $r5);

        throw $r2;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label10:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

        goto label04;

     label13:
        $r8 := @caughtexception;

        goto label05;

     label14:
        $r9 := @caughtexception;

        goto label10;

     label15:
        $r10 := @caughtexception;

        goto label11;

        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label15;
    }

    public static byte[] b(byte[])
    {
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10;
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.RuntimeException $r2;
        a.a.a.b $r4;
        java.io.ByteArrayInputStream $r3;

        $r0 := @parameter0: byte[];

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        $r4 = new a.a.a.b;

     label02:
        specialinvoke $r4.<a.a.a.b: void <init>(java.io.InputStream)>($r3);

        staticinvoke <a.a.a.a: void a(java.io.InputStream,java.io.OutputStream)>($r4, $r1);

     label03:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label04:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label05:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r0;

     label06:
        $r5 := @caughtexception;

     label07:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected I/O error", $r5);

        throw $r2;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke $r3.<java.io.ByteArrayInputStream: void close()>();

     label10:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label11:
        throw $r6;

     label12:
        $r7 := @caughtexception;

        goto label04;

     label13:
        $r8 := @caughtexception;

        goto label05;

     label14:
        $r9 := @caughtexception;

        goto label10;

     label15:
        $r10 := @caughtexception;

        goto label11;

        catch java.io.IOException from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label15;
    }
}
