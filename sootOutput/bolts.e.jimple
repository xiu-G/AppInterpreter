final class bolts.e extends java.lang.Object
{
    private static final bolts.e a;
    private final java.util.concurrent.ExecutorService b;
    private final java.util.concurrent.Executor c;

    static void <clinit>()
    {
        bolts.e $r0;

        $r0 = new bolts.e;

        specialinvoke $r0.<bolts.e: void <init>()>();

        <bolts.e: bolts.e a> = $r0;

        return;
    }

    private void <init>()
    {
        bolts.e r0;
        bolts.f $r3;
        java.util.Locale $r4;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;

        r0 := @this: bolts.e;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.runtime.name");

        if $r1 != null goto label3;

        $z0 = 0;

     label1:
        if $z0 != 0 goto label4;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

     label2:
        r0.<bolts.e: java.util.concurrent.ExecutorService b> = $r2;

        $r3 = new bolts.f;

        specialinvoke $r3.<bolts.f: void <init>(byte)>(0);

        r0.<bolts.e: java.util.concurrent.Executor c> = $r3;

        return;

     label3:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("android");

        goto label1;

     label4:
        $r2 = staticinvoke <bolts.a: java.util.concurrent.ExecutorService a()>();

        goto label2;
    }

    public static java.util.concurrent.ExecutorService a()
    {
        bolts.e $r0;
        java.util.concurrent.ExecutorService r1;

        $r0 = <bolts.e: bolts.e a>;

        r1 = $r0.<bolts.e: java.util.concurrent.ExecutorService b>;

        return r1;
    }

    static java.util.concurrent.Executor b()
    {
        bolts.e $r0;
        java.util.concurrent.Executor r1;

        $r0 = <bolts.e: bolts.e a>;

        r1 = $r0.<bolts.e: java.util.concurrent.Executor c>;

        return r1;
    }
}
