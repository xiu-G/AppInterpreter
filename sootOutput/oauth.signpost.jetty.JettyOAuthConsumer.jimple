public class oauth.signpost.jetty.JettyOAuthConsumer extends oauth.signpost.AbstractOAuthConsumer
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String $r1, $r2;
        oauth.signpost.jetty.JettyOAuthConsumer r0;

        r0 := @this: oauth.signpost.jetty.JettyOAuthConsumer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<oauth.signpost.AbstractOAuthConsumer: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected oauth.signpost.http.HttpRequest wrap(java.lang.Object)
    {
        org.mortbay.jetty.client.HttpExchange $r3;
        java.lang.Object $r2;
        oauth.signpost.jetty.JettyOAuthConsumer r0;
        oauth.signpost.jetty.HttpRequestAdapter $r1;

        r0 := @this: oauth.signpost.jetty.JettyOAuthConsumer;

        $r2 := @parameter0: java.lang.Object;

        $r1 = new oauth.signpost.jetty.HttpRequestAdapter;

        $r3 = (org.mortbay.jetty.client.HttpExchange) $r2;

        specialinvoke $r1.<oauth.signpost.jetty.HttpRequestAdapter: void <init>(org.mortbay.jetty.client.HttpExchange)>($r3);

        return $r1;
    }

    public static void <clinit>()
    {
        <oauth.signpost.jetty.JettyOAuthConsumer: long serialVersionUID> = 1L;

        return;
    }
}
