public class com.qq.taf.jce.JceOutputStream extends java.lang.Object
{
    private java.nio.ByteBuffer bs;
    protected java.lang.String sServerEncoding;

    public void <init>()
    {
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        specialinvoke r0.<com.qq.taf.jce.JceOutputStream: void <init>(int)>(128);

        return;
    }

    public void <init>(int)
    {
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.qq.taf.jce.JceOutputStream: java.lang.String sServerEncoding> = "GBK";

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs> = $r1;

        return;
    }

    public void <init>(java.nio.ByteBuffer)
    {
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.qq.taf.jce.JceOutputStream: java.lang.String sServerEncoding> = "GBK";

        r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r3;
        byte[] $r4;
        java.lang.String[] $r0;
        java.lang.String $r5;
        com.qq.taf.jce.JceOutputStream r1;
        java.nio.ByteBuffer $r2;

        $r0 := @parameter0: java.lang.String[];

        r1 = new com.qq.taf.jce.JceOutputStream;

        specialinvoke r1.<com.qq.taf.jce.JceOutputStream: void <init>()>();

        virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: void write(long,int)>(1311768467283714885L, 0);

        $r2 = virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer getByteBuffer()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $r5 = staticinvoke <com.qq.taf.jce.HexUtil: java.lang.String bytes2HexStr(byte[])>($r4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke r1.<com.qq.taf.jce.JceOutputStream: byte[] toByteArray()>();

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r4);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    private void writeArray(java.lang.Object[], int)
    {
        java.lang.Object[] $r1;
        int $i0, i1;
        java.lang.Object r2;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.lang.Object,int)>(r2, 0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.nio.ByteBuffer getByteBuffer()
    {
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        return r1;
    }

    public void reserve(int)
    {
        byte[] $r3;
        int $i0, $i1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $i0 := @parameter0: int;

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        if $i1 >= $i0 goto label1;

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i1 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        $i0 = $i1 + $i0;

        $i0 = $i0 * 2;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r3, 0, $i0);

        r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs> = $r1;

     label1:
        return;
    }

    public int setServerEncoding(java.lang.String)
    {
        java.lang.String $r1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.String;

        r0.<com.qq.taf.jce.JceOutputStream: java.lang.String sServerEncoding> = $r1;

        return 0;
    }

    public byte[] toByteArray()
    {
        byte[] r1, $r3;
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i0);

        return r1;
    }

    public void write(byte, int)
    {
        byte $b0;
        int $i1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(3);

        if $b0 != 0 goto label1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(12, $i1);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(0, $i1);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        return;
    }

    public void write(double, int)
    {
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;
        double $d0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(10);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(5, $i0);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        return;
    }

    public void write(float, int)
    {
        int $i0;
        float $f0;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $f0 := @parameter0: float;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(6);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(4, $i0);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        return;
    }

    public void write(int, int)
    {
        short $s2;
        int $i0, $i1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(6);

        if $i0 < -32768 goto label1;

        if $i0 > 32767 goto label1;

        $s2 = (short) $i0;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(short,int)>($s2, $i1);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(2, $i1);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        return;
    }

    public void write(long, int)
    {
        byte $b2;
        int $i1, $i3;
        long $l0;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(10);

        $b2 = $l0 cmp -2147483648L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label1;

        $b2 = $l0 cmp 2147483647L;

        $i3 = (int) $b2;

        if $i3 > 0 goto label1;

        $i3 = (int) $l0;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i3, $i1);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(3, $i1);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);

        return;
    }

    public void write(com.qq.taf.jce.JceStruct, int)
    {
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        com.qq.taf.jce.JceStruct $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: com.qq.taf.jce.JceStruct;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(2);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(10, $i0);

        virtualinvoke $r1.<com.qq.taf.jce.JceStruct: void writeTo(com.qq.taf.jce.JceOutputStream)>(r0);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(2);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(11, 0);

        return;
    }

    public void write(java.lang.Boolean, int)
    {
        int $i0;
        java.lang.Boolean $r1;
        com.qq.taf.jce.JceOutputStream r0;
        boolean $z0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Boolean;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(boolean,int)>($z0, $i0);

        return;
    }

    public void write(java.lang.Byte, int)
    {
        byte $b1;
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        java.lang.Byte $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Byte;

        $i0 := @parameter1: int;

        $b1 = virtualinvoke $r1.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(byte,int)>($b1, $i0);

        return;
    }

    public void write(java.lang.Double, int)
    {
        java.lang.Double $r1;
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        double $d0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Double;

        $i0 := @parameter1: int;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(double,int)>($d0, $i0);

        return;
    }

    public void write(java.lang.Float, int)
    {
        java.lang.Float $r1;
        int $i0;
        float $f0;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Float;

        $i0 := @parameter1: int;

        $f0 = virtualinvoke $r1.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(float,int)>($f0, $i0);

        return;
    }

    public void write(java.lang.Integer, int)
    {
        int $i0, $i1;
        com.qq.taf.jce.JceOutputStream r0;
        java.lang.Integer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Integer;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i1, $i0);

        return;
    }

    public void write(java.lang.Long, int)
    {
        java.lang.Long $r1;
        int $i0;
        long $l1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Long;

        $i0 := @parameter1: int;

        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(long,int)>($l1, $i0);

        return;
    }

    public void write(java.lang.Object, int)
    {
        java.lang.Float r7;
        byte[] r13;
        java.lang.Integer r5;
        byte $b1;
        java.lang.Long r6;
        int[] r16;
        java.lang.Short r4;
        java.util.Map r10;
        java.lang.Byte r2;
        boolean $z0;
        java.util.Collection r22;
        java.util.List r11;
        float $f0;
        com.qq.taf.jce.JceEncodeException $r23;
        java.lang.StringBuilder $r24;
        short[] r15;
        com.qq.taf.jce.JceOutputStream r0;
        java.lang.Object[] r21;
        java.lang.Double r8;
        double[] r19;
        long $l4;
        float[] r18;
        short $s2;
        long[] r17;
        int $i0, $i3;
        java.lang.Boolean r3;
        java.lang.String r9;
        com.qq.taf.jce.JceStruct r12;
        double $d0;
        boolean[] r14;
        java.lang.Object r1;
        java.lang.Class $r20;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $z0 = r1 instanceof java.lang.Byte;

        if $z0 == 0 goto label01;

        r2 = (java.lang.Byte) r1;

        $b1 = virtualinvoke r2.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(byte,int)>($b1, $i0);

        return;

     label01:
        $z0 = r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label02;

        r3 = (java.lang.Boolean) r1;

        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(boolean,int)>($z0, $i0);

        return;

     label02:
        $z0 = r1 instanceof java.lang.Short;

        if $z0 == 0 goto label03;

        r4 = (java.lang.Short) r1;

        $s2 = virtualinvoke r4.<java.lang.Short: short shortValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(short,int)>($s2, $i0);

        return;

     label03:
        $z0 = r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label04;

        r5 = (java.lang.Integer) r1;

        $i3 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i3, $i0);

        return;

     label04:
        $z0 = r1 instanceof java.lang.Long;

        if $z0 == 0 goto label05;

        r6 = (java.lang.Long) r1;

        $l4 = virtualinvoke r6.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(long,int)>($l4, $i0);

        return;

     label05:
        $z0 = r1 instanceof java.lang.Float;

        if $z0 == 0 goto label06;

        r7 = (java.lang.Float) r1;

        $f0 = virtualinvoke r7.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(float,int)>($f0, $i0);

        return;

     label06:
        $z0 = r1 instanceof java.lang.Double;

        if $z0 == 0 goto label07;

        r8 = (java.lang.Double) r1;

        $d0 = virtualinvoke r8.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(double,int)>($d0, $i0);

        return;

     label07:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label08;

        r9 = (java.lang.String) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.lang.String,int)>(r9, $i0);

        return;

     label08:
        $z0 = r1 instanceof java.util.Map;

        if $z0 == 0 goto label09;

        r10 = (java.util.Map) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.util.Map,int)>(r10, $i0);

        return;

     label09:
        $z0 = r1 instanceof java.util.List;

        if $z0 == 0 goto label10;

        r11 = (java.util.List) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.util.Collection,int)>(r11, $i0);

        return;

     label10:
        $z0 = r1 instanceof com.qq.taf.jce.JceStruct;

        if $z0 == 0 goto label11;

        r12 = (com.qq.taf.jce.JceStruct) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(com.qq.taf.jce.JceStruct,int)>(r12, $i0);

        return;

     label11:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label12;

        r13 = (byte[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(byte[],int)>(r13, $i0);

        return;

     label12:
        $z0 = r1 instanceof boolean[];

        if $z0 == 0 goto label13;

        r14 = (boolean[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(boolean[],int)>(r14, $i0);

        return;

     label13:
        $z0 = r1 instanceof short[];

        if $z0 == 0 goto label14;

        r15 = (short[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(short[],int)>(r15, $i0);

        return;

     label14:
        $z0 = r1 instanceof int[];

        if $z0 == 0 goto label15;

        r16 = (int[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int[],int)>(r16, $i0);

        return;

     label15:
        $z0 = r1 instanceof long[];

        if $z0 == 0 goto label16;

        r17 = (long[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(long[],int)>(r17, $i0);

        return;

     label16:
        $z0 = r1 instanceof float[];

        if $z0 == 0 goto label17;

        r18 = (float[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(float[],int)>(r18, $i0);

        return;

     label17:
        $z0 = r1 instanceof double[];

        if $z0 == 0 goto label18;

        r19 = (double[]) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(double[],int)>(r19, $i0);

        return;

     label18:
        $r20 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r20.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label19;

        r21 = (java.lang.Object[]) r1;

        specialinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeArray(java.lang.Object[],int)>(r21, $i0);

        return;

     label19:
        $z0 = r1 instanceof java.util.Collection;

        if $z0 == 0 goto label20;

        r22 = (java.util.Collection) r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.util.Collection,int)>(r22, $i0);

        return;

     label20:
        $r23 = new com.qq.taf.jce.JceEncodeException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write object error: unsupport type. ");

        $r20 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        r9 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<com.qq.taf.jce.JceEncodeException: void <init>(java.lang.String)>(r9);

        throw $r23;
    }

    public void write(java.lang.Short, int)
    {
        short $s1;
        java.lang.Short $r1;
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.Short;

        $i0 := @parameter1: int;

        $s1 = virtualinvoke $r1.<java.lang.Short: short shortValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(short,int)>($s1, $i0);

        return;
    }

    public void write(java.lang.String, int)
    {
        java.lang.Throwable r2;
        byte[] $r4;
        java.nio.ByteBuffer $r5;
        byte $b2;
        int $i0, $i1;
        java.lang.String $r1, $r3;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.lang.String sServerEncoding>;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

     label2:
        $i1 = lengthof $r4;

        $i1 = $i1 + 10;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>($i1);

        $i1 = lengthof $r4;

        if $i1 <= 255 goto label4;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(7, $i0);

        $r5 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r4;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r5 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r4);

        return;

     label3:
        r2 := @caughtexception;

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        goto label2;

     label4:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(6, $i0);

        $r5 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r4;

        $b2 = (byte) $i0;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        $r5 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r4);

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void write(java.util.Collection, int)
    {
        java.util.Iterator $r2;
        java.util.Collection r1;
        int $i0;
        java.lang.Object $r3;
        com.qq.taf.jce.JceOutputStream r0;
        boolean $z0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        r1 := @parameter0: java.util.Collection;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        if r1 != null goto label3;

        $i0 = 0;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        if r1 == null goto label4;

        $r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.lang.Object,int)>($r3, 0);

        goto label2;

     label3:
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        goto label1;

     label4:
        return;
    }

    public void write(java.util.Map, int)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r4;
        com.qq.taf.jce.JceOutputStream r0;
        boolean $z0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        r1 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(8, $i0);

        if r1 != null goto label3;

        $i0 = 0;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        if r1 == null goto label4;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.lang.Object,int)>($r4, 0);

        $r4 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(java.lang.Object,int)>($r4, 1);

        goto label2;

     label3:
        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        goto label1;

     label4:
        return;
    }

    public void write(short, int)
    {
        short $s0;
        byte $b2;
        int $i1, $i3;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $s0 := @parameter0: short;

        $i1 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(4);

        $i3 = (int) $s0;

        if $i3 < -128 goto label1;

        $i3 = (int) $s0;

        if $i3 > 127 goto label1;

        $b2 = (byte) $s0;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(byte,int)>($b2, $i1);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(1, $i1);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>($s0);

        return;
    }

    public void write(boolean, int)
    {
        byte b1;
        int $i0;
        com.qq.taf.jce.JceOutputStream r0;
        boolean $z0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        b1 = (byte) $z0;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(byte,int)>(b1, $i0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void write(byte[], int)
    {
        byte[] $r1;
        int $i0, $i1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 = lengthof $r1;

        $i1 = $i1 + 8;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>($i1);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(13, $i0);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(0, 0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $r2 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r1);

        return;
    }

    public void write(double[], int)
    {
        double[] $r1;
        int $i0, i1;
        com.qq.taf.jce.JceOutputStream r0;
        double d0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        d0 = $r1[i1];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(double,int)>(d0, 0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(float[], int)
    {
        int $i0, i1;
        float f0;
        float[] $r1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: float[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        f0 = $r1[i1];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(float,int)>(f0, 0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(int[], int)
    {
        int[] $r1;
        int $i0, i1, i2;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        i1 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i0 = $r1[i2];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(long[], int)
    {
        long[] $r1;
        int $i0, i2;
        long l1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: long[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        l1 = $r1[i2];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(long,int)>(l1, 0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(java.lang.Object[], int)
    {
        int $i0;
        java.lang.Object[] r1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        r1 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        specialinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeArray(java.lang.Object[],int)>(r1, $i0);

        return;
    }

    public void write(short[], int)
    {
        short s1;
        int $i0, i2;
        short[] $r1;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: short[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= $i0 goto label2;

        s1 = $r1[i2];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(short,int)>(s1, 0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(boolean[], int)
    {
        boolean[] $r1;
        int $i0, i1;
        com.qq.taf.jce.JceOutputStream r0;
        boolean z0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: boolean[];

        $i0 := @parameter1: int;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>(8);

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(9, $i0);

        $i0 = lengthof $r1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i0, 0);

        $i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        z0 = $r1[i1];

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void write(boolean,int)>(z0, 0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeByteString(java.lang.String, int)
    {
        byte[] $r2;
        byte $b2;
        int $i0, $i1;
        java.lang.String $r1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r3;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 + 10;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>($i1);

        $r2 = staticinvoke <com.qq.taf.jce.HexUtil: byte[] hexStr2Bytes(java.lang.String)>($r1);

        $i1 = lengthof $r2;

        if $i1 <= 255 goto label1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(7, $i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r2;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(6, $i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r2;

        $b2 = (byte) $i0;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        return;
    }

    public void writeHead(byte, int)
    {
        java.nio.ByteBuffer $r1;
        short $s2;
        byte $b0;
        int $i1, $i3;
        java.lang.StringBuilder $r2, $r4;
        com.qq.taf.jce.JceEncodeException $r5;
        java.lang.String $r3;
        com.qq.taf.jce.JceOutputStream r0;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $b0 := @parameter0: byte;

        $i1 := @parameter1: int;

        if $i1 >= 15 goto label1;

        $i1 = $i1 << 4;

        $i3 = (int) $b0;

        $i1 = $i1 | $i3;

        $b0 = (byte) $i1;

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        return;

     label1:
        if $i1 >= 256 goto label2;

        $s2 = (short) $b0;

        $s2 = $s2 | 240;

        $b0 = (byte) $s2;

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        $r1 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $b0 = (byte) $i1;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b0);

        return;

     label2:
        $r5 = new com.qq.taf.jce.JceEncodeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tag is too large: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.qq.taf.jce.JceEncodeException: void <init>(java.lang.String)>($r3);

        throw $r5;
    }

    public void writeStringByte(java.lang.String, int)
    {
        byte[] $r2;
        byte $b2;
        int $i0, $i1;
        java.lang.String $r1;
        com.qq.taf.jce.JceOutputStream r0;
        java.nio.ByteBuffer $r3;

        r0 := @this: com.qq.taf.jce.JceOutputStream;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <com.qq.taf.jce.HexUtil: byte[] hexStr2Bytes(java.lang.String)>($r1);

        $i1 = lengthof $r2;

        $i1 = $i1 + 10;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void reserve(int)>($i1);

        $i1 = lengthof $r2;

        if $i1 <= 255 goto label1;

        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(7, $i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r2;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        return;

     label1:
        virtualinvoke r0.<com.qq.taf.jce.JceOutputStream: void writeHead(byte,int)>(6, $i0);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        $i0 = lengthof $r2;

        $b2 = (byte) $i0;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

        $r3 = r0.<com.qq.taf.jce.JceOutputStream: java.nio.ByteBuffer bs>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        return;
    }
}
