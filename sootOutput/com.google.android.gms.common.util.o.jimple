public class com.google.android.gms.common.util.o extends java.lang.Object
{
    private static java.lang.String a;
    private static int b;

    static void <clinit>()
    {
        return;
    }

    public static java.lang.String a()
    {
        int $i0;
        java.lang.String $r0;

        $r0 = <com.google.android.gms.common.util.o: java.lang.String a>;

        if $r0 != null goto label2;

        $i0 = <com.google.android.gms.common.util.o: int b>;

        if $i0 != 0 goto label1;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        <com.google.android.gms.common.util.o: int b> = $i0;

     label1:
        $i0 = <com.google.android.gms.common.util.o: int b>;

        $r0 = staticinvoke <com.google.android.gms.common.util.o: java.lang.String b(int)>($i0);

        <com.google.android.gms.common.util.o: java.lang.String a> = $r0;

     label2:
        $r0 = <com.google.android.gms.common.util.o: java.lang.String a>;

        return $r0;
    }

    private static java.lang.String b(int)
    {
        java.lang.Throwable $r1, $r2, $r6, $r7;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        java.io.BufferedReader $r4, $r5;

        $i0 := @parameter0: int;

        if $i0 > 0 goto label01;

        return null;

     label01:
        $r0 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(25);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/cmdline");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.google.android.gms.common.util.o: java.io.BufferedReader c(java.lang.String)>($r3);

     label03:
        $r5 = $r4;

     label04:
        $r3 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label05:
        staticinvoke <com.google.android.gms.common.util.k: void a(java.io.Closeable)>($r4);

        return $r3;

     label06:
        $r6 := @caughtexception;

        goto label08;

     label07:
        $r7 := @caughtexception;

        $r6 = $r7;

        $r5 = null;

     label08:
        staticinvoke <com.google.android.gms.common.util.k: void a(java.io.Closeable)>($r5);

        throw $r6;

     label09:
        $r5 = null;

     label10:
        staticinvoke <com.google.android.gms.common.util.k: void a(java.io.Closeable)>($r5);

        return null;

     label11:
        $r1 := @caughtexception;

        goto label09;

     label12:
        $r2 := @caughtexception;

        goto label10;

        catch java.io.IOException from label02 to label03 with label11;
        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label06;
    }

    private static java.io.BufferedReader c(java.lang.String)
    {
        java.lang.Throwable $r4;
        android.os.StrictMode$ThreadPolicy $r2;
        java.io.BufferedReader $r0;
        java.io.FileReader $r1;
        java.lang.String $r3;

        $r3 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label1:
        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.FileReader;

        specialinvoke $r1.<java.io.FileReader: void <init>(java.lang.String)>($r3);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        return $r0;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
