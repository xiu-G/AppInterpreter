public class com.adchina.android.ads.Utils extends java.lang.Object
{
    private static java.lang.String a;

    public void <init>()
    {
        com.adchina.android.ads.Utils r0;

        r0 := @this: com.adchina.android.ads.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int GetRandomNumber()
    {
        int $i0;
        double $d0;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $i0 = (int) $d0;

        return $i0;
    }

    public static void closeStream(java.io.InputStream)
    {
        java.lang.Throwable $r1;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeStream(java.io.OutputStream)
    {
        java.io.OutputStream $r0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.io.OutputStream;

        if $r0 == null goto label4;

     label1:
        virtualinvoke $r0.<java.io.OutputStream: void flush()>();

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static transient java.lang.String concatString(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $r3 = $r0[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static android.graphics.Bitmap convertByteArrayTobitmap(byte[])
    {
        byte[] $r0;
        android.graphics.Bitmap $r1;
        int $i0;
        java.lang.Exception $r2;

        $r0 := @parameter0: byte[];

     label1:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r0, 0, $i0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static android.graphics.Bitmap convertStreamToBitmap(java.io.InputStream)
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r1, $r5;
        android.graphics.Bitmap $r3;
        int $i0;
        java.lang.Exception $r4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r5 = new java.io.ByteArrayOutputStream;

        $r1 = $r5;

     label1:
        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

     label3:
        if $i0 != -1 goto label6;

     label4:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        staticinvoke <com.adchina.android.ads.Utils: void closeStream(java.io.InputStream)>($r0);

        $r3 = staticinvoke <com.adchina.android.ads.Utils: android.graphics.Bitmap convertByteArrayTobitmap(byte[])>($r2);

     label5:
        return $r3;

     label6:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label7:
        goto label2;

     label8:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    protected static java.lang.String convertStreamToString(java.io.InputStream)
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r6;
        java.io.IOException $r10;
        java.io.InputStreamReader $r1, $r7;
        int $i0;
        char[] $r3;
        java.lang.StringBuilder $r2, $r9;
        java.lang.String $r4;
        java.io.BufferedReader $r8;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r8 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        $r9 = new java.lang.StringBuilder;

        $r2 = $r9;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r7 = new java.io.InputStreamReader;

        $r1 = $r7;

     label1:
        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

     label2:
        $r3 = newarray (char)[1000];

     label3:
        $i0 = virtualinvoke $r1.<java.io.InputStreamReader: int read(char[])>($r3);

     label4:
        if $i0 >= 0 goto label6;

     label5:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, 0, $i0);

     label7:
        goto label3;

     label8:
        $r5 := @caughtexception;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "convertStreamToString:";

        $r10 = (java.io.IOException) $r5;

        $r4 = virtualinvoke $r10.<java.io.IOException: java.lang.String toString()>();

        $r6[1] = $r4;

        $r4 = staticinvoke <com.adchina.android.ads.Utils: java.lang.String concatString(java.lang.Object[])>($r6);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdChinaError", $r4);

        goto label5;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public static int dip2px(android.content.Context, float)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, $f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 * 32.0F;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.String getActiveNetworkType(android.content.Context)
    {
        android.net.ConnectivityManager $r2;
        android.content.Context $r0;
        java.lang.StringBuffer $r4;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        java.lang.String $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r2.<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>();

        if $z0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r3.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label3:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String getIMEI(android.content.Context)
    {
        android.content.Context $r0;
        android.net.wifi.WifiInfo $r5;
        long $l0, $l1;
        java.util.UUID $r6;
        android.net.wifi.WifiManager $r4;
        android.content.ContentResolver $r7;
        android.telephony.TelephonyManager $r3;
        int $i2;
        java.lang.Object $r2;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.adchina.android.ads.Utils: java.lang.String a>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r1 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        <com.adchina.android.ads.Utils: java.lang.String a> = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r4 = (android.net.wifi.WifiManager) $r2;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        if $r5 == null goto label1;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r1 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        if $r1 == null goto label1;

        $r6 = new java.util.UUID;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r1 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $l0 = (long) $i2;

        $r1 = "adchina";

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $l1 = (long) $i2;

        specialinvoke $r6.<java.util.UUID: void <init>(long,long)>($l0, $l1);

        $r1 = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>();

        <com.adchina.android.ads.Utils: java.lang.String a> = $r1;

     label1:
        $r1 = <com.adchina.android.ads.Utils: java.lang.String a>;

        if $r1 != null goto label2;

        $r7 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r7, "android_id");

        <com.adchina.android.ads.Utils: java.lang.String a> = $r1;

     label2:
        $r1 = <com.adchina.android.ads.Utils: java.lang.String a>;

        if $r1 != null goto label3;

        return "";

     label3:
        $r1 = <com.adchina.android.ads.Utils: java.lang.String a>;

        return $r1;
    }

    public static java.lang.String getNetworkTypes(android.content.Context)
    {
        android.net.ConnectivityManager $r3;
        android.content.Context $r0;
        android.net.NetworkInfo $r6;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r5;
        android.net.NetworkInfo[] $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        if $r4 == null goto label2;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label3;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label5;

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String substring(int)>(1);

        return $r5;

     label3:
        $r6 = $r4[$i1];

        $z0 = virtualinvoke $r6.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r6.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $r5 = virtualinvoke $r6.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return "";
    }

    public static java.lang.String getNowTime(java.lang.String)
    {
        java.text.SimpleDateFormat $r1;
        java.lang.String $r0;
        java.util.Date $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        $r0 = virtualinvoke $r1.<java.text.Format: java.lang.String format(java.lang.Object)>($r2);

        return $r0;
    }

    public static java.lang.String getSDPath()
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        return $r0;

     label1:
        return "";
    }

    public static boolean isCachedFileTimeout(java.lang.String)
    {
        java.lang.Throwable $r1;
        java.lang.Object[] $r2;
        java.lang.String $r0;
        java.text.ParseException $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $z0 = staticinvoke <com.adchina.android.ads.Utils: boolean isCachedFileTimeout(java.lang.String,int)>($r0, 7);

     label2:
        return $z0;

     label3:
        $r1 := @caughtexception;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "isCachedFileTimeout:";

        $r3 = (java.text.ParseException) $r1;

        $r0 = virtualinvoke $r3.<java.text.ParseException: java.lang.String toString()>();

        $r2[1] = $r0;

        $r0 = staticinvoke <com.adchina.android.ads.Utils: java.lang.String concatString(java.lang.Object[])>($r2);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdChinaError", $r0);

        return 1;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static boolean isCachedFileTimeout(java.lang.String, int)
    {
        java.util.Date $r2, $r4;
        java.text.SimpleDateFormat $r1;
        java.util.Calendar $r3;
        int $i0, $i1;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= 14 goto label1;

        return 1;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 14);

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(5, 7);

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $z0 = virtualinvoke $r4.<java.util.Date: boolean before(java.util.Date)>($r2);

        return $z0;
    }

    public static boolean isExists(android.content.res.Resources, int)
    {
        int $i0;
        java.lang.Throwable $r1;
        android.content.res.Resources $r0;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

     label1:
        virtualinvoke $r0.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    public static boolean isWifiOrNotRoaming3G(android.content.Context)
    {
        android.net.ConnectivityManager $r3;
        android.content.Context $r0;
        java.lang.Object[] $r5;
        android.net.NetworkInfo $r4;
        android.telephony.TelephonyManager $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r6;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r1;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke $r4.<android.net.NetworkInfo: int getType()>();

        virtualinvoke $r4.<android.net.NetworkInfo: int getSubtype()>();

        if $i0 != 1 goto label3;

        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnected()>();

        return $z0;

     label3:
        $r5 = newarray (java.lang.Object)[3];

        $r6 = virtualinvoke $r4.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $r5[0] = $r6;

        $r5[1] = ",";

        $r6 = virtualinvoke $r4.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        $r5[2] = $r6;

        $r6 = staticinvoke <com.adchina.android.ads.Utils: java.lang.String concatString(java.lang.Object[])>($r5);

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        if $i0 != 0 goto label5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("UMTS");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("EVDO");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("WCDMA");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("HSDPA");

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("HSUPA");

        if $z0 == 0 goto label5;

     label4:
        $z0 = virtualinvoke $r2.<android.telephony.TelephonyManager: boolean isNetworkRoaming()>();

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnected()>();

        return $z0;

     label5:
        return 0;
    }

    public static android.graphics.Bitmap loadAssetsBitmap(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        android.graphics.Bitmap $r3;
        java.lang.String $r1;
        java.io.InputStream $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.adchina.android.ads.Utils: java.io.InputStream loadAssetsInputStream(android.content.Context,java.lang.String)>($r0, $r1);

        $r3 = staticinvoke <com.adchina.android.ads.Utils: android.graphics.Bitmap convertStreamToBitmap(java.io.InputStream)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.io.InputStream loadAssetsInputStream(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r4;
        android.content.Context $r0;
        android.content.res.AssetManager $r2;
        java.lang.String $r1;
        java.io.InputStream $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = virtualinvoke $r2.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static int px2dip(android.content.Context, float)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, $f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static void setWindowBackgroundColor(android.view.Window, int, int)
    {
        int $i0, $i1;
        android.graphics.drawable.ColorDrawable $r1;
        android.view.Window $r0;

        $r0 := @parameter0: android.view.Window;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i1 << 24;

        $i0 = $i1 | $i0;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        virtualinvoke $r0.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public static void splitTrackUrl(java.lang.String, java.util.LinkedList)
    {
        int $i0, $i1;
        java.lang.String $r0, $r2;
        java.util.LinkedList $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.LinkedList;

        virtualinvoke $r1.<java.util.LinkedList: void clear()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("|||", $i0);

        if -1 != $i1 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label4;

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r0);

        return;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

     label3:
        $i0 = $i1 + 3;

        goto label1;

     label4:
        return;
    }
}
