public class proguard.classfile.editor.InterfacesEditor extends java.lang.Object
{
    private final proguard.classfile.ProgramClass targetClass;

    public void <init>(proguard.classfile.ProgramClass)
    {
        proguard.classfile.editor.InterfacesEditor r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.InterfacesEditor;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass> = $r1;

        return;
    }

    private int findInterfaceIndex(int)
    {
        int[] $r2;
        proguard.classfile.editor.InterfacesEditor r0;
        int $i0, $i1, $i2, $i3;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.InterfacesEditor;

        $i0 := @parameter0: int;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $i2 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $r2 = $r1.<proguard.classfile.ProgramClass: int[] u2interfaces>;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $i1 = $r2[$i3];

        if $i1 != $i0 goto label2;

        return $i3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    public void addInterface(int)
    {
        int[] $r2, $r3;
        proguard.classfile.editor.InterfacesEditor r0;
        int $i0, $i1, $i2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.InterfacesEditor;

        $i0 := @parameter0: int;

        $i1 = specialinvoke r0.<proguard.classfile.editor.InterfacesEditor: int findInterfaceIndex(int)>($i0);

        if $i1 >= 0 goto label2;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $i1 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        $i2 = $i1 + 1;

        $r1.<proguard.classfile.ProgramClass: int u2interfacesCount> = $i2;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $r2 = $r1.<proguard.classfile.ProgramClass: int[] u2interfaces>;

        $i2 = lengthof $r2;

        if $i2 > $i1 goto label1;

        $i2 = $i1 + 1;

        $r3 = newarray (int)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i1);

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $r1.<proguard.classfile.ProgramClass: int[] u2interfaces> = $r3;

        $r2 = $r3;

     label1:
        $r2[$i1] = $i0;

     label2:
        return;
    }

    public void deleteInterface(int)
    {
        int[] $r2;
        proguard.classfile.editor.InterfacesEditor r0;
        int $i0, $i1, $i2;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.InterfacesEditor;

        $i0 := @parameter0: int;

        $i1 = specialinvoke r0.<proguard.classfile.editor.InterfacesEditor: int findInterfaceIndex(int)>($i0);

        $i0 = $i1;

        if $i1 < 0 goto label3;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $i1 = $r1.<proguard.classfile.ProgramClass: int u2interfacesCount>;

        $i1 = $i1 - 1;

        $r1.<proguard.classfile.ProgramClass: int u2interfacesCount> = $i1;

        $r1 = r0.<proguard.classfile.editor.InterfacesEditor: proguard.classfile.ProgramClass targetClass>;

        $r2 = $r1.<proguard.classfile.ProgramClass: int[] u2interfaces>;

     label1:
        if $i0 >= $i1 goto label2;

        $i2 = $i0 + 1;

        $i2 = $r2[$i2];

        $r2[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r2[$i1] = 0;

     label3:
        return;
    }
}
