final class com.google.zxing.client.result.GeoResultParser extends com.google.zxing.client.result.ResultParser
{

    private void <init>()
    {
        com.google.zxing.client.result.GeoResultParser r0;

        r0 := @this: com.google.zxing.client.result.GeoResultParser;

        specialinvoke r0.<com.google.zxing.client.result.ResultParser: void <init>()>();

        return;
    }

    public static com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result)
    {
        com.google.zxing.Result $r0;
        java.lang.Throwable $r4;
        com.google.zxing.client.result.GeoParsedResult $r5;
        byte $b2;
        int $i0, $i1, $i3;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        double $d0, $d1, $d2;

        $r0 := @parameter0: com.google.zxing.Result;

        $r1 = virtualinvoke $r0.<com.google.zxing.Result: java.lang.String getText()>();

        if $r1 == null goto label15;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("geo:");

        if $z0 != 0 goto label01;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("GEO:");

        if $z0 != 0 goto label01;

        return null;

     label01:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(63, 4);

        if $i1 >= 0 goto label08;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(4);

        $r2 = null;

     label02:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(44);

        if $i0 < 0 goto label15;

        $i1 = $i0 + 1;

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(44, $i1);

     label03:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label04:
        $b2 = $d0 cmpl 90.0;

        $i3 = (int) $b2;

        if $i3 > 0 goto label15;

        $b2 = $d0 cmpg -90.0;

        $i3 = (int) $b2;

        if $i3 < 0 goto label15;

        if $i1 >= 0 goto label09;

        $i0 = $i0 + 1;

     label05:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

     label06:
        $d2 = 0.0;

     label07:
        $b2 = $d1 cmpl 180.0;

        $i0 = (int) $b2;

        if $i0 > 0 goto label15;

        $b2 = $d1 cmpg -180.0;

        $i0 = (int) $b2;

        if $i0 < 0 goto label15;

        $b2 = $d2 cmpg 0.0;

        $i0 = (int) $b2;

        if $i0 < 0 goto label15;

        $r5 = new com.google.zxing.client.result.GeoParsedResult;

        specialinvoke $r5.<com.google.zxing.client.result.GeoParsedResult: void <init>(double,double,double,java.lang.String)>($d0, $d1, $d2, $r2);

        return $r5;

     label08:
        $i0 = $i1 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(4, $i1);

        goto label02;

     label09:
        $i0 = $i0 + 1;

     label10:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label11:
        $i0 = $i1 + 1;

     label12:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

     label13:
        goto label07;

     label14:
        $r4 := @caughtexception;

     label15:
        return null;

        catch java.lang.NumberFormatException from label03 to label04 with label14;
        catch java.lang.NumberFormatException from label05 to label06 with label14;
        catch java.lang.NumberFormatException from label10 to label11 with label14;
        catch java.lang.NumberFormatException from label12 to label13 with label14;
    }
}
