public class cn.domob.android.a.f extends java.lang.Object
{

    public void <init>()
    {
        cn.domob.android.a.f r0;

        r0 := @this: cn.domob.android.a.f;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.net.Proxy a(android.content.Context)
    {
        android.content.Context $r0;
        android.net.Uri $r15;
        java.net.Proxy$Type $r10;
        java.net.Proxy $r1, $r9, $r20;
        android.content.ContentResolver $r16;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r8;
        boolean $z0;
        android.database.Cursor $r3;
        android.net.ConnectivityManager $r13;
        android.net.NetworkInfo $r14;
        java.net.InetSocketAddress $r11, $r19;
        java.lang.Exception $r17;
        java.lang.Class $r5;
        java.lang.StringBuilder $r7, $r18;
        java.lang.Object $r12;

        $r0 := @parameter0: android.content.Context;

        $r1 = null;

     label01:
        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_NETWORK_STATE");

     label02:
        if $i0 != -1 goto label34;

     label03:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DomobSDK", "Cannot access user\'s network type.  Permissions are not set.");

     label04:
        $r2 = "";

     label05:
        if $r2 == null goto label41;

     label06:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("wifi");

     label07:
        if $z0 == 0 goto label41;

     label08:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label09:
        if $z0 == 0 goto label11;

     label10:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "download network is wifi, don\'t read apn.");

     label11:
        $r3 = null;

     label12:
        if $r3 == null goto label52;

     label13:
        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getCount()>();

     label14:
        if $i0 <= 0 goto label43;

     label15:
        interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("proxy");

        $r2 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("port");

        $i0 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>($i0);

        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("apn");

        $r4 = interfaceinvoke $r3.<android.database.Cursor: java.lang.String getString(int)>($i1);

     label16:
        $r5 = class "Lcn/domob/android/a/f;";

     label17:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

     label18:
        $r18 = new java.lang.StringBuilder;

        $r7 = $r18;

     label19:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" port: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" apnType: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.domob.android.ads.w: void c(java.lang.Object,java.lang.String)>($r6, $r8);

     label20:
        if $r2 == null goto label50;

     label21:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

     label22:
        if $z0 != 0 goto label50;

        if $i0 == 0 goto label50;

     label23:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ctwap");

     label24:
        if $z0 != 0 goto label50;

     label25:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label26:
        if $z0 == 0 goto label28;

        $r18 = new java.lang.StringBuilder;

        $r7 = $r18;

     label27:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("download use proxy ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" port:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r4);

     label28:
        $r20 = new java.net.Proxy;

        $r9 = $r20;

        $r10 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r19 = new java.net.InetSocketAddress;

        $r11 = $r19;

     label29:
        specialinvoke $r19.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r2, $i0);

        specialinvoke $r20.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r10, $r11);

     label30:
        $r1 = $r9;

     label31:
        if $r3 == null goto label32;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label32:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

        if $z0 == 0 goto label51;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("download use proxy ");

        if $r1 == null goto label48;

        $z0 = 1;

     label33:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r2);

        return $r1;

     label34:
        $r12 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r13 = (android.net.ConnectivityManager) $r12;

        $r14 = virtualinvoke $r13.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label35:
        if $r14 == null goto label04;

     label36:
        $i0 = virtualinvoke $r14.<android.net.NetworkInfo: int getType()>();

     label37:
        if $i0 != 0 goto label40;

     label38:
        $r4 = virtualinvoke $r14.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

     label39:
        $r2 = $r4;

        if $r4 != null goto label05;

        $r2 = "GPRS";

        goto label05;

     label40:
        if $i0 != 1 goto label04;

        $r2 = "wifi";

        goto label05;

     label41:
        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://telephony/carriers/preferapn");

        $r16 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = virtualinvoke $r16.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r15, null, null, null, null);

     label42:
        goto label12;

     label43:
        if $r3 == null goto label52;

     label44:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label45:
        return null;

     label46:
        $r17 := @caughtexception;

     label47:
        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

        goto label31;

     label48:
        $z0 = 0;

        goto label33;

     label49:
        $r17 := @caughtexception;

        $r3 = null;

        goto label47;

     label50:
        $r9 = null;

        goto label30;

     label51:
        return $r1;

     label52:
        return null;

        catch java.lang.Exception from label01 to label02 with label49;
        catch java.lang.Exception from label03 to label04 with label49;
        catch java.lang.Exception from label06 to label07 with label49;
        catch java.lang.Exception from label08 to label09 with label49;
        catch java.lang.Exception from label10 to label11 with label49;
        catch java.lang.Exception from label13 to label14 with label46;
        catch java.lang.Exception from label15 to label16 with label46;
        catch java.lang.Exception from label17 to label18 with label46;
        catch java.lang.Exception from label19 to label20 with label46;
        catch java.lang.Exception from label21 to label22 with label46;
        catch java.lang.Exception from label23 to label24 with label46;
        catch java.lang.Exception from label25 to label26 with label46;
        catch java.lang.Exception from label27 to label28 with label46;
        catch java.lang.Exception from label29 to label30 with label46;
        catch java.lang.Exception from label34 to label35 with label49;
        catch java.lang.Exception from label36 to label37 with label49;
        catch java.lang.Exception from label38 to label39 with label49;
        catch java.lang.Exception from label41 to label42 with label49;
        catch java.lang.Exception from label44 to label45 with label46;
    }
}
