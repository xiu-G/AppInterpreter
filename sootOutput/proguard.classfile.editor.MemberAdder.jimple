public class proguard.classfile.editor.MemberAdder extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.MemberVisitor
{
    private static final boolean DEBUG;
    private static final proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES;
    private final proguard.classfile.editor.ClassEditor classEditor;
    private final proguard.classfile.editor.ConstantAdder constantAdder;
    private final proguard.classfile.editor.ConstantPoolEditor constantPoolEditor;
    private final proguard.classfile.ProgramClass targetClass;

    static void <clinit>()
    {
        proguard.classfile.attribute.Attribute[] $r0;

        $r0 = newarray (proguard.classfile.attribute.Attribute)[0];

        <proguard.classfile.editor.MemberAdder: proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES> = $r0;

        return;
    }

    public void <init>(proguard.classfile.ProgramClass)
    {
        proguard.classfile.editor.ConstantAdder $r2;
        proguard.classfile.editor.MemberAdder r0;
        proguard.classfile.editor.ClassEditor $r3;
        proguard.classfile.editor.ConstantPoolEditor $r4;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.classfile.editor.MemberAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass> = $r1;

        $r2 = new proguard.classfile.editor.ConstantAdder;

        specialinvoke $r2.<proguard.classfile.editor.ConstantAdder: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantAdder constantAdder> = $r2;

        $r3 = new proguard.classfile.editor.ClassEditor;

        specialinvoke $r3.<proguard.classfile.editor.ClassEditor: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ClassEditor classEditor> = $r3;

        $r4 = new proguard.classfile.editor.ConstantPoolEditor;

        specialinvoke $r4.<proguard.classfile.editor.ConstantPoolEditor: void <init>(proguard.classfile.ProgramClass)>($r1);

        r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor> = $r4;

        return;
    }

    private java.lang.String newUniqueMemberName(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r3;
        proguard.classfile.editor.MemberAdder r0;
        int $i0;
        long $l1;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: proguard.classfile.editor.MemberAdder;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z0 == 0 goto label1;

        return "<init>";

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(36);

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $l1 = (long) $i0;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        proguard.classfile.editor.ClassEditor $r13;
        proguard.classfile.attribute.Attribute[] $r11;
        proguard.classfile.ProgramClass $r1, $r6;
        proguard.classfile.Clazz $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4, $r5;
        proguard.classfile.editor.ConstantPoolEditor $r9;
        proguard.classfile.editor.AttributeAdder $r12;
        proguard.classfile.editor.ConstantAdder $r10;
        proguard.classfile.editor.MemberAdder r0;
        proguard.classfile.Field $r7;
        proguard.classfile.ProgramField $r2, $r8;

        r0 := @this: proguard.classfile.editor.MemberAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r5 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramField: int getAccessFlags()>();

        $r6 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        $r7 = virtualinvoke $r6.<proguard.classfile.ProgramClass: proguard.classfile.Field findField(java.lang.String,java.lang.String)>($r4, $r5);

        $r8 = (proguard.classfile.ProgramField) $r7;

        if $r8 == null goto label1;

        $i1 = virtualinvoke $r8.<proguard.classfile.ProgramField: int getAccessFlags()>();

        $i1 = $i1 & 10;

        if $i1 == 0 goto label1;

        $r9 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r6 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        $r5 = virtualinvoke $r6.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = specialinvoke r0.<proguard.classfile.editor.MemberAdder: java.lang.String newUniqueMemberName(java.lang.String,java.lang.String)>($r4, $r5);

        $i1 = virtualinvoke $r9.<proguard.classfile.editor.ConstantPoolEditor: int addUtf8Constant(java.lang.String)>($r4);

        $r8.<proguard.classfile.ProgramField: int u2nameIndex> = $i1;

     label1:
        $r8 = new proguard.classfile.ProgramField;

        $r10 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i1 = $r2.<proguard.classfile.ProgramField: int u2nameIndex>;

        $i1 = virtualinvoke $r10.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i1);

        $r10 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i2 = $r2.<proguard.classfile.ProgramField: int u2descriptorIndex>;

        $i2 = virtualinvoke $r10.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i2);

        $i3 = $r2.<proguard.classfile.ProgramField: int u2attributesCount>;

        if $i3 <= 0 goto label3;

        $i3 = $r2.<proguard.classfile.ProgramField: int u2attributesCount>;

        $r11 = newarray (proguard.classfile.attribute.Attribute)[$i3];

     label2:
        $r3 = $r2.<proguard.classfile.ProgramField: proguard.classfile.Clazz referencedClass>;

        specialinvoke $r8.<proguard.classfile.ProgramField: void <init>(int,int,int,int,proguard.classfile.attribute.Attribute[],proguard.classfile.Clazz)>($i0, $i1, $i2, 0, $r11, $r3);

        virtualinvoke $r8.<proguard.classfile.ProgramField: void setVisitorInfo(java.lang.Object)>($r2);

        $r12 = new proguard.classfile.editor.AttributeAdder;

        $r6 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        specialinvoke $r12.<proguard.classfile.editor.AttributeAdder: void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,boolean)>($r6, $r8, 0);

        virtualinvoke $r2.<proguard.classfile.ProgramField: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r12);

        $r13 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ClassEditor classEditor>;

        virtualinvoke $r13.<proguard.classfile.editor.ClassEditor: void addField(proguard.classfile.Field)>($r8);

        return;

     label3:
        $r11 = <proguard.classfile.editor.MemberAdder: proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES>;

        goto label2;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        proguard.classfile.Clazz[] $r11;
        proguard.classfile.editor.ClassEditor $r13;
        proguard.classfile.attribute.Attribute[] $r10;
        proguard.classfile.ProgramClass $r1, $r5;
        proguard.classfile.ProgramMethod $r2, $r7, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4;
        proguard.classfile.editor.ConstantPoolEditor $r8;
        proguard.classfile.editor.AttributeAdder $r14;
        proguard.classfile.editor.ConstantAdder $r9;
        proguard.classfile.editor.MemberAdder r0;
        proguard.classfile.Method $r6;
        java.lang.Object $r12;

        r0 := @this: proguard.classfile.editor.MemberAdder;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $i0 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: int getAccessFlags()>();

        $r5 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        $r6 = virtualinvoke $r5.<proguard.classfile.ProgramClass: proguard.classfile.Method findMethod(java.lang.String,java.lang.String)>($r3, $r4);

        $r7 = (proguard.classfile.ProgramMethod) $r6;

        if $r7 == null goto label3;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke $r7.<proguard.classfile.ProgramMethod: int getAccessFlags()>();

        $i1 = $i1 & 1024;

        if $i1 == 0 goto label2;

        $i0 = $i0 & -17;

        $r7.<proguard.classfile.ProgramMethod: int u2accessFlags> = $i0;

        $r14 = new proguard.classfile.editor.AttributeAdder;

        $r5 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        specialinvoke $r14.<proguard.classfile.editor.AttributeAdder: void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,boolean)>($r5, $r7, 1);

        virtualinvoke $r2.<proguard.classfile.ProgramMethod: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r14);

        return;

     label2:
        $r8 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantPoolEditor constantPoolEditor>;

        $r3 = specialinvoke r0.<proguard.classfile.editor.MemberAdder: java.lang.String newUniqueMemberName(java.lang.String,java.lang.String)>($r3, $r4);

        $i1 = virtualinvoke $r8.<proguard.classfile.editor.ConstantPoolEditor: int addUtf8Constant(java.lang.String)>($r3);

        $r7.<proguard.classfile.ProgramMethod: int u2nameIndex> = $i1;

     label3:
        $r15 = new proguard.classfile.ProgramMethod;

        $r7 = $r15;

        $i0 = $i0 & -17;

        $r9 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i1 = $r2.<proguard.classfile.ProgramMethod: int u2nameIndex>;

        $i1 = virtualinvoke $r9.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i1);

        $r9 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ConstantAdder constantAdder>;

        $i2 = $r2.<proguard.classfile.ProgramMethod: int u2descriptorIndex>;

        $i2 = virtualinvoke $r9.<proguard.classfile.editor.ConstantAdder: int addConstant(proguard.classfile.Clazz,int)>($r1, $i2);

        $i3 = $r2.<proguard.classfile.ProgramMethod: int u2attributesCount>;

        if $i3 <= 0 goto label6;

        $i3 = $r2.<proguard.classfile.ProgramMethod: int u2attributesCount>;

        $r10 = newarray (proguard.classfile.attribute.Attribute)[$i3];

     label4:
        $r11 = $r2.<proguard.classfile.ProgramMethod: proguard.classfile.Clazz[] referencedClasses>;

        if $r11 == null goto label7;

        $r11 = $r2.<proguard.classfile.ProgramMethod: proguard.classfile.Clazz[] referencedClasses>;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (proguard.classfile.Clazz[]) $r12;

     label5:
        specialinvoke $r15.<proguard.classfile.ProgramMethod: void <init>(int,int,int,int,proguard.classfile.attribute.Attribute[],proguard.classfile.Clazz[])>($i0, $i1, $i2, 0, $r10, $r11);

        virtualinvoke $r7.<proguard.classfile.ProgramMethod: void setVisitorInfo(java.lang.Object)>($r2);

        $r14 = new proguard.classfile.editor.AttributeAdder;

        $r5 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.ProgramClass targetClass>;

        specialinvoke $r14.<proguard.classfile.editor.AttributeAdder: void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,boolean)>($r5, $r7, 0);

        virtualinvoke $r2.<proguard.classfile.ProgramMethod: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, $r14);

        $r13 = r0.<proguard.classfile.editor.MemberAdder: proguard.classfile.editor.ClassEditor classEditor>;

        virtualinvoke $r13.<proguard.classfile.editor.ClassEditor: void addMethod(proguard.classfile.Method)>($r7);

        return;

     label6:
        $r10 = <proguard.classfile.editor.MemberAdder: proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES>;

        goto label4;

     label7:
        $r11 = null;

        goto label5;
    }
}
