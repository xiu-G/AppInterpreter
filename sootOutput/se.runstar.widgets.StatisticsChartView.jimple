public class se.runstar.widgets.StatisticsChartView extends android.view.View implements android.graphics.drawable.Drawable$Callback
{
    private se.runstar.views.j a;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        se.runstar.widgets.StatisticsChartView r0;
        android.content.Context $r1;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        se.runstar.views.j $r5;
        java.lang.String $r7;
        boolean $z0, $z1, $z2;
        android.content.res.Resources $r6;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <se.runstar.R$styleable: int[] i>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 0);

        $z1 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(4, -16777216);

        $i1 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(5, -12303292);

        $i2 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(6, -7829368);

        $i3 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, 48);

        $i4 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(9, 9);

        $i5 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(10, 25);

        virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(12, 20);

        $i6 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(13, 6);

        $z2 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(14, 0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r5 = new se.runstar.views.j;

        specialinvoke $r5.<se.runstar.views.j: void <init>(android.content.Context,int,int,int,int,boolean)>($r1, $i3, $i4, $i5, $i6, $z2);

        r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a> = $r5;

        $r5 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r5.<se.runstar.views.j: void a(int,int)>($i0, $i1);

        $r5 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r5.<se.runstar.views.j: void a(int)>($i2);

        $r5 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r5.<se.runstar.views.j: void a(boolean,boolean)>($z1, $z0);

        $r5 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r5.<se.runstar.views.j: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $r5 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int)>(2131230773);

        virtualinvoke $r5.<se.runstar.views.j: void a(java.lang.String)>($r7);

        virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: void setDrawingCacheEnabled(boolean)>(1);

        return;
    }

    public final void a(android.database.Cursor, java.lang.String)
    {
        se.runstar.widgets.StatisticsChartView r0;
        se.runstar.views.j $r3;
        java.lang.String $r2;
        android.database.Cursor $r1;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.database.Cursor;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r3.<se.runstar.views.j: void a(android.database.Cursor,java.lang.String,java.lang.String)>($r1, $r2, null);

        return;
    }

    public final void a(java.lang.String, float)
    {
        se.runstar.widgets.StatisticsChartView r0;
        float $f0;
        se.runstar.views.j $r2;
        java.lang.String $r1;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r2 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r2.<se.runstar.views.j: void a(java.lang.String,float)>($r1, $f0);

        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        se.runstar.widgets.StatisticsChartView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: void invalidate()>();

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        se.runstar.widgets.StatisticsChartView r0;
        android.graphics.Canvas $r1;
        se.runstar.views.j $r2;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke $r1.<android.graphics.Canvas: void drawColor(int)>(0);

        $r2 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        virtualinvoke $r2.<se.runstar.views.j: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        se.runstar.widgets.StatisticsChartView r0;
        int $i0, $i1, $i2, $i3, $i4;
        se.runstar.views.j $r1;
        boolean $z0;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);

        if $z0 == 0 goto label1;

        $r1 = r0.<se.runstar.widgets.StatisticsChartView: se.runstar.views.j a>;

        $i0 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getPaddingLeft()>();

        $i1 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getPaddingTop()>();

        $i2 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getWidth()>();

        $i3 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getHeight()>();

        $i4 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        virtualinvoke $r1.<se.runstar.views.j: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

     label1:
        return;
    }

    protected void onMeasure(int, int)
    {
        se.runstar.widgets.StatisticsChartView r0;
        int $i0, $i1;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 50);

        virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        se.runstar.widgets.StatisticsChartView r0;
        android.os.Handler $r3;
        long $l0, $l1;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: android.os.Handler getHandler()>();

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l0 = $l1 + $l0;

        virtualinvoke $r3.<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>($r2, $r1, $l0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        se.runstar.widgets.StatisticsChartView r0;
        android.os.Handler $r3;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;

        r0 := @this: se.runstar.widgets.StatisticsChartView;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = virtualinvoke r0.<se.runstar.widgets.StatisticsChartView: android.os.Handler getHandler()>();

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>($r2, $r1);

        return;
    }
}
