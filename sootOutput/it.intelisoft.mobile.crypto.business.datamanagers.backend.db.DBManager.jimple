public class it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager extends android.database.sqlite.SQLiteOpenHelper
{
    private android.content.Context context_;

    public void <init>(android.content.Context, java.lang.String, int)
    {
        android.content.Context $r1;
        int $i0;
        java.lang.String $r2;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "crypto.db", null, 1);

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: android.content.Context context_> = null;

        r0.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: android.content.Context context_> = $r1;

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        android.content.Context $r3;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate r2, $r4;
        int $i0;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 = new it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate;

        r2 = $r4;

        $r3 = r0.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: android.content.Context context_>;

        $i0 = -1;

        specialinvoke $r4.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: void <init>(android.content.Context,android.database.sqlite.SQLiteDatabase,int,int)>($r3, $r1, 1, $i0);

        virtualinvoke r2.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>();

        virtualinvoke r2.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>();

        virtualinvoke r2.<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>();

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager r0;

        r0 := @this: it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Upgrading database, FROM ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version TO ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Database upgrade", $r3);

        lookupswitch($i0)
        {
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Database upgrade", "NO UPGRADES");

     label2:
        return;
    }
}
