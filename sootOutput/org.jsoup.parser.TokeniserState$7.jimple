final enum class org.jsoup.parser.TokeniserState$7 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        org.jsoup.parser.TokeniserState$7 r0;
        java.lang.String $r1;

        r0 := @this: org.jsoup.parser.TokeniserState$7;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>("PLAINTEXT", 6, null);

        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.CharacterReader $r2;
        org.jsoup.parser.Token$EOF $r4;
        org.jsoup.parser.Tokeniser $r1;
        int $i1;
        char $c0;
        org.jsoup.parser.TokeniserState$7 r0;
        java.lang.String $r3;

        r0 := @this: org.jsoup.parser.TokeniserState$7;

        $r1 := @parameter0: org.jsoup.parser.Tokeniser;

        $r2 := @parameter1: org.jsoup.parser.CharacterReader;

        $c0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: char current()>();

        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 65535: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeTo(char)>(0);

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>($r3);

        return;

     label2:
        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(r0);

        virtualinvoke $r2.<org.jsoup.parser.CharacterReader: void advance()>();

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void emit(char)>(65533);

        return;

     label3:
        $r4 = new org.jsoup.parser.Token$EOF;

        specialinvoke $r4.<org.jsoup.parser.Token$EOF: void <init>()>();

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void emit(org.jsoup.parser.Token)>($r4);

        return;
    }
}
