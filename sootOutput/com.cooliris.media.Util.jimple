public class com.cooliris.media.Util extends java.lang.Object
{
    private static final java.lang.String MAPS_CLASS_NAME;
    private static final java.lang.String MAPS_PACKAGE_NAME;
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.cooliris.media.Util r0;

        r0 := @this: com.cooliris.media.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void Assert(boolean)
    {
        java.lang.AssertionError $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        return;
    }

    public static void closeSilently(android.os.ParcelFileDescriptor)
    {
        java.lang.Throwable $r1;
        android.os.ParcelFileDescriptor $r0;

        $r0 := @parameter0: android.os.ParcelFileDescriptor;

        if $r0 != null goto label1;

        return;

     label1:
        virtualinvoke $r0.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void closeSilently(java.io.Closeable)
    {
        java.lang.Throwable $r1;
        java.io.Closeable $r0;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 != null goto label1;

        return;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.content.Intent createSetAsIntent(android.net.Uri, java.lang.String)
    {
        android.net.Uri $r0;
        android.content.Intent r1, $r5;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        android.webkit.MimeTypeMap $r4;
        boolean $z0;

        $r0 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<android.net.Uri: java.lang.String getPath()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = -1;

        if $i0 == $i1 goto label1;

        $r4 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getPath()>();

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r4.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r2);

     label1:
        $r5 = new android.content.Intent;

        r1 = $r5;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ATTACH_DATA");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r0, $r2);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("mimeType", $r2);

        return r1;
    }

    public static boolean equals(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == $r1 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static android.graphics.Bitmap extractMiniThumb(android.graphics.Bitmap, int, int)
    {
        int $i0, $i1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = staticinvoke <com.cooliris.media.Util: android.graphics.Bitmap extractMiniThumb(android.graphics.Bitmap,int,int,boolean)>($r0, $i0, $i1, 1);

        return $r0;
    }

    public static android.graphics.Bitmap extractMiniThumb(android.graphics.Bitmap, int, int, boolean)
    {
        android.graphics.Bitmap $r0, $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Matrix r1;
        boolean $z0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $r0 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i2 >= $i3 goto label4;

        $f0 = (float) $i0;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

     label2:
        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float)>($f0, $f0);

        $r2 = staticinvoke <com.cooliris.media.Util: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,boolean)>(r1, $r0, $i0, $i1, 0);

        if $z0 == 0 goto label3;

        if $r2 == $r0 goto label3;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

     label3:
        return $r2;

     label4:
        $f0 = (float) $i1;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i2;

        $f0 = $f0 / $f1;

        goto label2;
    }

    public static int indexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        int i0, $i1;
        java.lang.Object r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        i0 = -1;

        return i0;

     label2:
        $r2 = $r0[i0];

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return i0;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    public static void openMaps(android.content.Context, double, double)
    {
        java.lang.Throwable $r7;
        android.content.Context $r0;
        java.lang.Object[] $r2;
        java.lang.Double $r3;
        android.content.ComponentName r1;
        android.net.Uri $r6;
        android.content.Intent $r5;
        java.lang.String $r4;
        double $d0, $d1;

        $r0 := @parameter0: android.content.Context;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $r2 = newarray (java.lang.Object)[2];

     label01:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label02:
        $r2[0] = $r3;

     label03:
        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

     label04:
        $r2[1] = $r3;

     label05:
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("http://maps.google.com/maps?f=q&q=(%s,%s)", $r2);

     label06:
        r1 = new android.content.ComponentName;

     label07:
        specialinvoke r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.google.android.apps.maps", "com.google.android.maps.MapsActivity");

     label08:
        $r5 = new android.content.Intent;

     label09:
        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r6);

        $r5 = virtualinvoke $r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r5);

     label10:
        return;

     label11:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("db.Util", "GMM activity not found!", $r7);

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("geo:%s,%s", $r2);

        $r5 = new android.content.Intent;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r6);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r5);

        return;

        catch android.content.ActivityNotFoundException from label01 to label02 with label11;
        catch android.content.ActivityNotFoundException from label03 to label04 with label11;
        catch android.content.ActivityNotFoundException from label05 to label06 with label11;
        catch android.content.ActivityNotFoundException from label07 to label08 with label11;
        catch android.content.ActivityNotFoundException from label09 to label10 with label11;
    }

    public static android.graphics.Bitmap rotate(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap $r1, $r2;
        int $i0, $i1;
        float $f0, $f1, $f2;
        android.graphics.Matrix r0;
        java.lang.OutOfMemoryError $r3;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        if $i0 == 0 goto label6;

        if $r1 == null goto label6;

        r0 = new android.graphics.Matrix;

        specialinvoke r0.<android.graphics.Matrix: void <init>()>();

        $f0 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i0;

        $f1 = $f1 / 2.0F;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $f2 = (float) $i0;

        $f2 = $f2 / 2.0F;

        virtualinvoke r0.<android.graphics.Matrix: void setRotate(float,float,float)>($f0, $f1, $f2);

     label1:
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r1, 0, 0, $i0, $i1, r0, 1);

     label2:
        if $r1 == $r2 goto label6;

     label3:
        virtualinvoke $r1.<android.graphics.Bitmap: void recycle()>();

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

     label6:
        return $r1;

        catch java.lang.OutOfMemoryError from label1 to label2 with label5;
        catch java.lang.OutOfMemoryError from label3 to label4 with label5;
    }

    public static void startBackgroundJob(com.cooliris.media.MonitoredActivity, java.lang.String, java.lang.String, java.lang.Runnable, android.os.Handler)
    {
        com.cooliris.media.Util$BackgroundJob $r7;
        android.app.ProgressDialog $r5;
        java.lang.Runnable $r3;
        com.cooliris.media.MonitoredActivity $r0;
        android.os.Handler $r4;
        java.lang.Thread $r6;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: com.cooliris.media.MonitoredActivity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Runnable;

        $r4 := @parameter4: android.os.Handler;

        $r5 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>($r0, $r1, $r2, 1, 0);

        $r6 = new java.lang.Thread;

        $r7 = new com.cooliris.media.Util$BackgroundJob;

        specialinvoke $r7.<com.cooliris.media.Util$BackgroundJob: void <init>(com.cooliris.media.MonitoredActivity,java.lang.Runnable,android.app.ProgressDialog,android.os.Handler)>($r0, $r3, $r5, $r4);

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r7);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    public static android.graphics.Bitmap transform(android.graphics.Matrix, android.graphics.Bitmap, int, int, boolean)
    {
        android.graphics.Rect r4, r5, $r8;
        android.graphics.Bitmap$Config r2;
        byte b6;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Canvas $r7;
        android.graphics.Matrix r1;
        boolean z0;
        android.graphics.Bitmap $r0, $r3, $r6;
        float f0, f1, f2, f3, f4;

        r1 := @parameter0: android.graphics.Matrix;

        $r0 := @parameter1: android.graphics.Bitmap;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = $i2 - i0;

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i3 = $i3 - i1;

        if z0 != 0 goto label02;

        if $i2 < 0 goto label01;

        if $i3 >= 0 goto label02;

     label01:
        r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, r2);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        $i2 = $i2 / 2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i3 = $i3 / 2;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        r5 = new android.graphics.Rect;

        r4 = r5;

        $i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i4);

        $i4 = $i4 + $i2;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        $i5 = $i5 + $i3;

        specialinvoke r5.<android.graphics.Rect: void <init>(int,int,int,int)>($i2, $i3, $i4, $i5);

        $i2 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i2 = i0 - $i2;

        $i2 = $i2 / 2;

        $i3 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $i3 = i1 - $i3;

        $i3 = $i3 / 2;

        $r8 = new android.graphics.Rect;

        i0 = i0 - $i2;

        i1 = i1 - $i3;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>($i2, $i3, i0, i1);

        virtualinvoke $r7.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, r4, $r8, null);

        return $r3;

     label02:
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        f0 = (float) $i2;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        f1 = (float) $i2;

        f2 = f0 / f1;

        f3 = (float) i0;

        f4 = (float) i1;

        f3 = f3 / f4;

        b6 = f2 cmpl f3;

        $i2 = (int) b6;

        if $i2 <= 0 goto label08;

        f0 = (float) i1;

        f0 = f0 / f1;

        b6 = f0 cmpg 0.9F;

        $i2 = (int) b6;

        if $i2 < 0 goto label03;

        b6 = f0 cmpl 1.0F;

        $i2 = (int) b6;

        if $i2 <= 0 goto label07;

     label03:
        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float)>(f0, f0);

     label04:
        if r1 == null goto label11;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, $i2, $i3, r1, 1);

     label05:
        $i2 = virtualinvoke $r3.<android.graphics.Bitmap: int getWidth()>();

        $i2 = $i2 - i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i3 = virtualinvoke $r3.<android.graphics.Bitmap: int getHeight()>();

        $i3 = $i3 - i1;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i2 = $i2 / 2;

        $i3 = $i3 / 2;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r3, $i2, $i3, i0, i1);

        if $r3 == $r0 goto label06;

        virtualinvoke $r3.<android.graphics.Bitmap: void recycle()>();

     label06:
        return $r6;

     label07:
        r1 = null;

        goto label04;

     label08:
        f1 = (float) i0;

        f0 = f1 / f0;

        b6 = f0 cmpg 0.9F;

        $i2 = (int) b6;

        if $i2 < 0 goto label09;

        b6 = f0 cmpl 1.0F;

        $i2 = (int) b6;

        if $i2 <= 0 goto label10;

     label09:
        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float)>(f0, f0);

        goto label04;

     label10:
        r1 = null;

        goto label04;

     label11:
        $r3 = $r0;

        goto label05;
    }

    public static void <clinit>()
    {
        <com.cooliris.media.Util: java.lang.String TAG> = "db.Util";

        <com.cooliris.media.Util: java.lang.String MAPS_PACKAGE_NAME> = "com.google.android.apps.maps";

        <com.cooliris.media.Util: java.lang.String MAPS_CLASS_NAME> = "com.google.android.maps.MapsActivity";

        return;
    }
}
