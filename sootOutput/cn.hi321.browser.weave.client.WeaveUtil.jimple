public class cn.hi321.browser.weave.client.WeaveUtil extends java.lang.Object
{
    private static final java.lang.String ENTITY_CHARSET_NAME;
    private static final java.lang.String JSON_STREAM_TYPE;

    private void <init>()
    {
        cn.hi321.browser.weave.client.WeaveUtil r0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static cn.hi321.browser.weave.client.WeaveUtil$UriBuilder buildUpon(java.net.URI)
    {
        java.net.URI $r0;
        cn.hi321.browser.weave.client.WeaveUtil$UriBuilder $r1;

        $r0 := @parameter0: java.net.URI;

        $r1 = new cn.hi321.browser.weave.client.WeaveUtil$UriBuilder;

        specialinvoke $r1.<cn.hi321.browser.weave.client.WeaveUtil$UriBuilder: void <init>(java.net.URI)>($r0);

        return $r1;
    }

    public static void checkNull(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("checkNull(String) had empty arg");

        staticinvoke <cn.hi321.browser.weave.client.Dbg: void w(java.lang.Throwable)>($r1);

     label2:
        return;
    }

    public static void checkNull(java.net.URI)
    {
        int $i0;
        java.net.URI $r0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0: java.net.URI;

        if $r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("checkNull(URI) had null arg");

        staticinvoke <cn.hi321.browser.weave.client.Dbg: void w(java.lang.Throwable)>($r1);

        return;

     label1:
        $r2 = virtualinvoke $r0.<java.net.URI: java.lang.String getHost()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke $r0.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= 1 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("checkNull(URI) had empty host");

        staticinvoke <cn.hi321.browser.weave.client.Dbg: void w(java.lang.Throwable)>($r1);

     label3:
        return;
    }

    public static void dump(org.json.JSONObject)
    {
        java.io.PrintStream $r3;
        org.json.JSONException r1;
        org.json.JSONObject $r0;
        java.lang.String $r2;

        $r0 := @parameter0: org.json.JSONObject;

     label1:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString(int)>(2);

     label2:
        $r3 = <java.lang.System: java.io.PrintStream out>;

     label3:
        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r2);

     label4:
        return;

     label5:
        r1 := @caughtexception;

        virtualinvoke r1.<org.json.JSONException: void printStackTrace()>();

        return;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static java.lang.String encodeUriSegment(java.lang.String)
    {
        java.lang.Throwable r1;
        java.lang.IllegalStateException $r2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label2:
        return $r0;

     label3:
        r1 := @caughtexception;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static byte[] toAsciiBytes(java.lang.String)
    {
        java.lang.Throwable r1;
        byte[] $r2;
        java.lang.IllegalStateException $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String toAsciiString(byte[])
    {
        java.lang.Throwable r1;
        byte[] $r0;
        java.lang.IllegalStateException $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

     label2:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "US-ASCII");

     label3:
        return $r2;

     label4:
        r1 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    private static org.apache.http.HttpEntity toHttpEntity(cn.hi321.browser.weave.client.WeaveBasicObject) throws org.json.JSONException
    {
        java.lang.Throwable r1;
        java.lang.IllegalStateException $r4;
        org.apache.http.entity.StringEntity r2;
        cn.hi321.browser.weave.client.WeaveBasicObject $r0;
        java.lang.String $r3;

        $r0 := @parameter0: cn.hi321.browser.weave.client.WeaveBasicObject;

        r2 = new org.apache.http.entity.StringEntity;

     label1:
        $r3 = virtualinvoke $r0.<cn.hi321.browser.weave.client.WeaveBasicObject: java.lang.String toJSONObjectString()>();

        specialinvoke r2.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r3, "UTF-8");

        virtualinvoke r2.<org.apache.http.entity.StringEntity: void setContentType(java.lang.String)>("application/json; charset=UTF-8");

     label2:
        return r2;

     label3:
        r1 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static org.apache.http.HttpEntity toHttpEntity(org.json.JSONArray) throws org.json.JSONException
    {
        java.lang.Throwable r1;
        java.lang.IllegalStateException $r4;
        org.apache.http.entity.StringEntity r2;
        java.lang.String $r3;
        org.json.JSONArray $r0;

        $r0 := @parameter0: org.json.JSONArray;

        r2 = new org.apache.http.entity.StringEntity;

     label1:
        $r3 = virtualinvoke $r0.<org.json.JSONArray: java.lang.String toString(int)>(0);

        specialinvoke r2.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r3, "UTF-8");

        virtualinvoke r2.<org.apache.http.entity.StringEntity: void setContentType(java.lang.String)>("application/json; charset=UTF-8");

     label2:
        return r2;

     label3:
        r1 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.util.Date toModifiedTimeDate(double)
    {
        java.util.Date $r1;
        long $l0;
        java.lang.Exception r0;
        double $d0;

        $d0 := @parameter0: double;

        $d0 = 1000.0 * $d0;

     label1:
        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);

     label2:
        $r1 = new java.util.Date;

     label3:
        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

     label4:
        return $r1;

     label5:
        r0 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.util.Date toModifiedTimeDate(java.lang.String)
    {
        java.util.Date $r2;
        long $l0;
        java.lang.String $r0;
        java.lang.Exception r1;
        double d0;

        $r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label2:
        d0 = d0 * 1000.0;

     label3:
        $l0 = staticinvoke <java.lang.Math: long round(double)>(d0);

     label4:
        $r2 = new java.util.Date;

     label5:
        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

     label6:
        return $r2;

     label7:
        r1 := @caughtexception;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String toModifiedTimeString(java.util.Date)
    {
        java.lang.Object[] $r2;
        java.lang.Double $r3;
        java.util.Date $r0;
        java.util.Locale $r1;
        long $l0;
        java.lang.String $r4;
        double d0;

        $r0 := @parameter0: java.util.Date;

        $l0 = virtualinvoke $r0.<java.util.Date: long getTime()>();

        d0 = (double) $l0;

        d0 = d0 / 1000.0;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%.2f", $r2);

        return $r4;
    }

    public static java.lang.String toString(java.net.URI)
    {
        java.net.URI $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.net.URI;

        staticinvoke <cn.hi321.browser.weave.client.WeaveUtil: void checkNull(java.net.URI)>($r0);

        if $r0 != null goto label2;

        $r1 = null;

     label1:
        staticinvoke <cn.hi321.browser.weave.client.WeaveUtil: void checkNull(java.lang.String)>($r1);

        return $r1;

     label2:
        $r1 = virtualinvoke $r0.<java.net.URI: java.lang.String toString()>();

        goto label1;
    }

    public static byte[] toUtf8Bytes(java.lang.String)
    {
        java.lang.Throwable r1;
        byte[] $r2;
        java.lang.IllegalStateException $r3;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String toUtf8String(byte[])
    {
        java.lang.Throwable r1;
        byte[] $r0;
        java.lang.IllegalStateException $r3;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.String;

     label2:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF-8");

     label3:
        return $r2;

     label4:
        r1 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static void zeroize(char[])
    {
        char[] $r0;

        $r0 := @parameter0: char[];

        if $r0 == null goto label1;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r0, 0);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <cn.hi321.browser.weave.client.WeaveUtil: java.lang.String JSON_STREAM_TYPE> = "application/json";

        <cn.hi321.browser.weave.client.WeaveUtil: java.lang.String ENTITY_CHARSET_NAME> = "UTF-8";

        return;
    }
}
