public class org.ormma.controller.OrmmaSensorController extends org.ormma.controller.OrmmaController
{
    private static final java.lang.String LOG_TAG;
    final int INTERVAL;
    private org.ormma.controller.listeners.AccelListener mAccel;
    private float mLastX;
    private float mLastY;
    private float mLastZ;

    public void <init>(org.ormma.view.OrmmaView, android.content.Context)
    {
        android.content.Context $r2;
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.view.OrmmaView $r1;
        org.ormma.controller.listeners.AccelListener $r3;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 := @parameter0: org.ormma.view.OrmmaView;

        $r2 := @parameter1: android.content.Context;

        specialinvoke r0.<org.ormma.controller.OrmmaController: void <init>(org.ormma.view.OrmmaView,android.content.Context)>($r1, $r2);

        r0.<org.ormma.controller.OrmmaSensorController: int INTERVAL> = 1000;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastX> = 0.0F;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastY> = 0.0F;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastZ> = 0.0F;

        $r3 = new org.ormma.controller.listeners.AccelListener;

        specialinvoke $r3.<org.ormma.controller.listeners.AccelListener: void <init>(android.content.Context,org.ormma.controller.OrmmaSensorController)>($r2, r0);

        r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel> = $r3;

        return;
    }

    public float getHeading()
    {
        org.ormma.controller.OrmmaSensorController r0;
        float $f0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3;
        org.ormma.controller.listeners.AccelListener $r2;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getHeading: ");

        $r2 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        $f0 = virtualinvoke $r2.<org.ormma.controller.listeners.AccelListener: float getHeading()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OrmmaSensorController", $r3);

        $r2 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        $f0 = virtualinvoke $r2.<org.ormma.controller.listeners.AccelListener: float getHeading()>();

        return $f0;
    }

    public java.lang.String getTilt()
    {
        org.ormma.controller.OrmmaSensorController r0;
        float $f0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{ x : \"");

        $f0 = r0.<org.ormma.controller.OrmmaSensorController: float mLastX>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", y : \"");

        $f0 = r0.<org.ormma.controller.OrmmaSensorController: float mLastY>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", z : \"");

        $f0 = r0.<org.ormma.controller.OrmmaSensorController: float mLastZ>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTilt: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OrmmaSensorController", $r3);

        return $r2;
    }

    public void onHeadingChange(float)
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.view.OrmmaView $r3;
        int $i0;
        float $f0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $f0 := @parameter0: float;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("window.ormmaview.fireChangeEvent({ heading: ");

        $d0 = (double) $f0;

        $d0 = $d0 * 57.29577951308232;

        $i0 = (int) $d0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("});");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OrmmaSensorController", $r2);

        $r3 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.view.OrmmaView mOrmmaView>;

        virtualinvoke $r3.<org.ormma.view.OrmmaView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void onShake()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.view.OrmmaView $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.view.OrmmaView mOrmmaView>;

        virtualinvoke $r1.<org.ormma.view.OrmmaView: void injectJavaScript(java.lang.String)>("Ormma.gotShake()");

        return;
    }

    public void onTilt(float, float, float)
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.view.OrmmaView $r3;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastX> = $f0;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastY> = $f1;

        r0.<org.ormma.controller.OrmmaSensorController: float mLastZ> = $f2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("window.ormmaview.fireChangeEvent({ tilt: ");

        $r2 = virtualinvoke r0.<org.ormma.controller.OrmmaSensorController: java.lang.String getTilt()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("OrmmaSensorController", $r2);

        $r3 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.view.OrmmaView mOrmmaView>;

        virtualinvoke $r3.<org.ormma.view.OrmmaView: void injectJavaScript(java.lang.String)>($r2);

        return;
    }

    public void startHeadingListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void startTrackingHeading()>();

        return;
    }

    public void startShakeListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void startTrackingShake()>();

        return;
    }

    public void startTiltListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void startTrackingTilt()>();

        return;
    }

    void stop()
    {
        org.ormma.controller.OrmmaSensorController r0;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        return;
    }

    public void stopAllListeners()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void stopAllListeners()>();

        return;
    }

    public void stopHeadingListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void stopTrackingHeading()>();

        return;
    }

    public void stopShakeListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void stopTrackingShake()>();

        return;
    }

    public void stopTiltListener()
    {
        org.ormma.controller.OrmmaSensorController r0;
        org.ormma.controller.listeners.AccelListener $r1;

        r0 := @this: org.ormma.controller.OrmmaSensorController;

        $r1 = r0.<org.ormma.controller.OrmmaSensorController: org.ormma.controller.listeners.AccelListener mAccel>;

        virtualinvoke $r1.<org.ormma.controller.listeners.AccelListener: void stopTrackingTilt()>();

        return;
    }

    public static void <clinit>()
    {
        <org.ormma.controller.OrmmaSensorController: java.lang.String LOG_TAG> = "OrmmaSensorController";

        return;
    }
}
