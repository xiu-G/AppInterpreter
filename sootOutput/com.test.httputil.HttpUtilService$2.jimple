class com.test.httputil.HttpUtilService$2 extends java.util.TimerTask
{
    final com.test.httputil.HttpUtilService this$0;

    void <init>(com.test.httputil.HttpUtilService)
    {
        com.test.httputil.HttpUtilService $r1;
        com.test.httputil.HttpUtilService$2 r0;

        r0 := @this: com.test.httputil.HttpUtilService$2;

        $r1 := @parameter0: com.test.httputil.HttpUtilService;

        r0.<com.test.httputil.HttpUtilService$2: com.test.httputil.HttpUtilService this$0> = $r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    public void run()
    {
        com.test.httputil.HttpUtilService $r1;
        java.lang.Exception $r2;
        com.test.httputil.HttpUtilService$2 r0;

        r0 := @this: com.test.httputil.HttpUtilService$2;

     label1:
        $r1 = r0.<com.test.httputil.HttpUtilService$2: com.test.httputil.HttpUtilService this$0>;

        staticinvoke <com.test.httputil.HttpUtilService: void access$1(com.test.httputil.HttpUtilService)>($r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
