public class de.greenrobot.dao.identityscope.IdentityScopeLong extends java.lang.Object implements de.greenrobot.dao.identityscope.IdentityScope
{
    private final java.util.concurrent.locks.ReentrantLock lock;
    private final de.greenrobot.dao.internal.LongHashMap map;

    public void <init>()
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r2;
        de.greenrobot.dao.internal.LongHashMap $r1;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new de.greenrobot.dao.internal.LongHashMap;

        specialinvoke $r1.<de.greenrobot.dao.internal.LongHashMap: void <init>()>();

        r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock> = $r2;

        return;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r1;
        de.greenrobot.dao.internal.LongHashMap $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        virtualinvoke $r2.<de.greenrobot.dao.internal.LongHashMap: void clear()>();

     label2:
        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label3:
        $r3 := @caughtexception;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean detach(java.lang.Long, java.lang.Object)
    {
        java.lang.Throwable $r5;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.lang.Long $r1;
        java.lang.Object $r2, $r4;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r4 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get(java.lang.Long)>($r1);

     label2:
        if $r4 != $r2 goto label5;

        if $r2 == null goto label5;

     label3:
        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void remove(java.lang.Long)>($r1);

     label4:
        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label5:
        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label6:
        $r5 := @caughtexception;

        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public volatile boolean detach(java.lang.Object, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Long) $r2;

        $z0 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: boolean detach(java.lang.Long,java.lang.Object)>($r3, $r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Long)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r1;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r2 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get2(long)>($l0);

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        java.lang.Object $r1;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) $r1;

        $r1 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get(java.lang.Long)>($r2);

        return $r1;
    }

    public java.lang.Object get2(long)
    {
        java.lang.ref.Reference $r4;
        java.lang.Throwable $r5;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r1;
        de.greenrobot.dao.internal.LongHashMap $r2;
        long $l0;
        java.lang.Object $r3;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $l0 := @parameter0: long;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $r3 = virtualinvoke $r2.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object get(long)>($l0);

        $r4 = (java.lang.ref.Reference) $r3;

     label2:
        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        if $r4 == null goto label4;

        $r3 = virtualinvoke $r4.<java.lang.ref.Reference: java.lang.Object get()>();

        return $r3;

     label3:
        $r5 := @caughtexception;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

     label4:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object get2NoLock(long)
    {
        java.lang.ref.Reference $r3;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        de.greenrobot.dao.internal.LongHashMap $r1;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $l0 := @parameter0: long;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $r2 = virtualinvoke $r1.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object get(long)>($l0);

        $r3 = (java.lang.ref.Reference) $r2;

        if $r3 == null goto label1;

        $r2 = virtualinvoke $r3.<java.lang.ref.Reference: java.lang.Object get()>();

        return $r2;

     label1:
        return null;
    }

    public java.lang.Object getNoLock(java.lang.Long)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r1;
        long $l0;
        java.lang.Object $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $r2 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object get2NoLock(long)>($l0);

        return $r2;
    }

    public volatile java.lang.Object getNoLock(java.lang.Object)
    {
        java.lang.Object $r1;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) $r1;

        $r1 = virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.lang.Object getNoLock(java.lang.Long)>($r2);

        return $r1;
    }

    public void lock()
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        return;
    }

    public void put(java.lang.Long, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r1;
        java.lang.Object $r2;
        long $l0;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $r2 := @parameter1: java.lang.Object;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void put2(long,java.lang.Object)>($l0, $r2);

        return;
    }

    public volatile void put(java.lang.Object, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Long) $r2;

        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void put(java.lang.Long,java.lang.Object)>($r3, $r1);

        return;
    }

    public void put2(long, java.lang.Object)
    {
        java.lang.Throwable $r5;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r2;
        de.greenrobot.dao.internal.LongHashMap $r3;
        long $l0;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r4;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        virtualinvoke $r3.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object put(long,java.lang.Object)>($l0, $r4);

     label2:
        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label3:
        $r5 := @caughtexception;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void put2NoLock(long, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        de.greenrobot.dao.internal.LongHashMap $r2;
        long $l0;
        java.lang.Object $r1;
        java.lang.ref.WeakReference $r3;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        virtualinvoke $r2.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object put(long,java.lang.Object)>($l0, $r3);

        return;
    }

    public void putNoLock(java.lang.Long, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r1;
        java.lang.Object $r2;
        long $l0;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $r2 := @parameter1: java.lang.Object;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void put2NoLock(long,java.lang.Object)>($l0, $r2);

        return;
    }

    public volatile void putNoLock(java.lang.Object, java.lang.Object)
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Long) $r2;

        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void putNoLock(java.lang.Long,java.lang.Object)>($r3, $r1);

        return;
    }

    public void remove(java.lang.Iterable)
    {
        java.lang.Throwable $r7;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.util.Iterator $r4;
        de.greenrobot.dao.internal.LongHashMap $r2;
        long $l0;
        java.lang.Iterable $r1;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r6;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Iterable;

        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r4 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Long) $r5;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $l0 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        virtualinvoke $r2.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object remove(long)>($l0);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label7:
        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void remove(java.lang.Long)
    {
        java.lang.Throwable $r4;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r2;
        java.lang.Long $r1;
        de.greenrobot.dao.internal.LongHashMap $r3;
        long $l0;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Long;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r3 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        virtualinvoke $r3.<de.greenrobot.dao.internal.LongHashMap: java.lang.Object remove(long)>($l0);

     label2:
        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public volatile void remove(java.lang.Object)
    {
        java.lang.Object $r1;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.lang.Long $r2;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Long) $r1;

        virtualinvoke r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: void remove(java.lang.Long)>($r2);

        return;
    }

    public void reserveRoom(int)
    {
        int $i0;
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        de.greenrobot.dao.internal.LongHashMap $r1;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $i0 := @parameter0: int;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: de.greenrobot.dao.internal.LongHashMap map>;

        virtualinvoke $r1.<de.greenrobot.dao.internal.LongHashMap: void reserveRoom(int)>($i0);

        return;
    }

    public void unlock()
    {
        de.greenrobot.dao.identityscope.IdentityScopeLong r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        r0 := @this: de.greenrobot.dao.identityscope.IdentityScopeLong;

        $r1 = r0.<de.greenrobot.dao.identityscope.IdentityScopeLong: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return;
    }
}
