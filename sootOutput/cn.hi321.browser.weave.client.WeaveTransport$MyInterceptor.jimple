class cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    private void <init>()
    {
        cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor r0;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor)
    {
        cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor r0, $r1;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor;

        $r1 := @parameter0: cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor;

        specialinvoke r0.<cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.auth.BasicScheme $r11;
        org.apache.http.HttpRequest $r1;
        cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor r0;
        org.apache.http.protocol.HttpContext $r2;
        org.apache.http.auth.AuthScope r3;
        org.apache.http.auth.Credentials $r10;
        int $i0;
        org.apache.http.auth.AuthScheme $r8;
        java.lang.Object $r4;
        org.apache.http.auth.AuthState r5;
        java.lang.String $r9;
        org.apache.http.client.CredentialsProvider r6;
        org.apache.http.HttpHost r7;

        r0 := @this: cn.hi321.browser.weave.client.WeaveTransport$MyInterceptor;

        $r1 := @parameter0: org.apache.http.HttpRequest;

        $r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.target-scope");

        r5 = (org.apache.http.auth.AuthState) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.credentials-provider");

        r6 = (org.apache.http.client.CredentialsProvider) $r4;

        $r4 = interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r7 = (org.apache.http.HttpHost) $r4;

        $r8 = virtualinvoke r5.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if $r8 != null goto label1;

        r3 = new org.apache.http.auth.AuthScope;

        $r9 = virtualinvoke r7.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke r7.<org.apache.http.HttpHost: int getPort()>();

        specialinvoke r3.<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int)>($r9, $i0);

        $r10 = interfaceinvoke r6.<org.apache.http.client.CredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>(r3);

        if $r10 == null goto label1;

        $r11 = new org.apache.http.impl.auth.BasicScheme;

        specialinvoke $r11.<org.apache.http.impl.auth.BasicScheme: void <init>()>();

        virtualinvoke r5.<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>($r11);

        virtualinvoke r5.<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>($r10);

     label1:
        return;
    }
}
