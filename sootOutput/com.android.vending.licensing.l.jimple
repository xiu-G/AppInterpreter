public final class com.android.vending.licensing.l extends java.lang.Object implements android.content.ServiceConnection
{
    private static final java.security.SecureRandom a;
    private com.android.vending.licensing.ILicensingService b;
    private java.security.PublicKey c;
    private final android.content.Context d;
    private final com.android.vending.licensing.j e;
    private android.os.Handler f;
    private final java.util.Set g;
    private final java.util.Queue h;

    static void <clinit>()
    {
        java.security.SecureRandom $r0;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        <com.android.vending.licensing.l: java.security.SecureRandom a> = $r0;

        return;
    }

    private void a(com.android.vending.licensing.a)
    {
        java.lang.Throwable $r3;
        com.android.vending.licensing.l r0;
        java.util.Set $r2;
        com.android.vending.licensing.a $r1;
        boolean $z0;

        r0 := @this: com.android.vending.licensing.l;

        $r1 := @parameter0: com.android.vending.licensing.a;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.vending.licensing.l: java.util.Set g>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r1);

        $r2 = r0.<com.android.vending.licensing.l: java.util.Set g>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.vending.licensing.l: void c()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void a(com.android.vending.licensing.l)
    {
        com.android.vending.licensing.l $r0;

        $r0 := @parameter0: com.android.vending.licensing.l;

        specialinvoke $r0.<com.android.vending.licensing.l: void b()>();

        return;
    }

    static void a(com.android.vending.licensing.l, com.android.vending.licensing.a)
    {
        com.android.vending.licensing.l $r0;
        com.android.vending.licensing.a $r1;

        $r0 := @parameter0: com.android.vending.licensing.l;

        $r1 := @parameter1: com.android.vending.licensing.a;

        specialinvoke $r0.<com.android.vending.licensing.l: void a(com.android.vending.licensing.a)>($r1);

        return;
    }

    static android.os.Handler b(com.android.vending.licensing.l)
    {
        com.android.vending.licensing.l $r0;
        android.os.Handler r1;

        $r0 := @parameter0: com.android.vending.licensing.l;

        r1 = $r0.<com.android.vending.licensing.l: android.os.Handler f>;

        return r1;
    }

    private void b()
    {
        java.lang.Throwable $r2;
        com.android.vending.licensing.l r0;
        com.android.vending.licensing.j $r1;

        r0 := @this: com.android.vending.licensing.l;

        entermonitor r0;

     label1:
        $r1 = r0.<com.android.vending.licensing.l: com.android.vending.licensing.j e>;

        interfaceinvoke $r1.<com.android.vending.licensing.j: boolean a()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static java.util.Set c(com.android.vending.licensing.l)
    {
        java.util.Set r1;
        com.android.vending.licensing.l $r0;

        $r0 := @parameter0: com.android.vending.licensing.l;

        r1 = $r0.<com.android.vending.licensing.l: java.util.Set g>;

        return r1;
    }

    private void c()
    {
        com.android.vending.licensing.ILicensingService $r1;
        java.lang.Throwable $r3;
        android.content.Context $r2;
        com.android.vending.licensing.l r0;

        r0 := @this: com.android.vending.licensing.l;

        $r1 = r0.<com.android.vending.licensing.l: com.android.vending.licensing.ILicensingService b>;

        if $r1 == null goto label4;

        $r2 = r0.<com.android.vending.licensing.l: android.content.Context d>;

     label1:
        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

     label2:
        r0.<com.android.vending.licensing.l: com.android.vending.licensing.ILicensingService b> = null;

        return;

     label3:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LicenseChecker", "Unable to unbind from licensing service (already unbound)");

        goto label2;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static java.security.PublicKey d(com.android.vending.licensing.l)
    {
        java.security.PublicKey r1;
        com.android.vending.licensing.l $r0;

        $r0 := @parameter0: com.android.vending.licensing.l;

        r1 = $r0.<com.android.vending.licensing.l: java.security.PublicKey c>;

        return r1;
    }

    public final void a()
    {
        java.lang.Throwable $r3;
        com.android.vending.licensing.l r0;
        android.os.Looper $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.vending.licensing.l;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.vending.licensing.l: void c()>();

        $r2 = r0.<com.android.vending.licensing.l: android.os.Handler f>;

        $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        virtualinvoke $r1.<android.os.Looper: void quit()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        java.lang.Throwable $r8, $r13;
        long $l1;
        android.os.IBinder $r2;
        int $i0;
        java.lang.String $r10;
        boolean $z0;
        com.android.vending.licensing.ILicensingService $r11;
        com.android.vending.licensing.e $r14;
        com.android.vending.licensing.l r0;
        android.content.ComponentName $r1;
        android.os.IInterface $r7;
        java.util.Set $r12;
        com.android.vending.licensing.d $r3, $r16;
        com.android.vending.licensing.a $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9, $r15;
        java.util.Queue $r5;

        r0 := @this: com.android.vending.licensing.l;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        entermonitor r0;

        if $r2 != null goto label04;

        $r4 = null;

     label01:
        $r11 = (com.android.vending.licensing.ILicensingService) $r4;

        r0.<com.android.vending.licensing.l: com.android.vending.licensing.ILicensingService b> = $r11;

     label02:
        $r5 = r0.<com.android.vending.licensing.l: java.util.Queue h>;

        $r4 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        $r6 = (com.android.vending.licensing.a) $r4;

     label03:
        if $r6 != null goto label08;

        exitmonitor r0;

        return;

     label04:
        $r7 = interfaceinvoke $r2.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("com.android.vending.licensing.ILicensingService");

        if $r7 == null goto label05;

        $z0 = $r7 instanceof com.android.vending.licensing.ILicensingService;

        if $z0 == 0 goto label05;

        $r4 = (com.android.vending.licensing.ILicensingService) $r7;

        goto label01;

     label05:
        $r14 = new com.android.vending.licensing.e;

        $r4 = $r14;

        specialinvoke $r14.<com.android.vending.licensing.e: void <init>(android.os.IBinder)>($r2);

     label06:
        goto label01;

     label07:
        $r8 := @caughtexception;

        exitmonitor r0;

        throw $r8;

     label08:
        $r15 = new java.lang.StringBuilder;

        $r9 = $r15;

     label09:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calling checkLicense on service for ");

        $r10 = virtualinvoke $r6.<com.android.vending.licensing.a: java.lang.String b()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LicenseChecker", $r10);

     label10:
        $r11 = r0.<com.android.vending.licensing.l: com.android.vending.licensing.ILicensingService b>;

     label11:
        $i0 = virtualinvoke $r6.<com.android.vending.licensing.a: int a()>();

     label12:
        $l1 = (long) $i0;

     label13:
        $r10 = virtualinvoke $r6.<com.android.vending.licensing.a: java.lang.String b()>();

     label14:
        $r16 = new com.android.vending.licensing.d;

        $r3 = $r16;

     label15:
        specialinvoke $r16.<com.android.vending.licensing.d: void <init>(com.android.vending.licensing.l,com.android.vending.licensing.a)>(r0, $r6);

        interfaceinvoke $r11.<com.android.vending.licensing.ILicensingService: void a(long,java.lang.String,com.android.vending.licensing.c)>($l1, $r10, $r3);

     label16:
        $r12 = r0.<com.android.vending.licensing.l: java.util.Set g>;

     label17:
        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label18:
        goto label02;

     label19:
        $r13 := @caughtexception;

     label20:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("LicenseChecker", "RemoteException in checkLicense call.", $r13);

        specialinvoke r0.<com.android.vending.licensing.l: void b()>();

     label21:
        goto label02;

        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch android.os.RemoteException from label09 to label10 with label19;
        catch android.os.RemoteException from label11 to label12 with label19;
        catch android.os.RemoteException from label13 to label14 with label19;
        catch android.os.RemoteException from label15 to label16 with label19;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label08 to label18 with label07;
        catch java.lang.Throwable from label20 to label21 with label07;
    }

    public final void onServiceDisconnected(android.content.ComponentName)
    {
        java.lang.Throwable $r2;
        com.android.vending.licensing.l r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.vending.licensing.l;

        $r1 := @parameter0: android.content.ComponentName;

        entermonitor r0;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LicenseChecker", "Service unexpectedly disconnected.");

        r0.<com.android.vending.licensing.l: com.android.vending.licensing.ILicensingService b> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
