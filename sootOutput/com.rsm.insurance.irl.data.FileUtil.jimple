public class com.rsm.insurance.irl.data.FileUtil extends java.lang.Object
{
    public static byte[] alteredImageData;

    static void <clinit>()
    {
        <com.rsm.insurance.irl.data.FileUtil: byte[] alteredImageData> = null;

        return;
    }

    public void <init>()
    {
        com.rsm.insurance.irl.data.FileUtil r0;

        r0 := @this: com.rsm.insurance.irl.data.FileUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void DeleteAllFiles()
    {
        java.lang.String[] $r4;
        java.io.File r0, r1;
        java.lang.Exception $r5;
        int i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        r0 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/rsm/tmp/");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i0 = 0;

     label2:
        $i1 = lengthof $r4;

        if i0 >= $i1 goto label6;

        r1 = new java.io.File;

     label3:
        $r2 = $r4[i0];

        specialinvoke r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r2);

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        goto label4;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static byte[] GetByteFromFile(java.lang.String)
    {
        byte[] r3;
        java.io.BufferedInputStream r1;
        long $l1;
        java.io.FileInputStream $r4;
        java.io.File r2;
        java.lang.Exception $r5;
        int i0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r2 = new java.io.File;

     label1:
        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $l1 = virtualinvoke r2.<java.io.File: long length()>();

     label2:
        i0 = (int) $l1;

     label3:
        r3 = newarray (byte)[i0];

     label4:
        r1 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

     label5:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

        i0 = lengthof r3;

        virtualinvoke r1.<java.io.BufferedInputStream: int read(byte[],int,int)>(r3, 0, i0);

     label6:
        return r3;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean StoreByteImage(byte[])
    {
        java.lang.Throwable $r5, $r6;
        byte[] $r0;
        java.io.ByteArrayOutputStream r1, $r8;
        java.io.IOException $r10;
        java.io.FileNotFoundException $r9;
        android.graphics.Bitmap $r3;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r4;
        android.graphics.BitmapFactory$Options r2, $r7;

        $r0 := @parameter0: byte[];

        $r7 = new android.graphics.BitmapFactory$Options;

        r2 = $r7;

     label01:
        specialinvoke $r7.<android.graphics.BitmapFactory$Options: void <init>()>();

     label02:
        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = 16;

        $i0 = lengthof $r0;

     label03:
        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i0, r2);

     label04:
        $r8 = new java.io.ByteArrayOutputStream;

        r1 = $r8;

     label05:
        specialinvoke $r8.<java.io.ByteArrayOutputStream: void <init>()>();

     label06:
        $r4 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label07:
        virtualinvoke $r3.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r4, 75, r1);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void flush()>();

        $r0 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        <com.rsm.insurance.irl.data.FileUtil: byte[] alteredImageData> = $r0;

     label09:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label10:
        return 1;

     label11:
        $r5 := @caughtexception;

        $r9 = (java.io.FileNotFoundException) $r5;

        virtualinvoke $r9.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label10;

     label12:
        $r6 := @caughtexception;

        $r10 = (java.io.IOException) $r6;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label10;

        catch java.io.FileNotFoundException from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public static java.io.File getFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuilder $r5;
        java.lang.String $r0, $r1, $r4, $r6;
        java.io.File r2, r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sd card path is ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FileUtilities", $r6);

        r2 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rsm/tmp/");

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("File name is ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FileUtilities", $r0);

        r3 = new java.io.File;

        specialinvoke r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r1);

        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

        return r3;
    }

    public static java.lang.String loadBase64Image(java.lang.String, java.lang.String)
    {
        byte[] $r2;
        java.lang.String $r0, $r1;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.rsm.insurance.irl.data.FileUtil: byte[] loadImage(java.lang.String,java.lang.String)>($r0, $r1);

        $r0 = staticinvoke <org.kobjects.base64.Base64: java.lang.String encode(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] loadImage(java.lang.String, java.lang.String)
    {
        java.lang.Throwable r9, $r10;
        byte[] r5;
        long $l1;
        int i0;
        java.lang.String $r0, $r1, $r6, $r8;
        java.io.IOException $r14;
        java.io.FileInputStream r4, $r13;
        java.io.File r2, r3, $r12;
        java.io.FileNotFoundException $r15;
        java.lang.StringBuilder $r7, $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sd card path is ");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FileUtilities", $r8);

        r3 = new java.io.File;

        r2 = r3;

        $r11 = new java.lang.StringBuilder;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("File name is ");

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("FileUtilities", $r0);

        $r12 = new java.io.File;

        r3 = $r12;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r1);

     label1:
        $l1 = virtualinvoke r3.<java.io.File: long length()>();

     label2:
        i0 = (int) $l1;

        r5 = newarray (byte)[i0];

        $r13 = new java.io.FileInputStream;

        r4 = $r13;

     label3:
        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label4:
        virtualinvoke r4.<java.io.FileInputStream: int read(byte[])>(r5);

     label5:
        return r5;

     label6:
        r9 := @caughtexception;

        $r14 = (java.io.IOException) r9;

     label7:
        virtualinvoke $r14.<java.io.IOException: void printStackTrace()>();

     label8:
        return null;

     label9:
        $r10 := @caughtexception;

        $r15 = (java.io.FileNotFoundException) $r10;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label9;
        catch java.io.FileNotFoundException from label3 to label4 with label9;
        catch java.io.IOException from label4 to label5 with label6;
        catch java.io.FileNotFoundException from label7 to label8 with label9;
    }

    public static java.lang.String loadJsonData(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r10, $r11;
        java.lang.StringBuffer r2, $r12;
        int $i0;
        java.lang.String $r0, $r1, $r8;
        java.io.IOException $r18;
        java.io.File r4, r5, $r14;
        java.io.FileNotFoundException $r17;
        char[] r3;
        java.lang.StringBuilder $r9, $r13;
        java.io.BufferedReader r6, $r16;
        java.io.FileReader r7, $r15;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r12 = new java.lang.StringBuffer;

        r2 = $r12;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r8 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        r5 = new java.io.File;

        r4 = r5;

        $r13 = new java.lang.StringBuilder;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/rsm/data/");

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke r4.<java.io.File: boolean mkdirs()>();

        $r14 = new java.io.File;

        r5 = $r14;

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, "rsm.dat");

        $r15 = new java.io.FileReader;

        r7 = $r15;

     label01:
        specialinvoke $r15.<java.io.FileReader: void <init>(java.io.File)>(r5);

     label02:
        $r16 = new java.io.BufferedReader;

        r6 = $r16;

     label03:
        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader)>(r7);

     label04:
        r3 = newarray (char)[1];

     label05:
        $i0 = virtualinvoke r6.<java.io.BufferedReader: int read(char[])>(r3);

     label06:
        if $i0 > 0 goto label09;

     label07:
        virtualinvoke r6.<java.io.BufferedReader: void close()>();

     label08:
        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label09:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r3);

     label10:
        goto label05;

     label11:
        $r10 := @caughtexception;

        $r17 = (java.io.FileNotFoundException) $r10;

        virtualinvoke $r17.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label08;

     label12:
        $r11 := @caughtexception;

        $r18 = (java.io.IOException) $r11;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

        goto label08;

        catch java.io.FileNotFoundException from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public static java.lang.String santitizeToFileName(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\Q.,-+ ()\\E]", "");

        return $r0;
    }

    public static void saveImage(java.lang.String, java.lang.String, byte[])
    {
        java.lang.Throwable $r7, $r8;
        byte[] $r2;
        java.io.FileOutputStream r3, $r9;
        java.io.IOException $r11;
        java.io.File $r4;
        java.io.FileNotFoundException $r10;
        android.graphics.Bitmap $r5;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r6;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

        if $r2 == null goto label11;

     label01:
        $r4 = staticinvoke <com.rsm.insurance.irl.data.FileUtil: java.io.File getFile(java.lang.String,java.lang.String)>("rsm/tmp/", $r1);

     label02:
        $r9 = new java.io.FileOutputStream;

        r3 = $r9;

     label03:
        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label04:
        $i0 = lengthof $r2;

     label05:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r2, 0, $i0);

     label06:
        $r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label07:
        virtualinvoke $r5.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r6, 95, r3);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label08:
        return;

     label09:
        $r7 := @caughtexception;

        $r10 = (java.io.FileNotFoundException) $r7;

        virtualinvoke $r10.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

     label10:
        $r8 := @caughtexception;

        $r11 = (java.io.IOException) $r8;

        virtualinvoke $r11.<java.io.IOException: void printStackTrace()>();

     label11:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label09;
        catch java.io.FileNotFoundException from label03 to label04 with label09;
        catch java.io.FileNotFoundException from label05 to label06 with label09;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public static java.lang.String saveJsonData(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r9, $r10;
        java.lang.String $r0, $r1, $r2, $r7;
        java.io.BufferedWriter r5, $r14;
        java.io.FileWriter r6, $r13;
        java.io.IOException $r16;
        java.io.File r3, r4, $r12;
        java.io.FileNotFoundException $r15;
        java.lang.StringBuilder $r8, $r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r7 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        r4 = new java.io.File;

        r3 = r4;

        $r11 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/rsm/data/");

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        $r12 = new java.io.File;

        r4 = $r12;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "rsm.dat");

        $r13 = new java.io.FileWriter;

        r6 = $r13;

     label1:
        specialinvoke $r13.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r4, 0);

     label2:
        $r14 = new java.io.BufferedWriter;

        r5 = $r14;

     label3:
        specialinvoke $r14.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r6);

        virtualinvoke r5.<java.io.BufferedWriter: void write(java.lang.String)>($r2);

        virtualinvoke r5.<java.io.BufferedWriter: void close()>();

        virtualinvoke r6.<java.io.FileWriter: void close()>();

     label4:
        return "rsm.dat";

     label5:
        $r9 := @caughtexception;

        $r15 = (java.io.FileNotFoundException) $r9;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

        return "rsm.dat";

     label6:
        $r10 := @caughtexception;

        $r16 = (java.io.IOException) $r10;

        virtualinvoke $r16.<java.io.IOException: void printStackTrace()>();

        return "rsm.dat";

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }
}
