public class com.mobisage.android.SNSSSLSocketFactory extends java.lang.Object implements org.apache.http.conn.scheme.LayeredSocketFactory
{
    private javax.net.ssl.SSLContext a;

    public void <init>()
    {
        com.mobisage.android.SNSSSLSocketFactory r0;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext a> = null;

        return;
    }

    private static javax.net.ssl.SSLContext a()
    {
        java.lang.Throwable $r4, $r5, $r6, $r7;
        javax.net.ssl.SSLContext $r0, $r1;
        java.lang.Object[] $r2;
        java.security.KeyManagementException $r12;
        com.mobisage.android.ag $r8;
        java.security.SecureRandom $r3, $r9;
        javax.net.ssl.TrustManager[] $r10;
        java.security.NoSuchAlgorithmException $r11;

     label01:
        $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");

     label02:
        $r1 = $r0;

        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r8 = new com.mobisage.android.ag;

     label03:
        specialinvoke $r8.<com.mobisage.android.ag: void <init>(byte)>(0);

     label04:
        $r2[0] = $r8;

        $r9 = new java.security.SecureRandom;

        $r3 = $r9;

     label05:
        specialinvoke $r9.<java.security.SecureRandom: void <init>()>();

     label06:
        $r10 = (javax.net.ssl.TrustManager[]) $r2;

     label07:
        virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, $r10, $r3);

     label08:
        return $r0;

     label09:
        $r4 := @caughtexception;

        $r1 = null;

        $r5 = $r4;

     label10:
        $r11 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke $r11.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return $r1;

     label11:
        $r6 := @caughtexception;

        $r1 = null;

        $r7 = $r6;

     label12:
        $r12 = (java.security.KeyManagementException) $r7;

        virtualinvoke $r12.<java.security.KeyManagementException: void printStackTrace()>();

        return $r1;

     label13:
        $r7 := @caughtexception;

        goto label12;

     label14:
        $r5 := @caughtexception;

        goto label10;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.KeyManagementException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label14;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label14;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch java.security.KeyManagementException from label03 to label04 with label13;
        catch java.security.KeyManagementException from label05 to label06 with label13;
        catch java.security.KeyManagementException from label07 to label08 with label13;
    }

    private javax.net.ssl.SSLContext b()
    {
        com.mobisage.android.SNSSSLSocketFactory r0;
        javax.net.ssl.SSLContext $r1;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        $r1 = r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext a>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext a()>();

        r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext a> = $r1;

     label1:
        $r1 = r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext a>;

        return $r1;
    }

    public java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)
    {
        java.net.Socket $r1;
        javax.net.ssl.SSLContext $r8;
        java.lang.IllegalArgumentException $r7;
        java.net.InetSocketAddress $r5, $r6;
        javax.net.ssl.SSLSocketFactory $r9;
        java.net.InetAddress $r3;
        org.apache.http.params.HttpParams $r4;
        com.mobisage.android.SNSSSLSocketFactory r0;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $r4 := @parameter5: org.apache.http.params.HttpParams;

        if $r4 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r7;

     label1:
        $i2 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>($r4);

        $r8 = specialinvoke r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext b()>();

        $r9 = virtualinvoke $r8.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        if $i2 != 0 goto label2;

        $r1 = virtualinvoke $r9.<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r2, $i0, $r3, $i1);

        return $r1;

     label2:
        $r1 = virtualinvoke $r9.<javax.net.SocketFactory: java.net.Socket createSocket()>();

        $r5 = new java.net.InetSocketAddress;

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, $i1);

        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r2, $i0);

        virtualinvoke $r1.<java.net.Socket: void bind(java.net.SocketAddress)>($r5);

        virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r6, $i2);

        return $r1;
    }

    public java.net.Socket createSocket()
    {
        javax.net.ssl.SSLContext $r1;
        java.net.Socket $r3;
        com.mobisage.android.SNSSSLSocketFactory r0;
        javax.net.ssl.SSLSocketFactory $r2;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        $r1 = specialinvoke r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext b()>();

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)
    {
        java.net.Socket $r1;
        javax.net.ssl.SSLContext $r3;
        com.mobisage.android.SNSSSLSocketFactory r0;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r4;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = specialinvoke r0.<com.mobisage.android.SNSSSLSocketFactory: javax.net.ssl.SSLContext b()>();

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }

    public boolean isSecure(java.net.Socket)
    {
        java.net.Socket $r1;
        com.mobisage.android.SNSSSLSocketFactory r0;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: com.mobisage.android.SNSSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null");

        throw $r2;

     label1:
        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket not created by this factory");

        throw $r2;

     label2:
        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 == 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket is closed");

        throw $r2;

     label3:
        return 1;
    }
}
