class com.facebook.Request$Serializer extends java.lang.Object implements com.facebook.Request$KeyValueSerializer
{
    private boolean firstWrite;
    private final com.facebook.internal.Logger logger;
    private final java.io.BufferedOutputStream outputStream;

    public void <init>(java.io.BufferedOutputStream, com.facebook.internal.Logger)
    {
        com.facebook.internal.Logger $r2;
        com.facebook.Request$Serializer r0;
        java.io.BufferedOutputStream $r1;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.io.BufferedOutputStream;

        $r2 := @parameter1: com.facebook.internal.Logger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.facebook.Request$Serializer: boolean firstWrite> = 1;

        r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream> = $r1;

        r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger> = $r2;

        return;
    }

    public transient void write(java.lang.String, java.lang.Object[])
    {
        byte[] $r5;
        com.facebook.Request$Serializer r0;
        java.lang.Object[] $r2;
        java.lang.String $r1, $r4;
        boolean $z0;
        java.io.BufferedOutputStream $r3;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        $z0 = r0.<com.facebook.Request$Serializer: boolean firstWrite>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        $r4 = "--";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r5);

        $r3 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        $r4 = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r5);

        $r3 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        $r4 = "\r\n";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r5);

        r0.<com.facebook.Request$Serializer: boolean firstWrite> = 0;

     label1:
        $r3 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r2);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r5);

        return;
    }

    public void writeBitmap(java.lang.String, android.graphics.Bitmap)
    {
        com.facebook.internal.Logger $r6;
        java.lang.Object[] $r5;
        java.io.BufferedOutputStream $r4;
        com.facebook.Request$Serializer r0;
        android.graphics.Bitmap $r2;
        android.graphics.Bitmap$CompressFormat $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r1;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r1, $r1, "image/png");

        $r3 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r4 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r3, 100, $r4);

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r5);

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r6 = r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("    ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r1, "<Image>");

        return;
    }

    public void writeBytes(java.lang.String, byte[])
    {
        com.facebook.internal.Logger $r5;
        byte[] $r2;
        java.lang.Object[] $r4;
        java.lang.Integer $r7;
        java.io.BufferedOutputStream $r3;
        com.facebook.Request$Serializer r0;
        int $i0;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r8;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r1, $r1, "content/unknown");

        $r3 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r2);

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4);

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r5 = r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("    ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = newarray (java.lang.Object)[1];

        $i0 = lengthof $r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<Data: %d>", $r4);

        virtualinvoke $r5.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r1, $r8);

        return;
    }

    public void writeContentDisposition(java.lang.String, java.lang.String, java.lang.String)
    {
        com.facebook.Request$Serializer r0;
        java.lang.Object[] $r4;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("Content-Disposition: form-data; name=\"%s\"", $r4);

        if $r2 == null goto label1;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("; filename=\"%s\"", $r4);

     label1:
        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4);

        if $r3 == null goto label2;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "Content-Type";

        $r4[1] = $r3;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("%s: %s", $r4);

     label2:
        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r4);

        return;
    }

    public void writeFile(java.lang.String, android.os.ParcelFileDescriptor, java.lang.String)
    {
        com.facebook.internal.Logger $r9;
        java.lang.Throwable $r13;
        byte[] $r7;
        android.os.ParcelFileDescriptor $r2;
        java.io.BufferedInputStream $r6, $r15;
        java.lang.Object[] $r8;
        java.lang.Integer $r11;
        java.io.BufferedOutputStream $r12;
        com.facebook.Request$Serializer r0;
        int $i0, $i1;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r10, $r16;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r4, $r5, $r14;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.os.ParcelFileDescriptor;

        $r3 := @parameter2: java.lang.String;

        $r4 = null;

        if $r3 != null goto label01;

        $r3 = "content/unknown";

     label01:
        virtualinvoke r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r1, $r1, $r3);

     label02:
        $r14 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

     label03:
        $r5 = $r14;

     label04:
        specialinvoke $r14.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r2);

     label05:
        $r15 = new java.io.BufferedInputStream;

     label06:
        $r6 = $r15;

     label07:
        specialinvoke $r15.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label08:
        $r7 = newarray (byte)[8192];

        $i0 = 0;

     label09:
        $i1 = virtualinvoke $r6.<java.io.BufferedInputStream: int read(byte[])>($r7);

     label10:
        if $i1 != -1 goto label11;

        virtualinvoke $r6.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r5.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>();

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("", $r8);

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r9 = r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("    ");

        $r10 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8[0] = $r11;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<Data: %d>", $r8);

        virtualinvoke $r9.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r1, $r3);

        return;

     label11:
        $r12 = r0.<com.facebook.Request$Serializer: java.io.BufferedOutputStream outputStream>;

        virtualinvoke $r12.<java.io.BufferedOutputStream: void write(byte[],int,int)>($r7, 0, $i1);

     label12:
        $i0 = $i0 + $i1;

        goto label09;

     label13:
        $r13 := @caughtexception;

        $r6 = null;

     label14:
        if $r6 == null goto label15;

        virtualinvoke $r6.<java.io.BufferedInputStream: void close()>();

     label15:
        if $r4 == null goto label16;

        virtualinvoke $r4.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void close()>();

     label16:
        throw $r13;

     label17:
        $r13 := @caughtexception;

        $r6 = null;

        $r4 = $r5;

        goto label14;

     label18:
        $r13 := @caughtexception;

        $r4 = $r5;

        goto label14;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
    }

    public void writeFile(java.lang.String, com.facebook.Request$ParcelFileDescriptorWithMimeType)
    {
        com.facebook.Request$Serializer r0;
        android.os.ParcelFileDescriptor $r3;
        com.facebook.Request$ParcelFileDescriptorWithMimeType $r2;
        java.lang.String $r1, $r4;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.facebook.Request$ParcelFileDescriptorWithMimeType;

        $r3 = virtualinvoke $r2.<com.facebook.Request$ParcelFileDescriptorWithMimeType: android.os.ParcelFileDescriptor getFileDescriptor()>();

        $r4 = virtualinvoke $r2.<com.facebook.Request$ParcelFileDescriptorWithMimeType: java.lang.String getMimeType()>();

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String)>($r1, $r3, $r4);

        return;
    }

    public transient void writeLine(java.lang.String, java.lang.Object[])
    {
        com.facebook.Request$Serializer r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object[];

        virtualinvoke r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>($r1, $r2);

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<com.facebook.Request$Serializer: void write(java.lang.String,java.lang.Object[])>("\r\n", $r2);

        return;
    }

    public void writeObject(java.lang.String, java.lang.Object)
    {
        byte[] $r5;
        android.os.ParcelFileDescriptor $r6;
        com.facebook.Request$ParcelFileDescriptorWithMimeType $r7;
        java.lang.IllegalArgumentException $r8;
        com.facebook.Request$Serializer r0;
        android.graphics.Bitmap $r4;
        java.lang.Object $r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $z0 = staticinvoke <com.facebook.Request: boolean access$0(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.facebook.Request: java.lang.String access$1(java.lang.Object)>($r2);

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeString(java.lang.String,java.lang.String)>($r1, $r3);

        return;

     label1:
        $z0 = $r2 instanceof android.graphics.Bitmap;

        if $z0 == 0 goto label2;

        $r4 = (android.graphics.Bitmap) $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeBitmap(java.lang.String,android.graphics.Bitmap)>($r1, $r4);

        return;

     label2:
        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label3;

        $r5 = (byte[]) $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeBytes(java.lang.String,byte[])>($r1, $r5);

        return;

     label3:
        $z0 = $r2 instanceof android.os.ParcelFileDescriptor;

        if $z0 == 0 goto label4;

        $r6 = (android.os.ParcelFileDescriptor) $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,android.os.ParcelFileDescriptor,java.lang.String)>($r1, $r6, null);

        return;

     label4:
        $z0 = $r2 instanceof com.facebook.Request$ParcelFileDescriptorWithMimeType;

        if $z0 == 0 goto label5;

        $r7 = (com.facebook.Request$ParcelFileDescriptorWithMimeType) $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeFile(java.lang.String,com.facebook.Request$ParcelFileDescriptorWithMimeType)>($r1, $r7);

        return;

     label5:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value is not a supported type: String, Bitmap, byte[]");

        throw $r8;
    }

    public void writeRecordBoundary()
    {
        com.facebook.Request$Serializer r0;
        java.lang.Object[] $r1;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("--%s", $r1);

        return;
    }

    public void writeString(java.lang.String, java.lang.String)
    {
        com.facebook.internal.Logger $r4;
        com.facebook.Request$Serializer r0;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2;

        r0 := @this: com.facebook.Request$Serializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeContentDisposition(java.lang.String,java.lang.String,java.lang.String)>($r1, null, null);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeLine(java.lang.String,java.lang.Object[])>("%s", $r3);

        virtualinvoke r0.<com.facebook.Request$Serializer: void writeRecordBoundary()>();

        $r4 = r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        if $r4 == null goto label1;

        $r4 = r0.<com.facebook.Request$Serializer: com.facebook.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("    ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.facebook.internal.Logger: void appendKeyValue(java.lang.String,java.lang.Object)>($r1, $r2);

     label1:
        return;
    }
}
