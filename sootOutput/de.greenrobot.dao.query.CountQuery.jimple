public class de.greenrobot.dao.query.CountQuery extends de.greenrobot.dao.query.AbstractQuery
{
    private final de.greenrobot.dao.query.CountQuery$QueryData queryData;

    private void <init>(de.greenrobot.dao.query.CountQuery$QueryData, de.greenrobot.dao.AbstractDao, java.lang.String, java.lang.String[])
    {
        de.greenrobot.dao.query.CountQuery$QueryData $r1;
        de.greenrobot.dao.AbstractDao $r2;
        de.greenrobot.dao.query.CountQuery r0;
        java.lang.String[] $r4;
        java.lang.String $r3;

        r0 := @this: de.greenrobot.dao.query.CountQuery;

        $r1 := @parameter0: de.greenrobot.dao.query.CountQuery$QueryData;

        $r2 := @parameter1: de.greenrobot.dao.AbstractDao;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<de.greenrobot.dao.query.AbstractQuery: void <init>(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.String[])>($r2, $r3, $r4);

        r0.<de.greenrobot.dao.query.CountQuery: de.greenrobot.dao.query.CountQuery$QueryData queryData> = $r1;

        return;
    }

    void <init>(de.greenrobot.dao.query.CountQuery$QueryData, de.greenrobot.dao.AbstractDao, java.lang.String, java.lang.String[], de.greenrobot.dao.query.CountQuery$1)
    {
        de.greenrobot.dao.query.CountQuery$QueryData $r1;
        de.greenrobot.dao.AbstractDao $r2;
        de.greenrobot.dao.query.CountQuery r0;
        java.lang.String[] $r4;
        java.lang.String $r3;
        de.greenrobot.dao.query.CountQuery$1 $r5;

        r0 := @this: de.greenrobot.dao.query.CountQuery;

        $r1 := @parameter0: de.greenrobot.dao.query.CountQuery$QueryData;

        $r2 := @parameter1: de.greenrobot.dao.AbstractDao;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: de.greenrobot.dao.query.CountQuery$1;

        specialinvoke r0.<de.greenrobot.dao.query.CountQuery: void <init>(de.greenrobot.dao.query.CountQuery$QueryData,de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.String[])>($r1, $r2, $r3, $r4);

        return;
    }

    static de.greenrobot.dao.query.CountQuery create(de.greenrobot.dao.AbstractDao, java.lang.String, java.lang.Object[])
    {
        de.greenrobot.dao.query.AbstractQuery $r5;
        java.lang.Object[] $r2;
        de.greenrobot.dao.query.CountQuery$QueryData $r3;
        de.greenrobot.dao.AbstractDao $r0;
        de.greenrobot.dao.query.CountQuery $r6;
        java.lang.String[] $r4;
        java.lang.String $r1;

        $r0 := @parameter0: de.greenrobot.dao.AbstractDao;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object[];

        $r3 = new de.greenrobot.dao.query.CountQuery$QueryData;

        $r4 = staticinvoke <de.greenrobot.dao.query.CountQuery: java.lang.String[] toStringArray(java.lang.Object[])>($r2);

        specialinvoke $r3.<de.greenrobot.dao.query.CountQuery$QueryData: void <init>(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.String[],de.greenrobot.dao.query.CountQuery$1)>($r0, $r1, $r4, null);

        $r5 = virtualinvoke $r3.<de.greenrobot.dao.query.CountQuery$QueryData: de.greenrobot.dao.query.AbstractQuery forCurrentThread()>();

        $r6 = (de.greenrobot.dao.query.CountQuery) $r5;

        return $r6;
    }

    public long count()
    {
        java.lang.Throwable $r7;
        de.greenrobot.dao.query.CountQuery r0;
        java.lang.String[] $r4;
        long $l1;
        android.database.sqlite.SQLiteDatabase $r2;
        de.greenrobot.dao.DaoException $r6;
        de.greenrobot.dao.AbstractDao $r1;
        int $i0;
        java.lang.StringBuilder $r8;
        java.lang.String $r3;
        android.database.Cursor $r5;
        boolean $z0;

        r0 := @this: de.greenrobot.dao.query.CountQuery;

        virtualinvoke r0.<de.greenrobot.dao.query.CountQuery: void checkThread()>();

        $r1 = r0.<de.greenrobot.dao.query.CountQuery: de.greenrobot.dao.AbstractDao dao>;

        $r2 = virtualinvoke $r1.<de.greenrobot.dao.AbstractDao: android.database.sqlite.SQLiteDatabase getDatabase()>();

        $r3 = r0.<de.greenrobot.dao.query.CountQuery: java.lang.String sql>;

        $r4 = r0.<de.greenrobot.dao.query.CountQuery: java.lang.String[] parameters>;

        $r5 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r3, $r4);

     label01:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

     label02:
        if $z0 != 0 goto label05;

     label03:
        $r6 = new de.greenrobot.dao.DaoException;

        specialinvoke $r6.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>("No result for count");

        throw $r6;

     label04:
        $r7 := @caughtexception;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        throw $r7;

     label05:
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isLast()>();

     label06:
        if $z0 != 0 goto label08;

     label07:
        $r6 = new de.greenrobot.dao.DaoException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected row count: ");

        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label08:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnCount()>();

     label09:
        if $i0 == 1 goto label11;

     label10:
        $r6 = new de.greenrobot.dao.DaoException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unexpected column count: ");

        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnCount()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<de.greenrobot.dao.DaoException: void <init>(java.lang.String)>($r3);

        throw $r6;

     label11:
        $l1 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>(0);

     label12:
        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return $l1;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label07 to label09 with label04;
        catch java.lang.Throwable from label10 to label12 with label04;
    }

    public de.greenrobot.dao.query.CountQuery forCurrentThread()
    {
        de.greenrobot.dao.query.AbstractQuery $r1;
        de.greenrobot.dao.query.CountQuery$QueryData $r2;
        de.greenrobot.dao.query.CountQuery r0;

        r0 := @this: de.greenrobot.dao.query.CountQuery;

        $r2 = r0.<de.greenrobot.dao.query.CountQuery: de.greenrobot.dao.query.CountQuery$QueryData queryData>;

        $r1 = virtualinvoke $r2.<de.greenrobot.dao.query.CountQuery$QueryData: de.greenrobot.dao.query.AbstractQuery forCurrentThread(de.greenrobot.dao.query.AbstractQuery)>(r0);

        r0 = (de.greenrobot.dao.query.CountQuery) $r1;

        return r0;
    }

    public volatile void setParameter(int, java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        de.greenrobot.dao.query.CountQuery r0;

        r0 := @this: de.greenrobot.dao.query.CountQuery;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<de.greenrobot.dao.query.AbstractQuery: void setParameter(int,java.lang.Object)>($i0, $r1);

        return;
    }
}
