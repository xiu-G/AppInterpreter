class oauth.signpost.signature.SignatureBaseString$ComparableParameter extends java.lang.Object implements java.lang.Comparable
{
    private final java.lang.String key;
    final oauth.signpost.Parameter value;

    void <init>(oauth.signpost.Parameter)
    {
        oauth.signpost.signature.SignatureBaseString$ComparableParameter r0;
        oauth.signpost.Parameter $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r0 := @this: oauth.signpost.signature.SignatureBaseString$ComparableParameter;

        $r1 := @parameter0: oauth.signpost.Parameter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: oauth.signpost.Parameter value> = $r1;

        $r2 = virtualinvoke $r1.<oauth.signpost.Parameter: java.lang.String getKey()>();

        $r2 = staticinvoke <oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String safeString(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<oauth.signpost.Parameter: java.lang.String getValue()>();

        $r3 = staticinvoke <oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String safeString(java.lang.String)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r2 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String key> = $r2;

        return;
    }

    private static java.lang.String safeString(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        return $r0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        oauth.signpost.signature.SignatureBaseString$ComparableParameter r0, $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: oauth.signpost.signature.SignatureBaseString$ComparableParameter;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (oauth.signpost.signature.SignatureBaseString$ComparableParameter) $r1;

        $i0 = virtualinvoke r0.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: int compareTo(oauth.signpost.signature.SignatureBaseString$ComparableParameter)>($r2);

        return $i0;
    }

    public int compareTo(oauth.signpost.signature.SignatureBaseString$ComparableParameter)
    {
        oauth.signpost.signature.SignatureBaseString$ComparableParameter r0, $r1;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: oauth.signpost.signature.SignatureBaseString$ComparableParameter;

        $r1 := @parameter0: oauth.signpost.signature.SignatureBaseString$ComparableParameter;

        $r3 = r0.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String key>;

        $r2 = $r1.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String key>;

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public java.lang.String toString()
    {
        oauth.signpost.signature.SignatureBaseString$ComparableParameter r0;
        java.lang.String r1;

        r0 := @this: oauth.signpost.signature.SignatureBaseString$ComparableParameter;

        r1 = r0.<oauth.signpost.signature.SignatureBaseString$ComparableParameter: java.lang.String key>;

        return r1;
    }
}
