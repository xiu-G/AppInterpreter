public class cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 extends cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView
{
    static final java.lang.String DEF_JS_READY_PULL_DOWN_CALL;
    static final java.lang.String DEF_JS_READY_PULL_UP_CALL;
    static final java.lang.String JS_INTERFACE_PKG;
    private final java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown;
    private final java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp;
    private cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void <init>(android.content.Context)>($r1);

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown> = $r2;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp> = $r2;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown> = $r3;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp> = $r3;

        return;
    }

    public void <init>(android.content.Context, cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode)
    {
        android.content.Context $r1;
        cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode $r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode;

        specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: void <init>(android.content.Context,cn.ffcs.lib.pulltorefresh.library.PullToRefreshBase$Mode)>($r1, $r2);

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown> = $r3;

        $r3 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp> = $r3;

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$000(cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2)
    {
        java.util.concurrent.atomic.AtomicBoolean r1;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 $r0;

        $r0 := @parameter0: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        r1 = $r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp>;

        return r1;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$100(cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2)
    {
        java.util.concurrent.atomic.AtomicBoolean r1;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 $r0;

        $r0 := @parameter0: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        r1 = $r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown>;

        return r1;
    }

    protected volatile android.view.View createRefreshableView(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;
        android.webkit.WebView $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        return $r3;
    }

    protected android.webkit.WebView createRefreshableView(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback $r4;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;
        android.webkit.WebView $r3;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 = specialinvoke r0.<cn.ffcs.lib.pulltorefresh.library.PullToRefreshWebView: android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r4 = new cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback;

        specialinvoke $r4.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback: void <init>(cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2)>(r0);

        r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback> = $r4;

        $r4 = r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback>;

        virtualinvoke $r3.<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>($r4, "ptr");

        return $r3;
    }

    protected boolean isReadyForPullEnd()
    {
        android.view.View $r1;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;
        android.webkit.WebView $r2;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: android.view.View getRefreshableView()>();

        $r2 = (android.webkit.WebView) $r1;

        virtualinvoke $r2.<android.webkit.WebView: void loadUrl(java.lang.String)>("javascript:isReadyForPullUp();");

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    protected boolean isReadyForPullStart()
    {
        android.view.View $r1;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2 r0;
        android.webkit.WebView $r2;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2;

        $r1 = virtualinvoke r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: android.view.View getRefreshableView()>();

        $r2 = (android.webkit.WebView) $r1;

        virtualinvoke $r2.<android.webkit.WebView: void loadUrl(java.lang.String)>("javascript:isReadyForPullDown();");

        $r3 = r0.<cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.lang.String JS_INTERFACE_PKG> = "ptr";

        <cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.lang.String DEF_JS_READY_PULL_UP_CALL> = "javascript:isReadyForPullUp();";

        <cn.ffcs.lib.pulltorefresh.library.extras.PullToRefreshWebView2: java.lang.String DEF_JS_READY_PULL_DOWN_CALL> = "javascript:isReadyForPullDown();";

        return;
    }
}
