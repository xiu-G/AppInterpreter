public final class com.ccit.mmwlan.MMClientSDK_ForPad extends java.lang.Object
{
    private static final int INT_RESULT_0;
    private static final int INT_RESULT_1;
    private static final int INT_RESULT_2;
    private static final int INT_RESULT_3;
    private static final int INT_RESULT_4;
    private static final int INT_RESULT_5;
    private static final int INT_RESULT_6;
    private static final int INT_RESULT_7;
    private static final java.lang.String MMCLIENT_SDK;
    private static com.ccit.mmwlan.ClientSDK clientSDK;
    private static android.content.Context context;
    private static java.lang.String strApplyCert;
    private static java.lang.String strDeviceOuth;
    private static java.lang.String strGetDeviceName;

    static void <clinit>()
    {
        com.ccit.mmwlan.ClientSDK $r0;

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String MMCLIENT_SDK> = "MMClientSDK_ForPad";

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_7> = 7;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_6> = 6;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_5> = 5;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_4> = 4;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_3> = 3;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_2> = 2;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_1> = 1;

        <com.ccit.mmwlan.MMClientSDK_ForPad: int INT_RESULT_0> = 0;

        <com.ccit.mmwlan.MMClientSDK_ForPad: android.content.Context context> = null;

        <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK> = null;

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strDeviceOuth> = null;

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strApplyCert> = null;

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strGetDeviceName> = null;

        $r0 = new com.ccit.mmwlan.ClientSDK;

        specialinvoke $r0.<com.ccit.mmwlan.ClientSDK: void <init>()>();

        <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK> = $r0;

        return;
    }

    public void <init>()
    {
        com.ccit.mmwlan.MMClientSDK_ForPad r0;

        r0 := @this: com.ccit.mmwlan.MMClientSDK_ForPad;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int DestorySecCert(java.lang.String)
    {
        com.ccit.mmwlan.ClientSDK $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;
        java.lang.Exception $r3, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $i0 = virtualinvoke $r1.<com.ccit.mmwlan.ClientSDK: int DestorySecCertForBilling(java.lang.String)>(null);

     label2:
        $r2 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("DestroySecCert() iRet -> ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r0);

     label4:
        return 0;

     label5:
        $r3 := @caughtexception;

        $i0 = 0;

     label6:
        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return $i0;

     label7:
        $r4 := @caughtexception;

        $r3 = $r4;

        goto label6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    public static java.lang.String RSAEncryptWithPubKey(java.lang.String)
    {
        com.ccit.mmwlan.ClientSDK $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r2;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.ClientSDK: java.lang.String AsymmetricEncryptionForBilling(java.lang.String)>($r0);

     label2:
        $r0 = $r2;

        if $r2 != null goto label4;

     label3:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

     label4:
        $r3 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("RSAEncryptWithPubKey() strRet -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label6:
        return $r0;

     label7:
        $r4 := @caughtexception;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return $r0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static com.ccit.mmwlan.vo.SignView applyCert(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r17;
        byte[] $r11;
        com.ccit.mmwlan.exception.ClientSDKException $r16;
        com.ccit.mmwlan.vo.SignView $r1, $r19;
        java.util.ArrayList $r12;
        int $i0;
        java.lang.String $r0, $r2, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;
        com.ccit.mmwlan.a.d $r9, $r21;
        com.ccit.mmwlan.vo.a $r14;
        com.ccit.mmwlan.a.f $r10, $r22;
        java.lang.Exception $r18;
        com.ccit.mmwlan.ClientSDK $r15;
        java.lang.StringBuilder $r3, $r20;
        java.lang.Object $r13;
        java.io.UnsupportedEncodingException $r23;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r19 = new com.ccit.mmwlan.vo.SignView;

        $r1 = $r19;

        specialinvoke $r19.<com.ccit.mmwlan.vo.SignView: void <init>()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r4 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strApplyCert>;

        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mmwlan/applyCert_PAD");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String imeiOfMD5Value()>();

        $r6 = "5";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label01;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(5);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u83b7\u53d6IMEIMD5\u503c\u5931\u8d25");

        return $r1;

     label01:
        $r6 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String genSid_PAD()>();

        $r7 = "2";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(2);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u51c6\u5907PKI\u5bc6\u94a5\u5bf9\u5931\u8d25");

        return $r1;

     label02:
        $i0 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: int genPKIKey_PAD()>();

        if 3 != $i0 goto label03;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(3);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7533\u8bf7\u5b89\u5168\u51ed\u8bc1\u5931\u8d25");

        return $r1;

     label03:
        $r7 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String getGenPubkey()>();

        $r8 = "4";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label04;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(4);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u4fdd\u5b58\u5b89\u5168\u51ed\u8bc1\u5931\u8d25");

        return $r1;

     label04:
        $r21 = new com.ccit.mmwlan.a.d;

        $r9 = $r21;

        specialinvoke $r21.<com.ccit.mmwlan.a.d: void <init>()>();

        $r2 = virtualinvoke $r9.<com.ccit.mmwlan.a.d: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r5, $r6, $r7, null);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("applyCert() strRequestXML -> ");

        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r0);

        $r22 = new com.ccit.mmwlan.a.f;

        $r10 = $r22;

        specialinvoke $r22.<com.ccit.mmwlan.a.f: void <init>()>();

     label05:
        $r11 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r11 = staticinvoke <com.ccit.mmwlan.a.d: byte[] a(java.lang.String,byte[])>($r4, $r11);

     label06:
        $r20 = new java.lang.StringBuilder;

        $r3 = $r20;

     label07:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("applyCert() byResponse -> ");

     label08:
        $r0 = new java.lang.String;

        $r2 = $r0;

     label09:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r11);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label10:
        $r0 = new java.lang.String;

        $r2 = $r0;

     label11:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r11);

        $r12 = virtualinvoke $r10.<com.ccit.mmwlan.a.f: java.util.ArrayList a(java.lang.String)>($r2);

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label12:
        $r14 = (com.ccit.mmwlan.vo.a) $r13;

     label13:
        $r2 = virtualinvoke $r14.<com.ccit.mmwlan.vo.a: java.lang.String a()>();

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label14:
        $r14 = (com.ccit.mmwlan.vo.a) $r13;

     label15:
        $r0 = virtualinvoke $r14.<com.ccit.mmwlan.vo.a: java.lang.String b()>();

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>($r0);

     label16:
        $r20 = new java.lang.StringBuilder;

        $r3 = $r20;

     label17:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("applyCert() strCertResult -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r0);

     label18:
        $r0 = "0";

     label19:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

     label20:
        if $z0 == 0 goto label40;

     label21:
        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label22:
        $r14 = (com.ccit.mmwlan.vo.a) $r13;

     label23:
        $r2 = virtualinvoke $r14.<com.ccit.mmwlan.vo.a: java.lang.String c()>();

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label24:
        $r14 = (com.ccit.mmwlan.vo.a) $r13;

     label25:
        $r0 = virtualinvoke $r14.<com.ccit.mmwlan.vo.a: java.lang.String d()>();

     label26:
        if $r0 == null goto label29;

     label27:
        $i0 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: int updateRandNum_PAD(java.lang.String)>($r0);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>($i0);

     label28:
        if $i0 == 0 goto label29;

        return $r1;

     label29:
        $r15 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label30:
        $i0 = virtualinvoke $r15.<com.ccit.mmwlan.ClientSDK: int saveSecCertNativeForBilling(java.lang.String,java.lang.String)>($r2, null);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>($i0);

     label31:
        $r20 = new java.lang.StringBuilder;

        $r3 = $r20;

     label32:
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("applyCert() saveSecCertNative -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label33:
        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(0);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u6210\u529f");

     label34:
        return $r1;

     label35:
        $r16 := @caughtexception;

     label36:
        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(4);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u4fdd\u5b58\u5b89\u5168\u51ed\u8bc1\u5931\u8d25");

        virtualinvoke $r16.<com.ccit.mmwlan.exception.ClientSDKException: void printStackTrace()>();

     label37:
        goto label33;

     label38:
        $r17 := @caughtexception;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7b7e\u540d\u5931\u8d25");

        $r23 = (java.io.UnsupportedEncodingException) $r17;

        virtualinvoke $r23.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label39:
        return $r1;

     label40:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>($i0);

     label41:
        goto label39;

     label42:
        $r18 := @caughtexception;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7b7e\u540d\u5931\u8d25");

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

        goto label39;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label38;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label38;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label38;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label38;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label38;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label38;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label38;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label38;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label38;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label38;
        catch java.io.UnsupportedEncodingException from label25 to label26 with label38;
        catch java.io.UnsupportedEncodingException from label27 to label28 with label38;
        catch java.lang.Exception from label05 to label06 with label42;
        catch java.lang.Exception from label07 to label08 with label42;
        catch java.lang.Exception from label09 to label10 with label42;
        catch java.lang.Exception from label11 to label16 with label42;
        catch java.lang.Exception from label17 to label18 with label42;
        catch java.lang.Exception from label19 to label20 with label42;
        catch java.lang.Exception from label21 to label26 with label42;
        catch java.lang.Exception from label27 to label28 with label42;
        catch com.ccit.mmwlan.exception.ClientSDKException from label30 to label31 with label35;
        catch com.ccit.mmwlan.exception.ClientSDKException from label32 to label33 with label35;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label38;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label38;
        catch java.lang.Exception from label30 to label31 with label42;
        catch java.lang.Exception from label32 to label33 with label42;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label38;
        catch java.io.UnsupportedEncodingException from label36 to label37 with label38;
        catch java.lang.Exception from label33 to label34 with label42;
        catch java.lang.Exception from label36 to label37 with label42;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label38;
        catch java.lang.Exception from label40 to label41 with label42;
    }

    public static com.ccit.mmwlan.vo.SignView applyCert_PAD(java.lang.String)
    {
        com.ccit.mmwlan.vo.SignView $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.ccit.mmwlan.vo.SignView;

        specialinvoke $r1.<com.ccit.mmwlan.vo.SignView: void <init>()>();

        if $r0 != null goto label1;

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(6);

        virtualinvoke $r1.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u83b7\u53d6\u5e94\u7528appid\u9519\u8bef");

        return $r1;

     label1:
        $r1 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.vo.SignView applyCert(java.lang.String,java.lang.String)>($r0, null);

        return $r1;
    }

    private static com.ccit.mmwlan.vo.SignView authProcess(com.ccit.mmwlan.vo.SignView, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r13;
        byte[] $r9;
        com.ccit.mmwlan.vo.SignView $r0;
        java.util.ArrayList $r10;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7;
        com.ccit.mmwlan.vo.b $r12;
        com.ccit.mmwlan.a.d $r16;
        com.ccit.mmwlan.a.f $r8, $r17;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r5, $r15;
        java.lang.Object $r11;
        java.io.UnsupportedEncodingException $r18;

        $r0 := @parameter0: com.ccit.mmwlan.vo.SignView;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r6 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strDeviceOuth>;

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mmwlan/ApplyDeviceAuth_PAD");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("authProcess() strUrl -> ");

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r7);

        $r16 = new com.ccit.mmwlan.a.d;

        specialinvoke $r16.<com.ccit.mmwlan.a.d: void <init>()>();

        $r1 = virtualinvoke $r16.<com.ccit.mmwlan.a.d: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, null, $r2, null, null, null, null);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("authProcess() strRequestXML -> ");

        $r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r17 = new com.ccit.mmwlan.a.f;

        $r8 = $r17;

        specialinvoke $r17.<com.ccit.mmwlan.a.f: void <init>()>();

     label01:
        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r9 = staticinvoke <com.ccit.mmwlan.a.d: byte[] a(java.lang.String,byte[])>($r6, $r9);

     label02:
        $r15 = new java.lang.StringBuilder;

        $r5 = $r15;

     label03:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("authProcess() byResponse -> ");

     label04:
        $r2 = new java.lang.String;

        $r1 = $r2;

     label05:
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r9);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r1);

     label06:
        $r2 = new java.lang.String;

        $r1 = $r2;

     label07:
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r9);

        $r10 = virtualinvoke $r8.<com.ccit.mmwlan.a.f: java.util.ArrayList c(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label08:
        $r12 = (com.ccit.mmwlan.vo.b) $r11;

     label09:
        $r1 = virtualinvoke $r12.<com.ccit.mmwlan.vo.b: java.lang.String a()>();

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label10:
        $r12 = (com.ccit.mmwlan.vo.b) $r11;

     label11:
        $r2 = virtualinvoke $r12.<com.ccit.mmwlan.vo.b: java.lang.String b()>();

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>($r2);

     label12:
        $r15 = new java.lang.StringBuilder;

        $r5 = $r15;

     label13:
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("authProcess() strCertResult -> ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>($i0);

     label14:
        return $r0;

     label15:
        $r13 := @caughtexception;

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        $r18 = (java.io.UnsupportedEncodingException) $r13;

        virtualinvoke $r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return $r0;

     label16:
        $r14 := @caughtexception;

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

        return $r0;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label15;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label15;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label15;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label15;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label15;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label15;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label15;
        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label12 with label16;
        catch java.lang.Exception from label13 to label14 with label16;
    }

    public static int checkSecCert_PAD()
    {
        com.ccit.mmwlan.ClientSDK $r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;

        $r0 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $i0 = virtualinvoke $r0.<com.ccit.mmwlan.ClientSDK: int checkSecCertNativeForBilling()>();

     label2:
        $r1 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("checkSecCert_PAD() -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label4:
        return $i0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return 1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static int genPKIKey_PAD()
    {
        com.ccit.mmwlan.ClientSDK $r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;

        $r0 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $i0 = virtualinvoke $r0.<com.ccit.mmwlan.ClientSDK: int genPKIKeyNativeForBilling()>();

     label2:
        $r1 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("genPKIKey_PAD() -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label4:
        return $i0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return 3;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static java.lang.String genSid_PAD()
    {
        com.ccit.mmwlan.ClientSDK $r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r2;
        java.lang.Exception $r4;

        $r0 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $r1 = virtualinvoke $r0.<com.ccit.mmwlan.ClientSDK: java.lang.String genSIDNative()>();

     label2:
        $r2 = $r1;

        if $r1 != null goto label4;

     label3:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

     label4:
        $r3 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("genSid_PAD() -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r1);

     label6:
        return $r2;

     label7:
        $r4 := @caughtexception;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return $r2;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.String getDeviceID_PAD()
    {
        android.content.Context $r1;
        android.net.wifi.WifiInfo $r6;
        android.net.wifi.WifiManager $r5;
        android.telephony.TelephonyManager $r3;
        java.lang.StringBuilder $r0, $r7;
        java.lang.Object $r2;
        java.lang.String $r4;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        if $r4 != null goto label1;

        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r5 = (android.net.wifi.WifiManager) $r2;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r4 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceID_PAD() MacAddress -> ");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r4);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceID_PAD() strIMEI -> ");

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r4);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static com.ccit.mmwlan.vo.DeviceName getDeviceNameNew_PAD()
    {
        java.lang.Throwable $r10;
        byte[] $r6;
        com.ccit.mmwlan.vo.DeviceName $r3, $r9;
        java.util.ArrayList $r7;
        java.lang.String $r0, $r2, $r4;
        boolean $z0;
        com.ccit.mmwlan.a.d $r13;
        com.ccit.mmwlan.a.f $r5, $r14;
        java.lang.Exception $r11;
        java.lang.StringBuilder $r1, $r12;
        java.lang.Object $r8;
        java.io.UnsupportedEncodingException $r15;

        $r0 = "5";

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r2 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strGetDeviceName>;

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mmwlan/getDeviceName_PAD");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new com.ccit.mmwlan.vo.DeviceName;

        $r3 = $r9;

        specialinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: void <init>()>();

        $r4 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String imeiOfMD5Value()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label01;

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setResult(java.lang.String)>("5");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setErrormsg(java.lang.String)>("imei/imsi/mac\u7684MD5\u5931\u8d25");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setDeviceName(java.lang.String)>("");

        return $r3;

     label01:
        $r13 = new com.ccit.mmwlan.a.d;

        specialinvoke $r13.<com.ccit.mmwlan.a.d: void <init>()>();

        $r0 = virtualinvoke $r13.<com.ccit.mmwlan.a.d: java.lang.String a(java.lang.String)>($r4);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() strRequestXML -> ");

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r4);

        $r14 = new com.ccit.mmwlan.a.f;

        $r5 = $r14;

        specialinvoke $r14.<com.ccit.mmwlan.a.f: void <init>()>();

     label02:
        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = staticinvoke <com.ccit.mmwlan.a.d: byte[] a(java.lang.String,byte[])>($r2, $r6);

     label03:
        $r12 = new java.lang.StringBuilder;

        $r1 = $r12;

     label04:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() byResponse -> ");

     label05:
        $r0 = new java.lang.String;

        $r2 = $r0;

     label06:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r6);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label07:
        $r0 = new java.lang.String;

        $r2 = $r0;

     label08:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r5.<com.ccit.mmwlan.a.f: java.util.ArrayList b(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label09:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label10:
        return $r9;

     label11:
        $r10 := @caughtexception;

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setResult(java.lang.String)>("7");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setErrormsg(java.lang.String)>("\u8bf7\u6c42\u8bbe\u5907\u540d\u5931\u8d25");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setDeviceName(java.lang.String)>("");

        $r15 = (java.io.UnsupportedEncodingException) $r10;

        virtualinvoke $r15.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return $r3;

     label12:
        $r11 := @caughtexception;

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setResult(java.lang.String)>("7");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setErrormsg(java.lang.String)>("\u8bf7\u6c42\u8bbe\u5907\u540d\u5931\u8d25");

        virtualinvoke $r3.<com.ccit.mmwlan.vo.DeviceName: void setDeviceName(java.lang.String)>("");

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return $r3;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label11;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label11;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label11;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label11;
        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label10 with label12;
    }

    public static java.lang.String getDeviceName_PAD()
    {
        java.lang.Throwable $r11;
        byte[] $r6;
        com.ccit.mmwlan.vo.DeviceName $r9;
        java.util.ArrayList $r7;
        java.lang.String $r1, $r2, $r3, $r10;
        boolean $z0;
        com.ccit.mmwlan.a.d $r13;
        com.ccit.mmwlan.a.f $r5, $r15;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r0, $r4, $r14;
        java.lang.Object $r8;
        java.io.UnsupportedEncodingException $r16;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://");

        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strGetDeviceName>;

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mmwlan/getDeviceName_PAD");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.lang.StringBuilder;

        $r0 = $r4;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String imeiOfMD5Value()>();

        $r3 = "5";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;

     label01:
        $r13 = new com.ccit.mmwlan.a.d;

        specialinvoke $r13.<com.ccit.mmwlan.a.d: void <init>()>();

        $r2 = virtualinvoke $r13.<com.ccit.mmwlan.a.d: java.lang.String a(java.lang.String)>($r2);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() strRequestXML -> ");

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r3);

        $r15 = new com.ccit.mmwlan.a.f;

        $r5 = $r15;

        specialinvoke $r15.<com.ccit.mmwlan.a.f: void <init>()>();

     label02:
        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = staticinvoke <com.ccit.mmwlan.a.d: byte[] a(java.lang.String,byte[])>($r1, $r6);

     label03:
        $r14 = new java.lang.StringBuilder;

        $r4 = $r14;

     label04:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() byResponse -> ");

     label05:
        $r2 = new java.lang.String;

        $r1 = $r2;

     label06:
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r1);

     label07:
        $r2 = new java.lang.String;

        $r1 = $r2;

     label08:
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r6);

        $r7 = virtualinvoke $r5.<com.ccit.mmwlan.a.f: java.util.ArrayList b(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label09:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label10:
        $r1 = virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getDeviceName()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label11:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label12:
        virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getResult()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label13:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label14:
        virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getErrormsg()>();

     label15:
        $r14 = new java.lang.StringBuilder;

        $r4 = $r14;

     label16:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() strXMLResult -> ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label17:
        $r2 = "0";

     label18:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label19:
        if $z0 == 0 goto label32;

     label20:
        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label21:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label22:
        $r3 = virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getDeviceName()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label23:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label24:
        $r2 = virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getResult()>();

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

     label25:
        $r9 = (com.ccit.mmwlan.vo.DeviceName) $r8;

     label26:
        $r1 = virtualinvoke $r9.<com.ccit.mmwlan.vo.DeviceName: java.lang.String getErrormsg()>();

     label27:
        $r14 = new java.lang.StringBuilder;

        $r4 = $r14;

     label28:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("strDeviceName");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("strDeviceName --- >", $r10);

     label29:
        $r14 = new java.lang.StringBuilder;

        $r4 = $r14;

     label30:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("getDeviceName_PAD() strDeviceName -> ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r10);

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label31:
        return $r1;

     label32:
        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label33:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;

     label34:
        $r11 := @caughtexception;

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(7);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r16 = (java.io.UnsupportedEncodingException) $r11;

        virtualinvoke $r16.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label33;

     label35:
        $r12 := @caughtexception;

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(7);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        goto label33;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label34;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label34;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label34;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label34;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label34;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label34;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label34;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label34;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label34;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label34;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label34;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label34;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label34;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label34;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label34;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label34;
        catch java.lang.Exception from label02 to label03 with label35;
        catch java.lang.Exception from label04 to label05 with label35;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label08 to label15 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label20 to label27 with label35;
        catch java.lang.Exception from label28 to label29 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label32 to label33 with label35;
    }

    private static java.lang.String getGenPubkey()
    {
        com.ccit.mmwlan.ClientSDK $r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r1, $r3;
        java.lang.Exception $r4;

        $r0 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $r1 = virtualinvoke $r0.<com.ccit.mmwlan.ClientSDK: java.lang.String getPubKeyForBilling()>();

     label2:
        if $r1 != null goto label5;

     label3:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(4);

     label4:
        return $r1;

     label5:
        $r2 = new java.lang.StringBuilder;

     label6:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("getGenPubkey() -> ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r3);

     label7:
        return $r1;

     label8:
        $r4 := @caughtexception;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(4);

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return $r1;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String getIMSI_PAD()
    {
        java.lang.StringBuilder $r0, $r1;
        java.lang.String $r2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("10086");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("getIMSI_PAD() strIMEI -> ");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getVersion()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("getVersion() -> ");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1.1.6");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r1);

        return "1.1.6";
    }

    private static java.lang.String imeiOfMD5Value()
    {
        com.ccit.mmwlan.ClientSDK $r2;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r1, $r4;
        java.lang.Exception $r5;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String getDeviceID_PAD()>();

        $r2 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label1:
        $r1 = virtualinvoke $r2.<com.ccit.mmwlan.ClientSDK: java.lang.String getDigestNative(java.lang.String,java.lang.String)>("md5", $r1);

     label2:
        if $r1 != null goto label5;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(5);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label4:
        return $r1;

     label5:
        $r3 = new java.lang.StringBuilder;

     label6:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("imeiOfMD5Value() strMD5Result -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r4);

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label7:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;

     label8:
        $r5 := @caughtexception;

        virtualinvoke $r0.<java.lang.StringBuilder: void setLength(int)>(0);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(5);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        goto label7;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private static int initialImsiAndImeiValue()
    {
        com.ccit.mmwlan.vo.DeviceInfo $r0;
        android.content.Context $r4;
        java.io.File $r5;
        java.lang.Exception $r7;
        com.ccit.mmwlan.ClientSDK $r6;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r3;

        $r0 = new com.ccit.mmwlan.vo.DeviceInfo;

        specialinvoke $r0.<com.ccit.mmwlan.vo.DeviceInfo: void <init>()>();

        virtualinvoke $r0.<com.ccit.mmwlan.vo.DeviceInfo: void setStrImei(java.lang.String)>("10086");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialImsiAndImeiValue() strIMSI -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("10086");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r2 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String getDeviceID_PAD()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialImsiAndImeiValue() IMEI ->");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r3);

        if $r2 != null goto label1;

        return 1;

     label1:
        virtualinvoke $r0.<com.ccit.mmwlan.vo.DeviceInfo: void setStrImsi(java.lang.String)>($r2);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialImsiAndImeiValue() strIMEI -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r4 = <com.ccit.mmwlan.MMClientSDK_ForPad: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.io.File getFilesDir()>();

        $r2 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        virtualinvoke $r0.<com.ccit.mmwlan.vo.DeviceInfo: void setFilePath(java.lang.String)>($r2);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialImsiAndImeiValue() FilePath -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $r6 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label2:
        $i0 = virtualinvoke $r6.<com.ccit.mmwlan.ClientSDK: int transmitInfoNative(com.ccit.mmwlan.vo.DeviceInfo)>($r0);

     label3:
        $r1 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialImsiAndImeiValue() iResult -> ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

     label5:
        if $i0 == 0 goto label6;

     label6:
        return 0;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        goto label6;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    public static int initialMMSDK(android.content.Context, com.ccit.mmwlan.vo.IPDress_ForPad)
    {
        android.content.Context $r0;
        com.ccit.mmwlan.vo.IPDress_ForPad $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.ccit.mmwlan.vo.IPDress_ForPad;

        <com.ccit.mmwlan.MMClientSDK_ForPad: android.content.Context context> = $r0;

        if $r1 != null goto label1;

        return 5;

     label1:
        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrDeviceOuthIp()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrApplySecCertIP()>();

        if $r2 == null goto label2;

        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrGetDeviceName()>();

        if $r2 != null goto label3;

     label2:
        return 5;

     label3:
        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrDeviceOuthIp()>();

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strDeviceOuth> = $r2;

        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrApplySecCertIP()>();

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strApplyCert> = $r2;

        $r2 = virtualinvoke $r1.<com.ccit.mmwlan.vo.IPDress_ForPad: java.lang.String getStrGetDeviceName()>();

        <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strGetDeviceName> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialMMSDK() strIPDress -> ");

        $r2 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strApplyCert>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  :  ");

        $r2 = <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String strApplyCert>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        $i0 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: int initialImsiAndImeiValue()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("initialMMSDK() -> ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        return $i0;
    }

    public static java.lang.String md5Algorithm(java.lang.String)
    {
        com.ccit.mmwlan.ClientSDK $r1;
        java.lang.String $r0;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        return $r0;

     label1:
        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label2:
        $r0 = virtualinvoke $r1.<com.ccit.mmwlan.ClientSDK: java.lang.String getDigestNative(java.lang.String,java.lang.String)>("md5", $r0);

     label3:
        if $r0 != null goto label7;

     label4:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

     label5:
        return $r0;

     label6:
        $r2 := @caughtexception;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label7:
        return $r0;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static com.ccit.mmwlan.vo.SignView sidSign_PAD(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.ccit.mmwlan.exception.ClientSDKException $r9;
        com.ccit.mmwlan.vo.SignView $r4, $r10;
        int $i0, $i1;
        com.ccit.mmwlan.ClientSDK $r7;
        java.lang.StringBuilder $r8, $r11;
        java.lang.String $r0, $r1, $r2, $r3, $r5, $r6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r10 = new com.ccit.mmwlan.vo.SignView;

        $r4 = $r10;

        specialinvoke $r10.<com.ccit.mmwlan.vo.SignView: void <init>()>();

        if $r0 != null goto label01;

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(6);

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u5e94\u7528appid\u4e3a\u7a7a");

        return $r4;

     label01:
        $r5 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String imeiOfMD5Value()>();

        $r6 = "5";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(5);

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u83b7\u53d6IMEI\u7684MD5\u503c\u9519\u8bef");

        return $r4;

     label02:
        $i0 = -1;

        $r7 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label03:
        $i1 = virtualinvoke $r7.<com.ccit.mmwlan.ClientSDK: int checkSecCertNativeForBilling()>();

     label04:
        $i0 = $i1;

        $r11 = new java.lang.StringBuilder;

        $r8 = $r11;

     label05:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("sidSign_PAD() iCertState -> ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r6);

     label06:
        if $i0 != 0 goto label08;

        $r4 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.vo.SignView signProcess(com.ccit.mmwlan.vo.SignView,java.lang.String)>($r4, $r0);

        return $r4;

     label07:
        $r9 := @caughtexception;

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u68c0\u67e5\u51ed\u8bc1\u5f02\u5e38");

        virtualinvoke $r9.<com.ccit.mmwlan.exception.ClientSDKException: void printStackTrace()>();

        goto label06;

     label08:
        if 1 != $i0 goto label10;

        goto label09;

     label09:
        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(6);

        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u5e94\u7528appid\u4e3a\u7a7a");

        return $r4;

     label10:
        if 2 != $i0 goto label12;

        $r10 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.vo.SignView applyCert(java.lang.String,java.lang.String)>($r0, null);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("sidSign_PAD() iUpdateCert -> ");

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r1);

        $i0 = virtualinvoke $r10.<com.ccit.mmwlan.vo.SignView: int getResult()>();

        if $i0 != 0 goto label11;

        $r4 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.vo.SignView signProcess(com.ccit.mmwlan.vo.SignView,java.lang.String)>($r4, $r0);

        return $r4;

     label11:
        return $r10;

     label12:
        virtualinvoke $r4.<com.ccit.mmwlan.vo.SignView: void setResult(int)>($i0);

        return $r4;

        catch com.ccit.mmwlan.exception.ClientSDKException from label03 to label04 with label07;
        catch com.ccit.mmwlan.exception.ClientSDKException from label05 to label06 with label07;
    }

    private static com.ccit.mmwlan.vo.SignView signProcess(com.ccit.mmwlan.vo.SignView, java.lang.String)
    {
        com.ccit.mmwlan.vo.SignView $r0;
        java.lang.Exception $r6;
        com.ccit.mmwlan.ClientSDK $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: com.ccit.mmwlan.vo.SignView;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.ccit.mmwlan.MMClientSDK_ForPad: java.lang.String genSid_PAD()>();

        $r3 = "2";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(2);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u83b7\u53d6sid\u5931\u8d25");

        return $r0;

     label1:
        $r4 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label2:
        $r1 = virtualinvoke $r4.<com.ccit.mmwlan.ClientSDK: java.lang.String SIDSignNativeForBilling(java.lang.String,java.lang.String,java.lang.String)>($r2, $r1, null);

     label3:
        if $r1 != null goto label6;

     label4:
        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7b7e\u540d\u5931\u8d25");

     label5:
        return $r0;

     label6:
        $r5 = new java.lang.StringBuilder;

     label7:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("signProcess() strSignResult -> ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r2);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(0);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7b7e\u540d\u6210\u529f");

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setUserSignature(java.lang.String)>($r1);

     label8:
        return $r0;

     label9:
        $r6 := @caughtexception;

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setResult(int)>(7);

        virtualinvoke $r0.<com.ccit.mmwlan.vo.SignView: void setErrMsg(java.lang.String)>("\u7b7e\u540d\u5931\u8d25");

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return $r0;

        catch java.lang.Exception from label2 to label3 with label9;
        catch java.lang.Exception from label4 to label5 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public static int updateRandNum_PAD(java.lang.String)
    {
        com.ccit.mmwlan.ClientSDK $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 1;

     label1:
        $r1 = <com.ccit.mmwlan.MMClientSDK_ForPad: com.ccit.mmwlan.ClientSDK clientSDK>;

     label2:
        $i0 = virtualinvoke $r1.<com.ccit.mmwlan.ClientSDK: int UpdateRandNumForBilling(java.lang.String)>($r0);

     label3:
        if $i0 == 0 goto label4;

        return 1;

     label4:
        $r2 = new java.lang.StringBuilder;

     label5:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("updateRandNum()  iResult -> ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MMClientSDK_ForPad", $r0);

     label6:
        return $i0;

     label7:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return 1;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
