public class com.rsm.insurance.irl.data.Storage extends java.lang.Object
{
    private static final java.lang.String DATABASE_NAME;
    private static final int DATABASE_VERSION;
    private static final java.lang.String INSERT;
    private static final java.lang.String INSERT2;
    private static java.lang.String TABLE_NAME;
    private android.content.Context context;
    private android.database.sqlite.SQLiteDatabase db;
    private android.database.sqlite.SQLiteStatement insertStmt;
    private android.database.sqlite.SQLiteStatement insertStmt2;

    static void <clinit>()
    {
        <com.rsm.insurance.irl.data.Storage: java.lang.String INSERT2> = "insert into profile(phone) values (?)";

        <com.rsm.insurance.irl.data.Storage: java.lang.String INSERT> = "insert or ignore into data(data) values (?)";

        <com.rsm.insurance.irl.data.Storage: int DATABASE_VERSION> = 1;

        <com.rsm.insurance.irl.data.Storage: java.lang.String DATABASE_NAME> = "rsmData.db";

        <com.rsm.insurance.irl.data.Storage: java.lang.String TABLE_NAME> = "";

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        com.rsm.insurance.irl.data.Storage$OpenHelper r2;
        android.database.sqlite.SQLiteStatement $r4;
        com.rsm.insurance.irl.data.Storage r0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.rsm.insurance.irl.data.Storage: android.content.Context context> = $r1;

        r2 = new com.rsm.insurance.irl.data.Storage$OpenHelper;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.content.Context context>;

        specialinvoke r2.<com.rsm.insurance.irl.data.Storage$OpenHelper: void <init>(android.content.Context)>($r1);

        $r3 = virtualinvoke r2.<com.rsm.insurance.irl.data.Storage$OpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db> = $r3;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("insert or ignore into data(data) values (?)");

        r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt> = $r4;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $r4 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("insert into profile(phone) values (?)");

        r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt2> = $r4;

        return;
    }

    static java.lang.String access$0()
    {
        java.lang.String r0;

        r0 = <com.rsm.insurance.irl.data.Storage: java.lang.String TABLE_NAME>;

        return r0;
    }

    public void cloaseDb()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.Storage r0;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        if $r1 == null goto label1;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void close()>();

     label1:
        return;
    }

    public void deleteAll()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.Storage r0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("data", null, null);

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("profile", null, null);

        return;
    }

    public long insert(java.lang.String, java.lang.String)
    {
        long $l0;
        java.lang.String $r1, $r2;
        android.database.sqlite.SQLiteStatement $r3;
        com.rsm.insurance.irl.data.Storage r0;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        <com.rsm.insurance.irl.data.Storage: java.lang.String TABLE_NAME> = $r1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("data");

        if $z0 == 0 goto label1;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(0, $r2);

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt>;

        $l0 = virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        return $l0;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("profile");

        if $z0 == 0 goto label2;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt2>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(0, $r2);

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteStatement insertStmt2>;

        $l0 = virtualinvoke $r3.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        return $l0;

     label2:
        return 0L;
    }

    public boolean isOpen()
    {
        android.database.sqlite.SQLiteDatabase $r1;
        com.rsm.insurance.irl.data.Storage r0;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        return $z0;
    }

    public void openDb(android.content.Context)
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        com.rsm.insurance.irl.data.Storage$OpenHelper r2;
        com.rsm.insurance.irl.data.Storage r0;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 := @parameter0: android.content.Context;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        if $r3 == null goto label1;

        $r3 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 != 0 goto label1;

        r2 = new com.rsm.insurance.irl.data.Storage$OpenHelper;

        specialinvoke r2.<com.rsm.insurance.irl.data.Storage$OpenHelper: void <init>(android.content.Context)>($r1);

        $r3 = virtualinvoke r2.<com.rsm.insurance.irl.data.Storage$OpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db> = $r3;

     label1:
        return;
    }

    public java.lang.String selectData(java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r3;
        java.lang.String $r1;
        com.rsm.insurance.irl.data.Storage r0;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this: com.rsm.insurance.irl.data.Storage;

        $r1 := @parameter0: java.lang.String;

        <com.rsm.insurance.irl.data.Storage: java.lang.String TABLE_NAME> = $r1;

        $r2 = r0.<com.rsm.insurance.irl.data.Storage: android.database.sqlite.SQLiteDatabase db>;

        $r1 = <com.rsm.insurance.irl.data.Storage: java.lang.String TABLE_NAME>;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "data";

        $r4 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, null, null, null, null, null);

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        return $r1;

     label1:
        return "";
    }
}
