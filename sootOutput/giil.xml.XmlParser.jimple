public class giil.xml.XmlParser extends org.xml.sax.helpers.DefaultHandler
{
    private java.util.Stack a;
    private boolean b;
    private giil.xml.Document c;
    public giil.xml.Element root;

    public void <init>()
    {
        giil.xml.XmlParser r0;
        java.util.Stack $r1;

        r0 := @this: giil.xml.XmlParser;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<giil.xml.XmlParser: java.util.Stack a> = $r1;

        r0.<giil.xml.XmlParser: boolean b> = 1;

        r0.<giil.xml.XmlParser: giil.xml.Document c> = null;

        r0.<giil.xml.XmlParser: giil.xml.Element root> = null;

        return;
    }

    public void characters(char[], int, int)
    {
        giil.xml.XmlParser r2;
        java.util.Stack $r3;
        int $i0, $i1;
        char[] $r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r4;
        java.lang.String $r6, $r7, $r8;
        giil.xml.Element r5;

        r2 := @this: giil.xml.XmlParser;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r2.<giil.xml.XmlParser: java.util.Stack a>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        r5 = (giil.xml.Element) $r4;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>($r0, $i0, $i1);

        $r7 = virtualinvoke r5.<giil.xml.Element: java.lang.String getText()>();

        $r8 = $r7;

        if $r7 != null goto label1;

        $r8 = "";

     label1:
        $r1 = new java.lang.StringBuilder;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<giil.xml.Element: giil.xml.Element setText(java.lang.String)>($r6);

        return;
    }

    public void endDocument()
    {
        giil.xml.XmlParser r0;

        r0 := @this: giil.xml.XmlParser;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String)
    {
        giil.xml.XmlParser r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Stack $r4;

        r0 := @this: giil.xml.XmlParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = r0.<giil.xml.XmlParser: java.util.Stack a>;

        virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public giil.xml.Document parse(java.io.InputStream)
    {
        java.lang.Throwable $r7, $r11, $r12, $r13;
        giil.xml.XmlParser r0;
        javax.xml.parsers.SAXParserFactory $r2;
        org.xml.sax.helpers.ParserAdapter $r4, $r15;
        giil.xml.Document r14;
        javax.xml.parsers.SAXParser $r3;
        java.lang.String $r10;
        java.io.PrintStream $r8;
        org.xml.sax.InputSource $r6, $r16;
        java.io.IOException $r21;
        javax.xml.parsers.FactoryConfigurationError $r20;
        org.xml.sax.Parser $r5;
        javax.xml.parsers.ParserConfigurationException $r18;
        org.xml.sax.SAXException $r19;
        java.lang.StringBuilder $r9, $r17;
        java.io.InputStream $r1;

        r0 := @this: giil.xml.XmlParser;

        $r1 := @parameter0: java.io.InputStream;

     label01:
        $r2 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r3 = virtualinvoke $r2.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

     label02:
        $r15 = new org.xml.sax.helpers.ParserAdapter;

     label03:
        $r4 = $r15;

     label04:
        $r5 = virtualinvoke $r3.<javax.xml.parsers.SAXParser: org.xml.sax.Parser getParser()>();

        specialinvoke $r15.<org.xml.sax.helpers.ParserAdapter: void <init>(org.xml.sax.Parser)>($r5);

        virtualinvoke $r4.<org.xml.sax.helpers.ParserAdapter: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

     label05:
        $r16 = new org.xml.sax.InputSource;

     label06:
        $r6 = $r16;

     label07:
        specialinvoke $r16.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r1);

        virtualinvoke $r4.<org.xml.sax.helpers.ParserAdapter: void parse(org.xml.sax.InputSource)>($r6);

     label08:
        r14 = r0.<giil.xml.XmlParser: giil.xml.Document c>;

        return r14;

     label09:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r18 = (javax.xml.parsers.ParserConfigurationException) $r7;

        $r10 = virtualinvoke $r18.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label08;

     label10:
        $r11 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r19 = (org.xml.sax.SAXException) $r11;

        $r10 = virtualinvoke $r19.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label08;

     label11:
        $r12 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r20 = (javax.xml.parsers.FactoryConfigurationError) $r12;

        $r10 = virtualinvoke $r20.<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label08;

     label12:
        $r13 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r21 = (java.io.IOException) $r13;

        $r10 = virtualinvoke $r21.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label08;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label09;
        catch javax.xml.parsers.ParserConfigurationException from label04 to label05 with label09;
        catch javax.xml.parsers.ParserConfigurationException from label07 to label08 with label09;
        catch org.xml.sax.SAXException from label01 to label02 with label10;
        catch org.xml.sax.SAXException from label04 to label05 with label10;
        catch org.xml.sax.SAXException from label07 to label08 with label10;
        catch javax.xml.parsers.FactoryConfigurationError from label01 to label03 with label11;
        catch javax.xml.parsers.FactoryConfigurationError from label04 to label06 with label11;
        catch javax.xml.parsers.FactoryConfigurationError from label07 to label08 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label07 to label08 with label12;
    }

    public giil.xml.Document parse(java.io.InputStream, giil.xml.Document)
    {
        java.lang.Throwable $r5, $r9, $r10, $r11;
        giil.xml.XmlParser r0;
        javax.xml.parsers.SAXParserFactory $r3;
        giil.xml.Document $r2;
        javax.xml.parsers.SAXParser $r4;
        java.lang.String $r8;
        java.io.PrintStream $r6;
        java.io.IOException $r16;
        javax.xml.parsers.FactoryConfigurationError $r15;
        javax.xml.parsers.ParserConfigurationException $r13;
        org.xml.sax.SAXException $r14;
        java.lang.StringBuilder $r7, $r12;
        java.io.InputStream $r1;

        r0 := @this: giil.xml.XmlParser;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: giil.xml.Document;

        r0.<giil.xml.XmlParser: giil.xml.Document c> = $r2;

     label1:
        $r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        virtualinvoke $r4.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>($r1, r0);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r13 = (javax.xml.parsers.ParserConfigurationException) $r5;

        $r8 = virtualinvoke $r13.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return $r2;

     label4:
        $r9 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r14 = (org.xml.sax.SAXException) $r9;

        $r8 = virtualinvoke $r14.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return $r2;

     label5:
        $r10 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r15 = (javax.xml.parsers.FactoryConfigurationError) $r10;

        $r8 = virtualinvoke $r15.<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return $r2;

     label6:
        $r11 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r16 = (java.io.IOException) $r11;

        $r8 = virtualinvoke $r16.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return $r2;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
        catch javax.xml.parsers.FactoryConfigurationError from label1 to label2 with label5;
        catch java.io.IOException from label1 to label2 with label6;
    }

    public giil.xml.Document parse(java.lang.String)
    {
        java.io.PrintStream $r2;
        java.lang.Throwable $r6;
        giil.xml.XmlParser r0;
        java.io.FileInputStream $r4, $r7;
        java.io.FileNotFoundException $r9;
        giil.xml.Document $r5;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r1;

        r0 := @this: giil.xml.XmlParser;

        $r1 := @parameter0: java.lang.String;

        $r7 = new java.io.FileInputStream;

        $r4 = $r7;

     label1:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke r0.<giil.xml.XmlParser: giil.xml.Document parse(java.io.InputStream)>($r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("gXml : XmlParser : Error -> ");

        $r9 = (java.io.FileNotFoundException) $r6;

        $r1 = virtualinvoke $r9.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public void startDocument()
    {
        giil.xml.Document $r1;
        giil.xml.XmlParser r0;

        r0 := @this: giil.xml.XmlParser;

        $r1 = new giil.xml.Document;

        specialinvoke $r1.<giil.xml.Document: void <init>()>();

        r0.<giil.xml.XmlParser: giil.xml.Document c> = $r1;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
    {
        giil.xml.XmlParser r0;
        java.lang.String[] $r11;
        java.util.Stack $r9;
        giil.xml.Document $r8;
        giil.xml.Namespace $r6;
        org.xml.sax.Attributes $r4;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r3;
        giil.xml.Element $r5, $r7;
        boolean $z0;
        java.lang.StringBuilder $r10;
        java.lang.Object $r12;

        r0 := @this: giil.xml.XmlParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.xml.sax.Attributes;

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label12;

     label01:
        $r5 = new giil.xml.Element;

        specialinvoke $r5.<giil.xml.Element: void <init>(java.lang.String)>($r2);

        $r7 = r0.<giil.xml.XmlParser: giil.xml.Element root>;

        if $r7 != null goto label02;

        r0.<giil.xml.XmlParser: giil.xml.Element root> = $r5;

        if $r1 == null goto label02;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label02;

        $r7 = r0.<giil.xml.XmlParser: giil.xml.Element root>;

        $r6 = new giil.xml.Namespace;

        specialinvoke $r6.<giil.xml.Namespace: void <init>(java.lang.String)>($r1);

        virtualinvoke $r7.<giil.xml.Element: void setNamespace(giil.xml.Namespace)>($r6);

     label02:
        $i0 = interfaceinvoke $r4.<org.xml.sax.Attributes: int getLength()>();

        $i1 = 0;

     label03:
        if $i1 < $i0 goto label05;

        $z0 = r0.<giil.xml.XmlParser: boolean b>;

        if $z0 == 0 goto label11;

        $r8 = r0.<giil.xml.XmlParser: giil.xml.Document c>;

        virtualinvoke $r8.<giil.xml.Document: giil.xml.Document build(giil.xml.Element)>($r5);

        r0.<giil.xml.XmlParser: boolean b> = 0;

     label04:
        $r9 = r0.<giil.xml.XmlParser: java.util.Stack a>;

        virtualinvoke $r9.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);

        return;

     label05:
        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i1);

        $r3 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i1);

        $r2 = $r3;

        if $r3 == null goto label06;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label07;

     label06:
        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i1);

     label07:
        if $r2 == null goto label08;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label09;

     label08:
        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i1);

     label09:
        if $r1 == null goto label10;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label10;

        $r7 = r0.<giil.xml.XmlParser: giil.xml.Element root>;

        $r6 = new giil.xml.Namespace;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("xmlns:");

        $r11 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r3 = $r11[0];

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<giil.xml.Namespace: void <init>(java.lang.String,java.lang.String)>($r3, $r1);

        virtualinvoke $r7.<giil.xml.Element: void setNamespace(giil.xml.Namespace)>($r6);

     label10:
        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i1);

        virtualinvoke $r5.<giil.xml.Element: giil.xml.Element setAttribute(java.lang.String,java.lang.String)>($r2, $r1);

        $i1 = $i1 + 1;

        goto label03;

     label11:
        $r9 = r0.<giil.xml.XmlParser: java.util.Stack a>;

        $r12 = virtualinvoke $r9.<java.util.Stack: java.lang.Object peek()>();

        $r7 = (giil.xml.Element) $r12;

        virtualinvoke $r7.<giil.xml.Element: giil.xml.Element addContent(giil.xml.Element)>($r5);

        goto label04;

     label12:
        $r2 = $r3;

        goto label01;
    }
}
