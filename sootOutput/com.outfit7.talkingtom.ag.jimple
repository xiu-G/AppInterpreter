final class com.outfit7.talkingtom.ag extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    private java.util.concurrent.locks.Lock a;
    private java.util.concurrent.locks.Condition b;

    void <init>(java.util.concurrent.locks.Lock, java.util.concurrent.locks.Condition)
    {
        java.util.concurrent.locks.Lock $r1;
        java.util.concurrent.locks.Condition $r2;
        com.outfit7.talkingtom.ag r0;

        r0 := @this: com.outfit7.talkingtom.ag;

        $r1 := @parameter0: java.util.concurrent.locks.Lock;

        $r2 := @parameter1: java.util.concurrent.locks.Condition;

        r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Lock a> = $r1;

        r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Condition b> = $r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void onClick(android.content.DialogInterface, int)
    {
        java.lang.Throwable $r4;
        java.util.concurrent.locks.Lock $r2;
        java.util.concurrent.locks.Condition $r3;
        com.outfit7.talkingtom.ag r0;
        int $i0;
        android.content.DialogInterface $r1;

        r0 := @this: com.outfit7.talkingtom.ag;

        $r1 := @parameter0: android.content.DialogInterface;

        $i0 := @parameter1: int;

        interfaceinvoke $r1.<android.content.DialogInterface: void cancel()>();

        $r2 = r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Lock a>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Condition b>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signal()>();

     label2:
        $r2 = r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Lock a>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.<com.outfit7.talkingtom.ag: java.util.concurrent.locks.Lock a>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
