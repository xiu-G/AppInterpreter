public final class com.baidu.android.common.logging.Log extends java.lang.Object
{
    public static final int FILE_LIMETE;
    public static final int FILE_NUMBER;
    private static java.util.logging.Logger sFilelogger;
    private static boolean sLog2File;
    private static boolean sLogEnabled;

    static void <clinit>()
    {
        <com.baidu.android.common.logging.Log: int FILE_NUMBER> = 2;

        <com.baidu.android.common.logging.Log: int FILE_LIMETE> = 10485760;

        <com.baidu.android.common.logging.Log: boolean sLogEnabled> = 1;

        <com.baidu.android.common.logging.Log: boolean sLog2File> = 0;

        return;
    }

    private void <init>()
    {
        com.baidu.android.common.logging.Log r0;

        r0 := @this: com.baidu.android.common.logging.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void d(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLogEnabled>;

        if $z0 == 0 goto label2;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r3 == null goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r0);

        return;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;
    }

    public static void d(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.android.common.logging.Log: void d(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public static void e(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLogEnabled>;

        if $z0 == 0 goto label2;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r3 == null goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r0);

        return;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;
    }

    public static void e(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.android.common.logging.Log: void e(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public static void e(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <com.baidu.android.common.logging.Log: void e(java.lang.String,java.lang.String)>($r0, $r2);

        return;
    }

    private static java.lang.String getLogFileName()
    {
        int $i0;
        java.lang.String $r0, $r1;
        boolean $z0;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r0 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getProcessNameForPid(int)>($i0);

        $r1 = $r0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        $r1 = "BaiduFileLog";

     label1:
        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(58, 95);

        return $r0;
    }

    private static java.lang.String getProcessNameForPid(int)
    {
        java.io.File $r3;
        java.lang.Exception $r6, $r7;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;
        java.io.BufferedReader $r4;
        java.io.FileReader $r5;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/cmdline");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.io.File;

     label01:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

     label02:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.FileReader;

     label03:
        specialinvoke $r5.<java.io.FileReader: void <init>(java.io.File)>($r3);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        $r1 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label04:
        if $z0 != 0 goto label08;

     label05:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label06:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label07:
        return $r2;

     label08:
        $r3 = new java.io.File;

     label09:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r2);

     label10:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.FileReader;

     label11:
        specialinvoke $r5.<java.io.FileReader: void <init>(java.io.File)>($r3);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        $r2 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label12:
        if $r2 == null goto label24;

     label13:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Name:");

     label14:
        if $z0 == 0 goto label19;

     label15:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("\t");

     label16:
        if $i0 < 0 goto label24;

        $i0 = $i0 + 1;

     label17:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label18:
        goto label06;

     label19:
        $r2 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label20:
        goto label12;

     label21:
        $r6 := @caughtexception;

        $r2 = "";

        $r7 = $r6;

     label22:
        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return $r2;

     label23:
        $r7 := @caughtexception;

        goto label22;

     label24:
        $r2 = "";

        goto label06;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label06 to label07 with label23;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public static java.lang.String getStackTraceString(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.io.PrintWriter $r1;
        java.io.StringWriter $r3;
        java.lang.String $r2;

        $r0 := @parameter0: java.lang.Throwable;

        if $r0 != null goto label1;

        return "";

     label1:
        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

        $r2 = virtualinvoke $r3.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;
    }

    public static void i(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLogEnabled>;

        if $z0 == 0 goto label2;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r3 == null goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r0);

        return;

     label1:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;
    }

    public static void i(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.android.common.logging.Log: void i(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public static void setLog2File(boolean)
    {
        java.lang.Throwable $r8, $r9;
        java.util.logging.Level $r7;
        java.util.logging.FileHandler $r4, $r12;
        java.lang.SecurityException $r14;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.io.IOException $r15;
        java.util.logging.Logger $r0;
        java.io.File $r2, $r10;
        com.baidu.android.common.logging.SimpleFormatter $r6, $r13;
        java.lang.StringBuilder $r5, $r11;

        $z0 := @parameter0: boolean;

        <com.baidu.android.common.logging.Log: boolean sLog2File> = $z0;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label11;

        $r0 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r0 != null goto label11;

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getLogFileName()>();

        $r10 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r1);

        $r3 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = new java.util.logging.FileHandler;

        $r4 = $r12;

        $r11 = new java.lang.StringBuilder;

        $r5 = $r11;

     label01:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_%g.log");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.util.logging.FileHandler: void <init>(java.lang.String,int,int,boolean)>($r3, 10485760, 2, 1);

     label02:
        $r13 = new com.baidu.android.common.logging.SimpleFormatter;

        $r6 = $r13;

     label03:
        specialinvoke $r13.<com.baidu.android.common.logging.SimpleFormatter: void <init>()>();

        virtualinvoke $r4.<java.util.logging.FileHandler: void setFormatter(java.util.logging.Formatter)>($r6);

        $r0 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

     label04:
        <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger> = $r0;

        $r0 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r7 = <java.util.logging.Level: java.util.logging.Level ALL>;

     label05:
        virtualinvoke $r0.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r7);

     label06:
        $r0 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

     label07:
        virtualinvoke $r0.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>($r4);

     label08:
        return;

     label09:
        $r8 := @caughtexception;

        $r14 = (java.lang.SecurityException) $r8;

        virtualinvoke $r14.<java.lang.SecurityException: void printStackTrace()>();

        return;

     label10:
        $r9 := @caughtexception;

        $r15 = (java.io.IOException) $r9;

        virtualinvoke $r15.<java.io.IOException: void printStackTrace()>();

     label11:
        return;

        catch java.lang.SecurityException from label01 to label02 with label09;
        catch java.lang.SecurityException from label03 to label04 with label09;
        catch java.lang.SecurityException from label05 to label06 with label09;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public static void setLogEnabled(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.baidu.android.common.logging.Log: boolean sLogEnabled> = $z0;

        return;
    }

    public static void v(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLogEnabled>;

        if $z0 == 0 goto label2;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r3 == null goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r0);

        return;

     label1:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;
    }

    public static void v(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.android.common.logging.Log: void v(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public static void w(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r4;
        java.lang.String $r0, $r1;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLogEnabled>;

        if $z0 == 0 goto label2;

        $z0 = <com.baidu.android.common.logging.Log: boolean sLog2File>;

        if $z0 == 0 goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        if $r3 == null goto label1;

        $r3 = <com.baidu.android.common.logging.Log: java.util.logging.Logger sFilelogger>;

        $r2 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r2, $r0);

        return;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;
    }

    public static void w(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r1 = staticinvoke <com.baidu.android.common.logging.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.baidu.android.common.logging.Log: void w(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }
}
