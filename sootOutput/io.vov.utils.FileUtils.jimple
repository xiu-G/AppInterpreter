public class io.vov.utils.FileUtils extends java.lang.Object
{

    public void <init>()
    {
        io.vov.utils.FileUtils r0;

        r0 := @this: io.vov.utils.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void deleteDir(java.io.File)
    {
        int $i0, $i1;
        java.io.File[] $r2;
        java.io.File $r0, r1;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        return;

     label2:
        r1 = $r2[$i1];

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        staticinvoke <io.vov.utils.FileUtils: void deleteDir(java.io.File)>(r1);

     label3:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static java.lang.String getCanonical(java.io.File)
    {
        java.lang.Throwable r1;
        java.lang.String $r2;
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getCanonicalPath()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r2 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String getName(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <io.vov.utils.FileUtils: java.lang.String getPath(java.lang.String)>($r0);

        if $r0 == null goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        return $r0;

     label1:
        return null;
    }

    public static java.lang.String getPath(java.lang.String)
    {
        java.lang.Object[] $r1;
        int $i0;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        staticinvoke <io.vov.utils.Log: void i(java.lang.String,java.lang.Object[])>("FileUtils#getPath(%s)", $r1);

        $z0 = staticinvoke <io.vov.utils.StringUtils: boolean isBlank(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("file://");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 7 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(7);

        $r0 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r0);

        return $r0;

     label2:
        $r0 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r0);

        return $r0;
    }
}
