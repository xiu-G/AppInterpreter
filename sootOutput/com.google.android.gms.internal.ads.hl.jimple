public final class com.google.android.gms.internal.ads.hl extends java.lang.Object
{

    public static java.lang.Object a(android.content.Context, java.util.concurrent.Callable)
    {
        java.lang.Throwable $r6, $r8;
        android.content.Context $r0;
        android.os.StrictMode$ThreadPolicy $r2, $r4;
        java.util.concurrent.Callable $r1;
        android.os.StrictMode$ThreadPolicy$Builder $r3;
        java.lang.Object $r5;
        com.google.android.gms.internal.ads.fd $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.util.concurrent.Callable;

        $r2 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>();

     label1:
        $r3 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: void <init>(android.os.StrictMode$ThreadPolicy)>($r2);

        $r3 = virtualinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskReads()>();

        $r3 = virtualinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskWrites()>();

        $r4 = virtualinvoke $r3.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r4);

        $r5 = interfaceinvoke $r1.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        return $r5;

     label3:
        $r6 := @caughtexception;

     label4:
        staticinvoke <com.google.android.gms.internal.ads.am: void c(java.lang.String,java.lang.Throwable)>("Unexpected exception.", $r6);

        $r7 = staticinvoke <com.google.android.gms.internal.ads.bd: com.google.android.gms.internal.ads.fd g(android.content.Context)>($r0);

        interfaceinvoke $r7.<com.google.android.gms.internal.ads.fd: void b(java.lang.Throwable,java.lang.String)>($r6, "StrictModeUtil.runWithLaxStrictMode");

     label5:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        return null;

     label6:
        $r8 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r2);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static java.lang.Object b(java.util.concurrent.Callable)
    {
        java.lang.Throwable $r5;
        android.os.StrictMode$ThreadPolicy$Builder $r2;
        android.os.StrictMode$ThreadPolicy $r1, $r3;
        java.util.concurrent.Callable $r0;
        java.lang.Object $r4;

        $r0 := @parameter0: java.util.concurrent.Callable;

        $r1 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()>();

     label1:
        $r2 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke $r2.<android.os.StrictMode$ThreadPolicy$Builder: void <init>(android.os.StrictMode$ThreadPolicy)>($r1);

        $r2 = virtualinvoke $r2.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskReads()>();

        $r2 = virtualinvoke $r2.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitDiskWrites()>();

        $r3 = virtualinvoke $r2.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r3);

        $r4 = interfaceinvoke $r0.<java.util.concurrent.Callable: java.lang.Object call()>();

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r1);

        return $r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r1);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
