public class mpp.mpp2010.algo.NetProcess extends java.lang.Object
{
    private int displayH;
    private int displayW;
    private boolean rotate;
    private android.net.Uri uri;
    private java.lang.String url9;
    private java.lang.String[] urls;

    public void <init>(android.net.Uri, int, int, java.lang.String)
    {
        mpp.mpp2010.algo.NetProcess r0;
        android.net.Uri $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: mpp.mpp2010.algo.NetProcess;

        $r1 := @parameter0: android.net.Uri;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<mpp.mpp2010.algo.NetProcess: android.net.Uri uri> = $r1;

        $r1 = r0.<mpp.mpp2010.algo.NetProcess: android.net.Uri uri>;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r3);

        r0.<mpp.mpp2010.algo.NetProcess: int displayH> = $i0;

        r0.<mpp.mpp2010.algo.NetProcess: int displayW> = $i1;

        if $r2 != "true" goto label1;

        r0.<mpp.mpp2010.algo.NetProcess: boolean rotate> = 1;

        return;

     label1:
        r0.<mpp.mpp2010.algo.NetProcess: boolean rotate> = 0;

        return;
    }

    public android.graphics.drawable.Drawable get9Image()
    {
        byte[] $r8;
        mpp.mpp2010.net.SendImage r4;
        android.net.Uri $r5;
        java.io.FileInputStream r2;
        android.graphics.drawable.Drawable $r10;
        java.io.File r1;
        java.lang.Exception $r11;
        mpp.mpp2010.algo.NetProcess r0;
        int $i0;
        java.lang.StringBuilder $r7;
        java.lang.String $r6;
        android.graphics.Matrix r3;
        java.io.InputStream $r9;

        r0 := @this: mpp.mpp2010.algo.NetProcess;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", "process9_Drawable start");

        r3 = new android.graphics.Matrix;

        specialinvoke r3.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r3.<android.graphics.Matrix: boolean postRotate(float)>(90.0F);

        r4 = new mpp.mpp2010.net.SendImage;

     label01:
        specialinvoke r4.<mpp.mpp2010.net.SendImage: void <init>(java.lang.String)>("http://184.73.55.78/~ggm/mpp/uploadfile2.php");

     label02:
        r1 = new java.io.File;

     label03:
        $r5 = r0.<mpp.mpp2010.algo.NetProcess: android.net.Uri uri>;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke r1.<java.io.File: void <init>(java.lang.String)>($r6);

     label04:
        r2 = new java.io.FileInputStream;

     label05:
        specialinvoke r2.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        virtualinvoke r4.<mpp.mpp2010.net.SendImage: void setFileInputStream(java.io.FileInputStream)>(r2);

     label06:
        $r7 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayW>;

     label08:
        $i0 = $i0 / 3;

     label09:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<mpp.mpp2010.net.SendImage: void addTextParameter(java.lang.String,java.lang.String)>("width", $r6);

     label10:
        $r7 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayH>;

     label12:
        $i0 = $i0 / 3;

     label13:
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<mpp.mpp2010.net.SendImage: void addTextParameter(java.lang.String,java.lang.String)>("height", $r6);

     label14:
        $r7 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("displayH=");

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayH>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r6);

     label16:
        $r7 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("displayW=");

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayW>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r6);

        $r8 = virtualinvoke r4.<mpp.mpp2010.net.SendImage: byte[] send()>();

     label18:
        $r6 = new java.lang.String;

     label19:
        specialinvoke $r6.<java.lang.String: void <init>(byte[])>($r8);

        r0.<mpp.mpp2010.algo.NetProcess: java.lang.String url9> = $r6;

        $r6 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String url9>;

        $r9 = staticinvoke <mpp.mpp2010.Tool: java.io.InputStream UrlToInputStream(java.lang.String)>($r6);

        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r9, "image9");

     label20:
        return $r10;

     label21:
        $r11 := @caughtexception;

        $r6 = virtualinvoke $r11.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r6);

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public android.graphics.Bitmap[] process9_Drawable()
    {
        byte[] $r9;
        android.graphics.Bitmap[] r2;
        android.net.Uri $r7;
        java.lang.String[] $r10;
        mpp.mpp2010.algo.NetProcess r0;
        int $i0, $i1, $i2;
        java.lang.String r5;
        android.graphics.Matrix r1;
        mpp.mpp2010.net.SendImage r6;
        java.io.FileInputStream r4;
        java.io.File r3;
        java.lang.Exception $r14;
        android.graphics.Bitmap $r12, $r13;
        java.lang.StringBuilder $r8;
        java.io.InputStream $r11;

        r0 := @this: mpp.mpp2010.algo.NetProcess;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", "process9_Drawable start");

        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float)>(90.0F);

        r6 = new mpp.mpp2010.net.SendImage;

     label01:
        specialinvoke r6.<mpp.mpp2010.net.SendImage: void <init>(java.lang.String)>("http://184.73.55.78/~ggm/mpp/uploadfile.php");

     label02:
        r3 = new java.io.File;

     label03:
        $r7 = r0.<mpp.mpp2010.algo.NetProcess: android.net.Uri uri>;

        r5 = virtualinvoke $r7.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>(r5);

     label04:
        r4 = new java.io.FileInputStream;

     label05:
        specialinvoke r4.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        virtualinvoke r6.<mpp.mpp2010.net.SendImage: void setFileInputStream(java.io.FileInputStream)>(r4);

     label06:
        $r8 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayW>;

     label08:
        $i0 = $i0 / 3;

     label09:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<mpp.mpp2010.net.SendImage: void addTextParameter(java.lang.String,java.lang.String)>("width", r5);

     label10:
        $r8 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayH>;

     label12:
        $i0 = $i0 / 3;

     label13:
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<mpp.mpp2010.net.SendImage: void addTextParameter(java.lang.String,java.lang.String)>("height", r5);

     label14:
        $r8 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("displayH=");

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayH>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", r5);

     label16:
        $r8 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("displayW=");

        $i0 = r0.<mpp.mpp2010.algo.NetProcess: int displayW>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", r5);

        $r9 = virtualinvoke r6.<mpp.mpp2010.net.SendImage: byte[] send()>();

     label18:
        r5 = new java.lang.String;

     label19:
        specialinvoke r5.<java.lang.String: void <init>(byte[])>($r9);

        $r10 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" |\n");

        r0.<mpp.mpp2010.algo.NetProcess: java.lang.String[] urls> = $r10;

     label20:
        r2 = newarray (android.graphics.Bitmap)[9];

        $i0 = 0;

     label21:
        $r10 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String[] urls>;

        $i1 = lengthof $r10;

     label22:
        if $i0 < $i1 goto label23;

        return r2;

     label23:
        $r10 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String[] urls>;

        r5 = $r10[$i0];

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", r5);

        $r10 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String[] urls>;

        r5 = $r10[$i0];

        $r11 = staticinvoke <mpp.mpp2010.Tool: java.io.InputStream UrlToInputStream(java.lang.String)>(r5);

        $r12 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r11);

        r2[$i0] = $r12;

        $r12 = r2[$i0];

        $i1 = virtualinvoke $r12.<android.graphics.Bitmap: int getHeight()>();

        $r12 = r2[$i0];

        $i2 = virtualinvoke $r12.<android.graphics.Bitmap: int getWidth()>();

     label24:
        if $i1 >= $i2 goto label26;

     label25:
        $r12 = r2[$i0];

        $r13 = r2[$i0];

        $i1 = virtualinvoke $r13.<android.graphics.Bitmap: int getWidth()>();

        $r13 = r2[$i0];

        $i2 = virtualinvoke $r13.<android.graphics.Bitmap: int getHeight()>();

        $r12 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r12, 0, 0, $i1, $i2, r1, 1);

        r2[$i0] = $r12;

     label26:
        $r8 = new java.lang.StringBuilder;

     label27:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("[image size] w=");

        $r12 = r2[$i0];

        $i1 = virtualinvoke $r12.<android.graphics.Bitmap: int getWidth()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" h=");

        $r12 = r2[$i0];

        $i1 = virtualinvoke $r12.<android.graphics.Bitmap: int getHeight()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", r5);

     label28:
        $i0 = $i0 + 1;

        goto label21;

     label29:
        $r14 := @caughtexception;

        r5 = virtualinvoke $r14.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", r5);

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Exception from label05 to label06 with label29;
        catch java.lang.Exception from label07 to label08 with label29;
        catch java.lang.Exception from label09 to label10 with label29;
        catch java.lang.Exception from label11 to label12 with label29;
        catch java.lang.Exception from label13 to label14 with label29;
        catch java.lang.Exception from label15 to label16 with label29;
        catch java.lang.Exception from label17 to label18 with label29;
        catch java.lang.Exception from label19 to label20 with label29;
        catch java.lang.Exception from label21 to label22 with label29;
        catch java.lang.Exception from label23 to label24 with label29;
        catch java.lang.Exception from label25 to label26 with label29;
        catch java.lang.Exception from label27 to label28 with label29;
    }

    public android.graphics.Bitmap processe1(int, java.lang.String)
    {
        byte[] r2;
        java.io.FileOutputStream r3, $r11;
        java.io.File $r6, $r10;
        java.lang.Exception $r8;
        mpp.mpp2010.algo.NetProcess r0;
        int $i0;
        java.lang.StringBuilder $r4, $r9;
        java.lang.String $r1, $r5;
        java.io.InputStream $r7;

        r0 := @this: mpp.mpp2010.algo.NetProcess;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", "processe1 start");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("url9= ");

        $r5 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String url9>;

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r5);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Path in Net : ");

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ppqq", $r5);

        $r11 = new java.io.FileOutputStream;

        r3 = $r11;

        $r10 = new java.io.File;

        $r6 = $r10;

     label01:
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r1);

        specialinvoke $r11.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

        $r1 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String url9>;

     label02:
        $r9 = new java.lang.StringBuilder;

        $r4 = $r9;

     label03:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("big-");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("big-0", $r5);

        $r7 = staticinvoke <mpp.mpp2010.Tool: java.io.InputStream UrlToInputStream(java.lang.String)>($r1);

        $r1 = r0.<mpp.mpp2010.algo.NetProcess: java.lang.String url9>;

     label04:
        $r9 = new java.lang.StringBuilder;

        $r4 = $r9;

     label05:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("big-");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("big-0", $r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r1);

     label06:
        r2 = newarray (byte)[1024];

     label07:
        $i0 = virtualinvoke $r7.<java.io.InputStream: int read(byte[])>(r2);

     label08:
        if $i0 != -1 goto label11;

     label09:
        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label10:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", "processe1 end");

        return null;

     label11:
        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, $i0);

     label12:
        goto label07;

     label13:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception ");

        $r1 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NetProcess", $r1);

        goto label10;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
}
