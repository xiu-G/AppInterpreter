public class com.yang.longrubblishclear.util.DataTool extends java.lang.Object
{
    private android.content.Context context;
    private android.text.format.Time time;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.text.format.Time $r2;
        com.yang.longrubblishclear.util.DataTool r0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.yang.longrubblishclear.util.DataTool: android.content.Context context> = $r1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time> = $r2;

        $r2 = r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time>;

        virtualinvoke $r2.<android.text.format.Time: void setToNow()>();

        return;
    }

    public static java.lang.String getSeqWeek()
    {
        java.util.Calendar $r1;
        java.util.Locale $r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, r3;

        $r0 = <java.util.Locale: java.util.Locale CHINA>;

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r0);

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(3);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r3 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r4 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return r3;
    }

    public static java.lang.String getStringDateShort()
    {
        java.text.SimpleDateFormat r1;
        java.lang.String $r2;
        java.util.Date r0;

        r0 = new java.util.Date;

        specialinvoke r0.<java.util.Date: void <init>()>();

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r2;
    }

    public static java.lang.String getWeek(java.lang.String, java.lang.String)
    {
        java.util.Calendar $r3;
        java.util.Date $r2;
        java.text.SimpleDateFormat $r4;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.yang.longrubblishclear.util.DataTool: java.util.Date strToDate(java.lang.String)>($r0);

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>($r2);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 2);

     label1:
        $r4 = new java.text.SimpleDateFormat;

        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $r0 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        return $r0;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z0 == 0 goto label3;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 3);

        goto label1;

     label3:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("3");

        if $z0 == 0 goto label4;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 4);

        goto label1;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("4");

        if $z0 == 0 goto label5;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 5);

        goto label1;

     label5:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("5");

        if $z0 == 0 goto label6;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 6);

        goto label1;

     label6:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("6");

        if $z0 == 0 goto label7;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 7);

        goto label1;

     label7:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, 1);

        goto label1;
    }

    public static boolean isSameWeekDates(java.lang.String, java.lang.String)
    {
        java.util.Calendar $r2, $r3;
        java.util.Date $r4;
        int i0, $i1;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r4 = staticinvoke <com.yang.longrubblishclear.util.DataTool: java.util.Date strToDate(java.lang.String)>($r0);

        virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r4);

        $r4 = staticinvoke <com.yang.longrubblishclear.util.DataTool: java.util.Date strToDate(java.lang.String)>($r1);

        virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>($r4);

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        i0 = i0 - $i1;

        if i0 != 0 goto label1;

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(3);

        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(3);

        if i0 != $i1 goto label2;

        return 1;

     label1:
        if 1 != i0 goto label3;

        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        if 11 != $i1 goto label3;

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(3);

        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(3);

        if i0 == $i1 goto label4;

     label2:
        return 0;

     label3:
        $i1 = -1;

        if $i1 != i0 goto label2;

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        if 11 != i0 goto label2;

        i0 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(3);

        $i1 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(3);

        if i0 != $i1 goto label2;

     label4:
        return 1;
    }

    public static java.util.Date strToDate(java.lang.String)
    {
        java.util.Date $r3;
        java.text.ParsePosition r2;
        java.text.SimpleDateFormat r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        r2 = new java.text.ParsePosition;

        specialinvoke r2.<java.text.ParsePosition: void <init>(int)>(0);

        $r3 = virtualinvoke r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r0, r2);

        return $r3;
    }

    public int getDay()
    {
        int i0;
        android.text.format.Time $r1;
        com.yang.longrubblishclear.util.DataTool r0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 = r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time>;

        i0 = $r1.<android.text.format.Time: int monthDay>;

        return i0;
    }

    public java.util.List getLateDate()
    {
        java.util.Date r1, r2;
        java.text.SimpleDateFormat r3;
        long l0, $l3;
        java.util.ArrayList r4;
        com.yang.longrubblishclear.util.DataTool r0;
        int i1, $i2;
        java.lang.String $r5;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        r1 = new java.util.Date;

        specialinvoke r1.<java.util.Date: void <init>()>();

        i1 = 0;

     label1:
        if i1 < 7 goto label2;

        return r4;

     label2:
        l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        l0 = l0 / 1000L;

        $i2 = i1 * 24;

        $i2 = $i2 * 60;

        $i2 = $i2 * 60;

        $l3 = (long) $i2;

        l0 = l0 - $l3;

        r2 = new java.util.Date;

        specialinvoke r2.<java.util.Date: void <init>()>();

        l0 = l0 * 1000L;

        virtualinvoke r2.<java.util.Date: void setTime(long)>(l0);

        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;
    }

    public java.util.List getLateNDate(int)
    {
        java.util.Date r1, r2;
        java.text.SimpleDateFormat r3;
        long l1, $l4;
        java.util.ArrayList r4;
        com.yang.longrubblishclear.util.DataTool r0;
        int $i0, i2, $i3;
        java.lang.String $r5;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $i0 := @parameter0: int;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        r1 = new java.util.Date;

        specialinvoke r1.<java.util.Date: void <init>()>();

        i2 = 0;

     label1:
        if i2 < $i0 goto label2;

        return r4;

     label2:
        l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        l1 = l1 / 1000L;

        $i3 = i2 * 24;

        $i3 = $i3 * 60;

        $i3 = $i3 * 60;

        $l4 = (long) $i3;

        l1 = l1 - $l4;

        r2 = new java.util.Date;

        specialinvoke r2.<java.util.Date: void <init>()>();

        l1 = l1 * 1000L;

        virtualinvoke r2.<java.util.Date: void setTime(long)>(l1);

        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label1;
    }

    public java.util.List getLateNWeekDate()
    {
        java.util.Date r1, r2;
        java.text.SimpleDateFormat r3;
        long l0, $l3;
        java.util.ArrayList r4;
        com.yang.longrubblishclear.util.DataTool r0;
        int i1, $i2;
        java.lang.String $r5;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        r4 = new java.util.ArrayList;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        r1 = new java.util.Date;

        specialinvoke r1.<java.util.Date: void <init>()>();

        i1 = 0;

     label1:
        if i1 < 7 goto label2;

        return r4;

     label2:
        l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        l0 = l0 / 1000L;

        $i2 = virtualinvoke r0.<com.yang.longrubblishclear.util.DataTool: int getWeek()>();

        $i2 = $i2 * 24;

        $i2 = $i2 * 60;

        $i2 = $i2 * 60;

        $l3 = (long) $i2;

        l0 = l0 - $l3;

        $i2 = i1 * 24;

        $i2 = $i2 * 60;

        $i2 = $i2 * 60;

        $l3 = (long) $i2;

        l0 = l0 - $l3;

        r2 = new java.util.Date;

        specialinvoke r2.<java.util.Date: void <init>()>();

        l0 = l0 * 1000L;

        virtualinvoke r2.<java.util.Date: void setTime(long)>(l0);

        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;
    }

    public int getMounth()
    {
        int $i0;
        android.text.format.Time $r1;
        com.yang.longrubblishclear.util.DataTool r0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 = r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time>;

        $i0 = $r1.<android.text.format.Time: int month>;

        $i0 = $i0 + 1;

        return $i0;
    }

    public java.lang.String getSundayByMonday(java.lang.String)
    {
        com.yang.longrubblishclear.util.DataTool r0;
        java.util.Date r2;
        java.text.SimpleDateFormat r3;
        long l0;
        java.lang.String $r1;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.yang.longrubblishclear.util.DataTool: java.util.Date strToDate(java.lang.String)>($r1);

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        l0 = virtualinvoke r2.<java.util.Date: long getTime()>();

        l0 = l0 / 1000L;

        l0 = l0 + 518400L;

        r2 = new java.util.Date;

        specialinvoke r2.<java.util.Date: void <init>()>();

        l0 = l0 * 1000L;

        virtualinvoke r2.<java.util.Date: void setTime(long)>(l0);

        $r1 = virtualinvoke r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r2);

        return $r1;
    }

    public int getWeek()
    {
        int i0;
        android.text.format.Time $r1;
        com.yang.longrubblishclear.util.DataTool r0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 = r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time>;

        i0 = $r1.<android.text.format.Time: int weekDay>;

        return i0;
    }

    public int getWeekByDate(java.lang.String)
    {
        java.util.Date $r5;
        java.text.SimpleDateFormat r3;
        java.lang.Exception r2;
        com.yang.longrubblishclear.util.DataTool r0;
        java.util.Calendar $r4;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 := @parameter0: java.lang.String;

        i0 = 0;

        r3 = new java.text.SimpleDateFormat;

        specialinvoke r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

     label01:
        $r5 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r1);

        virtualinvoke $r4.<java.util.Calendar: void setTime(java.util.Date)>($r5);

     label02:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 1 goto label03;

        i0 = 7;

     label03:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 2 goto label04;

        i0 = i0 + 1;

     label04:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 3 goto label05;

        i0 = i0 + 2;

     label05:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 4 goto label06;

        i0 = i0 + 3;

     label06:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 5 goto label07;

        i0 = i0 + 4;

     label07:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 6 goto label08;

        i0 = i0 + 5;

     label08:
        $i1 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(7);

        if $i1 != 7 goto label10;

        i0 = i0 + 6;

        return i0;

     label09:
        r2 := @caughtexception;

        virtualinvoke r2.<java.lang.Exception: void printStackTrace()>();

        goto label02;

     label10:
        return i0;

        catch java.lang.Exception from label01 to label02 with label09;
    }

    public java.util.List getWeekDatesByDate()
    {
        java.util.Iterator $r3;
        java.lang.Integer $r6;
        java.util.ArrayList r1;
        java.util.List $r2;
        com.yang.longrubblishclear.util.DataTool r0;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r0.<com.yang.longrubblishclear.util.DataTool: java.util.List getLateDate()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $i0 = virtualinvoke r0.<com.yang.longrubblishclear.util.DataTool: int getWeekByDate(java.lang.String)>(r5);

        $i1 = virtualinvoke r0.<com.yang.longrubblishclear.util.DataTool: int getWeek()>();

        if $i0 > $i1 goto label1;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(8, 10);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;
    }

    public int getYear()
    {
        int i0;
        android.text.format.Time $r1;
        com.yang.longrubblishclear.util.DataTool r0;

        r0 := @this: com.yang.longrubblishclear.util.DataTool;

        $r1 = r0.<com.yang.longrubblishclear.util.DataTool: android.text.format.Time time>;

        i0 = $r1.<android.text.format.Time: int year>;

        return i0;
    }
}
