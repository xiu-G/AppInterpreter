class cs.gson.internal.bind.TypeAdapters$11 extends cs.gson.TypeAdapter
{
    private static int[] $SWITCH_TABLE$cs$gson$stream$JsonToken;

    static int[] $SWITCH_TABLE$cs$gson$stream$JsonToken()
    {
        cs.gson.stream.JsonToken[] $r1;
        java.lang.NoSuchFieldError $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int[] $r0;
        int $i0;
        cs.gson.stream.JsonToken $r2;

        $r0 = <cs.gson.internal.bind.TypeAdapters$11: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken>;

        if $r0 == null goto label01;

        return $r0;

     label01:
        $r1 = staticinvoke <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken[] values()>();

        $i0 = lengthof $r1;

        $r0 = newarray (int)[$i0];

     label02:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BEGIN_ARRAY>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label03:
        $r0[$i0] = 1;

     label04:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BEGIN_OBJECT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label05:
        $r0[$i0] = 3;

     label06:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken BOOLEAN>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label07:
        $r0[$i0] = 8;

     label08:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_ARRAY>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label09:
        $r0[$i0] = 2;

     label10:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_DOCUMENT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label11:
        $r0[$i0] = 10;

     label12:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label13:
        $r0[$i0] = 4;

     label14:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NAME>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label15:
        $r0[$i0] = 5;

     label16:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NULL>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label17:
        $r0[$i0] = 9;

     label18:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken NUMBER>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label19:
        $r0[$i0] = 7;

     label20:
        $r2 = <cs.gson.stream.JsonToken: cs.gson.stream.JsonToken STRING>;

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

     label21:
        $r0[$i0] = 6;

     label22:
        <cs.gson.internal.bind.TypeAdapters$11: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken> = $r0;

        return $r0;

     label23:
        $r3 := @caughtexception;

        goto label22;

     label24:
        $r4 := @caughtexception;

        goto label20;

     label25:
        $r5 := @caughtexception;

        goto label18;

     label26:
        $r6 := @caughtexception;

        goto label16;

     label27:
        $r7 := @caughtexception;

        goto label14;

     label28:
        $r8 := @caughtexception;

        goto label12;

     label29:
        $r9 := @caughtexception;

        goto label10;

     label30:
        $r10 := @caughtexception;

        goto label08;

     label31:
        $r11 := @caughtexception;

        goto label06;

     label32:
        $r12 := @caughtexception;

        goto label04;

        catch java.lang.NoSuchFieldError from label02 to label03 with label32;
        catch java.lang.NoSuchFieldError from label04 to label05 with label31;
        catch java.lang.NoSuchFieldError from label06 to label07 with label30;
        catch java.lang.NoSuchFieldError from label08 to label09 with label29;
        catch java.lang.NoSuchFieldError from label10 to label11 with label28;
        catch java.lang.NoSuchFieldError from label12 to label13 with label27;
        catch java.lang.NoSuchFieldError from label14 to label15 with label26;
        catch java.lang.NoSuchFieldError from label16 to label17 with label25;
        catch java.lang.NoSuchFieldError from label18 to label19 with label24;
        catch java.lang.NoSuchFieldError from label20 to label21 with label23;
    }

    void <init>()
    {
        cs.gson.internal.bind.TypeAdapters$11 r0;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$11;

        specialinvoke r0.<cs.gson.TypeAdapter: void <init>()>();

        return;
    }

    public java.lang.Number read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$11 r0;
        cs.gson.stream.JsonReader $r1;
        cs.gson.JsonSyntaxException $r4;
        int[] $r3;
        int $i0;
        cs.gson.internal.LazilyParsedNumber $r7;
        java.lang.StringBuilder $r5;
        cs.gson.stream.JsonToken $r2;
        java.lang.String $r6;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$11;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r2 = virtualinvoke $r1.<cs.gson.stream.JsonReader: cs.gson.stream.JsonToken peek()>();

        $r3 = staticinvoke <cs.gson.internal.bind.TypeAdapters$11: int[] $SWITCH_TABLE$cs$gson$stream$JsonToken()>();

        $i0 = virtualinvoke $r2.<cs.gson.stream.JsonToken: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 7: goto label3;
            case 8: goto label1;
            case 9: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new cs.gson.JsonSyntaxException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting number, got: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<cs.gson.JsonSyntaxException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        virtualinvoke $r1.<cs.gson.stream.JsonReader: void nextNull()>();

        return null;

     label3:
        $r7 = new cs.gson.internal.LazilyParsedNumber;

        $r6 = virtualinvoke $r1.<cs.gson.stream.JsonReader: java.lang.String nextString()>();

        specialinvoke $r7.<cs.gson.internal.LazilyParsedNumber: void <init>(java.lang.String)>($r6);

        return $r7;
    }

    public volatile java.lang.Object read(cs.gson.stream.JsonReader) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$11 r0;
        cs.gson.stream.JsonReader $r1;
        java.lang.Number $r2;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$11;

        $r1 := @parameter0: cs.gson.stream.JsonReader;

        $r2 = virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$11: java.lang.Number read(cs.gson.stream.JsonReader)>($r1);

        return $r2;
    }

    public void write(cs.gson.stream.JsonWriter, java.lang.Number) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$11 r0;
        java.lang.Number $r2;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$11;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Number;

        virtualinvoke $r1.<cs.gson.stream.JsonWriter: cs.gson.stream.JsonWriter value(java.lang.Number)>($r2);

        return;
    }

    public volatile void write(cs.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        cs.gson.internal.bind.TypeAdapters$11 r0;
        java.lang.Object $r2;
        java.lang.Number $r3;
        cs.gson.stream.JsonWriter $r1;

        r0 := @this: cs.gson.internal.bind.TypeAdapters$11;

        $r1 := @parameter0: cs.gson.stream.JsonWriter;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.Number) $r2;

        virtualinvoke r0.<cs.gson.internal.bind.TypeAdapters$11: void write(cs.gson.stream.JsonWriter,java.lang.Number)>($r1, $r3);

        return;
    }
}
