public class com.thinkland.FWCup2010.net.schedualUpdateHelper extends java.lang.Object
{
    static final java.lang.String TAG;

    public void <init>()
    {
        com.thinkland.FWCup2010.net.schedualUpdateHelper r0;

        r0 := @this: com.thinkland.FWCup2010.net.schedualUpdateHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void updateData(java.io.InputStream, com.thinkland.FWCup2010.data.fwCupDbHelper) throws java.lang.Exception
    {
        java.lang.Throwable $r16, $r19;
        com.thinkland.FWCup2010.net.schedualUpdateHelper r0;
        short $s2;
        org.w3c.dom.Document $r5;
        org.w3c.dom.Node $r8;
        int i0, $i1;
        java.lang.String $r11, $r12, $r13, $r14, $r15;
        org.w3c.dom.NodeList $r7, $r9;
        com.thinkland.FWCup2010.data.fwCupDbHelper $r2;
        java.lang.Exception $r18, $r20, $r22;
        org.xml.sax.SAXParseException $r23;
        org.w3c.dom.Element $r6, r10;
        javax.xml.parsers.DocumentBuilder $r4;
        org.xml.sax.SAXException $r24;
        java.lang.StringBuilder r17, $r21;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        java.io.InputStream $r1;

        r0 := @this: com.thinkland.FWCup2010.net.schedualUpdateHelper;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: com.thinkland.FWCup2010.data.fwCupDbHelper;

     label01:
        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r1);

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r6.<org.w3c.dom.Element: void normalize()>();

        $r7 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("row");

     label02:
        i0 = 0;

     label03:
        $i1 = interfaceinvoke $r7.<org.w3c.dom.NodeList: int getLength()>();

     label04:
        if i0 < $i1 goto label05;

        return;

     label05:
        $r8 = interfaceinvoke $r7.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $s2 = interfaceinvoke $r8.<org.w3c.dom.Node: short getNodeType()>();

     label06:
        if $s2 != 1 goto label19;

     label07:
        $r6 = (org.w3c.dom.Element) $r8;

     label08:
        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_ID");

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label09:
        r10 = (org.w3c.dom.Element) $r8;

     label10:
        $r9 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r11 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_INTEGRAL");

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label11:
        r10 = (org.w3c.dom.Element) $r8;

     label12:
        $r9 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r12 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("GD");

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label13:
        r10 = (org.w3c.dom.Element) $r8;

     label14:
        $r9 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r13 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r13 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_RANK");

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label15:
        r10 = (org.w3c.dom.Element) $r8;

     label16:
        $r9 = interfaceinvoke r10.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r14 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r14 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_STATUS");

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label17:
        $r6 = (org.w3c.dom.Element) $r8;

     label18:
        $r9 = interfaceinvoke $r6.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r8 = interfaceinvoke $r9.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r15 = interfaceinvoke $r8.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r2.<com.thinkland.FWCup2010.data.fwCupDbHelper: boolean updateTeamSchedualFromWeb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r11, $r13, $r12, $r14, $r15);

     label19:
        i0 = i0 + 1;

        goto label03;

     label20:
        $r16 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("** schedualUpdate Parsing error, line ");

        $r23 = (org.xml.sax.SAXParseException) $r16;

        i0 = virtualinvoke $r23.<org.xml.sax.SAXParseException: int getLineNumber()>();

        r17 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r17 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri ");

        $r23 = (org.xml.sax.SAXParseException) $r16;

        $r11 = virtualinvoke $r23.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        r17 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("schedualUpdateHelper", $r11);

        $r23 = (org.xml.sax.SAXParseException) $r16;

        $r11 = virtualinvoke $r23.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("schedualUpdateHelper", $r11);

        $r20 = new java.lang.Exception;

        specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.Throwable)>($r16);

        throw $r20;

     label21:
        $r19 := @caughtexception;

        $r24 = (org.xml.sax.SAXException) $r19;

        $r18 = virtualinvoke $r24.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        if $r18 != null goto label23;

        $r16 = $r19;

     label22:
        $r18 = (java.lang.Exception) $r16;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

        $r20 = new java.lang.Exception;

        specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label23:
        $r16 = $r18;

        goto label22;

     label24:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

        $r22 = new java.lang.Exception;

        specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.Throwable)>($r18);

        throw $r22;

        catch org.xml.sax.SAXParseException from label01 to label02 with label20;
        catch org.xml.sax.SAXParseException from label03 to label04 with label20;
        catch org.xml.sax.SAXParseException from label05 to label06 with label20;
        catch org.xml.sax.SAXParseException from label08 to label09 with label20;
        catch org.xml.sax.SAXParseException from label10 to label11 with label20;
        catch org.xml.sax.SAXParseException from label12 to label13 with label20;
        catch org.xml.sax.SAXParseException from label14 to label15 with label20;
        catch org.xml.sax.SAXParseException from label16 to label17 with label20;
        catch org.xml.sax.SAXParseException from label18 to label19 with label20;
        catch org.xml.sax.SAXException from label01 to label02 with label21;
        catch org.xml.sax.SAXException from label03 to label04 with label21;
        catch org.xml.sax.SAXException from label05 to label06 with label21;
        catch org.xml.sax.SAXException from label08 to label09 with label21;
        catch org.xml.sax.SAXException from label10 to label11 with label21;
        catch org.xml.sax.SAXException from label12 to label13 with label21;
        catch org.xml.sax.SAXException from label14 to label15 with label21;
        catch org.xml.sax.SAXException from label16 to label17 with label21;
        catch org.xml.sax.SAXException from label18 to label19 with label21;
        catch java.lang.Exception from label01 to label02 with label24;
        catch java.lang.Exception from label03 to label04 with label24;
        catch java.lang.Exception from label05 to label06 with label24;
        catch java.lang.Exception from label07 to label19 with label24;
    }

    public boolean updateSchedualByXml(android.content.Context, java.lang.String, com.thinkland.FWCup2010.data.fwCupDbHelper)
    {
        java.lang.Throwable $r18, $r20;
        android.content.Context $r1;
        java.net.URL r4, $r22;
        com.thinkland.FWCup2010.net.schedualUpdateHelper r0;
        short $s2;
        org.w3c.dom.Document $r8;
        org.w3c.dom.Node $r11;
        int i0, $i1;
        java.lang.String $r2, $r14, $r15, $r16, $r17;
        org.w3c.dom.NodeList $r10, $r12;
        com.thinkland.FWCup2010.data.fwCupDbHelper $r3;
        java.lang.Exception $r21;
        org.xml.sax.SAXParseException $r24;
        org.w3c.dom.Element $r9, r13;
        javax.xml.parsers.DocumentBuilder $r6;
        org.xml.sax.SAXException $r25;
        java.lang.StringBuilder r19, $r23;
        javax.xml.parsers.DocumentBuilderFactory $r5;
        java.io.InputStream $r7;

        r0 := @this: com.thinkland.FWCup2010.net.schedualUpdateHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.thinkland.FWCup2010.data.fwCupDbHelper;

     label01:
        $r5 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r6 = virtualinvoke $r5.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

     label02:
        $r22 = new java.net.URL;

        r4 = $r22;

     label03:
        specialinvoke $r22.<java.net.URL: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke r4.<java.net.URL: java.io.InputStream openStream()>();

     label04:
        if $r7 != null goto label05;

        return 0;

     label05:
        $r8 = virtualinvoke $r6.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r7);

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r9.<org.w3c.dom.Element: void normalize()>();

        $r10 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("row");

     label06:
        i0 = 0;

     label07:
        $i1 = interfaceinvoke $r10.<org.w3c.dom.NodeList: int getLength()>();

     label08:
        if i0 < $i1 goto label09;

        return 1;

     label09:
        $r11 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i0);

        $s2 = interfaceinvoke $r11.<org.w3c.dom.Node: short getNodeType()>();

     label10:
        if $s2 != 1 goto label23;

     label11:
        $r9 = (org.w3c.dom.Element) $r11;

     label12:
        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_ID");

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label13:
        r13 = (org.w3c.dom.Element) $r11;

     label14:
        $r12 = interfaceinvoke r13.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r2 = interfaceinvoke $r11.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_INTEGRAL");

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label15:
        r13 = (org.w3c.dom.Element) $r11;

     label16:
        $r12 = interfaceinvoke r13.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r14 = interfaceinvoke $r11.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r14 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("GD");

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label17:
        r13 = (org.w3c.dom.Element) $r11;

     label18:
        $r12 = interfaceinvoke r13.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r15 = interfaceinvoke $r11.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r15 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_RANK");

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label19:
        r13 = (org.w3c.dom.Element) $r11;

     label20:
        $r12 = interfaceinvoke r13.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r16 = interfaceinvoke $r11.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r16 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("T_STATUS");

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

     label21:
        $r9 = (org.w3c.dom.Element) $r11;

     label22:
        $r12 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        $r11 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r17 = interfaceinvoke $r11.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r17 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r3.<com.thinkland.FWCup2010.data.fwCupDbHelper: boolean updateTeamSchedualFromWeb(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r15, $r14, $r16, $r17);

     label23:
        i0 = i0 + 1;

        goto label07;

     label24:
        $r18 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("** Parsing error, line ");

        $r24 = (org.xml.sax.SAXParseException) $r18;

        i0 = virtualinvoke $r24.<org.xml.sax.SAXParseException: int getLineNumber()>();

        r19 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r19 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri ");

        $r24 = (org.xml.sax.SAXParseException) $r18;

        $r2 = virtualinvoke $r24.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        r19 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("schedualUpdateHelper", $r2);

        $r24 = (org.xml.sax.SAXParseException) $r18;

        $r2 = virtualinvoke $r24.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("schedualUpdateHelper", $r2);

        return 0;

     label25:
        $r20 := @caughtexception;

        $r25 = (org.xml.sax.SAXException) $r20;

        $r21 = virtualinvoke $r25.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        if $r21 != null goto label27;

        $r18 = $r20;

     label26:
        $r21 = (java.lang.Exception) $r18;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

        return 0;

     label27:
        $r18 = $r21;

        goto label26;

     label28:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

        return 0;

        catch org.xml.sax.SAXParseException from label01 to label02 with label24;
        catch org.xml.sax.SAXParseException from label03 to label04 with label24;
        catch org.xml.sax.SAXParseException from label05 to label06 with label24;
        catch org.xml.sax.SAXParseException from label07 to label08 with label24;
        catch org.xml.sax.SAXParseException from label09 to label10 with label24;
        catch org.xml.sax.SAXParseException from label12 to label13 with label24;
        catch org.xml.sax.SAXParseException from label14 to label15 with label24;
        catch org.xml.sax.SAXParseException from label16 to label17 with label24;
        catch org.xml.sax.SAXParseException from label18 to label19 with label24;
        catch org.xml.sax.SAXParseException from label20 to label21 with label24;
        catch org.xml.sax.SAXParseException from label22 to label23 with label24;
        catch org.xml.sax.SAXException from label01 to label02 with label25;
        catch org.xml.sax.SAXException from label03 to label04 with label25;
        catch org.xml.sax.SAXException from label05 to label06 with label25;
        catch org.xml.sax.SAXException from label07 to label08 with label25;
        catch org.xml.sax.SAXException from label09 to label10 with label25;
        catch org.xml.sax.SAXException from label12 to label13 with label25;
        catch org.xml.sax.SAXException from label14 to label15 with label25;
        catch org.xml.sax.SAXException from label16 to label17 with label25;
        catch org.xml.sax.SAXException from label18 to label19 with label25;
        catch org.xml.sax.SAXException from label20 to label21 with label25;
        catch org.xml.sax.SAXException from label22 to label23 with label25;
        catch java.lang.Exception from label01 to label02 with label28;
        catch java.lang.Exception from label03 to label04 with label28;
        catch java.lang.Exception from label05 to label06 with label28;
        catch java.lang.Exception from label07 to label08 with label28;
        catch java.lang.Exception from label09 to label10 with label28;
        catch java.lang.Exception from label11 to label23 with label28;
    }

    public static void <clinit>()
    {
        <com.thinkland.FWCup2010.net.schedualUpdateHelper: java.lang.String TAG> = "schedualUpdateHelper";

        return;
    }
}
