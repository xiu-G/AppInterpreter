public class com.kingroot.sdk.ar extends java.lang.Object
{
    private static java.lang.String bX;
    private static java.lang.String bY;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.kingroot.sdk.ar: java.lang.String C()>();

        <com.kingroot.sdk.ar: java.lang.String bX> = $r0;

        $r0 = staticinvoke <com.kingroot.sdk.ar: java.lang.String D()>();

        <com.kingroot.sdk.ar: java.lang.String bY> = $r0;

        return;
    }

    private static java.lang.String C()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        $r0 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("fingerprint = ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>($r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $r2 = "unknown";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

     label1:
        $r0 = staticinvoke <com.kingroot.sdk.ar: java.lang.String q(java.lang.String)>("ro.build.description");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("description = ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>($r2);

     label2:
        return $r0;
    }

    private static java.lang.String D()
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r2;

        $r0 = staticinvoke <com.kingroot.sdk.util.c: java.lang.String Y(java.lang.String)>("/proc/version");

        if $r0 == null goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("linuxVersion = ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String E()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("sFingerprint = ");

        $r1 = <com.kingroot.sdk.ar: java.lang.String bX>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>($r1);

        $r1 = <com.kingroot.sdk.ar: java.lang.String bX>;

        return $r1;
    }

    public static java.lang.String F()
    {
        java.lang.String r0;

        r0 = <com.kingroot.sdk.ar: java.lang.String bY>;

        return r0;
    }

    public static java.lang.String G()
    {
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13;
        byte[] $r7;
        java.io.ByteArrayOutputStream $r6, $r16;
        java.lang.String[] $r3;
        int $i0;
        java.lang.String $r1, $r17;
        java.lang.ProcessBuilder $r2, $r15;
        boolean $z0;
        java.lang.Process $r4;
        java.io.IOException $r18;
        java.lang.Exception $r8;
        java.io.File $r14;
        java.io.InputStream $r0, $r5;

        $r0 = null;

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>("getPrevSuVersion() end");

        $r1 = "/system/bin/su";

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/system/bin/su");

        $z0 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $r1 = "/system/xbin/su";

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/system/xbin/su");

        $z0 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>("getPrevSuVersion() end notExists");

        return "";

     label01:
        $r15 = new java.lang.ProcessBuilder;

        $r2 = $r15;

        $r3 = newarray (java.lang.String)[0];

     label02:
        specialinvoke $r15.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r3);

     label03:
        $r3 = newarray (java.lang.String)[2];

        $r3[0] = $r1;

        $r3[1] = "-v";

     label04:
        $r2 = virtualinvoke $r2.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>($r3);

        $r2 = virtualinvoke $r2.<java.lang.ProcessBuilder: java.lang.ProcessBuilder redirectErrorStream(boolean)>(1);

        $r4 = virtualinvoke $r2.<java.lang.ProcessBuilder: java.lang.Process start()>();

     label05:
        if $r4 == null goto label39;

     label06:
        $r5 = virtualinvoke $r4.<java.lang.Process: java.io.InputStream getInputStream()>();

     label07:
        $r0 = $r5;

     label08:
        $r16 = new java.io.ByteArrayOutputStream;

     label09:
        $r6 = $r16;

     label10:
        specialinvoke $r16.<java.io.ByteArrayOutputStream: void <init>()>();

     label11:
        $r7 = newarray (byte)[1024];

     label12:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r7);

     label13:
        if $i0 <= 0 goto label22;

     label14:
        virtualinvoke $r6.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r7, 0, $i0);

     label15:
        goto label12;

     label16:
        $r8 := @caughtexception;

        $r0 = $r5;

     label17:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label18:
        virtualinvoke $r4.<java.lang.Process: void destroy()>();

     label19:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r6);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r0);

        $r1 = "";

     label20:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        staticinvoke <com.kingroot.sdk.at: void h(java.lang.String)>("getPrevSuVersion() end");

        return $r1;

     label21:
        $r9 := @caughtexception;

        $r18 = (java.io.IOException) $r9;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

        $r4 = null;

        goto label05;

     label22:
        $r7 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label23:
        $r17 = new java.lang.String;

     label24:
        $r1 = $r17;

     label25:
        specialinvoke $r17.<java.lang.String: void <init>(byte[],java.lang.String)>($r7, "UTF-8");

     label26:
        virtualinvoke $r4.<java.lang.Process: void destroy()>();

     label27:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r6);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r5);

        goto label20;

     label28:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Throwable: void printStackTrace()>();

        goto label27;

     label29:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        goto label19;

     label30:
        $r12 := @caughtexception;

        $r6 = null;

        $r0 = null;

     label31:
        virtualinvoke $r4.<java.lang.Process: void destroy()>();

     label32:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r6);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r0);

        throw $r12;

     label33:
        $r13 := @caughtexception;

        virtualinvoke $r13.<java.lang.Throwable: void printStackTrace()>();

        goto label32;

     label34:
        $r12 := @caughtexception;

        $r6 = null;

        goto label31;

     label35:
        $r12 := @caughtexception;

        goto label31;

     label36:
        $r12 := @caughtexception;

        goto label31;

     label37:
        $r8 := @caughtexception;

        $r6 = null;

        goto label17;

     label38:
        $r8 := @caughtexception;

        $r6 = null;

        $r0 = $r5;

        goto label17;

     label39:
        $r1 = "";

        goto label20;

        catch java.io.IOException from label02 to label03 with label21;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.Exception from label06 to label07 with label37;
        catch java.lang.Throwable from label06 to label07 with label30;
        catch java.lang.Exception from label10 to label11 with label38;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label10 to label11 with label34;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label35;
        catch java.lang.Throwable from label14 to label15 with label35;
        catch java.lang.Throwable from label17 to label18 with label36;
        catch java.lang.Throwable from label18 to label19 with label29;
        catch java.lang.Exception from label22 to label23 with label16;
        catch java.lang.Exception from label25 to label26 with label16;
        catch java.lang.Throwable from label22 to label24 with label35;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    public static java.lang.String q(java.lang.String)
    {
        java.lang.Throwable $r5;
        com.kingroot.sdk.av$b $r3;
        com.kingroot.sdk.av $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r0;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r1 = new com.kingroot.sdk.av;

     label02:
        specialinvoke $r1.<com.kingroot.sdk.av: void <init>(java.lang.String)>("sh");

     label03:
        virtualinvoke $r1.<com.kingroot.sdk.av: com.kingroot.sdk.av$b t(java.lang.String)>("export PATH=/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:$PATH");

     label04:
        $r2 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("getprop ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<com.kingroot.sdk.av: com.kingroot.sdk.av$b b(java.lang.String,long)>($r0, 10000L);

        $r0 = $r3.<com.kingroot.sdk.av$b: java.lang.String cs>;

     label06:
        if $r0 == null goto label09;

     label07:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

     label08:
        virtualinvoke $r1.<com.kingroot.sdk.av: void shutdown()>();

        return $r0;

     label09:
        virtualinvoke $r1.<com.kingroot.sdk.av: void shutdown()>();

     label10:
        return "";

     label11:
        $r4 := @caughtexception;

        $r1 = null;

     label12:
        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

     label13:
        if $r1 == null goto label10;

        virtualinvoke $r1.<com.kingroot.sdk.av: void shutdown()>();

        goto label10;

     label14:
        $r5 := @caughtexception;

        $r1 = null;

     label15:
        if $r1 == null goto label16;

        virtualinvoke $r1.<com.kingroot.sdk.av: void shutdown()>();

     label16:
        throw $r5;

     label17:
        $r5 := @caughtexception;

        goto label15;

     label18:
        $r4 := @caughtexception;

        goto label12;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Throwable from label01 to label03 with label14;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Throwable from label03 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
    }
}
