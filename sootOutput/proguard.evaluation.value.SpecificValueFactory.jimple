public class proguard.evaluation.value.SpecificValueFactory extends proguard.evaluation.value.ValueFactory
{
    static final proguard.evaluation.value.DoubleValue DOUBLE_VALUE_0;
    static final proguard.evaluation.value.DoubleValue DOUBLE_VALUE_1;
    static final proguard.evaluation.value.FloatValue FLOAT_VALUE_0;
    static final proguard.evaluation.value.FloatValue FLOAT_VALUE_1;
    static final proguard.evaluation.value.FloatValue FLOAT_VALUE_2;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_0;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_1;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_2;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_3;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_4;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_5;
    static final proguard.evaluation.value.IntegerValue INTEGER_VALUE_M1;
    static final proguard.evaluation.value.LongValue LONG_VALUE_0;
    static final proguard.evaluation.value.LongValue LONG_VALUE_1;
    private static long POS_ZERO_DOUBLE_BITS;
    private static int POS_ZERO_FLOAT_BITS;

    static void <clinit>()
    {
        proguard.evaluation.value.ParticularFloatValue $r2;
        int $i0;
        proguard.evaluation.value.ParticularLongValue $r1;
        proguard.evaluation.value.ParticularDoubleValue $r3;
        long $l1;
        proguard.evaluation.value.ParticularIntegerValue $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(-1);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_M1> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(0);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_0> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(1);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_1> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(2);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_2> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(3);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_3> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(4);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_4> = $r0;

        $r0 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r0.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>(5);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_5> = $r0;

        $r1 = new proguard.evaluation.value.ParticularLongValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularLongValue: void <init>(long)>(0L);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.LongValue LONG_VALUE_0> = $r1;

        $r1 = new proguard.evaluation.value.ParticularLongValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularLongValue: void <init>(long)>(1L);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.LongValue LONG_VALUE_1> = $r1;

        $r2 = new proguard.evaluation.value.ParticularFloatValue;

        specialinvoke $r2.<proguard.evaluation.value.ParticularFloatValue: void <init>(float)>(0.0F);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_0> = $r2;

        $r2 = new proguard.evaluation.value.ParticularFloatValue;

        specialinvoke $r2.<proguard.evaluation.value.ParticularFloatValue: void <init>(float)>(1.0F);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_1> = $r2;

        $r2 = new proguard.evaluation.value.ParticularFloatValue;

        specialinvoke $r2.<proguard.evaluation.value.ParticularFloatValue: void <init>(float)>(2.0F);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_2> = $r2;

        $r3 = new proguard.evaluation.value.ParticularDoubleValue;

        specialinvoke $r3.<proguard.evaluation.value.ParticularDoubleValue: void <init>(double)>(0.0);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.DoubleValue DOUBLE_VALUE_0> = $r3;

        $r3 = new proguard.evaluation.value.ParticularDoubleValue;

        specialinvoke $r3.<proguard.evaluation.value.ParticularDoubleValue: void <init>(double)>(1.0);

        <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.DoubleValue DOUBLE_VALUE_1> = $r3;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(0.0F);

        <proguard.evaluation.value.SpecificValueFactory: int POS_ZERO_FLOAT_BITS> = $i0;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(0.0);

        <proguard.evaluation.value.SpecificValueFactory: long POS_ZERO_DOUBLE_BITS> = $l1;

        return;
    }

    public void <init>()
    {
        proguard.evaluation.value.SpecificValueFactory r0;

        r0 := @this: proguard.evaluation.value.SpecificValueFactory;

        specialinvoke r0.<proguard.evaluation.value.ValueFactory: void <init>()>();

        return;
    }

    public proguard.evaluation.value.DoubleValue createDoubleValue(double)
    {
        byte $b2;
        proguard.evaluation.value.SpecificValueFactory r0;
        proguard.evaluation.value.ParticularDoubleValue $r1;
        proguard.evaluation.value.DoubleValue r2;
        long $l0, $l1;
        double $d0;

        r0 := @this: proguard.evaluation.value.SpecificValueFactory;

        $d0 := @parameter0: double;

        $b2 = $d0 cmpl 0.0;

        if $b2 != 0 goto label1;

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l0 = <proguard.evaluation.value.SpecificValueFactory: long POS_ZERO_DOUBLE_BITS>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.DoubleValue DOUBLE_VALUE_0>;

        return r2;

     label1:
        $b2 = $d0 cmpl 1.0;

        if $b2 != 0 goto label2;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.DoubleValue DOUBLE_VALUE_1>;

        return r2;

     label2:
        $r1 = new proguard.evaluation.value.ParticularDoubleValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularDoubleValue: void <init>(double)>($d0);

        return $r1;
    }

    public proguard.evaluation.value.FloatValue createFloatValue(float)
    {
        byte $b2;
        proguard.evaluation.value.SpecificValueFactory r0;
        proguard.evaluation.value.ParticularFloatValue $r1;
        int $i0, $i1;
        float $f0;
        proguard.evaluation.value.FloatValue r2;

        r0 := @this: proguard.evaluation.value.SpecificValueFactory;

        $f0 := @parameter0: float;

        $b2 = $f0 cmpl 0.0F;

        if $b2 != 0 goto label1;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i0 = <proguard.evaluation.value.SpecificValueFactory: int POS_ZERO_FLOAT_BITS>;

        if $i1 != $i0 goto label1;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_0>;

        return r2;

     label1:
        $b2 = $f0 cmpl 1.0F;

        if $b2 != 0 goto label2;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_1>;

        return r2;

     label2:
        $b2 = $f0 cmpl 2.0F;

        if $b2 != 0 goto label3;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.FloatValue FLOAT_VALUE_2>;

        return r2;

     label3:
        $r1 = new proguard.evaluation.value.ParticularFloatValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularFloatValue: void <init>(float)>($f0);

        return $r1;
    }

    public proguard.evaluation.value.IntegerValue createIntegerValue(int)
    {
        proguard.evaluation.value.IntegerValue r2;
        proguard.evaluation.value.SpecificValueFactory r0;
        int $i0;
        proguard.evaluation.value.ParticularIntegerValue $r1;

        r0 := @this: proguard.evaluation.value.SpecificValueFactory;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case -1: goto label2;
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            default: goto label1;
        };

     label1:
        $r1 = new proguard.evaluation.value.ParticularIntegerValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularIntegerValue: void <init>(int)>($i0);

        return $r1;

     label2:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_M1>;

        return r2;

     label3:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_0>;

        return r2;

     label4:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_1>;

        return r2;

     label5:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_2>;

        return r2;

     label6:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_3>;

        return r2;

     label7:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_4>;

        return r2;

     label8:
        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.IntegerValue INTEGER_VALUE_5>;

        return r2;
    }

    public proguard.evaluation.value.LongValue createLongValue(long)
    {
        byte $b1;
        proguard.evaluation.value.SpecificValueFactory r0;
        proguard.evaluation.value.LongValue r2;
        proguard.evaluation.value.ParticularLongValue $r1;
        long $l0;

        r0 := @this: proguard.evaluation.value.SpecificValueFactory;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.LongValue LONG_VALUE_0>;

        return r2;

     label1:
        $b1 = $l0 cmp 1L;

        if $b1 != 0 goto label2;

        r2 = <proguard.evaluation.value.SpecificValueFactory: proguard.evaluation.value.LongValue LONG_VALUE_1>;

        return r2;

     label2:
        $r1 = new proguard.evaluation.value.ParticularLongValue;

        specialinvoke $r1.<proguard.evaluation.value.ParticularLongValue: void <init>(long)>($l0);

        return $r1;
    }
}
