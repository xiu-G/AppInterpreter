public class androidx.core.widget.NestedScrollView extends android.widget.FrameLayout implements b.h.l.m, b.h.l.i
{
    private static final androidx.core.widget.NestedScrollView$a B;
    private static final int[] C;
    private androidx.core.widget.NestedScrollView$b A;
    private long b;
    private final android.graphics.Rect c;
    private android.widget.OverScroller d;
    private android.widget.EdgeEffect e;
    private android.widget.EdgeEffect f;
    private int g;
    private boolean h;
    private boolean i;
    private android.view.View j;
    private boolean k;
    private android.view.VelocityTracker l;
    private boolean m;
    private boolean n;
    private int o;
    private int p;
    private int q;
    private int r;
    private final int[] s;
    private final int[] t;
    private int u;
    private int v;
    private androidx.core.widget.NestedScrollView$c w;
    private final b.h.l.o x;
    private final b.h.l.k y;
    private float z;

    static void <clinit>()
    {
        int[] $r1;
        androidx.core.widget.NestedScrollView$a $r0;

        $r0 = new androidx.core.widget.NestedScrollView$a;

        specialinvoke $r0.<androidx.core.widget.NestedScrollView$a: void <init>()>();

        <androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$a B> = $r0;

        $r1 = newarray (int)[1];

        $r1[0] = 16843130;

        <androidx.core.widget.NestedScrollView: int[] C> = $r1;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r2;
        android.graphics.Rect $r6;
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r8;
        androidx.core.widget.NestedScrollView$a $r5;
        b.h.l.o $r7;
        android.content.res.TypedArray $r4;
        android.util.AttributeSet $r3;
        int[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 := @parameter0: android.content.Context;

        $r3 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, $r3, $i0);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c> = $r6;

        r0.<androidx.core.widget.NestedScrollView: boolean h> = 1;

        r0.<androidx.core.widget.NestedScrollView: boolean i> = 0;

        r0.<androidx.core.widget.NestedScrollView: android.view.View j> = null;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = 0;

        r0.<androidx.core.widget.NestedScrollView: boolean n> = 1;

        $i1 = -1;

        r0.<androidx.core.widget.NestedScrollView: int r> = $i1;

        $r1 = newarray (int)[2];

        r0.<androidx.core.widget.NestedScrollView: int[] s> = $r1;

        $r1 = newarray (int)[2];

        r0.<androidx.core.widget.NestedScrollView: int[] t> = $r1;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void y()>();

        $r1 = <androidx.core.widget.NestedScrollView: int[] C>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r3, $r1, $i0, 0);

        $z0 = virtualinvoke $r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void setFillViewport(boolean)>($z0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r7 = new b.h.l.o;

        specialinvoke $r7.<b.h.l.o: void <init>(android.view.ViewGroup)>(r0);

        r0.<androidx.core.widget.NestedScrollView: b.h.l.o x> = $r7;

        $r8 = new b.h.l.k;

        specialinvoke $r8.<b.h.l.k: void <init>(android.view.View)>(r0);

        r0.<androidx.core.widget.NestedScrollView: b.h.l.k y> = $r8;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(1);

        $r5 = <androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$a B>;

        staticinvoke <b.h.l.s: void W(android.view.View,b.h.l.a)>(r0, $r5);

        return;
    }

    private boolean A(android.view.View)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean C(android.view.View,int,int)>($r1, 0, $i0);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    private static boolean B(android.view.View, android.view.View)
    {
        android.view.ViewParent $r2;
        android.view.View $r0, $r1;
        boolean $z0;

        $r1 := @parameter0: android.view.View;

        $r0 := @parameter1: android.view.View;

        if $r1 != $r0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label2;

        $r1 = (android.view.View) $r2;

        $z0 = staticinvoke <androidx.core.widget.NestedScrollView: boolean B(android.view.View,android.view.View)>($r1, $r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean C(android.view.View, int, int)
    {
        android.graphics.Rect $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke r0.<android.widget.FrameLayout: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i2 = $i2 + $i1;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        if $i2 < $i3 goto label1;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i1 = $i2 - $i1;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i0 = $i2 + $i0;

        if $i1 > $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void D(int, int, int[])
    {
        androidx.core.widget.NestedScrollView r0;
        int[] $r1;
        b.h.l.k $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        virtualinvoke r0.<android.widget.FrameLayout: void scrollBy(int,int)>(0, $i0);

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i3 - $i2;

        if $r1 == null goto label1;

        $i3 = $r1[1];

        $i3 = $i3 + $i2;

        $r1[1] = $i3;

     label1:
        $i0 = $i0 - $i2;

        $r2 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        virtualinvoke $r2.<b.h.l.k: void e(int,int,int,int,int[],int,int[])>(0, $i2, 0, $i0, null, $i1, $r1);

        return;
    }

    private void E(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.VelocityTracker $r2;
        byte $b3;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        if $i2 != $i0 goto label3;

        if $i1 != 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($b3);

        $i0 = (int) $f0;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i0;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($b3);

        r0.<androidx.core.widget.NestedScrollView: int r> = $i0;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private void H()
    {
        android.view.VelocityTracker $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l> = null;

     label1:
        return;
    }

    private void I(boolean)
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean O(int,int)>(2, 1);

        goto label1;

     label1:
        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        r0.<androidx.core.widget.NestedScrollView: int v> = $i0;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

        return;
    }

    private boolean J(int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i2 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i3 = $i3 + $i4;

        $z0 = 0;

        if $i0 != 33 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = specialinvoke r0.<androidx.core.widget.NestedScrollView: android.view.View s(boolean,int,int)>($z1, $i2, $i1);

        $r2 = $r1;

        if $r1 != null goto label3;

        $r2 = r0;

     label3:
        if $i2 < $i4 goto label4;

        if $i1 > $i3 goto label4;

        goto label7;

     label4:
        if $z1 == 0 goto label5;

        $i2 = $i2 - $i4;

        goto label6;

     label5:
        $i2 = $i1 - $i3;

     label6:
        specialinvoke r0.<androidx.core.widget.NestedScrollView: void l(int)>($i2);

        $z0 = 1;

     label7:
        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View findFocus()>();

        if $r2 == $r1 goto label8;

        $r1 = (android.view.View) $r2;

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

     label8:
        return $z0;
    }

    private void K(android.view.View)
    {
        android.graphics.Rect $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke r0.<android.widget.FrameLayout: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>($r2);

        if $i0 == 0 goto label1;

        virtualinvoke r0.<android.widget.FrameLayout: void scrollBy(int,int)>(0, $i0);

     label1:
        return;
    }

    private boolean L(android.graphics.Rect, boolean)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>($r1);

        if $i0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.FrameLayout: void scrollBy(int,int)>(0, $i0);

        return $z1;

     label3:
        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void M(int,int)>(0, $i0);

     label4:
        return $z1;
    }

    private void b()
    {
        android.widget.OverScroller $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        virtualinvoke $r1.<android.widget.OverScroller: void abortAnimation()>();

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void a(int)>(1);

        return;
    }

    private boolean d()
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = $r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i0 = $i0 + $i1;

        $i1 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        if $i0 <= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static int e(int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i3 := @parameter2: int;

        if $i0 >= $i3 goto label3;

        if $i2 >= 0 goto label1;

        goto label3;

     label1:
        $i1 = $i0 + $i2;

        if $i1 <= $i3 goto label2;

        $i2 = $i3 - $i0;

     label2:
        return $i2;

     label3:
        return 0;
    }

    private float getVerticalScrollFactorCompat()
    {
        android.content.Context $r2;
        java.lang.IllegalStateException $r6;
        androidx.core.widget.NestedScrollView r0;
        android.util.DisplayMetrics $r5;
        byte $b0;
        android.util.TypedValue $r1;
        float $f0;
        android.content.res.Resources$Theme $r3;
        boolean $z0;
        android.content.res.Resources $r4;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $f0 = r0.<androidx.core.widget.NestedScrollView: float z>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, $r1, 1);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke $r1.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r5);

        r0.<androidx.core.widget.NestedScrollView: float z> = $f0;

        goto label2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");

        throw $r6;

     label2:
        $f0 = r0.<androidx.core.widget.NestedScrollView: float z>;

        return $f0;
    }

    private void l(int)
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean n>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void M(int,int)>(0, $i0);

        return;

     label1:
        virtualinvoke r0.<android.widget.FrameLayout: void scrollBy(int,int)>(0, $i0);

     label2:
        return;
    }

    private void p()
    {
        android.widget.EdgeEffect $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = 0;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void H()>();

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void a(int)>(0);

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        virtualinvoke $r1.<android.widget.EdgeEffect: void onRelease()>();

     label1:
        return;
    }

    private void q()
    {
        android.content.Context $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.widget.EdgeEffect $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getOverScrollMode()>();

        if $i0 == 2 goto label1;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r1 = new android.widget.EdgeEffect;

        specialinvoke $r1.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r2);

        r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e> = $r1;

        $r1 = new android.widget.EdgeEffect;

        specialinvoke $r1.<android.widget.EdgeEffect: void <init>(android.content.Context)>($r2);

        r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f> = $r1;

        return;

     label1:
        r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e> = null;

        r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f> = null;

     label2:
        return;
    }

    private android.view.View s(boolean, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: java.util.ArrayList getFocusables(int)>(2);

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = null;

        $i3 = 0;

        $z1 = 0;

     label01:
        if $i3 >= $i2 goto label13;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (android.view.View) $r3;

        $i4 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $i5 = virtualinvoke $r4.<android.view.View: int getBottom()>();

        if $i0 >= $i5 goto label12;

        if $i4 >= $i1 goto label12;

        if $i0 >= $i4 goto label02;

        if $i5 >= $i1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        if $r2 != null goto label04;

        $r2 = $r4;

        $z1 = $z2;

        goto label12;

     label04:
        if $z0 == 0 goto label05;

        $i6 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if $i4 < $i6 goto label06;

     label05:
        if $z0 != 0 goto label07;

        $i4 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        if $i5 <= $i4 goto label07;

     label06:
        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        if $z1 == 0 goto label09;

        if $z2 == 0 goto label12;

        if $z3 == 0 goto label12;

        goto label11;

     label09:
        if $z2 == 0 goto label10;

        $r2 = $r4;

        $z1 = 1;

        goto label12;

     label10:
        if $z3 == 0 goto label12;

     label11:
        $r2 = $r4;

     label12:
        $i3 = $i3 + 1;

        goto label01;

     label13:
        return $r2;
    }

    private boolean w(int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i2 <= 0 goto label1;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = $i3 - $i2;

        if $i1 < $i3 goto label1;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i2 = $i3 - $i2;

        if $i1 >= $i2 goto label1;

        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        if $i0 < $i1 goto label1;

        $i1 = virtualinvoke $r1.<android.view.View: int getRight()>();

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void x()
    {
        android.view.VelocityTracker $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l> = $r1;

        return;

     label1:
        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();

        return;
    }

    private void y()
    {
        android.widget.OverScroller $r1;
        android.content.Context $r2;
        android.view.ViewConfiguration $r3;
        androidx.core.widget.NestedScrollView r0;
        int $i0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = new android.widget.OverScroller;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        specialinvoke $r1.<android.widget.OverScroller: void <init>(android.content.Context)>($r2);

        r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d> = $r1;

        virtualinvoke r0.<android.widget.FrameLayout: void setFocusable(boolean)>(1);

        virtualinvoke r0.<android.widget.FrameLayout: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<android.widget.FrameLayout: void setWillNotDraw(boolean)>(0);

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<androidx.core.widget.NestedScrollView: int o> = $i0;

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<androidx.core.widget.NestedScrollView: int p> = $i0;

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<androidx.core.widget.NestedScrollView: int q> = $i0;

        return;
    }

    private void z()
    {
        android.view.VelocityTracker $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        if $r1 != null goto label1;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l> = $r1;

     label1:
        return;
    }

    boolean F(int, int, int, int, int, int, int, int, boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2;
        android.widget.OverScroller $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 := @parameter2: int;

        $i4 := @parameter3: int;

        $i5 := @parameter4: int;

        $i6 := @parameter5: int;

        $i7 := @parameter6: int;

        $i0 := @parameter7: int;

        $z0 := @parameter8: boolean;

        $i8 = virtualinvoke r0.<android.widget.FrameLayout: int getOverScrollMode()>();

        $i9 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()>();

        $i10 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()>();

        if $i9 <= $i10 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        $i9 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()>();

        $i10 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()>();

        if $i9 <= $i10 goto label03;

        $z0 = 1;

        goto label04;

     label03:
        $z0 = 0;

     label04:
        if $i8 == 0 goto label06;

        if $i8 != 1 goto label05;

        if $z1 != 0 goto label06;

     label05:
        $z1 = 0;

        goto label07;

     label06:
        $z1 = 1;

     label07:
        if $i8 == 0 goto label09;

        if $i8 != 1 goto label08;

        if $z0 != 0 goto label09;

     label08:
        $z0 = 0;

        goto label10;

     label09:
        $z0 = 1;

     label10:
        $i1 = 0;

        if $z1 != 0 goto label11;

        $i3 = 0;

        goto label12;

     label11:
        $i3 = 0;

     label12:
        $i2 = $i4 + $i2;

        if $z0 != 0 goto label13;

        $i7 = 0;

        goto label14;

     label13:
        $i7 = 0;

     label14:
        $i4 = neg $i3;

        $i3 = $i3 + 0;

        $i5 = neg $i7;

        $i6 = $i7 + $i6;

        if 0 <= $i3 goto label16;

        $i1 = $i3;

     label15:
        $z0 = 1;

        goto label18;

     label16:
        if 0 >= $i4 goto label17;

        $i1 = $i4;

        goto label15;

     label17:
        $z0 = 0;

     label18:
        if $i2 <= $i6 goto label20;

        $i2 = $i6;

     label19:
        $z1 = 1;

        goto label22;

     label20:
        if $i2 >= $i5 goto label21;

        $i2 = $i5;

        goto label19;

     label21:
        $z1 = 0;

     label22:
        if $z1 == 0 goto label23;

        $z2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean v(int)>(1);

        if $z2 != 0 goto label23;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i3 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        virtualinvoke $r1.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i1, $i2, 0, 0, 0, $i3);

     label23:
        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>($i1, $i2, $z0, $z1);

        if $z0 != 0 goto label24;

        if $z1 == 0 goto label25;

     label24:
        return 1;

     label25:
        return 0;
    }

    public boolean G(int)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.widget.FrameLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 != 130 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i2 + $i1;

        $r1.<android.graphics.Rect: int top> = $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i2 <= 0 goto label4;

        $i2 = $i2 - 1;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>($i2);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i3 = $r4.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i3 = $r1.<android.graphics.Rect: int top>;

        $i3 = $i3 + $i1;

        if $i3 <= $i2 goto label4;

        $i2 = $i2 - $i1;

        $r1.<android.graphics.Rect: int top> = $i2;

        goto label4;

     label3:
        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i2 - $i1;

        $r1.<android.graphics.Rect: int top> = $i2;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        if $i2 >= 0 goto label4;

        $r1.<android.graphics.Rect: int top> = 0;

     label4:
        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = $r1.<android.graphics.Rect: int top>;

        $i1 = $i1 + $i2;

        $r1.<android.graphics.Rect: int bottom> = $i1;

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean J(int,int,int)>($i0, $i2, $i1);

        return $z0;
    }

    public final void M(int, int)
    {
        android.widget.OverScroller $r4;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        long $l4, $l5;
        byte $b0;
        int $i1, $i2, $i3, $i6;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i3 != 0 goto label1;

        return;

     label1:
        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        $l5 = r0.<androidx.core.widget.NestedScrollView: long b>;

        $l4 = $l4 - $l5;

        $b0 = $l4 cmp 250L;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i1 = $i1 + $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i3 = $i1 + $i3;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i6 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i1 = $i1 - $i6;

        $i6 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i6 = $i1 - $i6;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i3 = $i3 - $i6;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $i2 = $i2 + $i1;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i2 = $i2 - $i1;

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        virtualinvoke $r4.<android.widget.OverScroller: void startScroll(int,int,int,int)>($i3, $i1, 0, $i2);

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void I(boolean)>(0);

        goto label4;

     label2:
        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r4.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void b()>();

     label3:
        virtualinvoke r0.<android.widget.FrameLayout: void scrollBy(int,int)>($i1, $i2);

     label4:
        $l4 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<androidx.core.widget.NestedScrollView: long b> = $l4;

        return;
    }

    public final void N(int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void M(int,int)>($i0, $i1);

        return;
    }

    public boolean O(int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r1.<b.h.l.k: boolean q(int,int)>(2, $i0);

        return $z0;
    }

    public void a(int)
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        virtualinvoke $r1.<b.h.l.k: void s(int)>($i0);

        return;
    }

    public void addView(android.view.View)
    {
        java.lang.IllegalStateException $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View)>($r1);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;
    }

    public void addView(android.view.View, int)
    {
        java.lang.IllegalStateException $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int)>($r1, $i1);

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r2;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        java.lang.IllegalStateException $r3;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r1;
        int $i0, $i1;
        android.view.View $r2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $r1 := @parameter2: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r2, $i1, $r1);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        java.lang.IllegalStateException $r3;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 > 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");

        throw $r3;
    }

    public boolean c(int)
    {
        android.graphics.Rect $r4;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r5;
        android.view.FocusFinder $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1, $r2;
        android.widget.FrameLayout$LayoutParams $r6;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View findFocus()>();

        $r2 = $r1;

        if $r1 != r0 goto label1;

        $r2 = null;

     label1:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r1 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r2, $i0);

        $i1 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getMaxScrollAmount()>();

        $i2 = $i1;

        if $r1 == null goto label2;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean C(android.view.View,int,int)>($r1, $i1, $i3);

        if $z0 == 0 goto label2;

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke r0.<android.widget.FrameLayout: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r4);

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i1 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>($r4);

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void l(int)>($i1);

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

        goto label8;

     label2:
        if $i0 != 33 goto label3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        if $i3 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        goto label4;

     label3:
        if $i0 != 130 goto label4;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i3 <= 0 goto label4;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r5 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.widget.FrameLayout$LayoutParams) $r5;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $r6.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i2 = $i2 - $i3;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

     label4:
        if $i2 != 0 goto label5;

        return 0;

     label5:
        if $i0 != 130 goto label6;

        goto label7;

     label6:
        $i2 = neg $i2;

     label7:
        specialinvoke r0.<androidx.core.widget.NestedScrollView: void l(int)>($i2);

     label8:
        if $r2 == null goto label9;

        $z0 = virtualinvoke $r2.<android.view.View: boolean isFocused()>();

        if $z0 == 0 goto label9;

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean A(android.view.View)>($r2);

        if $z0 == 0 goto label9;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getDescendantFocusability()>();

        virtualinvoke r0.<android.widget.FrameLayout: void setDescendantFocusability(int)>(131072);

        virtualinvoke r0.<android.widget.FrameLayout: boolean requestFocus()>();

        virtualinvoke r0.<android.widget.FrameLayout: void setDescendantFocusability(int)>($i0);

     label9:
        return 1;
    }

    public int computeHorizontalScrollExtent()
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollExtent()>();

        return $i0;
    }

    public int computeHorizontalScrollOffset()
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollOffset()>();

        return $i0;
    }

    public int computeHorizontalScrollRange()
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public void computeScroll()
    {
        android.widget.OverScroller $r1;
        androidx.core.widget.NestedScrollView r0;
        int[] $r2, $r3;
        int $i0, $i1, $i2, $i3;
        float $f0;
        android.widget.EdgeEffect $r4;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r1.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        virtualinvoke $r1.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i0 = virtualinvoke $r1.<android.widget.OverScroller: int getCurrY()>();

        $i1 = r0.<androidx.core.widget.NestedScrollView: int v>;

        $i1 = $i0 - $i1;

        r0.<androidx.core.widget.NestedScrollView: int v> = $i0;

        $r2 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $z0 = 1;

        $r2[1] = 0;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean g(int,int,int[],int[],int)>(0, $i1, $r2, null, 1);

        $r2 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $i0 = $r2[1];

        $i1 = $i1 - $i0;

        $i0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        if $i1 == 0 goto label2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean F(int,int,int,int,int,int,int,int,boolean)>(0, $i1, $i3, $i2, 0, $i0, 0, 0, 0);

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i3 - $i2;

        $i1 = $i1 - $i2;

        $r2 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $r2[1] = 0;

        $r3 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void k(int,int,int,int,int[],int,int[])>(0, $i2, 0, $i1, $r3, 1, $r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $i2 = $r2[1];

        $i1 = $i1 - $i2;

     label2:
        if $i1 == 0 goto label7;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getOverScrollMode()>();

        if $i2 == 0 goto label4;

        if $i2 != 1 goto label3;

        if $i0 <= 0 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        if $z0 == 0 goto label6;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void q()>();

        if $i1 >= 0 goto label5;

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $z0 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label6;

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $f0 = virtualinvoke $r1.<android.widget.OverScroller: float getCurrVelocity()>();

        $i0 = (int) $f0;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onAbsorb(int)>($i0);

        goto label6;

     label5:
        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $z0 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label6;

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $f0 = virtualinvoke $r1.<android.widget.OverScroller: float getCurrVelocity()>();

        $i0 = (int) $f0;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onAbsorb(int)>($i0);

     label6:
        specialinvoke r0.<androidx.core.widget.NestedScrollView: void b()>();

     label7:
        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r1.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 != 0 goto label8;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label8:
        return;
    }

    public int computeVerticalScrollExtent()
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeVerticalScrollExtent()>();

        return $i0;
    }

    public int computeVerticalScrollOffset()
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = specialinvoke r0.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;
    }

    public int computeVerticalScrollRange()
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        if $i0 != 0 goto label1;

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i2 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i0 = $i0 + $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        if $i2 >= 0 goto label2;

        $i0 = $i0 - $i2;

        return $i0;

     label2:
        if $i2 <= $i1 goto label3;

        $i1 = $i2 - $i1;

        $i0 = $i0 + $i1;

     label3:
        return $i0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean r(android.view.KeyEvent)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r1.<b.h.l.k: boolean a(float,float,boolean)>(0.0F, $f0, 1);

        return $z0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $f1 := @parameter0: float;

        $f0 := @parameter1: float;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r1.<b.h.l.k: boolean b(float,float)>($f1, $f0);

        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        androidx.core.widget.NestedScrollView r0;
        int[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean g(int,int,int[],int[],int)>($i1, $i0, $r1, $r2, 0);

        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r2;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i3 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: int[];

        $r2 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r2.<b.h.l.k: boolean f(int,int,int,int,int[])>($i3, $i0, $i1, $i2, $r1);

        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Canvas $r1;
        android.widget.EdgeEffect $r2;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($r1);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        if $r2 == null goto label10;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $z0 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean isFinished()>();

        $i1 = 0;

        if $z0 != 0 goto label05;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getWidth()>();

        $i4 = $i3;

        $i5 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i6 = $i5;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i0);

        $i8 = $i7;

        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 < 21 goto label01;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean getClipToPadding()>();

        if $z0 != 0 goto label01;

        $i3 = 0;

        goto label02;

     label01:
        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i9 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i4 = $i4 + $i9;

        $i4 = $i3 - $i4;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

     label02:
        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 < 21 goto label03;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean getClipToPadding()>();

        if $z0 == 0 goto label03;

        $i6 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i8 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i6 = $i6 + $i8;

        $i6 = $i5 - $i6;

        $i5 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i8 = $i7 + $i5;

     label03:
        $f0 = (float) $i3;

        $f1 = (float) $i8;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void setSize(int,int)>($i4, $i6);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $z0 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label04;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label04:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label05:
        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $z0 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label10;

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $i6 = virtualinvoke r0.<android.widget.FrameLayout: int getWidth()>();

        $i5 = $i6;

        $i7 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i4 = $i7;

        $i8 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i0);

        $i0 = $i0 + $i7;

        $i8 = <android.os.Build$VERSION: int SDK_INT>;

        if $i8 < 21 goto label06;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean getClipToPadding()>();

        if $z0 == 0 goto label07;

     label06:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i5 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i1 = $i1 + $i5;

        $i5 = $i6 - $i1;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

     label07:
        $i6 = <android.os.Build$VERSION: int SDK_INT>;

        if $i6 < 21 goto label08;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean getClipToPadding()>();

        if $z0 == 0 goto label08;

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i6 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i4 = $i4 + $i6;

        $i4 = $i7 - $i4;

        $i7 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i0 = $i0 - $i7;

     label08:
        $i1 = $i1 - $i5;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);

        $f0 = (float) $i5;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f0, 0.0F);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void setSize(int,int)>($i5, $i4);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $z0 = virtualinvoke $r2.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>($r1);

        if $z0 == 0 goto label09;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label09:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label10:
        return;
    }

    protected int f(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r2;
        android.widget.FrameLayout$LayoutParams $r4;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.graphics.Rect;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 != 0 goto label01;

        return 0;

     label01:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i3 = $i2;

        $i0 = $i2 + $i1;

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getVerticalFadingEdgeLength()>();

        $i5 = $r1.<android.graphics.Rect: int top>;

        if $i5 <= 0 goto label02;

        $i3 = $i2 + $i4;

     label02:
        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $i5 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        $i6 = $r4.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i5 = $i5 + $i6;

        $i6 = $r4.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i5 = $i5 + $i6;

        if $i2 >= $i5 goto label03;

        $i4 = $i0 - $i4;

        goto label04;

     label03:
        $i4 = $i0;

     label04:
        $i2 = $r1.<android.graphics.Rect: int bottom>;

        if $i2 <= $i4 goto label07;

        $i2 = $r1.<android.graphics.Rect: int top>;

        if $i2 <= $i3 goto label07;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i2 <= $i1 goto label05;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i3 = $i1 - $i3;

        goto label06;

     label05:
        $i3 = $r1.<android.graphics.Rect: int bottom>;

        $i3 = $i3 - $i4;

     label06:
        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i4 = $r4.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i1 = $i1 + $i4;

        $i0 = $i1 - $i0;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i0);

        return $i0;

     label07:
        $i0 = $r1.<android.graphics.Rect: int top>;

        if $i0 >= $i3 goto label10;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 >= $i4 goto label10;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        if $i0 <= $i1 goto label08;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i0 = $i4 - $i0;

        $i0 = 0 - $i0;

        goto label09;

     label08:
        $i0 = $r1.<android.graphics.Rect: int top>;

        $i0 = $i3 - $i0;

        $i0 = 0 - $i0;

     label09:
        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i3 = neg $i3;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i3);

        return $i0;

     label10:
        return 0;
    }

    public boolean g(int, int, int[], int[], int)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r3;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $r1 := @parameter2: int[];

        $r2 := @parameter3: int[];

        $i1 := @parameter4: int;

        $r3 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r3.<b.h.l.k: boolean d(int,int,int[],int[],int)>($i2, $i0, $r1, $r2, $i1);

        return $z0;
    }

    protected float getBottomFadingEdgeStrength()
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        float $f0, $f1;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getVerticalFadingEdgeLength()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i2 - $i3;

        $i1 = $i2 - $i1;

        if $i1 >= $i0 goto label2;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        int $i0;
        float $f0;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $f0 = (float) $i0;

        $f0 = $f0 * 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public int getNestedScrollAxes()
    {
        int $i0;
        b.h.l.o $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.o x>;

        $i0 = virtualinvoke $r1.<b.h.l.o: int a()>();

        return $i0;
    }

    int getScrollRange()
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i1 = $r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i0 = $i0 + $i1;

        $i1 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i0 = $i0 + $i1;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i1 = $i1 - $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;

     label1:
        return 0;
    }

    protected float getTopFadingEdgeStrength()
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getVerticalFadingEdgeLength()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        if $i1 >= $i0 goto label2;

        $f0 = (float) $i1;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;

     label2:
        return 1.0F;
    }

    public void h(android.view.View, android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1;
        android.view.View $r1, $r3;
        b.h.l.o $r2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r3 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = r0.<androidx.core.widget.NestedScrollView: b.h.l.o x>;

        virtualinvoke $r2.<b.h.l.o: void c(android.view.View,android.view.View,int,int)>($r3, $r1, $i0, $i1);

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean O(int,int)>(2, $i1);

        return;
    }

    public boolean hasNestedScrollingParent()
    {
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean v(int)>(0);

        return $z0;
    }

    public void i(android.view.View, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1;
        b.h.l.o $r2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = r0.<androidx.core.widget.NestedScrollView: b.h.l.o x>;

        virtualinvoke $r2.<b.h.l.o: void d(android.view.View,int)>($r1, $i0);

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void a(int)>($i0);

        return;
    }

    public boolean isNestedScrollingEnabled()
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r1.<b.h.l.k: boolean m()>();

        return $z0;
    }

    public void j(android.view.View, int, int, int[], int)
    {
        androidx.core.widget.NestedScrollView r0;
        int[] $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        $i2 := @parameter4: int;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean g(int,int,int[],int[],int)>($i0, $i1, $r2, null, $i2);

        return;
    }

    public void k(int, int, int, int, int[], int, int[])
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r3;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: int[];

        $i4 := @parameter5: int;

        $r2 := @parameter6: int[];

        $r3 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        virtualinvoke $r3.<b.h.l.k: void e(int,int,int,int,int[],int,int[])>(0, $i1, 0, $i3, $r1, 0, $r2);

        return;
    }

    public void m(android.view.View, int, int, int, int, int, int[])
    {
        androidx.core.widget.NestedScrollView r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r2 := @parameter6: int[];

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void D(int,int,int[])>($i3, $i4, $r2);

        return;
    }

    protected void measureChild(android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i1 = $i1 + $i2;

        $i2 = $r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = staticinvoke <android.widget.FrameLayout: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i2);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i2 = $i2 + $i3;

        $i1 = $i2 + $i1;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i0 = staticinvoke <android.widget.FrameLayout: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i2);

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i2;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 0);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        return;
    }

    public void n(android.view.View, int, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void D(int,int,int[])>($i3, $i4, null);

        return;
    }

    public boolean o(android.view.View, android.view.View, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1;
        android.view.View $r1, $r2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onAttachedToWindow()
    {
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        r0.<androidx.core.widget.NestedScrollView: boolean i> = 0;

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.core.widget.NestedScrollView r0;
        byte $b1;
        android.view.MotionEvent $r1;
        int $i0, $i2, $i3, $i4;
        float $f0, $f1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getSource()>();

        $i0 = $i0 & 2;

        if $i0 == 0 goto label5;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 8 goto label1;

        return 0;

     label1:
        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        if $z0 != 0 goto label5;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label5;

        $f1 = specialinvoke r0.<androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()>();

        $f0 = $f0 * $f1;

        $i2 = (int) $f0;

        $i3 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $i0 = $i3;

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = $i4 - $i2;

        if $i2 >= 0 goto label2;

        $i0 = 0;

        goto label4;

     label2:
        if $i2 <= $i3 goto label3;

        goto label4;

     label3:
        $i0 = $i2;

     label4:
        if $i0 == $i4 goto label5;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i3, $i0);

        return 1;

     label5:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.OverScroller $r6;
        android.view.ViewParent $r5;
        androidx.core.widget.NestedScrollView r0;
        android.view.VelocityTracker $r4;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 2 goto label01;

        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $i0 = $i0 & 255;

        if $i0 == 0 goto label08;

        if $i0 == 1 goto label06;

        if $i0 == 2 goto label03;

        if $i0 == 3 goto label06;

        if $i0 == 6 goto label02;

        goto label10;

     label02:
        specialinvoke r0.<androidx.core.widget.NestedScrollView: void E(android.view.MotionEvent)>($r1);

        goto label10;

     label03:
        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        $i1 = -1;

        if $i0 != $i1 goto label04;

        goto label10;

     label04:
        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        $i2 = -1;

        if $i1 != $i2 goto label05;

        $r7 = new java.lang.StringBuilder;

        $r2 = $r7;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r3);

        goto label10;

     label05:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $i0 = (int) $f0;

        $i1 = r0.<androidx.core.widget.NestedScrollView: int g>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i2 = r0.<androidx.core.widget.NestedScrollView: int o>;

        if $i1 <= $i2 goto label10;

        $i1 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getNestedScrollAxes()>();

        $i1 = 2 & $i1;

        if $i1 != 0 goto label10;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = 1;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i0;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void z()>();

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        r0.<androidx.core.widget.NestedScrollView: int u> = 0;

        $r5 = virtualinvoke r0.<android.widget.FrameLayout: android.view.ViewParent getParent()>();

        if $r5 == null goto label10;

        interfaceinvoke $r5.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        goto label10;

     label06:
        r0.<androidx.core.widget.NestedScrollView: boolean k> = 0;

        $i0 = -1;

        r0.<androidx.core.widget.NestedScrollView: int r> = $i0;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void H()>();

        $r6 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $z0 = virtualinvoke $r6.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i0, $i1, 0, 0, 0, $i2);

        if $z0 == 0 goto label07;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label07:
        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void a(int)>(0);

        goto label10;

     label08:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = (int) $f0;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $i1 = (int) $f0;

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean w(int,int)>($i1, $i0);

        if $z0 != 0 goto label09;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = 0;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void H()>();

        goto label10;

     label09:
        r0.<androidx.core.widget.NestedScrollView: int g> = $i0;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.core.widget.NestedScrollView: int r> = $i0;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void x()>();

        $r4 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        $r6 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        virtualinvoke $r6.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $r6 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r6.<android.widget.OverScroller: boolean isFinished()>();

        $z0 = $z0 ^ 1;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = $z0;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean O(int,int)>(2, 0);

     label10:
        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        return $z0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.core.widget.NestedScrollView$c $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($z0, $i1, $i0, $i2, $i3);

        $i1 = 0;

        r0.<androidx.core.widget.NestedScrollView: boolean h> = 0;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.view.View j>;

        if $r1 == null goto label1;

        $z0 = staticinvoke <androidx.core.widget.NestedScrollView: boolean B(android.view.View,android.view.View)>($r1, r0);

        if $z0 == 0 goto label1;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.view.View j>;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void K(android.view.View)>($r1);

     label1:
        r0.<androidx.core.widget.NestedScrollView: android.view.View j> = null;

        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean i>;

        if $z0 != 0 goto label4;

        $r2 = r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$c w>;

        if $r2 == null goto label2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $r2 = r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$c w>;

        $i4 = $r2.<androidx.core.widget.NestedScrollView$c: int b>;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($i2, $i4);

        r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$c w> = null;

     label2:
        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i2 <= 0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.FrameLayout$LayoutParams) $r3;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $r4.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i1 = $i1 + $i2;

        $i2 = $r4.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i1 = $i1 + $i2;

     label3:
        $i0 = $i3 - $i0;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i0 = $i0 - $i2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i2 = $i0 - $i2;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i1 = staticinvoke <androidx.core.widget.NestedScrollView: int e(int,int,int)>($i0, $i2, $i1);

        if $i1 == $i0 goto label4;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($i0, $i1);

     label4:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void scrollTo(int,int)>($i1, $i0);

        r0.<androidx.core.widget.NestedScrollView: boolean i> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean m>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i1 != 0 goto label2;

        return;

     label2:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i1 <= 0 goto label3;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getMeasuredHeight()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i1 = $i1 - $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i1 = $i1 - $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i1 = $i1 - $i3;

        if $i2 >= $i1 goto label3;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        $i2 = $i2 + $i3;

        $i3 = $r3.<android.widget.FrameLayout$LayoutParams: int width>;

        $i0 = staticinvoke <android.widget.FrameLayout: int getChildMeasureSpec(int,int,int)>($i0, $i2, $i3);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

     label3:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        float $f0, $f1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $f1 := @parameter1: float;

        $f0 := @parameter2: float;

        $z0 := @parameter3: boolean;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f0, 1);

        $i0 = (int) $f0;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void t(int)>($i0);

        return 1;

     label1:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.core.widget.NestedScrollView r0;
        float $f0, $f1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>($f0, $f1);

        return $z0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.core.widget.NestedScrollView r0;
        int[] $r2;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void j(android.view.View,int,int,int[],int)>($r1, $i0, $i1, $r2, 0);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void D(int,int,int[])>($i2, 0, null);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1, $r2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void h(android.view.View,android.view.View,int,int)>($r1, $r2, $i0, 0);

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i0, $i1);

        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.FocusFinder $r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.Rect;

        if $i0 != 2 goto label1;

        $i0 = 130;

        goto label2;

     label1:
        if $i0 != 1 goto label2;

        $i0 = 33;

     label2:
        if $r1 != null goto label3;

        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, null, $i0);

        goto label4;

     label3:
        $r2 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r2.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>(r0, $r1, $i0);

     label4:
        if $r3 != null goto label5;

        return 0;

     label5:
        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean A(android.view.View)>($r3);

        if $z0 == 0 goto label6;

        return 0;

     label6:
        $z0 = virtualinvoke $r3.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);

        return $z0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.core.widget.NestedScrollView r0;
        androidx.core.widget.NestedScrollView$c $r2;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof androidx.core.widget.NestedScrollView$c;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (androidx.core.widget.NestedScrollView$c) $r1;

        $r1 = virtualinvoke $r2.<android.view.View$BaseSavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$c w> = $r2;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void requestLayout()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        androidx.core.widget.NestedScrollView$c $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        $r1 = new androidx.core.widget.NestedScrollView$c;

        specialinvoke $r1.<androidx.core.widget.NestedScrollView$c: void <init>(android.os.Parcelable)>($r2);

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $r1.<androidx.core.widget.NestedScrollView$c: int b> = $i0;

        return $r1;
    }

    protected void onScrollChanged(int, int, int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        androidx.core.widget.NestedScrollView$b $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onScrollChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$b A>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<androidx.core.widget.NestedScrollView$b: void a(androidx.core.widget.NestedScrollView,int,int,int,int)>(r0, $i0, $i1, $i2, $i3);

     label1:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.graphics.Rect $r2;
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i2 := @parameter0: int;

        $i3 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View findFocus()>();

        if $r1 == null goto label2;

        if r0 != $r1 goto label1;

        return;

     label1:
        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean C(android.view.View,int,int)>($r1, 0, $i1);

        if $z0 == 0 goto label2;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke r0.<android.widget.FrameLayout: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int f(android.graphics.Rect)>($r2);

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void l(int)>($i2);

     label2:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.core.widget.NestedScrollView r0;
        int $i0;
        android.view.View $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean o(android.view.View,android.view.View,int,int)>($r2, $r1, $i0, 0);

        return $z0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.view.View $r1;
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void i(android.view.View,int)>($r1, 0);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.ViewParent $r8;
        androidx.core.widget.NestedScrollView r0;
        android.view.VelocityTracker $r9;
        int[] $r6, $r7;
        android.view.MotionEvent $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.EdgeEffect $r10;
        java.lang.String $r5;
        boolean $z0, $z1;
        android.widget.OverScroller $r3;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r4, $r11;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.MotionEvent;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void z()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label01;

        r0.<androidx.core.widget.NestedScrollView: int u> = 0;

     label01:
        $r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);

        $i1 = r0.<androidx.core.widget.NestedScrollView: int u>;

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        if $i0 == 0 goto label21;

        if $i0 == 1 goto label18;

        if $i0 == 2 goto label05;

        if $i0 == 3 goto label03;

        if $i0 == 5 goto label02;

        if $i0 != 6 goto label25;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void E(android.view.MotionEvent)>($r1);

        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $i0 = (int) $f0;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i0;

        goto label25;

     label02:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $i1 = (int) $f0;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i1;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i0);

        r0.<androidx.core.widget.NestedScrollView: int r> = $i0;

        goto label25;

     label03:
        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        if $z0 == 0 goto label04;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 <= 0 goto label04;

        $r3 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $z0 = virtualinvoke $r3.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i0, $i1, 0, 0, 0, $i2);

        if $z0 == 0 goto label04;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label04:
        r0.<androidx.core.widget.NestedScrollView: int r> = -1;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void p()>();

        goto label25;

     label05:
        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        if $i0 != -1 goto label06;

        $r11 = new java.lang.StringBuilder;

        $r4 = $r11;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");

        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r5);

        goto label25;

     label06:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $i2 = (int) $f0;

        $i1 = r0.<androidx.core.widget.NestedScrollView: int g>;

        $i1 = $i1 - $i2;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $r7 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean g(int,int,int[],int[],int)>(0, $i1, $r6, $r7, 0);

        if $z0 == 0 goto label07;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $i3 = $r6[1];

        $i1 = $i1 - $i3;

        $i3 = r0.<androidx.core.widget.NestedScrollView: int u>;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        $i4 = $r6[1];

        $i3 = $i3 + $i4;

        r0.<androidx.core.widget.NestedScrollView: int u> = $i3;

     label07:
        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        if $z0 != 0 goto label10;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i4 = r0.<androidx.core.widget.NestedScrollView: int o>;

        if $i3 <= $i4 goto label10;

        $r8 = virtualinvoke r0.<android.widget.FrameLayout: android.view.ViewParent getParent()>();

        if $r8 == null goto label08;

        interfaceinvoke $r8.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label08:
        r0.<androidx.core.widget.NestedScrollView: boolean k> = 1;

        if $i1 <= 0 goto label09;

        $i3 = r0.<androidx.core.widget.NestedScrollView: int o>;

        $i1 = $i1 - $i3;

        goto label10;

     label09:
        $i3 = r0.<androidx.core.widget.NestedScrollView: int o>;

        $i1 = $i1 + $i3;

     label10:
        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean k>;

        if $z0 == 0 goto label25;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        $i3 = $r6[1];

        $i2 = $i2 - $i3;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i2;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getOverScrollMode()>();

        if $i4 == 0 goto label12;

        if $i4 != 1 goto label11;

        if $i2 > 0 goto label12;

     label11:
        $z0 = 0;

        goto label13;

     label12:
        $z0 = 1;

     label13:
        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $z1 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean F(int,int,int,int,int,int,int,int,boolean)>(0, $i1, 0, $i4, 0, $i2, 0, 0, 1);

        if $z1 == 0 goto label14;

        $z1 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean v(int)>(0);

        if $z1 != 0 goto label14;

        $r9 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        virtualinvoke $r9.<android.view.VelocityTracker: void clear()>();

     label14:
        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i4 = $i4 - $i3;

        $i5 = $i1 - $i4;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $r6[1] = 0;

        $r7 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void k(int,int,int,int,int[],int,int[])>(0, $i4, 0, $i5, $r7, 0, $r6);

        $i4 = r0.<androidx.core.widget.NestedScrollView: int g>;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] s>;

        $i5 = $r6[1];

        $i4 = $i4 - $i5;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i4;

        $i4 = r0.<androidx.core.widget.NestedScrollView: int u>;

        $i5 = $r6[1];

        $i4 = $i4 + $i5;

        r0.<androidx.core.widget.NestedScrollView: int u> = $i4;

        if $z0 == 0 goto label25;

        $r6 = r0.<androidx.core.widget.NestedScrollView: int[] t>;

        $i4 = $r6[1];

        $i1 = $i1 - $i4;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void q()>();

        $i3 = $i3 + $i1;

        if $i3 >= 0 goto label15;

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i0);

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getWidth()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        staticinvoke <androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)>($r10, $f0, $f1);

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $z0 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label16;

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        virtualinvoke $r10.<android.widget.EdgeEffect: void onRelease()>();

        goto label16;

     label15:
        if $i3 <= $i2 goto label16;

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $f0 = (float) $i1;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i0);

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getWidth()>();

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f1 = 1.0F - $f1;

        staticinvoke <androidx.core.widget.d: void a(android.widget.EdgeEffect,float,float)>($r10, $f0, $f1);

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        $z0 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label16;

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        virtualinvoke $r10.<android.widget.EdgeEffect: void onRelease()>();

     label16:
        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect e>;

        if $r10 == null goto label25;

        $z0 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 == 0 goto label17;

        $r10 = r0.<androidx.core.widget.NestedScrollView: android.widget.EdgeEffect f>;

        $z0 = virtualinvoke $r10.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label25;

     label17:
        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

        goto label25;

     label18:
        $r9 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        $i0 = r0.<androidx.core.widget.NestedScrollView: int q>;

        $f0 = (float) $i0;

        virtualinvoke $r9.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f0);

        $i0 = r0.<androidx.core.widget.NestedScrollView: int r>;

        $f0 = virtualinvoke $r9.<android.view.VelocityTracker: float getYVelocity(int)>($i0);

        $i0 = (int) $f0;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i2 = r0.<androidx.core.widget.NestedScrollView: int p>;

        if $i1 <= $i2 goto label19;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f0);

        if $z0 != 0 goto label20;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f0, 1);

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void t(int)>($i0);

        goto label20;

     label19:
        $r3 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        $i2 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: int getScrollRange()>();

        $z0 = virtualinvoke $r3.<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>($i0, $i1, 0, 0, 0, $i2);

        if $z0 == 0 goto label20;

        staticinvoke <b.h.l.s: void R(android.view.View)>(r0);

     label20:
        r0.<androidx.core.widget.NestedScrollView: int r> = -1;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void p()>();

        goto label25;

     label21:
        $i0 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i0 != 0 goto label22;

        return 0;

     label22:
        $r3 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r3.<android.widget.OverScroller: boolean isFinished()>();

        $z0 = $z0 ^ 1;

        r0.<androidx.core.widget.NestedScrollView: boolean k> = $z0;

        if $z0 == 0 goto label23;

        $r8 = virtualinvoke r0.<android.widget.FrameLayout: android.view.ViewParent getParent()>();

        if $r8 == null goto label23;

        interfaceinvoke $r8.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label23:
        $r3 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $z0 = virtualinvoke $r3.<android.widget.OverScroller: boolean isFinished()>();

        if $z0 != 0 goto label24;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void b()>();

     label24:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = (int) $f0;

        r0.<androidx.core.widget.NestedScrollView: int g> = $i0;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<androidx.core.widget.NestedScrollView: int r> = $i0;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean O(int,int)>(2, 0);

     label25:
        $r9 = r0.<androidx.core.widget.NestedScrollView: android.view.VelocityTracker l>;

        if $r9 == null goto label26;

        virtualinvoke $r9.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r2);

     label26:
        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    public boolean r(android.view.KeyEvent)
    {
        android.graphics.Rect $r2;
        android.view.KeyEvent $r1;
        androidx.core.widget.NestedScrollView r0;
        android.view.FocusFinder $r5;
        short $s0;
        int $i1;
        android.view.View $r3, $r4;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean d()>();

        $s0 = 130;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.<android.widget.FrameLayout: boolean isFocused()>();

        if $z0 == 0 goto label9;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 == 4 goto label9;

        $r3 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View findFocus()>();

        $r4 = $r3;

        if $r3 != r0 goto label1;

        $r4 = null;

     label1:
        $r5 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        $r3 = virtualinvoke $r5.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, $r4, 130);

        if $r3 == null goto label9;

        if $r3 == r0 goto label9;

        $z0 = virtualinvoke $r3.<android.view.View: boolean requestFocus(int)>(130);

        if $z0 == 0 goto label9;

        return 1;

     label2:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label9;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 == 19 goto label7;

        if $i1 == 20 goto label5;

        if $i1 == 62 goto label3;

        return 0;

     label3:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z0 == 0 goto label4;

        $s0 = 33;

     label4:
        virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean G(int)>($s0);

        return 0;

     label5:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean c(int)>(130);

        return $z0;

     label6:
        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean u(int)>(130);

        return $z0;

     label7:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();

        if $z0 != 0 goto label8;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean c(int)>(33);

        return $z0;

     label8:
        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean u(int)>(33);

        return $z0;

     label9:
        return 0;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.View $r1, $r2;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $z0 = r0.<androidx.core.widget.NestedScrollView: boolean h>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void K(android.view.View)>($r2);

        goto label2;

     label1:
        r0.<androidx.core.widget.NestedScrollView: android.view.View j> = $r2;

     label2:
        specialinvoke r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r2 := @parameter0: android.view.View;

        $r1 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r2.<android.view.View: int getScrollX()>();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r2.<android.view.View: int getScrollY()>();

        $i1 = $i1 - $i2;

        virtualinvoke $r1.<android.graphics.Rect: void offset(int,int)>($i0, $i1);

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean L(android.graphics.Rect,boolean)>($r1, $z0);

        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void H()>();

        specialinvoke r0.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>(1);

        return;
    }

    public void requestLayout()
    {
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        r0.<androidx.core.widget.NestedScrollView: boolean h> = 1;

        specialinvoke r0.<android.widget.FrameLayout: void requestLayout()>();

        return;
    }

    public void scrollTo(int, int)
    {
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View $r1;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i2 <= 0 goto label2;

        $r1 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>(0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getWidth()>();

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingLeft()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i4 = $r3.<android.widget.FrameLayout$LayoutParams: int leftMargin>;

        $i3 = $i3 + $i4;

        $i4 = $r3.<android.widget.FrameLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 + $i4;

        $i4 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $i5 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingTop()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i4 = $i4 - $i5;

        $i5 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i6 = $r3.<android.widget.FrameLayout$LayoutParams: int topMargin>;

        $i5 = $i5 + $i6;

        $i6 = $r3.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i5 = $i5 + $i6;

        $i0 = staticinvoke <androidx.core.widget.NestedScrollView: int e(int,int,int)>($i0, $i2, $i3);

        $i1 = staticinvoke <androidx.core.widget.NestedScrollView: int e(int,int,int)>($i1, $i4, $i5);

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        if $i0 != $i2 goto label1;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        if $i1 == $i2 goto label2;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i0, $i1);

     label2:
        return;
    }

    public void setFillViewport(boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        boolean $z0, $z1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $z1 = r0.<androidx.core.widget.NestedScrollView: boolean m>;

        if $z0 == $z1 goto label1;

        r0.<androidx.core.widget.NestedScrollView: boolean m> = $z0;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void requestLayout()>();

     label1:
        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        virtualinvoke $r1.<b.h.l.k: void n(boolean)>($z0);

        return;
    }

    public void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$b)
    {
        androidx.core.widget.NestedScrollView r0;
        androidx.core.widget.NestedScrollView$b $r1;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $r1 := @parameter0: androidx.core.widget.NestedScrollView$b;

        r0.<androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$b A> = $r1;

        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $z0 := @parameter0: boolean;

        r0.<androidx.core.widget.NestedScrollView: boolean n> = $z0;

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        return 1;
    }

    public boolean startNestedScroll(int)
    {
        int $i0;
        androidx.core.widget.NestedScrollView r0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<androidx.core.widget.NestedScrollView: boolean O(int,int)>($i0, 0);

        return $z0;
    }

    public void stopNestedScroll()
    {
        androidx.core.widget.NestedScrollView r0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        virtualinvoke r0.<androidx.core.widget.NestedScrollView: void a(int)>(0);

        return;
    }

    public void t(int)
    {
        android.widget.OverScroller $r1;
        androidx.core.widget.NestedScrollView r0;
        int $i0, $i1, $i2;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i1 <= 0 goto label1;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.widget.OverScroller d>;

        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollX()>();

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getScrollY()>();

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>($i1, $i2, 0, $i0, 0, 0, -2147483648, 2147483647, 0, 0);

        specialinvoke r0.<androidx.core.widget.NestedScrollView: void I(boolean)>(1);

     label1:
        return;
    }

    public boolean u(int)
    {
        android.graphics.Rect $r1;
        androidx.core.widget.NestedScrollView r0;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.widget.FrameLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        if $i0 != 130 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke r0.<android.widget.FrameLayout: int getHeight()>();

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $r1.<android.graphics.Rect: int top> = 0;

        $r1.<android.graphics.Rect: int bottom> = $i1;

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r0.<android.widget.FrameLayout: int getChildCount()>();

        if $i2 <= 0 goto label3;

        $i2 = $i2 - 1;

        $r2 = virtualinvoke r0.<android.widget.FrameLayout: android.view.View getChildAt(int)>($i2);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.FrameLayout$LayoutParams) $r3;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $i3 = $r4.<android.widget.FrameLayout$LayoutParams: int bottomMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke r0.<android.widget.FrameLayout: int getPaddingBottom()>();

        $i2 = $i2 + $i3;

        $r1.<android.graphics.Rect: int bottom> = $i2;

        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $i2 - $i1;

        $r1.<android.graphics.Rect: int top> = $i1;

     label3:
        $r1 = r0.<androidx.core.widget.NestedScrollView: android.graphics.Rect c>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i2 = $r1.<android.graphics.Rect: int bottom>;

        $z0 = specialinvoke r0.<androidx.core.widget.NestedScrollView: boolean J(int,int,int)>($i0, $i1, $i2);

        return $z0;
    }

    public boolean v(int)
    {
        androidx.core.widget.NestedScrollView r0;
        b.h.l.k $r1;
        int $i0;
        boolean $z0;

        r0 := @this: androidx.core.widget.NestedScrollView;

        $i0 := @parameter0: int;

        $r1 = r0.<androidx.core.widget.NestedScrollView: b.h.l.k y>;

        $z0 = virtualinvoke $r1.<b.h.l.k: boolean l(int)>($i0);

        return $z0;
    }
}
