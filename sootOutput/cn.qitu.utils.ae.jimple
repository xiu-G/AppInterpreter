public final class cn.qitu.utils.ae extends java.lang.Object
{
    private static final java.util.regex.Pattern a;
    private static final java.text.SimpleDateFormat b;
    private static final java.text.SimpleDateFormat c;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r1;
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*");

        <cn.qitu.utils.ae: java.util.regex.Pattern a> = $r0;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        <cn.qitu.utils.ae: java.text.SimpleDateFormat b> = $r1;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        <cn.qitu.utils.ae: java.text.SimpleDateFormat c> = $r1;

        return;
    }

    public static java.lang.String a(long)
    {
        java.lang.Float $r5;
        java.text.DecimalFormat $r0, $r3;
        long $l0;
        byte $b1;
        int $i2;
        float $f0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r2;
        double $d0;

        $l0 := @parameter0: long;

        $r3 = new java.text.DecimalFormat;

        $r0 = $r3;

        specialinvoke $r3.<java.text.DecimalFormat: void <init>(java.lang.String)>("###.#");

        $b1 = $l0 cmp 1048576L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        $f0 = (float) $l0;

        $f0 = $f0 / 1024.0F;

        $b1 = $f0 cmpl 100.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        $i2 = (int) $f0;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MB");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r4 = new java.lang.StringBuilder;

        $r5 = new java.lang.Float;

        specialinvoke $r5.<java.lang.Float: void <init>(float)>($f0);

        $d0 = virtualinvoke $r5.<java.lang.Float: double doubleValue()>();

        $r2 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MB");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $f0 = (float) $l0;

        $f0 = $f0 / 1048576.0F;

        $b1 = $f0 cmpl 10.0F;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        $i2 = (int) $f0;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GB");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label3:
        $r4 = new java.lang.StringBuilder;

        $r5 = new java.lang.Float;

        specialinvoke $r5.<java.lang.Float: void <init>(float)>($f0);

        $d0 = virtualinvoke $r5.<java.lang.Float: double doubleValue()>();

        $r2 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GB");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String b(long)
    {
        java.util.Date $r2;
        java.text.SimpleDateFormat $r1;
        long $l0;
        java.lang.String $r0;

        $l0 := @parameter0: long;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd hh:mm");

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r0 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        return $r0;
    }
}
