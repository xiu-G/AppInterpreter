public class com.nostra13.universalimageloader.core.assist.FlushedInputStream extends java.io.FilterInputStream
{

    public void <init>(java.io.InputStream)
    {
        com.nostra13.universalimageloader.core.assist.FlushedInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: com.nostra13.universalimageloader.core.assist.FlushedInputStream;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public long skip(long)
    {
        com.nostra13.universalimageloader.core.assist.FlushedInputStream r0;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        int $i5;
        java.io.InputStream $r1;

        r0 := @this: com.nostra13.universalimageloader.core.assist.FlushedInputStream;

        $l0 := @parameter0: long;

        $l1 = 0L;

     label1:
        $b2 = $l1 cmp $l0;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label3;

        $r1 = r0.<com.nostra13.universalimageloader.core.assist.FlushedInputStream: java.io.InputStream in>;

        $l3 = $l0 - $l1;

        $l3 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l3);

        $l4 = $l3;

        $b2 = $l3 cmp 0L;

        if $b2 != 0 goto label2;

        $i5 = virtualinvoke r0.<com.nostra13.universalimageloader.core.assist.FlushedInputStream: int read()>();

        if $i5 < 0 goto label3;

        $l4 = 1L;

     label2:
        $l1 = $l4 + $l1;

        goto label1;

     label3:
        return $l1;
    }
}
