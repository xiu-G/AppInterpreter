public abstract class proguard.classfile.attribute.'annotation'.AnnotationsAttribute extends proguard.classfile.attribute.Attribute
{
    public proguard.classfile.attribute.'annotation'.Annotation[] annotations;
    public int u2annotationsCount;

    protected void <init>()
    {
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute r0;

        r0 := @this: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>()>();

        return;
    }

    protected void <init>(int, int, proguard.classfile.attribute.'annotation'.Annotation[])
    {
        proguard.classfile.attribute.'annotation'.Annotation[] $r1;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute r0;
        int $i0, $i1;

        r0 := @this: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: proguard.classfile.attribute.'annotation'.Annotation[];

        specialinvoke r0.<proguard.classfile.attribute.Attribute: void <init>(int)>($i0);

        r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount> = 0;

        r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations> = $r1;

        return;
    }

    public void annotationsAccept(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r5;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute r0;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r3;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.'annotation'.Annotation[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;

        r0 := @this: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        if $i0 >= $i1 goto label2;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations>;

        $r5 = $r4[$i0];

        interfaceinvoke $r3.<proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r2, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void annotationsAccept(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)
    {
        proguard.classfile.attribute.'annotation'.Annotation $r5;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute r0;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r3;
        proguard.classfile.attribute.'annotation'.Annotation[] $r4;
        proguard.classfile.Clazz $r1;
        int $i0, $i1;
        proguard.classfile.Method $r2;

        r0 := @this: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        if $i0 >= $i1 goto label2;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations>;

        $r5 = $r4[$i0];

        interfaceinvoke $r3.<proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r2, $r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void annotationsAccept(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)
    {
        proguard.classfile.attribute.'annotation'.Annotation[] $r3;
        proguard.classfile.attribute.'annotation'.Annotation $r4;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.AnnotationsAttribute r0;
        int $i0, $i1;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r2;

        r0 := @this: proguard.classfile.attribute.'annotation'.AnnotationsAttribute;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor;

        $i0 = 0;

     label1:
        $i1 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: int u2annotationsCount>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<proguard.classfile.attribute.'annotation'.AnnotationsAttribute: proguard.classfile.attribute.'annotation'.Annotation[] annotations>;

        $r4 = $r3[$i0];

        interfaceinvoke $r2.<proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor: void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.Annotation)>($r1, $r4);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
