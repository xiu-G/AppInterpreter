public class proguard.obfuscate.AttributeShrinker extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.visitor.ClassVisitor, proguard.classfile.visitor.MemberVisitor, proguard.classfile.attribute.visitor.AttributeVisitor
{

    public void <init>()
    {
        proguard.obfuscate.AttributeShrinker r0;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        return;
    }

    private static int shrinkArray(proguard.classfile.VisitorAccepter[], int)
    {
        proguard.classfile.VisitorAccepter[] $r0;
        proguard.classfile.VisitorAccepter $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: proguard.classfile.VisitorAccepter[];

        $i0 := @parameter1: int;

        $i1 = 0;

        $i2 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        $z0 = staticinvoke <proguard.obfuscate.AttributeUsageMarker: boolean isUsed(proguard.classfile.VisitorAccepter)>($r1);

        if $z0 == 0 goto label2;

        $r1 = $r0[$i1];

        $r0[$i2] = $r1;

        $i2 = $i2 + 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $i1 = $i2;

     label4:
        if $i1 >= $i0 goto label5;

        $r0[$i1] = null;

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return $i2;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.obfuscate.AttributeShrinker r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitCodeAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute)
    {
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        int $i0;
        proguard.classfile.attribute.Attribute[] $r4;
        proguard.classfile.Method $r2;
        proguard.obfuscate.AttributeShrinker r0;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $r4 = $r3.<proguard.classfile.attribute.CodeAttribute: proguard.classfile.attribute.Attribute[] attributes>;

        $i0 = $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount>;

        $i0 = staticinvoke <proguard.obfuscate.AttributeShrinker: int shrinkArray(proguard.classfile.VisitorAccepter[],int)>($r4, $i0);

        $r3.<proguard.classfile.attribute.CodeAttribute: int u2attributesCount> = $i0;

        return;
    }

    public void visitLibraryClass(proguard.classfile.LibraryClass)
    {
        proguard.classfile.LibraryClass $r1;
        proguard.obfuscate.AttributeShrinker r0;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        return;
    }

    public void visitProgramClass(proguard.classfile.ProgramClass)
    {
        int $i0;
        proguard.classfile.attribute.Attribute[] $r2;
        proguard.obfuscate.AttributeShrinker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 = $r1.<proguard.classfile.ProgramClass: proguard.classfile.attribute.Attribute[] attributes>;

        $i0 = $r1.<proguard.classfile.ProgramClass: int u2attributesCount>;

        $i0 = staticinvoke <proguard.obfuscate.AttributeShrinker: int shrinkArray(proguard.classfile.VisitorAccepter[],int)>($r2, $i0);

        $r1.<proguard.classfile.ProgramClass: int u2attributesCount> = $i0;

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void fieldsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void methodsAccept(proguard.classfile.visitor.MemberVisitor)>(r0);

        virtualinvoke $r1.<proguard.classfile.ProgramClass: void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor)>(r0);

        return;
    }

    public void visitProgramMember(proguard.classfile.ProgramClass, proguard.classfile.ProgramMember)
    {
        proguard.classfile.ProgramMember $r2;
        int $i0;
        proguard.classfile.attribute.Attribute[] $r3;
        proguard.obfuscate.AttributeShrinker r0;
        proguard.classfile.ProgramClass $r1;

        r0 := @this: proguard.obfuscate.AttributeShrinker;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMember;

        $r3 = $r2.<proguard.classfile.ProgramMember: proguard.classfile.attribute.Attribute[] attributes>;

        $i0 = $r2.<proguard.classfile.ProgramMember: int u2attributesCount>;

        $i0 = staticinvoke <proguard.obfuscate.AttributeShrinker: int shrinkArray(proguard.classfile.VisitorAccepter[],int)>($r3, $i0);

        $r2.<proguard.classfile.ProgramMember: int u2attributesCount> = $i0;

        virtualinvoke $r2.<proguard.classfile.ProgramMember: void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor)>($r1, r0);

        return;
    }
}
