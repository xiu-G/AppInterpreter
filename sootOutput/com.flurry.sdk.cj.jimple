public class com.flurry.sdk.cj extends java.lang.Object
{
    private static final java.lang.String b;
    byte[] a;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lcom/flurry/sdk/cj;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.flurry.sdk.cj: java.lang.String b> = $r0;

        return;
    }

    public void <init>(com.flurry.sdk.ck)
    {
        java.lang.Throwable $r13, $r14;
        byte[] $r12;
        java.io.ByteArrayOutputStream $r2, $r20;
        long $l0;
        java.io.DataOutputStream $r3, $r4, $r21;
        byte $b2;
        java.lang.Long $r7;
        java.util.Map $r8;
        int $i1, $i3, $i4, $i5;
        java.lang.String $r5;
        boolean $z0;
        double $d0;
        java.util.Map$Entry $r17;
        com.flurry.sdk.ca $r11;
        java.util.Iterator $r16;
        com.flurry.sdk.cb $r19;
        java.util.Set $r15;
        java.util.List $r9;
        com.flurry.sdk.bx$a $r18;
        float $f0;
        java.lang.Object $r10;
        android.location.Location $r6;
        com.flurry.sdk.ck $r1;
        com.flurry.sdk.cj r0;

        r0 := @this: com.flurry.sdk.cj;

        $r1 := @parameter0: com.flurry.sdk.ck;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = null;

     label01:
        $r20 = new java.io.ByteArrayOutputStream;

     label02:
        $r2 = $r20;

     label03:
        specialinvoke $r20.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r21 = new java.io.DataOutputStream;

     label05:
        $r4 = $r21;

     label06:
        specialinvoke $r21.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

     label07:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(1);

        $r5 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.String a()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $l0 = virtualinvoke $r1.<com.flurry.sdk.ck: long b()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $l0 = virtualinvoke $r1.<com.flurry.sdk.ck: long c()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $l0 = virtualinvoke $r1.<com.flurry.sdk.ck: long d()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $r5 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.String e()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r5 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.String f()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $i1 = virtualinvoke $r1.<com.flurry.sdk.ck: int g()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeByte(int)>($i1);

        $r5 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.String h()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r6 = virtualinvoke $r1.<com.flurry.sdk.ck: android.location.Location i()>();

     label08:
        if $r6 != null goto label40;

     label09:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label10:
        $i1 = virtualinvoke $r1.<com.flurry.sdk.ck: int j()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label11:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeByte(int)>(-1);

     label12:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeByte(int)>(-1);

        $b2 = virtualinvoke $r1.<com.flurry.sdk.ck: byte k()>();

     label13:
        $i1 = (int) $b2;

     label14:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeByte(int)>($i1);

        $r7 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.Long l()>();

     label15:
        if $r7 != null goto label46;

     label16:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeBoolean(boolean)>(0);

     label17:
        $r8 = virtualinvoke $r1.<com.flurry.sdk.ck: java.util.Map m()>();

     label18:
        if $r8 != null goto label49;

     label19:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(0);

     label20:
        $r9 = virtualinvoke $r1.<com.flurry.sdk.ck: java.util.List n()>();

     label21:
        if $r9 != null goto label60;

     label22:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(0);

     label23:
        $z0 = virtualinvoke $r1.<com.flurry.sdk.ck: boolean o()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

        $r9 = virtualinvoke $r1.<com.flurry.sdk.ck: java.util.List q()>();

     label24:
        if $r9 == null goto label73;

        $i3 = 0;

        $i1 = 0;

        $i4 = 0;

     label25:
        $i5 = interfaceinvoke $r9.<java.util.List: int size()>();

     label26:
        if $i3 >= $i5 goto label33;

     label27:
        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);

     label28:
        $r11 = (com.flurry.sdk.ca) $r10;

     label29:
        $i5 = virtualinvoke $r11.<com.flurry.sdk.ca: int a()>();

     label30:
        $i4 = $i4 + $i5;

        if $i4 <= 160000 goto label67;

     label31:
        $r5 = <com.flurry.sdk.cj: java.lang.String b>;

     label32:
        staticinvoke <com.flurry.sdk.ex: void a(int,java.lang.String,java.lang.String)>(5, $r5, "Error Log size exceeded. No more event details logged.");

     label33:
        $i4 = virtualinvoke $r1.<com.flurry.sdk.ck: int p()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i4);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>($i1);

     label34:
        $i4 = 0;

     label35:
        if $i4 >= $i1 goto label68;

     label36:
        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i4);

     label37:
        $r11 = (com.flurry.sdk.ca) $r10;

     label38:
        $r12 = virtualinvoke $r11.<com.flurry.sdk.ca: byte[] b()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r12);

     label39:
        $i4 = $i4 + 1;

        goto label35;

     label40:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $r6 = virtualinvoke $r1.<com.flurry.sdk.ck: android.location.Location i()>();

        $d0 = virtualinvoke $r6.<android.location.Location: double getLatitude()>();

        $d0 = virtualinvoke r0.<com.flurry.sdk.cj: double a(double)>($d0);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeDouble(double)>($d0);

        $r6 = virtualinvoke $r1.<com.flurry.sdk.ck: android.location.Location i()>();

        $d0 = virtualinvoke $r6.<android.location.Location: double getLongitude()>();

        $d0 = virtualinvoke r0.<com.flurry.sdk.cj: double a(double)>($d0);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeDouble(double)>($d0);

        $r6 = virtualinvoke $r1.<com.flurry.sdk.ck: android.location.Location i()>();

        $f0 = virtualinvoke $r6.<android.location.Location: float getAccuracy()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeFloat(float)>($f0);

     label41:
        goto label10;

     label42:
        $r13 := @caughtexception;

        $r3 = $r4;

     label43:
        $r5 = <com.flurry.sdk.cj: java.lang.String b>;

        staticinvoke <com.flurry.sdk.ex: void a(int,java.lang.String,java.lang.String,java.lang.Throwable)>(6, $r5, "", $r13);

        throw $r13;

     label44:
        $r14 := @caughtexception;

        $r4 = $r3;

     label45:
        staticinvoke <com.flurry.sdk.fh: void a(java.io.Closeable)>($r4);

        throw $r14;

     label46:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeBoolean(boolean)>(1);

        $r7 = virtualinvoke $r1.<com.flurry.sdk.ck: java.lang.Long l()>();

        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeLong(long)>($l0);

     label47:
        goto label17;

     label48:
        $r14 := @caughtexception;

        goto label45;

     label49:
        $i1 = interfaceinvoke $r8.<java.util.Map: int size()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $r15 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label50:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label51:
        if $z0 == 0 goto label20;

     label52:
        $r10 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

     label53:
        $r17 = (java.util.Map$Entry) $r10;

     label54:
        $r10 = interfaceinvoke $r17.<java.util.Map$Entry: java.lang.Object getKey()>();

     label55:
        $r5 = (java.lang.String) $r10;

     label56:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);

        $r10 = interfaceinvoke $r17.<java.util.Map$Entry: java.lang.Object getValue()>();

     label57:
        $r18 = (com.flurry.sdk.bx$a) $r10;

        $i1 = $r18.<com.flurry.sdk.bx$a: int a>;

     label58:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label59:
        goto label50;

     label60:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>($i1);

        $r16 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label61:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label62:
        if $z0 == 0 goto label23;

     label63:
        $r10 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

     label64:
        $r19 = (com.flurry.sdk.cb) $r10;

     label65:
        $r12 = virtualinvoke $r19.<com.flurry.sdk.cb: byte[] e()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r12);

     label66:
        goto label61;

     label67:
        $i1 = $i1 + 1;

        $i3 = $i3 + 1;

        goto label25;

     label68:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(0);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeShort(int)>(0);

        $r12 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label69:
        r0.<com.flurry.sdk.cj: byte[] a> = $r12;

     label70:
        staticinvoke <com.flurry.sdk.fh: void a(java.io.Closeable)>($r4);

        return;

     label71:
        $r14 := @caughtexception;

        $r4 = null;

        goto label45;

     label72:
        $r13 := @caughtexception;

        goto label43;

     label73:
        $i1 = 0;

        goto label33;

        catch java.io.IOException from label03 to label04 with label72;
        catch java.io.IOException from label06 to label07 with label72;
        catch java.lang.Throwable from label01 to label02 with label71;
        catch java.lang.Throwable from label03 to label05 with label71;
        catch java.lang.Throwable from label06 to label07 with label71;
        catch java.io.IOException from label07 to label08 with label42;
        catch java.io.IOException from label09 to label11 with label42;
        catch java.io.IOException from label11 to label12 with label42;
        catch java.io.IOException from label12 to label13 with label42;
        catch java.io.IOException from label14 to label15 with label42;
        catch java.io.IOException from label16 to label18 with label42;
        catch java.io.IOException from label19 to label21 with label42;
        catch java.io.IOException from label22 to label24 with label42;
        catch java.io.IOException from label25 to label26 with label42;
        catch java.io.IOException from label27 to label28 with label42;
        catch java.io.IOException from label29 to label30 with label42;
        catch java.io.IOException from label32 to label33 with label42;
        catch java.io.IOException from label33 to label34 with label42;
        catch java.io.IOException from label36 to label37 with label42;
        catch java.io.IOException from label38 to label39 with label42;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label07 to label08 with label48;
        catch java.lang.Throwable from label09 to label11 with label48;
        catch java.lang.Throwable from label11 to label12 with label48;
        catch java.lang.Throwable from label12 to label13 with label48;
        catch java.lang.Throwable from label14 to label15 with label48;
        catch java.lang.Throwable from label16 to label18 with label48;
        catch java.lang.Throwable from label19 to label21 with label48;
        catch java.lang.Throwable from label22 to label24 with label48;
        catch java.lang.Throwable from label25 to label26 with label48;
        catch java.lang.Throwable from label27 to label30 with label48;
        catch java.lang.Throwable from label31 to label33 with label48;
        catch java.lang.Throwable from label33 to label34 with label48;
        catch java.lang.Throwable from label36 to label39 with label48;
        catch java.lang.Throwable from label40 to label41 with label48;
        catch java.lang.Throwable from label43 to label44 with label44;
        catch java.io.IOException from label46 to label47 with label42;
        catch java.io.IOException from label49 to label51 with label42;
        catch java.io.IOException from label52 to label53 with label42;
        catch java.io.IOException from label54 to label55 with label42;
        catch java.io.IOException from label56 to label57 with label42;
        catch java.io.IOException from label58 to label59 with label42;
        catch java.io.IOException from label60 to label62 with label42;
        catch java.io.IOException from label63 to label64 with label42;
        catch java.io.IOException from label65 to label66 with label42;
        catch java.io.IOException from label68 to label69 with label42;
        catch java.lang.Throwable from label46 to label47 with label48;
        catch java.lang.Throwable from label49 to label51 with label48;
        catch java.lang.Throwable from label52 to label59 with label48;
        catch java.lang.Throwable from label60 to label62 with label48;
        catch java.lang.Throwable from label63 to label66 with label48;
        catch java.lang.Throwable from label68 to label70 with label48;
    }

    public void <init>(byte[])
    {
        byte[] $r1;
        com.flurry.sdk.cj r0;

        r0 := @this: com.flurry.sdk.cj;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.flurry.sdk.cj: byte[] a> = $r1;

        return;
    }

    double a(double)
    {
        long $l0;
        com.flurry.sdk.cj r0;
        double $d0;

        r0 := @this: com.flurry.sdk.cj;

        $d0 := @parameter0: double;

        $d0 = $d0 * 1000.0;

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        return $d0;
    }

    public byte[] a()
    {
        byte[] r1;
        com.flurry.sdk.cj r0;

        r0 := @this: com.flurry.sdk.cj;

        r1 = r0.<com.flurry.sdk.cj: byte[] a>;

        return r1;
    }
}
