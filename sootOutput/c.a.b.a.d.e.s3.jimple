public abstract class c.a.b.a.d.e.s3 extends c.a.b.a.d.e.d3
{
    private static final java.util.logging.Logger b;
    private static final boolean c;
    c.a.b.a.d.e.u3 a;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;
        boolean $z0;

        $r0 = class "Lc/a/b/a/d/e/s3;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <c.a.b.a.d.e.s3: java.util.logging.Logger b> = $r2;

        $z0 = staticinvoke <c.a.b.a.d.e.h7: boolean m()>();

        <c.a.b.a.d.e.s3: boolean c> = $z0;

        return;
    }

    private void <init>()
    {
        c.a.b.a.d.e.s3 r0;

        r0 := @this: c.a.b.a.d.e.s3;

        specialinvoke r0.<c.a.b.a.d.e.d3: void <init>()>();

        return;
    }

    void <init>(c.a.b.a.d.e.r3)
    {
        c.a.b.a.d.e.r3 $r1;
        c.a.b.a.d.e.s3 r0;

        r0 := @this: c.a.b.a.d.e.s3;

        $r1 := @parameter0: c.a.b.a.d.e.r3;

        specialinvoke r0.<c.a.b.a.d.e.s3: void <init>()>();

        return;
    }

    public static int A(float)
    {
        float $f0;

        $f0 := @parameter0: float;

        return 4;
    }

    public static int A0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int B(int, double)
    {
        int $i0;
        double $d0;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i0 = $i0 + 8;

        return $i0;
    }

    public static int B0(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i1);

        $i1 = $i1 + 4;

        return $i1;
    }

    public static int C(int, float)
    {
        int $i0;
        float $f0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i0 = $i0 + 4;

        return $i0;
    }

    public static int C0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int l0(int)>($i0);

        return $i0;
    }

    public static int D(int, c.a.b.a.d.e.y4)
    {
        int $i0, $i1;
        c.a.b.a.d.e.y4 $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: c.a.b.a.d.e.y4;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>(1);

        $i1 = $i1 << 1;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int q0(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int c(int,c.a.b.a.d.e.y4)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int D0(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int l0(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int E(int, c.a.b.a.d.e.u5)
    {
        int $i0, $i1, $i2;
        c.a.b.a.d.e.u5 $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: c.a.b.a.d.e.u5;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>(1);

        $i1 = $i1 << 1;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int q0(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>(3);

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int J(c.a.b.a.d.e.u5)>($r0);

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int E0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        return $i0;
    }

    static int F(int, c.a.b.a.d.e.u5, c.a.b.a.d.e.k6)
    {
        c.a.b.a.d.e.k6 $r0;
        int $i0, $i1;
        c.a.b.a.d.e.u5 $r1;

        $i0 := @parameter0: int;

        $r1 := @parameter1: c.a.b.a.d.e.u5;

        $r0 := @parameter2: c.a.b.a.d.e.k6;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int e(c.a.b.a.d.e.u5,c.a.b.a.d.e.k6)>($r1, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static int F0(int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 = $i1 << 1;

        $i1 = $i1 >> 31;

        $i1 = $i1 ^ $i0;

        return $i1;
    }

    public static int G(int, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int K(java.lang.String)>($r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int H(int, boolean)
    {
        int $i0;
        boolean $z0;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i0 = $i0 + 1;

        return $i0;
    }

    public static int I(c.a.b.a.d.e.c3)
    {
        int $i0, $i1;
        c.a.b.a.d.e.c3 $r0;

        $r0 := @parameter0: c.a.b.a.d.e.c3;

        $i0 = virtualinvoke $r0.<c.a.b.a.d.e.c3: int d()>();

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int J(c.a.b.a.d.e.u5)
    {
        int $i0, $i1;
        c.a.b.a.d.e.u5 $r0;

        $r0 := @parameter0: c.a.b.a.d.e.u5;

        $i0 = interfaceinvoke $r0.<c.a.b.a.d.e.u5: int f()>();

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int K(java.lang.String)
    {
        c.a.b.a.d.e.n7 $r0;
        byte[] $r3;
        java.nio.charset.Charset $r2;
        int $i0, $i1;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <c.a.b.a.d.e.k7: int d(java.lang.CharSequence)>($r1);

     label2:
        goto label4;

     label3:
        $r2 = <c.a.b.a.d.e.l4: java.nio.charset.Charset a>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $i0 = lengthof $r3;

     label4:
        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;

     label5:
        $r0 := @caughtexception;

        goto label3;

        catch c.a.b.a.d.e.n7 from label1 to label2 with label5;
    }

    public static int L(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        return 1;
    }

    public static int M(byte[])
    {
        int $i0, $i1;
        byte[] $r0;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int U(int, c.a.b.a.d.e.c3)
    {
        int $i0, $i1, $i2;
        c.a.b.a.d.e.c3 $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: c.a.b.a.d.e.c3;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = virtualinvoke $r0.<c.a.b.a.d.e.c3: int d()>();

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i1 = $i2 + $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    static int V(int, c.a.b.a.d.e.u5, c.a.b.a.d.e.k6)
    {
        c.a.b.a.d.e.k6 $r0;
        int $i0, $i1, $i2;
        c.a.b.a.d.e.u5 $r1;
        c.a.b.a.d.e.t2 $r2;

        $i0 := @parameter0: int;

        $r1 := @parameter1: c.a.b.a.d.e.u5;

        $r0 := @parameter2: c.a.b.a.d.e.k6;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i0 = $i0 << 1;

        $r2 = (c.a.b.a.d.e.t2) $r1;

        $i1 = virtualinvoke $r2.<c.a.b.a.d.e.t2: int l()>();

        $i2 = $i1;

        if $i1 != -1 goto label1;

        $i1 = interfaceinvoke $r0.<c.a.b.a.d.e.k6: int c(java.lang.Object)>($r2);

        $i2 = $i1;

        virtualinvoke $r2.<c.a.b.a.d.e.t2: void m(int)>($i1);

     label1:
        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int W(c.a.b.a.d.e.u5)
    {
        int $i0;
        c.a.b.a.d.e.u5 $r0;

        $r0 := @parameter0: c.a.b.a.d.e.u5;

        $i0 = interfaceinvoke $r0.<c.a.b.a.d.e.u5: int f()>();

        return $i0;
    }

    static boolean b0()
    {
        boolean z0;

        z0 = <c.a.b.a.d.e.s3: boolean c>;

        return z0;
    }

    public static int c(int, c.a.b.a.d.e.y4)
    {
        c.a.b.a.d.e.y4 $r0;
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: c.a.b.a.d.e.y4;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = virtualinvoke $r0.<c.a.b.a.d.e.y4: int b()>();

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i1 = $i2 + $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int c0(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int j0(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int d(c.a.b.a.d.e.y4)
    {
        int $i0, $i1;
        c.a.b.a.d.e.y4 $r0;

        $r0 := @parameter0: c.a.b.a.d.e.y4;

        $i0 = virtualinvoke $r0.<c.a.b.a.d.e.y4: int b()>();

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int d0(int, c.a.b.a.d.e.c3)
    {
        int $i0, $i1;
        c.a.b.a.d.e.c3 $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: c.a.b.a.d.e.c3;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>(1);

        $i1 = $i1 << 1;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int q0(int,int)>(2, $i0);

        $i0 = $i1 + $i0;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int U(int,c.a.b.a.d.e.c3)>(3, $r0);

        $i0 = $i0 + $i1;

        return $i0;
    }

    static int e(c.a.b.a.d.e.u5, c.a.b.a.d.e.k6)
    {
        c.a.b.a.d.e.k6 $r0;
        int $i0, $i1;
        c.a.b.a.d.e.u5 $r1;
        c.a.b.a.d.e.t2 $r2;

        $r1 := @parameter0: c.a.b.a.d.e.u5;

        $r0 := @parameter1: c.a.b.a.d.e.k6;

        $r2 = (c.a.b.a.d.e.t2) $r1;

        $i0 = virtualinvoke $r2.<c.a.b.a.d.e.t2: int l()>();

        $i1 = $i0;

        if $i0 != -1 goto label1;

        $i0 = interfaceinvoke $r0.<c.a.b.a.d.e.k6: int c(java.lang.Object)>($r2);

        $i1 = $i0;

        virtualinvoke $r2.<c.a.b.a.d.e.t2: void m(int)>($i0);

     label1:
        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i1 = $i0 + $i1;

        return $i1;
    }

    public static int e0(long)
    {
        int $i0;
        long $l1;

        $l1 := @parameter0: long;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int j0(long)>($l1);

        return $i0;
    }

    public static c.a.b.a.d.e.s3 f(byte[])
    {
        int $i0;
        byte[] $r0;
        c.a.b.a.d.e.s3$b $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = new c.a.b.a.d.e.s3$b;

        specialinvoke $r1.<c.a.b.a.d.e.s3$b: void <init>(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static int h0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = $i0 << 3;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        return $i0;
    }

    public static int i0(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int j0(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int j0(long)
    {
        byte $b2;
        int $i3;
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = -128L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label2;

        return 10;

     label2:
        $l1 = -34359738368L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $i3 = 6;

        $l0 = $l0 >>> 28;

        goto label4;

     label3:
        $i3 = 2;

     label4:
        $l1 = -2097152L & $l0;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $i3 = $i3 + 2;

        $l0 = $l0 >>> 14;

     label5:
        $l0 = $l0 & -16384L;

        $b2 = $l0 cmp 0L;

        if $b2 == 0 goto label6;

        $i3 = $i3 + 1;

     label6:
        return $i3;
    }

    public static int l0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        return $i0;

     label1:
        return 10;
    }

    public static int m0(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int l0(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int n0(int, long)
    {
        int $i0, $i2;
        long $l1;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $l1 = staticinvoke <c.a.b.a.d.e.s3: long z0(long)>($l1);

        $i2 = staticinvoke <c.a.b.a.d.e.s3: int j0(long)>($l1);

        $i0 = $i0 + $i2;

        return $i0;
    }

    public static int o0(long)
    {
        int $i1;
        long $l0;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <c.a.b.a.d.e.s3: long z0(long)>($l0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int j0(long)>($l0);

        return $i1;
    }

    public static int p0(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i1 = $i0 & -16384;

        if $i1 != 0 goto label2;

        return 2;

     label2:
        $i1 = -2097152 & $i0;

        if $i1 != 0 goto label3;

        return 3;

     label3:
        $i0 = $i0 & -268435456;

        if $i0 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int q0(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int r0(int, long)
    {
        int $i1;
        long $l0;

        $i1 := @parameter0: int;

        $l0 := @parameter1: long;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i1);

        $i1 = $i1 + 8;

        return $i1;
    }

    public static int s0(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int t0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int F0(int)>($i0);

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i0);

        return $i0;
    }

    public static int u0(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i0);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int F0(int)>($i1);

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int p0(int)>($i1);

        $i0 = $i0 + $i1;

        return $i0;
    }

    public static int v0(int, long)
    {
        int $i1;
        long $l0;

        $i1 := @parameter0: int;

        $l0 := @parameter1: long;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i1);

        $i1 = $i1 + 8;

        return $i1;
    }

    public static int w0(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        return 8;
    }

    public static int x0(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        return 4;
    }

    public static int y0(int, int)
    {
        int $i0, $i1;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int h0(int)>($i1);

        $i1 = $i1 + 4;

        return $i1;
    }

    public static int z(double)
    {
        double $d0;

        $d0 := @parameter0: double;

        return 8;
    }

    private static long z0(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 << 1;

        $l0 = $l0 >> 63;

        $l0 = $l0 ^ $l1;

        return $l0;
    }

    public final void N()
    {
        int $i0;
        c.a.b.a.d.e.s3 r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 = virtualinvoke r0.<c.a.b.a.d.e.s3: int b()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public abstract void O(int);

    public abstract void P(int, int);

    public final void Q(int, long)
    {
        int $i0;
        c.a.b.a.d.e.s3 r0;
        long $l1;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $l1 = staticinvoke <c.a.b.a.d.e.s3: long z0(long)>($l1);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void n(int,long)>($i0, $l1);

        return;
    }

    public abstract void R(int, c.a.b.a.d.e.c3);

    public final void S(long)
    {
        c.a.b.a.d.e.s3 r0;
        long $l0;

        r0 := @this: c.a.b.a.d.e.s3;

        $l0 := @parameter0: long;

        $l0 = staticinvoke <c.a.b.a.d.e.s3: long z0(long)>($l0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void t(long)>($l0);

        return;
    }

    abstract void T(byte[], int, int);

    public final void X(int)
    {
        int $i0;
        c.a.b.a.d.e.s3 r0;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <c.a.b.a.d.e.s3: int F0(int)>($i0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void O(int)>($i0);

        return;
    }

    public abstract void Y(int, int);

    public abstract void Z(int, long);

    public abstract void a0(long);

    public abstract int b();

    public abstract void f0(int);

    public abstract void g(byte);

    public final void g0(int, int)
    {
        int $i0, $i1;
        c.a.b.a.d.e.s3 r0;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i1 = staticinvoke <c.a.b.a.d.e.s3: int F0(int)>($i1);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void Y(int,int)>($i0, $i1);

        return;
    }

    public final void h(double)
    {
        c.a.b.a.d.e.s3 r0;
        long $l0;
        double $d0;

        r0 := @this: c.a.b.a.d.e.s3;

        $d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void a0(long)>($l0);

        return;
    }

    public final void i(float)
    {
        int $i0;
        c.a.b.a.d.e.s3 r0;
        float $f0;

        r0 := @this: c.a.b.a.d.e.s3;

        $f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void f0(int)>($i0);

        return;
    }

    public abstract void j(int);

    public final void k(int, double)
    {
        int $i0;
        c.a.b.a.d.e.s3 r0;
        long $l1;
        double $d0;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $l1 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>($d0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void Z(int,long)>($i0, $l1);

        return;
    }

    public abstract void k0(int, int);

    public final void l(int, float)
    {
        int $i0, $i1;
        c.a.b.a.d.e.s3 r0;
        float $f0;

        r0 := @this: c.a.b.a.d.e.s3;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $i1 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>($f0);

        virtualinvoke r0.<c.a.b.a.d.e.s3: void k0(int,int)>($i0, $i1);

        return;
    }

    public abstract void m(int, int);

    public abstract void n(int, long);

    public abstract void o(int, c.a.b.a.d.e.c3);

    public abstract void p(int, c.a.b.a.d.e.u5);

    abstract void q(int, c.a.b.a.d.e.u5, c.a.b.a.d.e.k6);

    public abstract void r(int, java.lang.String);

    public abstract void s(int, boolean);

    public abstract void t(long);

    public abstract void u(c.a.b.a.d.e.c3);

    public abstract void v(c.a.b.a.d.e.u5);

    public abstract void w(java.lang.String);

    final void x(java.lang.String, c.a.b.a.d.e.n7)
    {
        c.a.b.a.d.e.n7 $r4;
        byte[] $r2;
        java.lang.IndexOutOfBoundsException $r8;
        c.a.b.a.d.e.s3 r0;
        java.util.logging.Logger $r5;
        java.util.logging.Level $r1;
        c.a.b.a.d.e.s3$a $r7;
        java.nio.charset.Charset $r6;
        int $i0;
        java.lang.String $r3;

        r0 := @this: c.a.b.a.d.e.s3;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: c.a.b.a.d.e.n7;

        $r5 = <c.a.b.a.d.e.s3: java.util.logging.Logger b>;

        $r1 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "com.google.protobuf.CodedOutputStream", "inefficientWriteStringNoTag", "Converting ill-formed UTF-16. Your Protocol Buffer will not round trip correctly!", $r4);

        $r6 = <c.a.b.a.d.e.l4: java.nio.charset.Charset a>;

        $r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        $i0 = lengthof $r2;

     label1:
        virtualinvoke r0.<c.a.b.a.d.e.s3: void O(int)>($i0);

     label2:
        $i0 = lengthof $r2;

     label3:
        virtualinvoke r0.<c.a.b.a.d.e.d3: void a(byte[],int,int)>($r2, 0, $i0);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r8 := @caughtexception;

        $r7 = new c.a.b.a.d.e.s3$a;

        specialinvoke $r7.<c.a.b.a.d.e.s3$a: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label6;
        catch java.lang.IndexOutOfBoundsException from label3 to label4 with label6;
        catch c.a.b.a.d.e.s3$a from label1 to label2 with label5;
        catch c.a.b.a.d.e.s3$a from label3 to label4 with label5;
    }

    public final void y(boolean)
    {
        c.a.b.a.d.e.s3 r0;
        byte $b0;
        boolean $z0;

        r0 := @this: c.a.b.a.d.e.s3;

        $z0 := @parameter0: boolean;

        $b0 = (byte) $z0;

        virtualinvoke r0.<c.a.b.a.d.e.s3: void g(byte)>($b0);

        return;
    }
}
