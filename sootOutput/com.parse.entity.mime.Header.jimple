public class com.parse.entity.mime.Header extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.Map fieldMap;
    private final java.util.List fields;

    public void <init>()
    {
        com.parse.entity.mime.Header r0;
        java.util.HashMap $r2;
        java.util.LinkedList $r1;

        r0 := @this: com.parse.entity.mime.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.parse.entity.mime.Header: java.util.List fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.parse.entity.mime.Header: java.util.Map fieldMap> = $r2;

        return;
    }

    public void addField(com.parse.entity.mime.MinimalField)
    {
        com.parse.entity.mime.MinimalField $r1;
        com.parse.entity.mime.Header r0;
        java.util.List $r6;
        java.util.Locale $r4;
        java.util.Map $r2;
        java.lang.Object $r5;
        java.lang.String $r3;
        java.util.LinkedList $r7;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 := @parameter0: com.parse.entity.mime.MinimalField;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r1.<com.parse.entity.mime.MinimalField: java.lang.String getName()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r2 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.List) $r5;

        if $r5 != null goto label2;

        $r7 = new java.util.LinkedList;

        $r5 = $r7;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        $r2 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label2:
        $r6 = (java.util.List) $r5;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r6 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public com.parse.entity.mime.MinimalField getField(java.lang.String)
    {
        com.parse.entity.mime.MinimalField $r6;
        com.parse.entity.mime.Header r0;
        java.util.List $r5;
        java.util.Locale $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        if $r5 == null goto label2;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.parse.entity.mime.MinimalField) $r4;

        return $r6;

     label2:
        return null;
    }

    public java.util.List getFields()
    {
        com.parse.entity.mime.Header r0;
        java.util.List $r2;
        java.util.ArrayList $r1;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    public java.util.List getFields(java.lang.String)
    {
        java.util.ArrayList $r6;
        com.parse.entity.mime.Header r0;
        java.util.List $r5;
        java.util.Locale $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        if $r5 == null goto label2;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label3:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        return $r6;
    }

    public java.util.Iterator iterator()
    {
        com.parse.entity.mime.Header r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public int removeFields(java.lang.String)
    {
        com.parse.entity.mime.Header r0;
        java.util.List $r5, $r6;
        java.util.Locale $r2;
        java.util.Map $r3;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = <java.util.Locale: java.util.Locale US>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $r5 = (java.util.List) $r4;

        if $r5 == null goto label2;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r6 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r6.<java.util.List: boolean removeAll(java.util.Collection)>($r5);

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        return $i0;
    }

    public void setField(com.parse.entity.mime.MinimalField)
    {
        com.parse.entity.mime.MinimalField $r1, $r8;
        java.util.Iterator $r7;
        com.parse.entity.mime.Header r0;
        java.util.List $r6;
        java.util.Locale $r3;
        java.util.Map $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r5;
        java.lang.String $r2, $r9;
        boolean $z0;

        r0 := @this: com.parse.entity.mime.Header;

        $r1 := @parameter0: com.parse.entity.mime.MinimalField;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<com.parse.entity.mime.MinimalField: java.lang.String getName()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r4 = r0.<com.parse.entity.mime.Header: java.util.Map fieldMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (java.util.List) $r5;

        if $r6 == null goto label2;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r0.<com.parse.entity.mime.Header: void addField(com.parse.entity.mime.MinimalField)>($r1);

        return;

     label3:
        interfaceinvoke $r6.<java.util.List: void clear()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r6 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        $i0 = 0;

        $i1 = -1;

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (com.parse.entity.mime.MinimalField) $r5;

        $r2 = virtualinvoke $r8.<com.parse.entity.mime.MinimalField: java.lang.String getName()>();

        $r9 = virtualinvoke $r1.<com.parse.entity.mime.MinimalField: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label5;

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        $i2 = -1;

        if $i1 != $i2 goto label5;

        $i1 = $i0;

     label5:
        $i0 = $i0 + 1;

        goto label4;

     label6:
        $r6 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        interfaceinvoke $r6.<java.util.List: void add(int,java.lang.Object)>($i1, $r1);

        return;
    }

    public java.lang.String toString()
    {
        com.parse.entity.mime.Header r0;
        java.util.List $r2;
        java.lang.String $r1;

        r0 := @this: com.parse.entity.mime.Header;

        $r2 = r0.<com.parse.entity.mime.Header: java.util.List fields>;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }
}
