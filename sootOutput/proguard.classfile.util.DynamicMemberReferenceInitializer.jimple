public class proguard.classfile.util.DynamicMemberReferenceInitializer extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.instruction.visitor.InstructionVisitor, proguard.classfile.constant.visitor.ConstantVisitor, proguard.classfile.attribute.visitor.AttributeVisitor, proguard.classfile.visitor.MemberVisitor
{
    public static final int A;
    public static final int B;
    public static final int C;
    public static final int D;
    public static final int X;
    public static final int Y;
    public static final int Z;
    private final proguard.classfile.instruction.Instruction[] CONSTANT_GET_FIELD_INSTRUCTIONS;
    private final proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS0;
    private final proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS1;
    private final proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS2;
    private final proguard.classfile.constant.Constant[] GET_DECLARED_FIELD_CONSTANTS;
    private final proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS;
    private final proguard.classfile.constant.Constant[] GET_FIELD_CONSTANTS;
    private final proguard.classfile.instruction.Instruction[] GET_FIELD_INSTRUCTIONS;
    private final proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS;
    private final proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS0;
    private final proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS1;
    private final proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS2;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredFieldMatcher;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher0;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher1;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher2;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetFieldMatcher;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher0;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher1;
    private final proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher2;
    private final proguard.classfile.util.InstructionSequenceMatcher getDeclaredFieldMatcher;
    private final proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher0;
    private final proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher1;
    private final proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher2;
    private final proguard.classfile.util.InstructionSequenceMatcher getFieldMatcher;
    private final proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher0;
    private final proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher1;
    private final proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher2;
    private boolean isDeclared;
    private boolean isField;
    private final proguard.classfile.ClassPool libraryClassPool;
    private final proguard.classfile.util.MemberFinder memberFinder;
    private final proguard.util.StringMatcher noteFieldExceptionMatcher;
    private final proguard.util.StringMatcher noteMethodExceptionMatcher;
    private final proguard.classfile.util.WarningPrinter notePrinter;
    private final proguard.classfile.ClassPool programClassPool;
    private proguard.classfile.Clazz referencedClass;

    public void <init>(proguard.classfile.ClassPool, proguard.classfile.ClassPool, proguard.classfile.util.WarningPrinter, proguard.util.StringMatcher, proguard.util.StringMatcher)
    {
        proguard.classfile.instruction.Instruction[] $r11;
        proguard.classfile.ClassPool $r1, $r2;
        proguard.classfile.constant.Utf8Constant $r10;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        proguard.classfile.constant.ClassConstant $r8;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.util.MemberFinder $r15;
        proguard.classfile.util.InstructionSequenceMatcher $r14;
        proguard.classfile.constant.MethodrefConstant $r7;
        proguard.classfile.instruction.SimpleInstruction $r13;
        proguard.util.StringMatcher $r4, $r5;
        proguard.classfile.instruction.ConstantInstruction $r12;
        proguard.classfile.constant.Constant[] $r6;
        proguard.classfile.constant.NameAndTypeConstant $r9;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.ClassPool;

        $r2 := @parameter1: proguard.classfile.ClassPool;

        $r3 := @parameter2: proguard.classfile.util.WarningPrinter;

        $r4 := @parameter3: proguard.util.StringMatcher;

        $r5 := @parameter4: proguard.util.StringMatcher;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        $r6 = newarray (proguard.classfile.constant.Constant)[6];

        $r7 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r7.<proguard.classfile.constant.MethodrefConstant: void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member)>(1, 2, null, null);

        $r6[0] = $r7;

        $r8 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r8.<proguard.classfile.constant.ClassConstant: void <init>(int,proguard.classfile.Clazz)>(3, null);

        $r6[1] = $r8;

        $r9 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r9.<proguard.classfile.constant.NameAndTypeConstant: void <init>(int,int)>(4, 5);

        $r6[2] = $r9;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("java/lang/Class");

        $r6[3] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("getField");

        $r6[4] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("(Ljava/lang/String;)Ljava/lang/reflect/Field;");

        $r6[5] = $r10;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_FIELD_CONSTANTS> = $r6;

        $r6 = newarray (proguard.classfile.constant.Constant)[6];

        $r7 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r7.<proguard.classfile.constant.MethodrefConstant: void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member)>(1, 2, null, null);

        $r6[0] = $r7;

        $r8 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r8.<proguard.classfile.constant.ClassConstant: void <init>(int,proguard.classfile.Clazz)>(3, null);

        $r6[1] = $r8;

        $r9 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r9.<proguard.classfile.constant.NameAndTypeConstant: void <init>(int,int)>(4, 5);

        $r6[2] = $r9;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("java/lang/Class");

        $r6[3] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("getDeclaredField");

        $r6[4] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("(Ljava/lang/String;)Ljava/lang/reflect/Field;");

        $r6[5] = $r10;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_FIELD_CONSTANTS> = $r6;

        $r6 = newarray (proguard.classfile.constant.Constant)[6];

        $r7 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r7.<proguard.classfile.constant.MethodrefConstant: void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member)>(1, 2, null, null);

        $r6[0] = $r7;

        $r8 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r8.<proguard.classfile.constant.ClassConstant: void <init>(int,proguard.classfile.Clazz)>(3, null);

        $r6[1] = $r8;

        $r9 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r9.<proguard.classfile.constant.NameAndTypeConstant: void <init>(int,int)>(4, 5);

        $r6[2] = $r9;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("java/lang/Class");

        $r6[3] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("getMethod");

        $r6[4] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;");

        $r6[5] = $r10;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS> = $r6;

        $r6 = newarray (proguard.classfile.constant.Constant)[6];

        $r7 = new proguard.classfile.constant.MethodrefConstant;

        specialinvoke $r7.<proguard.classfile.constant.MethodrefConstant: void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member)>(1, 2, null, null);

        $r6[0] = $r7;

        $r8 = new proguard.classfile.constant.ClassConstant;

        specialinvoke $r8.<proguard.classfile.constant.ClassConstant: void <init>(int,proguard.classfile.Clazz)>(3, null);

        $r6[1] = $r8;

        $r9 = new proguard.classfile.constant.NameAndTypeConstant;

        specialinvoke $r9.<proguard.classfile.constant.NameAndTypeConstant: void <init>(int,int)>(4, 5);

        $r6[2] = $r9;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("java/lang/Class");

        $r6[3] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("getDeclaredMethod");

        $r6[4] = $r10;

        $r10 = new proguard.classfile.constant.Utf8Constant;

        specialinvoke $r10.<proguard.classfile.constant.Utf8Constant: void <init>(java.lang.String)>("(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;");

        $r6[5] = $r10;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS> = $r6;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[3];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741824);

        $r11[0] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[1] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[2] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_FIELD_INSTRUCTIONS> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[5];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741824);

        $r11[0] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[1] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[2] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[3] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[4] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS0> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[9];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741824);

        $r11[0] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[1] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(4);

        $r11[2] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[3] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[4] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[5] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741827);

        $r11[6] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[7] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[8] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS1> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[13];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741824);

        $r11[0] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[1] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(5);

        $r11[2] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[3] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[4] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[5] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741827);

        $r11[6] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[7] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[8] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(4);

        $r11[9] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741828);

        $r11[10] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[11] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[12] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS2> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[2];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[0] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[1] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_FIELD_INSTRUCTIONS> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[4];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[0] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[1] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[2] = $r12;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[3] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS0> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[8];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[0] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(4);

        $r11[1] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[2] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[3] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[4] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741827);

        $r11[5] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[6] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[7] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS1> = $r11;

        $r11 = newarray (proguard.classfile.instruction.Instruction)[12];

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741825);

        $r11[0] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(5);

        $r11[1] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-67, 1);

        $r11[2] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[3] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(3);

        $r11[4] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741827);

        $r11[5] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[6] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(89);

        $r11[7] = $r13;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(4);

        $r11[8] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(18, 1073741828);

        $r11[9] = $r12;

        $r13 = new proguard.classfile.instruction.SimpleInstruction;

        specialinvoke $r13.<proguard.classfile.instruction.SimpleInstruction: void <init>(byte)>(83);

        $r11[10] = $r13;

        $r12 = new proguard.classfile.instruction.ConstantInstruction;

        specialinvoke $r12.<proguard.classfile.instruction.ConstantInstruction: void <init>(byte,int)>(-74, 0);

        $r11[11] = $r12;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS2> = $r11;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_FIELD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_FIELD_INSTRUCTIONS>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetFieldMatcher> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_FIELD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_FIELD_INSTRUCTIONS>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredFieldMatcher> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS0>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher0> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS0>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher0> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS1>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher1> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS1>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher1> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS2>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher2> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS2>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher2> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_FIELD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_FIELD_INSTRUCTIONS>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getFieldMatcher> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_FIELD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_FIELD_INSTRUCTIONS>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredFieldMatcher> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS0>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher0> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS0>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher0> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS1>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher1> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS1>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher1> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS2>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher2> = $r14;

        $r14 = new proguard.classfile.util.InstructionSequenceMatcher;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS>;

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS2>;

        specialinvoke $r14.<proguard.classfile.util.InstructionSequenceMatcher: void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[])>($r6, $r11);

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher2> = $r14;

        $r15 = new proguard.classfile.util.MemberFinder;

        specialinvoke $r15.<proguard.classfile.util.MemberFinder: void <init>()>();

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.MemberFinder memberFinder> = $r15;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.ClassPool programClassPool> = $r1;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.ClassPool libraryClassPool> = $r2;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter> = $r3;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.util.StringMatcher noteFieldExceptionMatcher> = $r4;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.util.StringMatcher noteMethodExceptionMatcher> = $r5;

        return;
    }

    private void matchGetMember(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.Instruction, proguard.classfile.util.InstructionSequenceMatcher, proguard.classfile.util.InstructionSequenceMatcher, boolean, boolean)
    {
        proguard.classfile.util.InstructionSequenceMatcher $r5, $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.instruction.Instruction $r4;
        int $i0, $i1;
        proguard.classfile.Method $r2;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0, $z1, $z2;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.Instruction;

        $r5 := @parameter5: proguard.classfile.util.InstructionSequenceMatcher;

        $r6 := @parameter6: proguard.classfile.util.InstructionSequenceMatcher;

        $z0 := @parameter7: boolean;

        $z1 := @parameter8: boolean;

        virtualinvoke $r4.<proguard.classfile.instruction.Instruction: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor)>($r1, $r2, $r3, $i0, $r5);

        $z2 = virtualinvoke $r5.<proguard.classfile.util.InstructionSequenceMatcher: boolean isMatching()>();

        if $z2 == 0 goto label1;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isField> = $z0;

        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isDeclared> = $z1;

        $i1 = virtualinvoke $r5.<proguard.classfile.util.InstructionSequenceMatcher: int matchedConstantIndex(int)>(1073741824);

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i1, r0);

        $i1 = virtualinvoke $r5.<proguard.classfile.util.InstructionSequenceMatcher: int matchedConstantIndex(int)>(1073741825);

        interfaceinvoke $r1.<proguard.classfile.Clazz: void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor)>($i1, r0);

        virtualinvoke $r6.<proguard.classfile.util.InstructionSequenceMatcher: void reset()>();

     label1:
        virtualinvoke $r4.<proguard.classfile.instruction.Instruction: void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor)>($r1, $r2, $r3, $i0, $r6);

        $z2 = virtualinvoke $r6.<proguard.classfile.util.InstructionSequenceMatcher: boolean isMatching()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void printDynamicInvocationNote(proguard.classfile.Clazz,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r6, $z0, $z1);

     label2:
        return;
    }

    private void printDynamicInvocationNote(proguard.classfile.Clazz, proguard.classfile.util.InstructionSequenceMatcher, boolean, boolean)
    {
        proguard.classfile.visitor.ClassVisitor $r10;
        proguard.classfile.visitor.AllMethodVisitor $r16;
        proguard.classfile.ClassPool $r11;
        proguard.classfile.Clazz $r1;
        java.lang.StringBuffer $r6, $r12;
        int $i0, $i1;
        proguard.classfile.visitor.AllFieldVisitor $r14;
        java.lang.String $r4, $r7, $r8, $r9;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0, $z1, $z2;
        proguard.classfile.visitor.MemberNameFilter $r13;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.util.InstructionSequenceMatcher $r2;
        proguard.util.StringMatcher $r5;
        proguard.classfile.visitor.MemberDescriptorFilter $r15;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.util.InstructionSequenceMatcher;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        if $r3 == null goto label24;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r4 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: boolean accepts(java.lang.String)>($r4);

        if $z2 == 0 goto label24;

        if $z0 == 0 goto label07;

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.util.StringMatcher noteFieldExceptionMatcher>;

     label01:
        $i0 = virtualinvoke $r2.<proguard.classfile.util.InstructionSequenceMatcher: int matchedConstantIndex(int)>(1073741825);

        $r4 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getStringString(int)>($i0);

        if $r5 == null goto label02;

        $z2 = interfaceinvoke $r5.<proguard.util.StringMatcher: boolean matches(java.lang.String)>($r4);

        if $z2 != 0 goto label24;

     label02:
        if $z0 != 0 goto label23;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = 0;

     label03:
        if $i0 >= 2 goto label09;

        $i1 = 1073741827 + $i0;

        $i1 = virtualinvoke $r2.<proguard.classfile.util.InstructionSequenceMatcher: int matchedConstantIndex(int)>($i1);

        if $i1 <= 0 goto label06;

        if $i0 <= 0 goto label04;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $r8 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getClassName(int)>($i1);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z2 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r8);

        if $z2 == 0 goto label08;

        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalType(java.lang.String)>($r8);

     label05:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label06:
        $i0 = $i0 + 1;

        goto label03;

     label07:
        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.util.StringMatcher noteMethodExceptionMatcher>;

        goto label01;

     label08:
        $r7 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r8);

        goto label05;

     label09:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r7 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Note: ");

        $r9 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getName()>();

        $r9 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalClassName(java.lang.String)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" accesses a ");

        if $z1 == 0 goto label14;

        $r9 = "declared ";

     label11:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        if $z0 == 0 goto label15;

        $r9 = "field";

     label12:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \'");

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' dynamically");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: void print(java.lang.String,java.lang.String)>($r7, $r8);

        if $z0 == 0 goto label16;

        $r14 = new proguard.classfile.visitor.AllFieldVisitor;

        $r10 = $r14;

        $r13 = new proguard.classfile.visitor.MemberNameFilter;

        specialinvoke $r13.<proguard.classfile.visitor.MemberNameFilter: void <init>(java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r4, r0);

        specialinvoke $r14.<proguard.classfile.visitor.AllFieldVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r13);

     label13:
        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.ClassPool programClassPool>;

        virtualinvoke $r11.<proguard.classfile.ClassPool: void classesAcceptAlphabetically(proguard.classfile.visitor.ClassVisitor)>($r10);

        $r11 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.ClassPool libraryClassPool>;

        virtualinvoke $r11.<proguard.classfile.ClassPool: void classesAcceptAlphabetically(proguard.classfile.visitor.ClassVisitor)>($r10);

        return;

     label14:
        $r9 = "";

        goto label11;

     label15:
        $r9 = "method";

        goto label12;

     label16:
        $r7 = "(";

        $i0 = 0;

     label17:
        if $i0 >= 2 goto label22;

        $i1 = 1073741827 + $i0;

        $i1 = virtualinvoke $r2.<proguard.classfile.util.InstructionSequenceMatcher: int matchedConstantIndex(int)>($i1);

        if $i1 <= 0 goto label20;

        if $i0 <= 0 goto label18;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label18:
        $r8 = interfaceinvoke $r1.<proguard.classfile.Clazz: java.lang.String getClassName(int)>($i1);

        $r9 = $r8;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r8);

        if $z0 == 0 goto label21;

     label19:
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label20:
        $i0 = $i0 + 1;

        goto label17;

     label21:
        $r9 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String internalTypeFromClassName(java.lang.String)>($r8);

        goto label19;

     label22:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")L///;");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = new proguard.classfile.visitor.AllMethodVisitor;

        $r13 = new proguard.classfile.visitor.MemberNameFilter;

        $r15 = new proguard.classfile.visitor.MemberDescriptorFilter;

        specialinvoke $r15.<proguard.classfile.visitor.MemberDescriptorFilter: void <init>(java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r7, r0);

        specialinvoke $r13.<proguard.classfile.visitor.MemberNameFilter: void <init>(java.lang.String,proguard.classfile.visitor.MemberVisitor)>($r4, $r15);

        specialinvoke $r16.<proguard.classfile.visitor.AllMethodVisitor: void <init>(proguard.classfile.visitor.MemberVisitor)>($r13);

        $r10 = $r16;

        goto label13;

     label23:
        $r8 = $r4;

        goto label10;

     label24:
        return;
    }

    public void visitAnyInstruction(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.CodeAttribute, int, proguard.classfile.instruction.Instruction)
    {
        proguard.classfile.util.InstructionSequenceMatcher $r5, $r6;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.CodeAttribute $r3;
        proguard.classfile.instruction.Instruction $r4;
        int $i0;
        proguard.classfile.Method $r2;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.CodeAttribute;

        $i0 := @parameter3: int;

        $r4 := @parameter4: proguard.classfile.instruction.Instruction;

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetFieldMatcher>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getFieldMatcher>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 1, 0);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredFieldMatcher>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredFieldMatcher>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 1, 1);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher0>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher0>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 0);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher0>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher0>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 1);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher1>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher1>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 0);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher1>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher1>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 1);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher2>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher2>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 0);

        $r5 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher2>;

        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher2>;

        specialinvoke r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean)>($r1, $r2, $r3, $i0, $r4, $r5, $r6, 0, 1);

        return;
    }

    public void visitClassConstant(proguard.classfile.Clazz, proguard.classfile.constant.ClassConstant)
    {
        proguard.classfile.constant.ClassConstant $r2;
        proguard.classfile.Clazz $r1;
        java.lang.String $r3;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.ClassConstant;

        $r3 = virtualinvoke $r2.<proguard.classfile.constant.ClassConstant: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $z0 = staticinvoke <proguard.classfile.util.ClassUtil: boolean isInternalArrayType(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r1 = null;

     label1:
        r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass> = $r1;

        return;

     label2:
        $r1 = $r2.<proguard.classfile.constant.ClassConstant: proguard.classfile.Clazz referencedClass>;

        goto label1;
    }

    public void visitLibraryField(proguard.classfile.LibraryClass, proguard.classfile.LibraryField)
    {
        java.io.PrintStream $r5;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.LibraryField $r2;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r6;
        java.lang.String $r4, $r7;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryField;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r4 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: boolean accepts(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("      Maybe this is library field \'");

        $r4 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>(0, $r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" { ");

        $r4 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.LibraryField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>(0, $r4, $r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; }\'");

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    public void visitLibraryMethod(proguard.classfile.LibraryClass, proguard.classfile.LibraryMethod)
    {
        java.io.PrintStream $r5;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.LibraryClass $r1;
        java.lang.StringBuffer $r6;
        proguard.classfile.LibraryMethod $r2;
        java.lang.String $r4, $r7;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.LibraryClass;

        $r2 := @parameter1: proguard.classfile.LibraryMethod;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r4 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: boolean accepts(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("      Maybe this is library method \'");

        $r4 = virtualinvoke $r1.<proguard.classfile.LibraryClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>(0, $r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" { ");

        $r4 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.LibraryMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>(null, 0, $r4, $r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; }\'");

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    public void visitProgramField(proguard.classfile.ProgramClass, proguard.classfile.ProgramField)
    {
        java.io.PrintStream $r5;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.ProgramClass $r1;
        proguard.classfile.ProgramField $r2;
        java.lang.StringBuffer $r6;
        java.lang.String $r4, $r7;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramField;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r4 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: boolean accepts(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("      Maybe this is program field \'");

        $r4 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>(0, $r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" { ");

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramField: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String)>(0, $r4, $r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; }\'");

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    public void visitProgramMethod(proguard.classfile.ProgramClass, proguard.classfile.ProgramMethod)
    {
        java.io.PrintStream $r5;
        proguard.classfile.util.WarningPrinter $r3;
        proguard.classfile.ProgramClass $r1;
        java.lang.StringBuffer $r6;
        proguard.classfile.ProgramMethod $r2;
        java.lang.String $r4, $r7;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.ProgramClass;

        $r2 := @parameter1: proguard.classfile.ProgramMethod;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.WarningPrinter notePrinter>;

        $r4 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<proguard.classfile.util.WarningPrinter: boolean accepts(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("      Maybe this is program method \'");

        $r4 = virtualinvoke $r1.<proguard.classfile.ProgramClass: java.lang.String getName()>();

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullClassDescription(int,java.lang.String)>(0, $r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" { ");

        $r4 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getName(proguard.classfile.Clazz)>($r1);

        $r7 = virtualinvoke $r2.<proguard.classfile.ProgramMethod: java.lang.String getDescriptor(proguard.classfile.Clazz)>($r1);

        $r4 = staticinvoke <proguard.classfile.util.ClassUtil: java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String)>(null, 0, $r4, $r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; }\'");

        $r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r4);

     label1:
        return;
    }

    public void visitStringConstant(proguard.classfile.Clazz, proguard.classfile.constant.StringConstant)
    {
        proguard.classfile.util.MemberFinder $r6;
        proguard.classfile.Member $r5;
        proguard.classfile.Clazz $r1, $r3;
        proguard.classfile.constant.StringConstant $r2;
        java.lang.String $r4;
        proguard.classfile.util.DynamicMemberReferenceInitializer r0;
        boolean $z0;

        r0 := @this: proguard.classfile.util.DynamicMemberReferenceInitializer;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.constant.StringConstant;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass>;

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r2.<proguard.classfile.constant.StringConstant: java.lang.String getString(proguard.classfile.Clazz)>($r1);

        $z0 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isDeclared>;

        if $z0 == 0 goto label4;

        $z0 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isField>;

        if $z0 == 0 goto label3;

        $r1 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass>;

        $r5 = interfaceinvoke $r1.<proguard.classfile.Clazz: proguard.classfile.Field findField(java.lang.String,java.lang.String)>($r4, null);

     label1:
        if $r5 == null goto label6;

        $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Member referencedMember> = $r5;

        $z0 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isDeclared>;

        if $z0 == 0 goto label5;

        $r1 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass>;

     label2:
        $r2.<proguard.classfile.constant.StringConstant: proguard.classfile.Clazz referencedClass> = $r1;

        return;

     label3:
        $r1 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass>;

        $r5 = interfaceinvoke $r1.<proguard.classfile.Clazz: proguard.classfile.Method findMethod(java.lang.String,java.lang.String)>($r4, null);

        goto label1;

     label4:
        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.MemberFinder memberFinder>;

        $r3 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.Clazz referencedClass>;

        $z0 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: boolean isField>;

        $r5 = virtualinvoke $r6.<proguard.classfile.util.MemberFinder: proguard.classfile.Member findMember(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String,boolean)>($r1, $r3, $r4, null, $z0);

        goto label1;

     label5:
        $r6 = r0.<proguard.classfile.util.DynamicMemberReferenceInitializer: proguard.classfile.util.MemberFinder memberFinder>;

        $r1 = virtualinvoke $r6.<proguard.classfile.util.MemberFinder: proguard.classfile.Clazz correspondingClass()>();

        goto label2;

     label6:
        return;
    }

    public static void <clinit>()
    {
        <proguard.classfile.util.DynamicMemberReferenceInitializer: int Z> = 1073741826;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int Y> = 1073741825;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int X> = 1073741824;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int D> = 1073741830;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int C> = 1073741829;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int B> = 1073741828;

        <proguard.classfile.util.DynamicMemberReferenceInitializer: int A> = 1073741827;

        return;
    }
}
