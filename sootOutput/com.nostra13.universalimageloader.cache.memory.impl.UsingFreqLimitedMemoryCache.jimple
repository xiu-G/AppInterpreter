public class com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache extends com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache
{
    private final java.util.Map usingCounts;

    public void <init>(int)
    {
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r1;
        int $i0;
        java.util.HashMap $r2;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $i0 := @parameter0: int;

        specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: void <init>(int)>($i0);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r2);

        r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts> = $r1;

        return;
    }

    public void clear()
    {
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: void clear()>();

        return;
    }

    protected java.lang.ref.Reference createReference(android.graphics.Bitmap)
    {
        java.lang.ref.WeakReference $r2;
        android.graphics.Bitmap $r1;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        return $r2;
    }

    public android.graphics.Bitmap get(java.lang.String)
    {
        android.graphics.Bitmap $r3;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r2;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r1;
        java.lang.Integer $r5;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: android.graphics.Bitmap get(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $r2 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.lang.Integer) $r4;

        if $r5 == null goto label1;

        $r2 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i0 = $i0 + 1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label1:
        return $r3;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        android.graphics.Bitmap $r1;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: android.graphics.Bitmap get(java.lang.String)>($r3);

        return $r1;
    }

    protected int getSize(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r1;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        int $i0, $i1;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        return $i0;
    }

    public volatile boolean put(java.lang.Object, java.lang.Object)
    {
        android.graphics.Bitmap $r4;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (android.graphics.Bitmap) $r2;

        $z0 = virtualinvoke r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: boolean put(java.lang.String,android.graphics.Bitmap)>($r3, $r4);

        return $z0;
    }

    public boolean put(java.lang.String, android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r2;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r3;
        java.lang.String $r1;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $z0 = specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: boolean put(java.lang.String,android.graphics.Bitmap)>($r1, $r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        return 1;

     label1:
        return 0;
    }

    public android.graphics.Bitmap remove(java.lang.String)
    {
        android.graphics.Bitmap $r3;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r2;
        java.lang.String $r1;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: android.graphics.Bitmap get(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $r2 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

     label1:
        $r3 = specialinvoke r0.<com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache: android.graphics.Bitmap remove(java.lang.String)>($r1);

        return $r3;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        android.graphics.Bitmap $r1;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r2 := @parameter0: java.lang.Object;

        $r3 = (java.lang.String) $r2;

        $r1 = virtualinvoke r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: android.graphics.Bitmap remove(java.lang.String)>($r3);

        return $r1;
    }

    protected android.graphics.Bitmap removeNext()
    {
        java.lang.Throwable $r9;
        java.util.Map$Entry $r7;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.Integer $r5, $r8;
        android.graphics.Bitmap $r2;
        com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache r0;
        java.util.Map $r1;
        int $i0, $i1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;

        $r2 = null;

        $r1 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r1 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        entermonitor $r1;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = null;

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        if $r2 != null goto label3;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (android.graphics.Bitmap) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.Integer) $r6;

        goto label2;

     label3:
        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        if $i0 >= $i1 goto label8;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (android.graphics.Bitmap) $r6;

     label4:
        $r5 = $r8;

        goto label2;

     label5:
        exitmonitor $r1;

     label6:
        $r1 = r0.<com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache: java.util.Map usingCounts>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return $r2;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r1;

        throw $r9;

     label8:
        $r8 = $r5;

        goto label4;

        catch java.lang.Throwable from label1 to label6 with label7;
    }
}
