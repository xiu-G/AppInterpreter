public final class kn extends java.lang.Object implements java.io.Serializable, kl
{
    protected org.htmlparser.Text a;
    protected org.htmlparser.Remark b;
    protected org.htmlparser.Tag c;
    protected java.util.Map d;

    private void <init>()
    {
        org.htmlparser.tags.ObjectTag $r25;
        org.htmlparser.tags.TableTag $r35;
        org.htmlparser.tags.Bullet $r7;
        org.htmlparser.tags.TextareaTag $r36;
        org.htmlparser.tags.ItalicTag $r18;
        org.htmlparser.tags.MetaTag $r24;
        org.htmlparser.tags.AppletTag $r5;
        org.htmlparser.tags.DoctypeTag $r12;
        org.htmlparser.tags.DefinitionList $r10;
        org.htmlparser.tags.BulletList $r8;
        org.htmlparser.tags.SupTag $r41;
        org.htmlparser.tags.FrameSetTag $r14;
        org.htmlparser.nodes.TagNode $r4;
        org.htmlparser.tags.ParagraphTag $r27;
        org.htmlparser.tags.SelectTag $r30;
        org.htmlparser.tags.TableHeader $r33;
        org.htmlparser.nodes.RemarkNode $r3;
        org.htmlparser.tags.CodeTag $r9;
        org.htmlparser.tags.InputTag $r19;
        org.htmlparser.tags.Html $r44;
        org.htmlparser.nodes.TextNode $r2;
        org.htmlparser.tags.ImageTag $r17;
        org.htmlparser.tags.OptionTag $r26;
        org.htmlparser.tags.TableRow $r34;
        org.htmlparser.tags.ScriptTag $r29;
        org.htmlparser.tags.SubTag $r40;
        org.htmlparser.tags.BoldTag $r45;
        org.htmlparser.tags.Div $r38;
        org.htmlparser.tags.JspTag $r20;
        org.htmlparser.tags.TitleTag $r37;
        org.htmlparser.tags.HeadTag $r43;
        org.htmlparser.tags.Span $r39;
        java.util.Hashtable $r1;
        org.htmlparser.tags.FrameTag $r15;
        org.htmlparser.tags.ProcessingInstructionTag $r28;
        kn r0;
        org.htmlparser.tags.DefinitionListBullet $r11;
        org.htmlparser.tags.BRTag $r46;
        org.htmlparser.tags.BaseHrefTag $r6;
        org.htmlparser.tags.LinkTag $r22;
        org.htmlparser.tags.BodyTag $r42;
        org.htmlparser.tags.HeadingTag $r16;
        org.htmlparser.tags.StyleTag $r31;
        org.htmlparser.tags.LinkCSSTag $r23;
        org.htmlparser.tags.LabelTag $r21;
        org.htmlparser.tags.FormTag $r13;
        org.htmlparser.tags.TableColumn $r32;

        r0 := @this: kn;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<kn: java.util.Map d> = $r1;

        $r2 = new org.htmlparser.nodes.TextNode;

        specialinvoke $r2.<org.htmlparser.nodes.TextNode: void <init>(kr,int,int)>(null, 0, 0);

        r0.<kn: org.htmlparser.Text a> = $r2;

        $r3 = new org.htmlparser.nodes.RemarkNode;

        specialinvoke $r3.<org.htmlparser.nodes.RemarkNode: void <init>(kr,int,int)>(null, 0, 0);

        r0.<kn: org.htmlparser.Remark b> = $r3;

        $r4 = new org.htmlparser.nodes.TagNode;

        specialinvoke $r4.<org.htmlparser.nodes.TagNode: void <init>(kr,int,int,java.util.Vector)>(null, 0, 0, null);

        r0.<kn: org.htmlparser.Tag c> = $r4;

        $r5 = new org.htmlparser.tags.AppletTag;

        specialinvoke $r5.<org.htmlparser.tags.AppletTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r5);

        $r6 = new org.htmlparser.tags.BaseHrefTag;

        specialinvoke $r6.<org.htmlparser.tags.BaseHrefTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r6);

        $r7 = new org.htmlparser.tags.Bullet;

        specialinvoke $r7.<org.htmlparser.tags.Bullet: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r7);

        $r8 = new org.htmlparser.tags.BulletList;

        specialinvoke $r8.<org.htmlparser.tags.BulletList: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r8);

        $r9 = new org.htmlparser.tags.CodeTag;

        specialinvoke $r9.<org.htmlparser.tags.CodeTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r9);

        $r10 = new org.htmlparser.tags.DefinitionList;

        specialinvoke $r10.<org.htmlparser.tags.DefinitionList: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r10);

        $r11 = new org.htmlparser.tags.DefinitionListBullet;

        specialinvoke $r11.<org.htmlparser.tags.DefinitionListBullet: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r11);

        $r12 = new org.htmlparser.tags.DoctypeTag;

        specialinvoke $r12.<org.htmlparser.tags.DoctypeTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r12);

        $r13 = new org.htmlparser.tags.FormTag;

        specialinvoke $r13.<org.htmlparser.tags.FormTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r13);

        $r14 = new org.htmlparser.tags.FrameSetTag;

        specialinvoke $r14.<org.htmlparser.tags.FrameSetTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r14);

        $r15 = new org.htmlparser.tags.FrameTag;

        specialinvoke $r15.<org.htmlparser.tags.FrameTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r15);

        $r16 = new org.htmlparser.tags.HeadingTag;

        specialinvoke $r16.<org.htmlparser.tags.HeadingTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r16);

        $r17 = new org.htmlparser.tags.ImageTag;

        specialinvoke $r17.<org.htmlparser.tags.ImageTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r17);

        $r18 = new org.htmlparser.tags.ItalicTag;

        specialinvoke $r18.<org.htmlparser.tags.ItalicTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r18);

        $r19 = new org.htmlparser.tags.InputTag;

        specialinvoke $r19.<org.htmlparser.tags.InputTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r19);

        $r20 = new org.htmlparser.tags.JspTag;

        specialinvoke $r20.<org.htmlparser.tags.JspTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r20);

        $r21 = new org.htmlparser.tags.LabelTag;

        specialinvoke $r21.<org.htmlparser.tags.LabelTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r21);

        $r22 = new org.htmlparser.tags.LinkTag;

        specialinvoke $r22.<org.htmlparser.tags.LinkTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r22);

        $r23 = new org.htmlparser.tags.LinkCSSTag;

        specialinvoke $r23.<org.htmlparser.tags.LinkCSSTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r23);

        $r24 = new org.htmlparser.tags.MetaTag;

        specialinvoke $r24.<org.htmlparser.tags.MetaTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r24);

        $r25 = new org.htmlparser.tags.ObjectTag;

        specialinvoke $r25.<org.htmlparser.tags.ObjectTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r25);

        $r26 = new org.htmlparser.tags.OptionTag;

        specialinvoke $r26.<org.htmlparser.tags.OptionTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r26);

        $r27 = new org.htmlparser.tags.ParagraphTag;

        specialinvoke $r27.<org.htmlparser.tags.ParagraphTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r27);

        $r28 = new org.htmlparser.tags.ProcessingInstructionTag;

        specialinvoke $r28.<org.htmlparser.tags.ProcessingInstructionTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r28);

        $r29 = new org.htmlparser.tags.ScriptTag;

        specialinvoke $r29.<org.htmlparser.tags.ScriptTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r29);

        $r30 = new org.htmlparser.tags.SelectTag;

        specialinvoke $r30.<org.htmlparser.tags.SelectTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r30);

        $r31 = new org.htmlparser.tags.StyleTag;

        specialinvoke $r31.<org.htmlparser.tags.StyleTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r31);

        $r32 = new org.htmlparser.tags.TableColumn;

        specialinvoke $r32.<org.htmlparser.tags.TableColumn: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r32);

        $r33 = new org.htmlparser.tags.TableHeader;

        specialinvoke $r33.<org.htmlparser.tags.TableHeader: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r33);

        $r34 = new org.htmlparser.tags.TableRow;

        specialinvoke $r34.<org.htmlparser.tags.TableRow: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r34);

        $r35 = new org.htmlparser.tags.TableTag;

        specialinvoke $r35.<org.htmlparser.tags.TableTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r35);

        $r36 = new org.htmlparser.tags.TextareaTag;

        specialinvoke $r36.<org.htmlparser.tags.TextareaTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r36);

        $r37 = new org.htmlparser.tags.TitleTag;

        specialinvoke $r37.<org.htmlparser.tags.TitleTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r37);

        $r38 = new org.htmlparser.tags.Div;

        specialinvoke $r38.<org.htmlparser.tags.Div: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r38);

        $r39 = new org.htmlparser.tags.Span;

        specialinvoke $r39.<org.htmlparser.tags.Span: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r39);

        $r40 = new org.htmlparser.tags.SubTag;

        specialinvoke $r40.<org.htmlparser.tags.SubTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r40);

        $r41 = new org.htmlparser.tags.SupTag;

        specialinvoke $r41.<org.htmlparser.tags.SupTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r41);

        $r42 = new org.htmlparser.tags.BodyTag;

        specialinvoke $r42.<org.htmlparser.tags.BodyTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r42);

        $r43 = new org.htmlparser.tags.HeadTag;

        specialinvoke $r43.<org.htmlparser.tags.HeadTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r43);

        $r44 = new org.htmlparser.tags.Html;

        specialinvoke $r44.<org.htmlparser.tags.Html: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r44);

        $r45 = new org.htmlparser.tags.BoldTag;

        specialinvoke $r45.<org.htmlparser.tags.BoldTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r45);

        $r46 = new org.htmlparser.tags.BRTag;

        specialinvoke $r46.<org.htmlparser.tags.BRTag: void <init>()>();

        specialinvoke r0.<kn: void a(org.htmlparser.Tag)>($r46);

        return;
    }

    public void <init>(byte)
    {
        kn r0;
        byte $b0;

        r0 := @this: kn;

        $b0 := @parameter0: byte;

        specialinvoke r0.<kn: void <init>()>();

        return;
    }

    private void a(org.htmlparser.Tag)
    {
        kn r0;
        java.lang.String[] $r2;
        org.htmlparser.Tag $r1;
        java.util.Locale $r4;
        java.util.Map $r5;
        int $i0, $i1;
        java.lang.String $r3;

        r0 := @this: kn;

        $r1 := @parameter0: org.htmlparser.Tag;

        $r2 = interfaceinvoke $r1.<org.htmlparser.Tag: java.lang.String[] getIds()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label2;

        $r3 = $r2[$i0];

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        $r5 = r0.<kn: java.util.Map d>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public final org.htmlparser.Tag a(kr, int, int, java.util.Vector)
    {
        java.lang.Throwable $r10, $r12, $r13;
        java.util.Vector $r1;
        java.util.Locale $r6;
        java.util.Map $r8;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7;
        boolean $z0;
        kk $r4;
        org.htmlparser.nodes.TagNode $r11;
        kn r2;
        kr $r0;
        org.htmlparser.Tag $r9;
        java.lang.Object $r3;

        r2 := @this: kn;

        $r0 := @parameter0: kr;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.util.Vector;

        $i2 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if $i2 == 0 goto label25;

        $r3 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        $r4 = (kk) $r3;

        $r5 = virtualinvoke $r4.<kk: java.lang.String a()>();

        if $r5 == null goto label25;

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

     label01:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r6);

     label02:
        $r7 = $r5;

     label03:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("/");

     label04:
        if $z0 != 0 goto label25;

     label05:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>("/");

     label06:
        if $z0 == 0 goto label11;

     label07:
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

     label08:
        $i2 = $i2 - 1;

     label09:
        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label10:
        $r7 = $r5;

     label11:
        $r8 = r2.<kn: java.util.Map d>;

     label12:
        $r3 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

     label13:
        $r9 = (org.htmlparser.Tag) $r3;

        if $r9 == null goto label25;

     label14:
        $r3 = interfaceinvoke $r9.<org.htmlparser.Tag: java.lang.Object clone()>();

     label15:
        $r9 = (org.htmlparser.Tag) $r3;

     label16:
        interfaceinvoke $r9.<org.htmlparser.Tag: void setPage(kr)>($r0);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setStartPosition(int)>($i0);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setEndPosition(int)>($i1);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setAttributesEx(java.util.Vector)>($r1);

     label17:
        if $r9 != null goto label26;

        $r9 = r2.<kn: org.htmlparser.Tag c>;

     label18:
        $r3 = interfaceinvoke $r9.<org.htmlparser.Tag: java.lang.Object clone()>();

     label19:
        $r9 = (org.htmlparser.Tag) $r3;

     label20:
        interfaceinvoke $r9.<org.htmlparser.Tag: void setPage(kr)>($r0);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setStartPosition(int)>($i0);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setEndPosition(int)>($i1);

        interfaceinvoke $r9.<org.htmlparser.Tag: void setAttributesEx(java.util.Vector)>($r1);

     label21:
        return $r9;

     label22:
        $r10 := @caughtexception;

        $r11 = new org.htmlparser.nodes.TagNode;

        specialinvoke $r11.<org.htmlparser.nodes.TagNode: void <init>(kr,int,int,java.util.Vector)>($r0, $i0, $i1, $r1);

        return $r11;

     label23:
        $r12 := @caughtexception;

        $r9 = null;

        goto label17;

     label24:
        $r13 := @caughtexception;

        goto label17;

     label25:
        $r9 = null;

        goto label17;

     label26:
        return $r9;

        catch java.lang.CloneNotSupportedException from label01 to label02 with label23;
        catch java.lang.CloneNotSupportedException from label03 to label04 with label23;
        catch java.lang.CloneNotSupportedException from label05 to label06 with label23;
        catch java.lang.CloneNotSupportedException from label07 to label08 with label23;
        catch java.lang.CloneNotSupportedException from label09 to label10 with label23;
        catch java.lang.CloneNotSupportedException from label12 to label13 with label23;
        catch java.lang.CloneNotSupportedException from label14 to label15 with label23;
        catch java.lang.CloneNotSupportedException from label16 to label17 with label24;
        catch java.lang.CloneNotSupportedException from label18 to label19 with label22;
        catch java.lang.CloneNotSupportedException from label20 to label21 with label22;
    }

    public final org.htmlparser.Text a(kr, int, int)
    {
        java.lang.Throwable $r4;
        kn r2;
        kr $r0;
        org.htmlparser.Text $r3;
        int $i0, $i1;
        java.lang.Object $r1;
        org.htmlparser.nodes.TextNode $r5;

        r2 := @this: kn;

        $r0 := @parameter0: kr;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r2.<kn: org.htmlparser.Text a>;

     label1:
        $r1 = interfaceinvoke $r3.<org.htmlparser.Text: java.lang.Object clone()>();

     label2:
        $r3 = (org.htmlparser.Text) $r1;

     label3:
        interfaceinvoke $r3.<org.htmlparser.Text: void setPage(kr)>($r0);

        interfaceinvoke $r3.<org.htmlparser.Text: void setStartPosition(int)>($i0);

        interfaceinvoke $r3.<org.htmlparser.Text: void setEndPosition(int)>($i1);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.htmlparser.nodes.TextNode;

        specialinvoke $r5.<org.htmlparser.nodes.TextNode: void <init>(kr,int,int)>($r0, $i0, $i1);

        return $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }

    public final org.htmlparser.Remark b(kr, int, int)
    {
        java.lang.Throwable $r4;
        kn r2;
        kr $r0;
        org.htmlparser.Remark $r3;
        org.htmlparser.nodes.RemarkNode $r5;
        int $i0, $i1;
        java.lang.Object $r1;

        r2 := @this: kn;

        $r0 := @parameter0: kr;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r2.<kn: org.htmlparser.Remark b>;

     label1:
        $r1 = interfaceinvoke $r3.<org.htmlparser.Remark: java.lang.Object clone()>();

     label2:
        $r3 = (org.htmlparser.Remark) $r1;

     label3:
        interfaceinvoke $r3.<org.htmlparser.Remark: void setPage(kr)>($r0);

        interfaceinvoke $r3.<org.htmlparser.Remark: void setStartPosition(int)>($i0);

        interfaceinvoke $r3.<org.htmlparser.Remark: void setEndPosition(int)>($i1);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.htmlparser.nodes.RemarkNode;

        specialinvoke $r5.<org.htmlparser.nodes.RemarkNode: void <init>(kr,int,int)>($r0, $i0, $i1);

        return $r5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }
}
