public final class org.kobjects.util.Util extends java.lang.Object
{

    public void <init>()
    {
        org.kobjects.util.Util r0;

        r0 := @this: org.kobjects.util.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String buildUrl(java.lang.String, java.lang.String)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3;
        java.lang.String $r0, r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        if $i0 != 1 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        if $i0 <= 2 goto label3;

        if $i0 < 6 goto label7;

     label3:
        if $r0 != null goto label5;

        $r0 = "file:///";

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label5:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(58);

        $i1 = -1;

        if $i0 != $i1 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:///");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label7:
        return r1;
    }

    public static int indexOf(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        int i0, $i1;
        java.lang.Object $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label3;

        $r2 = $r0[i0];

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        i0 = -1;

        return i0;
    }

    public static void sort(java.lang.Object[], int, int)
    {
        java.lang.Object[] $r0, r5;
        int $i0, $i1, i2, i3, $i4, i5, i6;
        java.lang.Object $r1, $r4;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        i3 = $i1 - $i0;

        if i3 > 2 goto label1;

        $i1 = $i1 - $i0;

        if $i1 != 2 goto label9;

        $r1 = $r0[$i0];

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i1 = $i0 + 1;

        $r1 = $r0[$i1];

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if $i1 <= 0 goto label9;

        $r1 = $r0[$i0];

        $i1 = $i0 + 1;

        $r4 = $r0[$i1];

        $r0[$i0] = $r4;

        $i0 = $i0 + 1;

        $r0[$i0] = $r1;

        return;

     label1:
        i3 = $i1 - $i0;

        if i3 != 3 goto label2;

        $i1 = $i0 + 2;

        staticinvoke <org.kobjects.util.Util: void sort(java.lang.Object[],int,int)>($r0, $i0, $i1);

        $i1 = $i0 + 1;

        i3 = $i0 + 3;

        staticinvoke <org.kobjects.util.Util: void sort(java.lang.Object[],int,int)>($r0, $i1, i3);

        $i1 = $i0 + 2;

        staticinvoke <org.kobjects.util.Util: void sort(java.lang.Object[],int,int)>($r0, $i0, $i1);

        return;

     label2:
        i3 = $i0 + $i1;

        i3 = i3 / 2;

        staticinvoke <org.kobjects.util.Util: void sort(java.lang.Object[],int,int)>($r0, $i0, i3);

        staticinvoke <org.kobjects.util.Util: void sort(java.lang.Object[],int,int)>($r0, i3, $i1);

        $i4 = $i1 - $i0;

        r5 = newarray (java.lang.Object)[$i4];

        $i4 = $i0;

        i5 = i3;

        i6 = 0;

     label3:
        i2 = lengthof r5;

        if i6 >= i2 goto label8;

        if $i4 != i3 goto label5;

        $r1 = $r0[i5];

        r5[i6] = $r1;

        i5 = i5 + 1;

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        if i5 == $i1 goto label6;

        $r1 = $r0[$i4];

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r1 = $r0[i5];

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        i2 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if i2 >= 0 goto label7;

     label6:
        $r1 = $r0[$i4];

        r5[i6] = $r1;

        $i4 = $i4 + 1;

        goto label4;

     label7:
        $r1 = $r0[i5];

        r5[i6] = $r1;

        i5 = i5 + 1;

        goto label4;

     label8:
        $i1 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r0, $i0, $i1);

     label9:
        return;
    }

    public static java.io.OutputStream streamcopy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] r2;
        java.lang.Runtime $r3;
        long $l0;
        short $s2;
        byte $b1;
        int $i3, $i4;
        java.io.InputStream $r0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r3.<java.lang.Runtime: long freeMemory()>();

        $b1 = $l0 cmp 1048576L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label3;

        $s2 = 16384;

     label1:
        r2 = newarray (byte)[$s2];

     label2:
        $i3 = lengthof r2;

        $i3 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, $i3);

        $i4 = -1;

        if $i3 != $i4 goto label4;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return $r1;

     label3:
        $s2 = 128;

        goto label1;

     label4:
        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i3);

        goto label2;
    }
}
