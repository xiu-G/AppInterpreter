final class twitter4j.examples.AsyncUpdate$1 extends twitter4j.TwitterAdapter
{

    void <init>()
    {
        twitter4j.examples.AsyncUpdate$1 r0;

        r0 := @this: twitter4j.examples.AsyncUpdate$1;

        specialinvoke r0.<twitter4j.TwitterAdapter: void <init>()>();

        return;
    }

    public void onException(twitter4j.TwitterException, twitter4j.TwitterMethod)
    {
        java.lang.Throwable $r6, $r8;
        twitter4j.examples.AsyncUpdate$1 r0;
        java.lang.AssertionError $r7;
        twitter4j.TwitterMethod $r2, $r3;
        twitter4j.TwitterException $r1;
        java.lang.Object $r4, $r5;

        r0 := @this: twitter4j.examples.AsyncUpdate$1;

        $r1 := @parameter0: twitter4j.TwitterException;

        $r2 := @parameter1: twitter4j.TwitterMethod;

        $r3 = <twitter4j.TwitterMethod: twitter4j.TwitterMethod UPDATE_STATUS>;

        if $r2 != $r3 goto label05;

        virtualinvoke $r1.<twitter4j.TwitterException: void printStackTrace()>();

        $r4 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        entermonitor $r4;

     label01:
        $r5 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor $r4;

     label02:
        return;

     label03:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label04:
        throw $r6;

     label05:
        $r4 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        entermonitor $r4;

     label06:
        $r5 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        virtualinvoke $r5.<java.lang.Object: void notify()>();

        exitmonitor $r4;

     label07:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("Should not happen");

        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor $r4;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void updatedStatus(twitter4j.Status)
    {
        java.io.PrintStream $r2;
        java.lang.Throwable $r7;
        twitter4j.examples.AsyncUpdate$1 r0;
        java.lang.StringBuffer $r3;
        twitter4j.Status $r1;
        java.lang.Object $r5, $r6;
        java.lang.String $r4;

        r0 := @this: twitter4j.examples.AsyncUpdate$1;

        $r1 := @parameter0: twitter4j.Status;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Successfully updated the status to [");

        $r4 = interfaceinvoke $r1.<twitter4j.Status: java.lang.String getText()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r5 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        entermonitor $r5;

     label1:
        $r6 = <twitter4j.examples.AsyncUpdate: java.lang.Object lock>;

        virtualinvoke $r6.<java.lang.Object: void notify()>();

        exitmonitor $r5;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
