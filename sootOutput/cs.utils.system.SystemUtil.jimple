public class cs.utils.system.SystemUtil extends java.lang.Object
{
    public static boolean debug;

    static void <clinit>()
    {
        <cs.utils.system.SystemUtil: boolean debug> = 1;

        return;
    }

    public void <init>()
    {
        cs.utils.system.SystemUtil r0;

        r0 := @this: cs.utils.system.SystemUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int dip2px(android.content.Context, float)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static android.graphics.Bitmap getBitmapFromAssets(android.content.Context, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        android.content.Context $r0;
        android.content.res.AssetManager $r2;
        android.graphics.Bitmap $r5;
        java.lang.String $r1;
        java.io.InputStream r3, $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r3 = null;

     label1:
        $r4 = virtualinvoke $r2.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label2:
        r3 = $r4;

     label3:
        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r4);

     label4:
        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>($r4, null);

        return $r5;

     label5:
        $r6 := @caughtexception;

        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>(r3, null);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static android.graphics.drawable.Drawable getFromAssets(android.content.Context, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        android.content.res.AssetManager $r3;
        java.lang.String $r1;
        android.graphics.drawable.Drawable $r6;
        java.io.InputStream r4, $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        r4 = null;

     label1:
        $r5 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>("close_btn.png");

     label2:
        r4 = $r5;

     label3:
        $r6 = staticinvoke <android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r5, "close_btn.png");

     label4:
        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>($r5, null);

        return $r6;

     label5:
        $r2 := @caughtexception;

        staticinvoke <cs.utils.io.StreamUtils: void closeStream(java.io.Closeable,java.io.OutputStream)>(r4, null);

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static int getNetworkState(android.content.Context)
    {
        android.net.ConnectivityManager r2;
        android.content.Context $r0;
        int $i0;
        android.net.NetworkInfo $r3;
        java.lang.Object $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        if $i0 != 1 goto label3;

        return 2;

     label3:
        return 1;
    }

    public static java.lang.String getVersionName(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        java.lang.Exception r1;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 0);

        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label2:
        return $r3;

     label3:
        r1 := @caughtexception;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static android.util.DisplayMetrics init(android.content.Context)
    {
        android.content.Context $r0;
        android.util.DisplayMetrics r1;
        android.content.res.Resources $r2;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        return r1;
    }

    public static boolean isXiaomi()
    {
        java.io.PrintStream $r2;
        java.lang.String r0, $r1;
        boolean $z0;

        r0 = <android.os.Build: java.lang.String BRAND>;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = <android.os.Build: java.lang.String BRAND>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Xiaomi");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int px2dip(android.content.Context, float)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, f1;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }
}
