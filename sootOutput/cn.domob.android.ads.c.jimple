final class cn.domob.android.ads.c extends android.database.sqlite.SQLiteOpenHelper
{
    protected static android.net.Uri a;
    protected static android.net.Uri b;
    private static cn.domob.android.ads.c d;
    private static android.net.Uri f;
    private static android.net.Uri g;
    private static final android.content.UriMatcher h;
    private android.content.Context c;
    private android.database.sqlite.SQLiteDatabase e;

    static void <clinit>()
    {
        android.net.Uri $r0;
        android.content.UriMatcher $r1, $r2;

        <cn.domob.android.ads.c: cn.domob.android.ads.c d> = null;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://domob/def_res");

        <cn.domob.android.ads.c: android.net.Uri a> = $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://domob/tmp_res");

        <cn.domob.android.ads.c: android.net.Uri b> = $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://domob/conf");

        <cn.domob.android.ads.c: android.net.Uri f> = $r0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://domob/key_value_conf");

        <cn.domob.android.ads.c: android.net.Uri g> = $r0;

        $r2 = new android.content.UriMatcher;

        $r1 = $r2;

        specialinvoke $r2.<android.content.UriMatcher: void <init>(int)>(-1);

        <cn.domob.android.ads.c: android.content.UriMatcher h> = $r1;

        virtualinvoke $r1.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("domob", "def_res", 1);

        $r1 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        virtualinvoke $r1.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("domob", "tmp_res", 2);

        $r1 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        virtualinvoke $r1.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("domob", "conf", 3);

        $r1 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        virtualinvoke $r1.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("domob", "key_value_conf", 4);

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        cn.domob.android.ads.c r0;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "domob_ads.db", null, 1);

        r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e> = null;

        $r2 = virtualinvoke r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e> = $r2;

        r0.<cn.domob.android.ads.c: android.content.Context c> = $r1;

        $r2 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        specialinvoke r0.<cn.domob.android.ads.c: void a(android.database.sqlite.SQLiteDatabase)>($r2);

        return;
    }

    private int a(android.net.Uri, android.content.ContentValues, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r5;
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        android.content.UriMatcher $r4;
        android.database.sqlite.SQLiteDatabase $r8;
        int $i0;
        java.lang.StringBuilder $r6;
        android.content.ContentValues $r2;
        java.lang.String $r3, $r7;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 := @parameter2: java.lang.String;

        $r4 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        $i0 = virtualinvoke $r4.<android.content.UriMatcher: int match(android.net.Uri)>($r1);

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query not supported for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label2:
        $r7 = "def_res";

     label3:
        $r8 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        $i0 = virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>($r7, $r2, $r3, null);

        return $i0;

     label4:
        $r7 = "tmp_res";

        goto label3;

     label5:
        $r7 = "conf";

        goto label3;
    }

    private android.database.Cursor a(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        java.lang.UnsupportedOperationException $r8;
        android.database.sqlite.SQLiteQueryBuilder $r6;
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        java.lang.String[] $r2, $r4;
        android.content.UriMatcher $r7;
        android.database.sqlite.SQLiteDatabase $r10;
        int $i0;
        java.lang.StringBuilder $r9;
        java.lang.String $r3, $r5;
        android.database.Cursor $r11;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String[];

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String[];

        $r5 := @parameter4: java.lang.String;

        $r6 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        $r7 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        $i0 = virtualinvoke $r7.<android.content.UriMatcher: int match(android.net.Uri)>($r1);

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query not supported for ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label2:
        virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("def_res");

     label3:
        $r10 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        $r11 = virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r10, null, $r3, null, null, null, $r5);

        return $r11;

     label4:
        virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("tmp_res");

        goto label3;

     label5:
        virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("conf");

        goto label3;

     label6:
        virtualinvoke $r6.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("key_value_conf");

        goto label3;
    }

    protected static cn.domob.android.ads.c a(android.content.Context)
    {
        java.lang.Throwable $r2;
        android.content.Context $r0;
        cn.domob.android.ads.c $r1;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcn/domob/android/ads/c;";

     label1:
        $r1 = <cn.domob.android.ads.c: cn.domob.android.ads.c d>;

        if $r1 != null goto label2;

        $r1 = new cn.domob.android.ads.c;

        specialinvoke $r1.<cn.domob.android.ads.c: void <init>(android.content.Context)>($r0);

        <cn.domob.android.ads.c: cn.domob.android.ads.c d> = $r1;

     label2:
        $r1 = <cn.domob.android.ads.c: cn.domob.android.ads.c d>;

     label3:
        exitmonitor class "Lcn/domob/android/ads/c;";

        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor class "Lcn/domob/android/ads/c;";

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private void a(android.database.sqlite.SQLiteDatabase)
    {
        java.lang.Throwable $r16;
        android.content.Context $r13;
        android.net.Uri $r11;
        cn.domob.android.ads.c r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;
        java.lang.String $r7, $r9;
        java.util.Hashtable $r3;
        android.database.Cursor $r2, $r8;
        boolean $z0;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Exception $r12, $r15;
        java.lang.Object $r6;
        java.lang.StringBuilder $r14;
        android.content.ContentValues $r10;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = null;

     label01:
        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS key_value_conf(key_column VARCHAR NOT NULL PRIMARY KEY,value_column TEXT  );");

        $r3 = staticinvoke <cn.domob.android.ads.c$a: java.util.Hashtable a()>();

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $r2 = null;

     label03:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 == 0 goto label23;

     label05:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke r0.<cn.domob.android.ads.c: android.database.Cursor a(java.lang.String)>($r7);

     label06:
        $r2 = $r8;

        if $r8 == null goto label09;

     label07:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

     label08:
        if $i0 != 0 goto label03;

     label09:
        $r3 = staticinvoke <cn.domob.android.ads.c$a: java.util.Hashtable a()>();

        $r6 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r7);

        $r9 = (java.lang.String) $r6;

     label10:
        $r10 = new android.content.ContentValues;

     label11:
        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r10.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("key_column", $r7);

        virtualinvoke $r10.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value_column", $r9);

     label12:
        $r11 = <cn.domob.android.ads.c: android.net.Uri g>;

     label13:
        virtualinvoke r0.<cn.domob.android.ads.c: android.net.Uri a(android.net.Uri,android.content.ContentValues)>($r11, $r10);

     label14:
        goto label03;

     label15:
        $r12 := @caughtexception;

     label16:
        $r13 = r0.<cn.domob.android.ads.c: android.content.Context c>;

     label17:
        $r14 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kvConfAdd has an exception ");

        $r7 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.domob.android.ads.w: void b(java.lang.Object,java.lang.String)>($r13, $r7);

     label19:
        goto label03;

     label20:
        $r15 := @caughtexception;

     label21:
        $r13 = r0.<cn.domob.android.ads.c: android.content.Context c>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createOrUpdateKvConf has an exception ");

        $r7 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.domob.android.ads.w: void b(java.lang.Object,java.lang.String)>($r13, $r7);

     label22:
        if $r2 == null goto label30;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return;

     label23:
        if $r2 == null goto label30;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return;

     label24:
        $r16 := @caughtexception;

        $r2 = null;

     label25:
        if $r2 == null goto label26;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label26:
        throw $r16;

     label27:
        $r16 := @caughtexception;

        goto label25;

     label28:
        $r16 := @caughtexception;

        goto label25;

     label29:
        $r15 := @caughtexception;

        goto label21;

     label30:
        return;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Exception from label03 to label04 with label20;
        catch java.lang.Exception from label05 to label06 with label20;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Throwable from label10 to label14 with label27;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label16 to label19 with label27;
        catch java.lang.Throwable from label21 to label22 with label28;
    }

    protected static void a(cn.domob.android.ads.c, java.lang.String, byte[], long)
    {
        java.lang.Throwable $r11;
        byte[] $r2;
        android.net.Uri $r4;
        cn.domob.android.ads.c $r0;
        long $l0;
        java.lang.Exception $r10;
        java.lang.Long $r9;
        int $i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r1, $r7;
        android.content.ContentValues $r8;
        android.database.Cursor $r3, $r5;
        boolean $z0;

        $r0 := @parameter0: cn.domob.android.ads.c;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

        $l0 := @parameter3: long;

        $r3 = null;

     label01:
        $r4 = <cn.domob.android.ads.c: android.net.Uri a>;

     label02:
        $r5 = virtualinvoke $r0.<cn.domob.android.ads.c: android.database.Cursor b(android.net.Uri,java.lang.String)>($r4, $r1);

     label03:
        $r3 = $r5;

        if $r5 == null goto label06;

     label04:
        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

     label05:
        if $i1 != 0 goto label15;

     label06:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label07:
        if $z0 == 0 goto label10;

     label08:
        $r6 = new java.lang.StringBuilder;

     label09:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert def_res:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r7);

     label10:
        $r8 = new android.content.ContentValues;

     label11:
        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_name", $r1);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_date", $r9);

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,byte[])>("_image", $r2);

     label12:
        $r4 = <cn.domob.android.ads.c: android.net.Uri a>;

     label13:
        virtualinvoke $r0.<cn.domob.android.ads.c: android.net.Uri a(android.net.Uri,android.content.ContentValues)>($r4, $r8);

     label14:
        if $r5 == null goto label31;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

        return;

     label15:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label16:
        if $z0 == 0 goto label19;

     label17:
        $r6 = new java.lang.StringBuilder;

     label18:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update def_res:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r7);

     label19:
        $r8 = new android.content.ContentValues;

     label20:
        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,byte[])>("_image", $r2);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_date", $r9);

     label21:
        $r4 = <cn.domob.android.ads.c: android.net.Uri a>;

     label22:
        if $r4 == null goto label14;

        if $r1 == null goto label14;

     label23:
        $r6 = new java.lang.StringBuilder;

     label24:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_name=\"");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<cn.domob.android.ads.c: int a(android.net.Uri,android.content.ContentValues,java.lang.String)>($r4, $r8, $r1);

     label25:
        goto label14;

     label26:
        $r10 := @caughtexception;

     label27:
        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

     label28:
        if $r3 == null goto label31;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return;

     label29:
        $r11 := @caughtexception;

        if $r3 == null goto label30;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label30:
        throw $r11;

     label31:
        return;

        catch java.lang.Exception from label02 to label03 with label26;
        catch java.lang.Exception from label04 to label05 with label26;
        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Exception from label11 to label12 with label26;
        catch java.lang.Exception from label13 to label14 with label26;
        catch java.lang.Throwable from label01 to label03 with label29;
        catch java.lang.Throwable from label04 to label05 with label29;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.lang.Throwable from label08 to label14 with label29;
        catch java.lang.Exception from label15 to label16 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label22 with label29;
        catch java.lang.Throwable from label23 to label25 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
    }

    protected final int a(android.content.ContentValues)
    {
        java.lang.Throwable $r6, $r7;
        android.net.Uri $r4;
        cn.domob.android.ads.c r0;
        java.lang.Exception $r5;
        int $i0, $i1;
        android.content.ContentValues $r1;
        android.database.Cursor $r2, $r3;
        boolean $z0;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.content.ContentValues;

        $r2 = null;

        entermonitor r0;

        $i0 = -1;

     label01:
        $r3 = virtualinvoke r0.<cn.domob.android.ads.c: android.database.Cursor b()>();

     label02:
        $r2 = $r3;

        if $r3 == null goto label05;

     label03:
        $i1 = interfaceinvoke $r3.<android.database.Cursor: int getCount()>();

     label04:
        if $i1 != 0 goto label11;

     label05:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label06:
        if $z0 == 0 goto label08;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "conf db is empty!");

     label08:
        if $r3 == null goto label10;

     label09:
        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label10:
        exitmonitor r0;

        return $i0;

     label11:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label12:
        if $z0 == 0 goto label14;

     label13:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "update data in conf db.");

     label14:
        interfaceinvoke $r3.<android.database.Cursor: boolean moveToFirst()>();

     label15:
        $r4 = <cn.domob.android.ads.c: android.net.Uri f>;

     label16:
        $i1 = specialinvoke r0.<cn.domob.android.ads.c: int a(android.net.Uri,android.content.ContentValues,java.lang.String)>($r4, $r1, null);

     label17:
        $i0 = $i1;

        goto label08;

     label18:
        $r5 := @caughtexception;

     label19:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label20:
        if $r2 == null goto label10;

     label21:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label22:
        goto label10;

     label23:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

     label24:
        $r7 := @caughtexception;

        if $r2 == null goto label26;

     label25:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label26:
        throw $r7;

     label27:
        nop;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Throwable from label01 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label13 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label11 to label17 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label25 to label27 with label23;
    }

    protected final int a(android.net.Uri)
    {
        java.lang.Throwable $r8;
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        java.lang.Exception $r7;
        int $i0;
        java.lang.StringBuilder $r4, $r9;
        java.lang.String $r5, $r6;
        android.database.Cursor $r2, $r3;
        boolean $z0;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

     label01:
        $r2 = specialinvoke r0.<cn.domob.android.ads.c: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, null, null, null, "_date ASC");

     label02:
        $r3 = $r2;

        if $r2 == null goto label24;

     label03:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

     label04:
        if $i0 < 40 goto label24;

     label05:
        interfaceinvoke $r2.<android.database.Cursor: boolean moveToFirst()>();

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_name");

     label06:
        $r9 = new java.lang.StringBuilder;

     label07:
        $r4 = $r9;

     label08:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_name=\"");

        $r5 = interfaceinvoke $r2.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label09:
        if $z0 == 0 goto label13;

     label10:
        $r9 = new java.lang.StringBuilder;

     label11:
        $r4 = $r9;

     label12:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exceed to max, delete the old cache:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", $r6);

     label13:
        $i0 = virtualinvoke r0.<cn.domob.android.ads.c: int a(android.net.Uri,java.lang.String)>($r1, $r5);

     label14:
        if $r2 == null goto label25;

        interfaceinvoke $r2.<android.database.Cursor: void close()>();

        return $i0;

     label15:
        $r7 := @caughtexception;

        $r3 = null;

     label16:
        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label17:
        if $r3 == null goto label23;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        return -1;

     label18:
        $r8 := @caughtexception;

        $r3 = null;

     label19:
        if $r3 == null goto label20;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label20:
        throw $r8;

     label21:
        $r8 := @caughtexception;

        goto label19;

     label22:
        $r7 := @caughtexception;

        goto label16;

     label23:
        return -1;

     label24:
        $i0 = -1;

        goto label14;

     label25:
        return $i0;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Throwable from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label12 to label14 with label22;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label07 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label14 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
    }

    protected final int a(android.net.Uri, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r4;
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        android.content.UriMatcher $r3;
        android.database.sqlite.SQLiteDatabase $r7;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r6;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        $r3 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        $i0 = virtualinvoke $r3.<android.content.UriMatcher: int match(android.net.Uri)>($r1);

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query not supported for ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label2:
        $r6 = "def_res";

     label3:
        $r7 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        $i0 = virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>($r6, $r2, null);

        return $i0;

     label4:
        $r6 = "tmp_res";

        goto label3;

     label5:
        $r6 = "conf";

        goto label3;
    }

    protected final int a(java.lang.String, android.content.ContentValues)
    {
        android.content.Context $r6;
        cn.domob.android.ads.c r0;
        java.lang.Exception $r5;
        android.database.sqlite.SQLiteDatabase $r4;
        int $i0;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r1;
        android.content.ContentValues $r2;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.ContentValues;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label1:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key_column=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m_need_det_time");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        $i0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("key_value_conf", $r2, $r1, null);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<cn.domob.android.ads.c: android.content.Context c>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kvConfUpdate has an exception ");

        $r1 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.domob.android.ads.w: void b(java.lang.Object,java.lang.String)>($r6, $r1);

        return -1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected final android.content.Context a()
    {
        android.content.Context r1;
        cn.domob.android.ads.c r0;

        r0 := @this: cn.domob.android.ads.c;

        r1 = r0.<cn.domob.android.ads.c: android.content.Context c>;

        return r1;
    }

    protected final android.database.Cursor a(java.lang.String)
    {
        android.content.Context $r6;
        android.net.Uri $r2;
        cn.domob.android.ads.c r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1;
        java.lang.Exception $r5;
        android.database.Cursor $r4;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = <cn.domob.android.ads.c: android.net.Uri g>;

        $r3 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key_column=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = specialinvoke r0.<cn.domob.android.ads.c: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r2, null, $r1, null, null);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = r0.<cn.domob.android.ads.c: android.content.Context c>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKvConfig has an exception ");

        $r1 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <cn.domob.android.ads.w: void b(java.lang.Object,java.lang.String)>($r6, $r1);

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected final android.net.Uri a(android.net.Uri, android.content.ContentValues)
    {
        java.lang.UnsupportedOperationException $r8;
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        long $l1;
        android.content.UriMatcher $r3;
        android.database.sqlite.SQLiteDatabase $r6;
        byte $b2;
        int $i0;
        java.lang.StringBuilder $r4, $r7;
        android.content.ContentValues $r2;
        java.lang.String $r5;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.content.ContentValues;

        $r3 = <cn.domob.android.ads.c: android.content.UriMatcher h>;

        $i0 = virtualinvoke $r3.<android.content.UriMatcher: int match(android.net.Uri)>($r1);

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Query not supported for ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label2:
        $r5 = "def_res";

     label3:
        $r6 = r0.<cn.domob.android.ads.c: android.database.sqlite.SQLiteDatabase e>;

        $l1 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r5, null, $r2);

        $b2 = $l1 cmp 0L;

        $i0 = (int) $b2;

        if $i0 > 0 goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insert: failed! ");

        $r5 = virtualinvoke $r2.<android.content.ContentValues: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DomobSDK", $r5);

        return null;

     label4:
        $r5 = "tmp_res";

        goto label3;

     label5:
        $r5 = "conf";

        goto label3;

     label6:
        $r5 = "key_value_conf";

        goto label3;

     label7:
        $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, $l1);

        return $r1;
    }

    protected final android.database.Cursor b()
    {
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        android.database.Cursor $r2;

        r0 := @this: cn.domob.android.ads.c;

        $r1 = <cn.domob.android.ads.c: android.net.Uri f>;

        $r2 = specialinvoke r0.<cn.domob.android.ads.c: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, null, null, null, null);

        return $r2;
    }

    protected final android.database.Cursor b(android.net.Uri, java.lang.String)
    {
        android.net.Uri $r1;
        cn.domob.android.ads.c r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        android.database.Cursor $r4;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label2;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_name=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = specialinvoke r0.<cn.domob.android.ads.c: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, null, $r2, null, null);

        return $r4;

     label2:
        return null;
    }

    protected final void c()
    {
        java.lang.Throwable $r9, $r10;
        android.net.Uri $r7;
        cn.domob.android.ads.c r0;
        java.util.UUID $r5;
        java.lang.Integer $r4;
        java.lang.Exception $r8;
        int $i0;
        android.content.ContentValues $r3;
        java.lang.String $r6;
        android.database.Cursor $r1, $r2;
        boolean $z0;

        r0 := @this: cn.domob.android.ads.c;

        entermonitor r0;

        $r1 = null;

     label01:
        $r2 = virtualinvoke r0.<cn.domob.android.ads.c: android.database.Cursor b()>();

     label02:
        $r1 = $r2;

        if $r2 == null goto label05;

     label03:
        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

     label04:
        if $i0 != 0 goto label17;

     label05:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label06:
        if $z0 == 0 goto label08;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "initializing conf db!");

     label08:
        $r3 = new android.content.ContentValues;

     label09:
        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_conf_ver", "2012-12-20:00:00:00");

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_res_ver", "2012-12-20:00:00:00");

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_dis_flag", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_dis_time", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_dis_timestamp", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_interval", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_test_flag", $r4);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("_avg_time", $r4);

        $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

     label10:
        if $r5 == null goto label12;

     label11:
        $r6 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_uuid", $r6);

     label12:
        $r7 = <cn.domob.android.ads.c: android.net.Uri f>;

     label13:
        virtualinvoke r0.<cn.domob.android.ads.c: android.net.Uri a(android.net.Uri,android.content.ContentValues)>($r7, $r3);

     label14:
        if $r2 == null goto label16;

     label15:
        interfaceinvoke $r2.<android.database.Cursor: void close()>();

     label16:
        exitmonitor r0;

        return;

     label17:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DomobSDK", 3);

     label18:
        if $z0 == 0 goto label14;

     label19:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DomobSDK", "conf db has already been initialized!");

     label20:
        goto label14;

     label21:
        $r8 := @caughtexception;

     label22:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label23:
        if $r1 == null goto label16;

     label24:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label25:
        goto label16;

     label26:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

     label27:
        $r10 := @caughtexception;

        if $r1 == null goto label29;

     label28:
        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label29:
        throw $r10;

     label30:
        nop;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Throwable from label01 to label14 with label27;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label20 with label27;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label28 to label30 with label26;
    }

    public final void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        cn.domob.android.ads.c r0;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS def_res(_id INTEGER NOT NULL PRIMARY KEY,_name TEXT ,_image BLOB ,_date LONG );");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS tmp_res(_id INTEGER NOT NULL PRIMARY KEY,_name TEXT ,_image BLOB ,_date LONG );");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS conf(_id INTEGER NOT NULL PRIMARY KEY,_conf_ver TEXT ,_res_ver TEXT ,_interval INTEGER ,_test_flag BOOLEAN ,_dis_flag BOOLEAN ,_dis_time LONG ,_dis_timestamp LONG ,_uuid TEXT ,_cid TEXT ,_avg_time LONG );");

        return;
    }

    public final void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0, $i1;
        cn.domob.android.ads.c r0;

        r0 := @this: cn.domob.android.ads.c;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS def_res;");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS tmp_res;");

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS conf;");

        virtualinvoke r0.<cn.domob.android.ads.c: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1);

        return;
    }
}
