public class b.d.a.a extends android.widget.FrameLayout
{
    private static final b.d.a.f f;
    private boolean b;
    private boolean c;
    final android.graphics.Rect d;
    private final b.d.a.e e;

    static void <clinit>()
    {
        b.d.a.b $r1;
        int $i0;
        b.d.a.d $r2;
        b.d.a.c $r0;
        b.d.a.f $r3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r0 = new b.d.a.c;

        specialinvoke $r0.<b.d.a.c: void <init>()>();

        <b.d.a.a: b.d.a.f f> = $r0;

        goto label3;

     label1:
        if $i0 < 17 goto label2;

        $r1 = new b.d.a.b;

        specialinvoke $r1.<b.d.a.b: void <init>()>();

        <b.d.a.a: b.d.a.f f> = $r1;

        goto label3;

     label2:
        $r2 = new b.d.a.d;

        specialinvoke $r2.<b.d.a.d: void <init>()>();

        <b.d.a.a: b.d.a.f f> = $r2;

     label3:
        $r3 = <b.d.a.a: b.d.a.f f>;

        interfaceinvoke $r3.<b.d.a.f: void e()>();

        return;
    }

    public android.content.res.ColorStateList getCardBackgroundColor()
    {
        android.content.res.ColorStateList $r2;
        b.d.a.a r0;
        b.d.a.f $r3;
        b.d.a.e $r1;

        r0 := @this: b.d.a.a;

        $r3 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $r2 = interfaceinvoke $r3.<b.d.a.f: android.content.res.ColorStateList b(b.d.a.e)>($r1);

        return $r2;
    }

    public float getCardElevation()
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r2;
        b.d.a.e $r1;

        r0 := @this: b.d.a.a;

        $r2 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $f0 = interfaceinvoke $r2.<b.d.a.f: float d(b.d.a.e)>($r1);

        return $f0;
    }

    public int getContentPaddingBottom()
    {
        int i0;
        android.graphics.Rect $r1;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $r1 = r0.<b.d.a.a: android.graphics.Rect d>;

        i0 = $r1.<android.graphics.Rect: int bottom>;

        return i0;
    }

    public int getContentPaddingLeft()
    {
        int i0;
        android.graphics.Rect $r1;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $r1 = r0.<b.d.a.a: android.graphics.Rect d>;

        i0 = $r1.<android.graphics.Rect: int left>;

        return i0;
    }

    public int getContentPaddingRight()
    {
        int i0;
        android.graphics.Rect $r1;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $r1 = r0.<b.d.a.a: android.graphics.Rect d>;

        i0 = $r1.<android.graphics.Rect: int right>;

        return i0;
    }

    public int getContentPaddingTop()
    {
        int i0;
        android.graphics.Rect $r1;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $r1 = r0.<b.d.a.a: android.graphics.Rect d>;

        i0 = $r1.<android.graphics.Rect: int top>;

        return i0;
    }

    public float getMaxCardElevation()
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r2;
        b.d.a.e $r1;

        r0 := @this: b.d.a.a;

        $r2 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $f0 = interfaceinvoke $r2.<b.d.a.f: float a(b.d.a.e)>($r1);

        return $f0;
    }

    public boolean getPreventCornerOverlap()
    {
        b.d.a.a r0;
        boolean z0;

        r0 := @this: b.d.a.a;

        z0 = r0.<b.d.a.a: boolean c>;

        return z0;
    }

    public float getRadius()
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r2;
        b.d.a.e $r1;

        r0 := @this: b.d.a.a;

        $r2 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $f0 = interfaceinvoke $r2.<b.d.a.f: float f(b.d.a.e)>($r1);

        return $f0;
    }

    public boolean getUseCompatPadding()
    {
        b.d.a.a r0;
        boolean z0;

        r0 := @this: b.d.a.a;

        z0 = r0.<b.d.a.a: boolean b>;

        return z0;
    }

    protected void onMeasure(int, int)
    {
        b.d.a.a r0;
        int $i0, $i1, $i2, $i3;
        float $f0;
        b.d.a.f $r2;
        b.d.a.e $r1;
        boolean $z0;
        double $d0;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = <b.d.a.a: b.d.a.f f>;

        $z0 = $r2 instanceof b.d.a.c;

        if $z0 != 0 goto label5;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        if $i2 == -2147483648 goto label1;

        if $i2 == 1073741824 goto label1;

        goto label2;

     label1:
        $r2 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $f0 = interfaceinvoke $r2.<b.d.a.f: float h(b.d.a.e)>($r1);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i3 = (int) $d0;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i0);

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, $i2);

     label2:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i2 == -2147483648 goto label3;

        if $i2 == 1073741824 goto label3;

        goto label4;

     label3:
        $r2 = <b.d.a.a: b.d.a.f f>;

        $r1 = r0.<b.d.a.a: b.d.a.e e>;

        $f0 = interfaceinvoke $r2.<b.d.a.f: float g(b.d.a.e)>($r1);

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i3 = (int) $d0;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i1);

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, $i2);

     label4:
        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        return;

     label5:
        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);

        return;
    }

    public void setCardBackgroundColor(int)
    {
        android.content.res.ColorStateList $r3;
        b.d.a.a r0;
        int $i0;
        b.d.a.f $r1;
        b.d.a.e $r2;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        $r3 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        interfaceinvoke $r1.<b.d.a.f: void l(b.d.a.e,android.content.res.ColorStateList)>($r2, $r3);

        return;
    }

    public void setCardBackgroundColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        b.d.a.a r0;
        b.d.a.f $r2;
        b.d.a.e $r3;

        r0 := @this: b.d.a.a;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = <b.d.a.a: b.d.a.f f>;

        $r3 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r2.<b.d.a.f: void l(b.d.a.e,android.content.res.ColorStateList)>($r3, $r1);

        return;
    }

    public void setCardElevation(float)
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r1;
        b.d.a.e $r2;

        r0 := @this: b.d.a.a;

        $f0 := @parameter0: float;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r1.<b.d.a.f: void j(b.d.a.e,float)>($r2, $f0);

        return;
    }

    public void setMaxCardElevation(float)
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r1;
        b.d.a.e $r2;

        r0 := @this: b.d.a.a;

        $f0 := @parameter0: float;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r1.<b.d.a.f: void m(b.d.a.e,float)>($r2, $f0);

        return;
    }

    public void setMinimumHeight(int)
    {
        int $i0;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.FrameLayout: void setMinimumHeight(int)>($i0);

        return;
    }

    public void setMinimumWidth(int)
    {
        int $i0;
        b.d.a.a r0;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        specialinvoke r0.<android.widget.FrameLayout: void setMinimumWidth(int)>($i0);

        return;
    }

    public void setPadding(int, int, int, int)
    {
        b.d.a.a r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        return;
    }

    public void setPaddingRelative(int, int, int, int)
    {
        b.d.a.a r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: b.d.a.a;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        return;
    }

    public void setPreventCornerOverlap(boolean)
    {
        b.d.a.a r0;
        b.d.a.f $r1;
        b.d.a.e $r2;
        boolean $z0, $z1;

        r0 := @this: b.d.a.a;

        $z0 := @parameter0: boolean;

        $z1 = r0.<b.d.a.a: boolean c>;

        if $z0 == $z1 goto label1;

        r0.<b.d.a.a: boolean c> = $z0;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r1.<b.d.a.f: void k(b.d.a.e)>($r2);

     label1:
        return;
    }

    public void setRadius(float)
    {
        b.d.a.a r0;
        float $f0;
        b.d.a.f $r1;
        b.d.a.e $r2;

        r0 := @this: b.d.a.a;

        $f0 := @parameter0: float;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r1.<b.d.a.f: void c(b.d.a.e,float)>($r2, $f0);

        return;
    }

    public void setUseCompatPadding(boolean)
    {
        b.d.a.a r0;
        b.d.a.f $r1;
        b.d.a.e $r2;
        boolean $z0, $z1;

        r0 := @this: b.d.a.a;

        $z0 := @parameter0: boolean;

        $z1 = r0.<b.d.a.a: boolean b>;

        if $z1 == $z0 goto label1;

        r0.<b.d.a.a: boolean b> = $z0;

        $r1 = <b.d.a.a: b.d.a.f f>;

        $r2 = r0.<b.d.a.a: b.d.a.e e>;

        interfaceinvoke $r1.<b.d.a.f: void i(b.d.a.e)>($r2);

     label1:
        return;
    }
}
