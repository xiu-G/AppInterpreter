public final class com.google.mygson.internal.bind.MapTypeAdapterFactory extends java.lang.Object implements com.google.mygson.TypeAdapterFactory
{
    private final boolean complexMapKeySerialization;
    private final com.google.mygson.internal.ConstructorConstructor constructorConstructor;

    public void <init>(com.google.mygson.internal.ConstructorConstructor, boolean)
    {
        com.google.mygson.internal.ConstructorConstructor $r1;
        com.google.mygson.internal.bind.MapTypeAdapterFactory r0;
        boolean $z0;

        r0 := @this: com.google.mygson.internal.bind.MapTypeAdapterFactory;

        $r1 := @parameter0: com.google.mygson.internal.ConstructorConstructor;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.mygson.internal.bind.MapTypeAdapterFactory: com.google.mygson.internal.ConstructorConstructor constructorConstructor> = $r1;

        r0.<com.google.mygson.internal.bind.MapTypeAdapterFactory: boolean complexMapKeySerialization> = $z0;

        return;
    }

    static boolean access$000(com.google.mygson.internal.bind.MapTypeAdapterFactory)
    {
        com.google.mygson.internal.bind.MapTypeAdapterFactory $r0;
        boolean z0;

        $r0 := @parameter0: com.google.mygson.internal.bind.MapTypeAdapterFactory;

        z0 = $r0.<com.google.mygson.internal.bind.MapTypeAdapterFactory: boolean complexMapKeySerialization>;

        return z0;
    }

    static com.google.mygson.JsonElement access$100(com.google.mygson.TypeAdapter, java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.mygson.TypeAdapter $r0;
        com.google.mygson.JsonElement $r2;

        $r0 := @parameter0: com.google.mygson.TypeAdapter;

        $r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.mygson.internal.bind.MapTypeAdapterFactory: com.google.mygson.JsonElement toJsonTree(com.google.mygson.TypeAdapter,java.lang.Object)>($r0, $r1);

        return $r2;
    }

    private com.google.mygson.TypeAdapter getKeyAdapter(com.google.mygson.Gson, java.lang.reflect.Type)
    {
        com.google.mygson.reflect.TypeToken $r4;
        java.lang.reflect.Type $r2;
        java.lang.Class $r3;
        com.google.mygson.Gson $r1;
        com.google.mygson.TypeAdapter $r5;
        com.google.mygson.internal.bind.MapTypeAdapterFactory r0;

        r0 := @this: com.google.mygson.internal.bind.MapTypeAdapterFactory;

        $r1 := @parameter0: com.google.mygson.Gson;

        $r2 := @parameter1: java.lang.reflect.Type;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if $r2 == $r3 goto label1;

        if $r2 != class "Ljava/lang/Boolean;" goto label2;

     label1:
        $r5 = <com.google.mygson.internal.bind.TypeAdapters: com.google.mygson.TypeAdapter BOOLEAN_AS_STRING>;

        return $r5;

     label2:
        $r4 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r2);

        $r5 = virtualinvoke $r1.<com.google.mygson.Gson: com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)>($r4);

        return $r5;
    }

    private static com.google.mygson.JsonElement toJsonTree(com.google.mygson.TypeAdapter, java.lang.Object)
    {
        java.lang.Throwable r2;
        com.google.mygson.internal.bind.JsonTreeWriter r3;
        com.google.mygson.JsonIOException $r5;
        com.google.mygson.JsonElement $r4;
        java.lang.Object r1;
        com.google.mygson.TypeAdapter r0;

        r0 := @parameter0: com.google.mygson.TypeAdapter;

        r1 := @parameter1: java.lang.Object;

        r3 = new com.google.mygson.internal.bind.JsonTreeWriter;

     label1:
        specialinvoke r3.<com.google.mygson.internal.bind.JsonTreeWriter: void <init>()>();

        virtualinvoke r3.<com.google.mygson.internal.bind.JsonTreeWriter: void setLenient(boolean)>(1);

        virtualinvoke r0.<com.google.mygson.TypeAdapter: void write(com.google.mygson.stream.JsonWriter,java.lang.Object)>(r3, r1);

        $r4 = virtualinvoke r3.<com.google.mygson.internal.bind.JsonTreeWriter: com.google.mygson.JsonElement get()>();

     label2:
        return $r4;

     label3:
        r2 := @caughtexception;

        $r5 = new com.google.mygson.JsonIOException;

        specialinvoke $r5.<com.google.mygson.JsonIOException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public com.google.mygson.TypeAdapter create(com.google.mygson.Gson, com.google.mygson.reflect.TypeToken)
    {
        com.google.mygson.internal.bind.MapTypeAdapterFactory$Adapter r12;
        com.google.mygson.Gson $r1;
        com.google.mygson.internal.bind.MapTypeAdapterFactory r0;
        com.google.mygson.reflect.TypeToken r2, $r8;
        java.lang.reflect.Type $r3, $r13;
        java.lang.reflect.Type[] $r6;
        com.google.mygson.internal.ConstructorConstructor $r10;
        java.lang.Class $r4, $r5;
        com.google.mygson.TypeAdapter $r7, $r9;
        com.google.mygson.internal.ObjectConstructor $r11;
        boolean $z0;

        r0 := @this: com.google.mygson.internal.bind.MapTypeAdapterFactory;

        $r1 := @parameter0: com.google.mygson.Gson;

        r2 := @parameter1: com.google.mygson.reflect.TypeToken;

        $r3 = virtualinvoke r2.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r4 = virtualinvoke r2.<com.google.mygson.reflect.TypeToken: java.lang.Class getRawType()>();

        $r5 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>($r3);

        $r6 = staticinvoke <com.google.mygson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)>($r3, $r4);

        $r3 = $r6[0];

        $r7 = specialinvoke r0.<com.google.mygson.internal.bind.MapTypeAdapterFactory: com.google.mygson.TypeAdapter getKeyAdapter(com.google.mygson.Gson,java.lang.reflect.Type)>($r1, $r3);

        $r3 = $r6[1];

        $r8 = staticinvoke <com.google.mygson.reflect.TypeToken: com.google.mygson.reflect.TypeToken get(java.lang.reflect.Type)>($r3);

        $r9 = virtualinvoke $r1.<com.google.mygson.Gson: com.google.mygson.TypeAdapter getAdapter(com.google.mygson.reflect.TypeToken)>($r8);

        $r10 = r0.<com.google.mygson.internal.bind.MapTypeAdapterFactory: com.google.mygson.internal.ConstructorConstructor constructorConstructor>;

        $r11 = virtualinvoke $r10.<com.google.mygson.internal.ConstructorConstructor: com.google.mygson.internal.ObjectConstructor getConstructor(com.google.mygson.reflect.TypeToken)>(r2);

        r12 = new com.google.mygson.internal.bind.MapTypeAdapterFactory$Adapter;

        $r3 = $r6[0];

        $r13 = $r6[1];

        specialinvoke r12.<com.google.mygson.internal.bind.MapTypeAdapterFactory$Adapter: void <init>(com.google.mygson.internal.bind.MapTypeAdapterFactory,com.google.mygson.Gson,java.lang.reflect.Type,com.google.mygson.TypeAdapter,java.lang.reflect.Type,com.google.mygson.TypeAdapter,com.google.mygson.internal.ObjectConstructor)>(r0, $r1, $r3, $r7, $r13, $r9, $r11);

        return r12;
    }
}
