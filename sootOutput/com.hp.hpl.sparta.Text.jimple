public class com.hp.hpl.sparta.Text extends com.hp.hpl.sparta.Node
{
    private java.lang.StringBuffer text_;

    public void <init>(char)
    {
        char $c0;
        java.lang.StringBuffer $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $c0 := @parameter0: char;

        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_> = $r1;

        $r1 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_> = $r2;

        return;
    }

    public void appendData(char)
    {
        char $c0;
        java.lang.StringBuffer $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $c0 := @parameter0: char;

        $r1 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        virtualinvoke r0.<com.hp.hpl.sparta.Node: void notifyObservers()>();

        return;
    }

    public void appendData(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        virtualinvoke r0.<com.hp.hpl.sparta.Node: void notifyObservers()>();

        return;
    }

    public void appendData(char[], int, int)
    {
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        char[] $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r1, $i0, $i1);

        virtualinvoke r0.<com.hp.hpl.sparta.Node: void notifyObservers()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.StringBuffer $r3;
        java.lang.String $r2;
        com.hp.hpl.sparta.Text r0, $r1;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 = new com.hp.hpl.sparta.Text;

        $r3 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.sparta.Text: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    protected int computeHashCode()
    {
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.StringBuffer $r3;
        java.lang.Object $r1;
        java.lang.String $r4, $r5;
        com.hp.hpl.sparta.Text r0, $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $z0 = $r1 instanceof com.hp.hpl.sparta.Text;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (com.hp.hpl.sparta.Text) $r1;

        $r3 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = $r2.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public java.lang.String getData()
    {
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r2 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void setData(java.lang.String)
    {
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_> = $r2;

        virtualinvoke r0.<com.hp.hpl.sparta.Node: void notifyObservers()>();

        return;
    }

    void toString(java.io.Writer) throws java.io.IOException
    {
        java.lang.StringBuffer $r3;
        java.io.Writer $r1;
        java.lang.String $r2;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.io.Writer;

        $r3 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return;
    }

    void toXml(java.io.Writer) throws java.io.IOException
    {
        java.lang.StringBuffer $r2;
        java.io.Writer $r1;
        int $i0;
        java.lang.String $r3;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.io.Writer;

        $r2 = r0.<com.hp.hpl.sparta.Text: java.lang.StringBuffer text_>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 >= 50 goto label1;

        staticinvoke <com.hp.hpl.sparta.Node: void htmlEncode(java.io.Writer,java.lang.String)>($r1, $r3);

        return;

     label1:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("<![CDATA[");

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("]]>");

        return;
    }

    public com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)
    {
        java.lang.Error $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("Sorry, not implemented");

        throw $r2;
    }

    public java.util.Enumeration xpathSelectElements(java.lang.String)
    {
        java.lang.Error $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("Sorry, not implemented");

        throw $r2;
    }

    public java.lang.String xpathSelectString(java.lang.String)
    {
        java.lang.Error $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("Sorry, not implemented");

        throw $r2;
    }

    public java.util.Enumeration xpathSelectStrings(java.lang.String)
    {
        java.lang.Error $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.Text r0;

        r0 := @this: com.hp.hpl.sparta.Text;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("Sorry, not implemented");

        throw $r2;
    }
}
