public class com.kingroot.sdk.util.a extends java.lang.Object
{
    private static long gd;

    static void <clinit>()
    {
        <com.kingroot.sdk.util.a: long gd> = -1L;

        return;
    }

    public static java.lang.String[] G(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String[] $r1, $r4;
        java.lang.Exception $r6;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (java.lang.String)[4];

        $r2 = <android.os.Build: java.lang.String MODEL>;

        $r1[0] = $r2;

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r1[1] = $r2;

        $r2 = "";

     label1:
        $r3 = staticinvoke <com.kingroot.sdk.util.c: java.lang.String Y(java.lang.String)>("/proc/cpuinfo");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\n");

        $r2 = $r4[0];

     label2:
        $r1[2] = $r2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = staticinvoke <com.kingroot.sdk.util.l: int R(android.content.Context)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $i0 = staticinvoke <com.kingroot.sdk.util.l: int S(android.content.Context)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[3] = $r2;

        return $r1;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String H(android.content.Context)
    {
        android.content.Context $r0;
        com.kingroot.sdk.util.l$a $r5;
        java.lang.Runtime $r4;
        java.lang.String[] $r2;
        long $l1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r1, $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>()>();

        $r2 = staticinvoke <com.kingroot.sdk.util.a: java.lang.String[] G(android.content.Context)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MODEL ");

        $r1 = $r2[0];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANDROID ");

        $r1 = $r2[1];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CPU ");

        $r1 = $r2[2];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CPUFreq ");

        $r1 = staticinvoke <com.kingroot.sdk.util.a: java.lang.String bb()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CPUNum ");

        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i0 = virtualinvoke $r4.<java.lang.Runtime: int availableProcessors()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolution ");

        $r1 = $r2[3];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ram ");

        $l1 = staticinvoke <com.kingroot.sdk.util.a: long ba()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rom ");

        $l1 = staticinvoke <com.kingroot.sdk.util.a: long bc()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new com.kingroot.sdk.util.l$a;

        specialinvoke $r5.<com.kingroot.sdk.util.l$a: void <init>()>();

        staticinvoke <com.kingroot.sdk.util.l: void a(com.kingroot.sdk.util.l$a)>($r5);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sdcard ");

        $l1 = $r5.<com.kingroot.sdk.util.l$a: long gm>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("simNum 1;");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.version.baseband", "");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("baseband ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <android.os.Build: java.lang.String DISPLAY>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inversion ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static long I(android.content.Context)
    {
        android.content.Context $r0;
        android.app.ActivityManager $r3;
        java.lang.Object $r2;
        long l0;
        android.app.ActivityManager$MemoryInfo $r1;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        $r3 = (android.app.ActivityManager) $r2;

        $r1 = new android.app.ActivityManager$MemoryInfo;

        specialinvoke $r1.<android.app.ActivityManager$MemoryInfo: void <init>()>();

        virtualinvoke $r3.<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>($r1);

        l0 = $r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        return l0;
    }

    public static long V(java.lang.String)
    {
        java.lang.Throwable $r2;
        android.os.StatFs $r1;
        int $i0;
        long $l1, $l2;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = new android.os.StatFs;

        specialinvoke $r1.<android.os.StatFs: void <init>(java.lang.String)>($r0);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label2:
        if $i0 <= 18 goto label5;

     label3:
        $l1 = virtualinvoke $r1.<android.os.StatFs: long getAvailableBytes()>();

     label4:
        return $l1;

     label5:
        $i0 = virtualinvoke $r1.<android.os.StatFs: int getAvailableBlocks()>();

     label6:
        $l1 = (long) $i0;

     label7:
        $i0 = virtualinvoke $r1.<android.os.StatFs: int getBlockSize()>();

     label8:
        $l2 = (long) $i0;

        $l1 = $l2 * $l1;

        return $l1;

     label9:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace()>();

        return -1L;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public static long ba()
    {
        java.lang.Throwable $r6, $r8, $r9, $r10;
        java.io.DataInputStream $r0, $r3, $r13;
        long $l0;
        java.lang.String[] $r7;
        byte $b1;
        int $i2;
        java.lang.String $r4;
        boolean $z0;
        java.io.IOException $r5, $r14;
        java.lang.NumberFormatException $r16;
        java.io.FileInputStream $r2, $r12;
        java.io.File $r1, $r11;
        java.io.FileNotFoundException $r15;

        $r0 = null;

        $l0 = <com.kingroot.sdk.util.a: long gd>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label16;

        $r11 = new java.io.File;

        $r1 = $r11;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>("/proc/meminfo");

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label16;

     label01:
        $r12 = new java.io.FileInputStream;

     label02:
        $r2 = $r12;

     label03:
        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

     label04:
        $r13 = new java.io.DataInputStream;

     label05:
        $r3 = $r13;

     label06:
        specialinvoke $r13.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

     label07:
        $r4 = virtualinvoke $r3.<java.io.DataInputStream: java.lang.String readLine()>();

     label08:
        if $r4 != null goto label17;

     label09:
        $r14 = new java.io.IOException;

     label10:
        $r5 = $r14;

     label11:
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("/proc/meminfo is empty!");

     label12:
        throw $r5;

     label13:
        $r6 := @caughtexception;

        $r0 = $r3;

     label14:
        $r15 = (java.io.FileNotFoundException) $r6;

        virtualinvoke $r15.<java.io.FileNotFoundException: void printStackTrace()>();

     label15:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r0);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r2);

     label16:
        $l0 = <com.kingroot.sdk.util.a: long gd>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label30;

        $l0 = <com.kingroot.sdk.util.a: long gd>;

        return $l0;

     label17:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $r7 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\\s]+");

     label18:
        $r4 = $r7[1];

     label19:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label20:
        <com.kingroot.sdk.util.a: long gd> = $l0;

     label21:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r2);

        goto label16;

     label22:
        $r8 := @caughtexception;

        $r2 = null;

        $r3 = null;

     label23:
        $r5 = (java.io.IOException) $r8;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

     label24:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r2);

        goto label16;

     label25:
        $r9 := @caughtexception;

        $r2 = null;

        $r3 = null;

     label26:
        $r16 = (java.lang.NumberFormatException) $r9;

        virtualinvoke $r16.<java.lang.NumberFormatException: void printStackTrace()>();

     label27:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r2);

        goto label16;

     label28:
        $r10 := @caughtexception;

        $r2 = null;

        $r3 = null;

     label29:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r3);

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r2);

        throw $r10;

     label30:
        return 1L;

     label31:
        $r10 := @caughtexception;

        $r3 = null;

        goto label29;

     label32:
        $r10 := @caughtexception;

        goto label29;

     label33:
        $r10 := @caughtexception;

        $r3 = $r0;

        goto label29;

     label34:
        $r9 := @caughtexception;

        $r3 = null;

        goto label26;

     label35:
        $r9 := @caughtexception;

        goto label26;

     label36:
        $r8 := @caughtexception;

        $r3 = null;

        goto label23;

     label37:
        $r8 := @caughtexception;

        goto label23;

     label38:
        $r6 := @caughtexception;

        $r2 = null;

        goto label14;

     label39:
        $r6 := @caughtexception;

        goto label14;

        catch java.io.FileNotFoundException from label03 to label04 with label38;
        catch java.io.IOException from label03 to label04 with label22;
        catch java.lang.NumberFormatException from label03 to label04 with label25;
        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.io.FileNotFoundException from label06 to label07 with label39;
        catch java.io.IOException from label06 to label07 with label36;
        catch java.lang.NumberFormatException from label06 to label07 with label34;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label06 to label07 with label31;
        catch java.io.FileNotFoundException from label07 to label08 with label13;
        catch java.io.FileNotFoundException from label11 to label13 with label13;
        catch java.io.IOException from label07 to label08 with label37;
        catch java.io.IOException from label11 to label13 with label37;
        catch java.lang.NumberFormatException from label07 to label08 with label35;
        catch java.lang.NumberFormatException from label11 to label12 with label35;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.lang.Throwable from label11 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.io.FileNotFoundException from label17 to label18 with label13;
        catch java.io.FileNotFoundException from label19 to label20 with label13;
        catch java.io.IOException from label17 to label18 with label37;
        catch java.io.IOException from label19 to label20 with label37;
        catch java.lang.NumberFormatException from label17 to label18 with label35;
        catch java.lang.NumberFormatException from label19 to label20 with label35;
        catch java.lang.Throwable from label17 to label21 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Throwable from label26 to label27 with label32;
    }

    public static java.lang.String bb()
    {
        java.lang.Throwable $r8, $r9;
        byte[] $r6;
        java.lang.Process $r4;
        java.lang.String[] $r2;
        java.io.IOException $r13;
        int $i0;
        java.lang.StringBuilder $r0, $r10;
        java.lang.ProcessBuilder $r3, $r11;
        java.lang.String $r7, $r12;
        java.io.InputStream $r1, $r5;

        $r10 = new java.lang.StringBuilder;

        $r0 = $r10;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r1 = null;

     label01:
        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "/system/bin/cat";

        $r2[1] = "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq";

        $r11 = new java.lang.ProcessBuilder;

     label02:
        $r3 = $r11;

     label03:
        specialinvoke $r11.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r2);

        $r4 = virtualinvoke $r3.<java.lang.ProcessBuilder: java.lang.Process start()>();

        $r5 = virtualinvoke $r4.<java.lang.Process: java.io.InputStream getInputStream()>();

     label04:
        $r1 = $r5;

        $r6 = newarray (byte)[24];

     label05:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r6);

     label06:
        if $i0 == -1 goto label17;

     label07:
        $r12 = new java.lang.String;

     label08:
        $r7 = $r12;

     label09:
        specialinvoke $r12.<java.lang.String: void <init>(byte[])>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label10:
        goto label05;

     label11:
        $r8 := @caughtexception;

     label12:
        $r13 = (java.io.IOException) $r8;

        virtualinvoke $r13.<java.io.IOException: void printStackTrace()>();

        $r10 = new java.lang.StringBuilder;

     label13:
        $r0 = $r10;

     label14:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("N/A");

     label15:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r1);

     label16:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        return $r7;

     label17:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label18:
        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r5);

        goto label16;

     label19:
        $r9 := @caughtexception;

        staticinvoke <com.kingroot.sdk.util.e: void a(java.io.Closeable)>($r1);

        throw $r9;

        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.io.IOException from label17 to label18 with label11;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public static long bc()
    {
        android.os.StatFs $r0;
        int $i1;
        long $l0, $l2;
        java.lang.String $r2;
        java.io.File $r1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i1 = virtualinvoke $r0.<android.os.StatFs: int getBlockSize()>();

        $l0 = (long) $i1;

        $i1 = virtualinvoke $r0.<android.os.StatFs: int getBlockCount()>();

        $l2 = (long) $i1;

        $l0 = $l2 * $l0;

        return $l0;
    }

    public static long bd()
    {
        long $l0;

        $l0 = staticinvoke <com.kingroot.sdk.util.a: long V(java.lang.String)>("/system");

        return $l0;
    }

    public static long be()
    {
        long $l0;

        $l0 = staticinvoke <com.kingroot.sdk.util.a: long V(java.lang.String)>("/data");

        return $l0;
    }
}
