public class com.baidu.autoupdatesdk.obf.ab extends java.lang.Object
{
    private java.security.spec.KeySpec a;
    private java.lang.String b;
    private javax.crypto.SecretKey c;
    private javax.crypto.SecretKeyFactory d;
    private java.lang.String e;

    public void <init>()
    {
        java.lang.Throwable $r3;
        com.baidu.autoupdatesdk.obf.ab r0;
        java.security.NoSuchAlgorithmException $r4;
        javax.crypto.SecretKey $r2;
        javax.crypto.KeyGenerator $r1;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String b> = "DESede/CBC/PKCS7Padding";

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e> = "utf-8";

     label1:
        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("DESede");

        $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

     label2:
        r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

        $r4 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke $r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public void <init>(java.lang.String)
    {
        java.lang.Throwable $r4;
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r2;
        java.lang.String $r1, $r3;
        java.io.UnsupportedEncodingException $r5;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String b> = "DESede/CBC/PKCS7Padding";

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e> = "utf-8";

        $r3 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e>;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        specialinvoke r0.<com.baidu.autoupdatesdk.obf.ab: void d(byte[])>($r2);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke $r5.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void <init>(byte[])
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String b> = "DESede/CBC/PKCS7Padding";

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e> = "utf-8";

        specialinvoke r0.<com.baidu.autoupdatesdk.obf.ab: void d(byte[])>($r1);

        return;
    }

    private void d(byte[])
    {
        java.lang.Throwable $r5, $r6, $r7;
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1;
        java.security.spec.InvalidKeySpecException $r10;
        javax.crypto.spec.DESedeKeySpec $r8;
        javax.crypto.SecretKeyFactory $r2;
        java.security.spec.KeySpec $r3;
        java.security.NoSuchAlgorithmException $r11;
        java.security.InvalidKeyException $r9;
        javax.crypto.SecretKey $r4;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DESede");

     label2:
        r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKeyFactory d> = $r2;

        $r8 = new javax.crypto.spec.DESedeKeySpec;

     label3:
        $r1 = specialinvoke r0.<com.baidu.autoupdatesdk.obf.ab: byte[] e(byte[])>($r1);

        specialinvoke $r8.<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>($r1);

     label4:
        r0.<com.baidu.autoupdatesdk.obf.ab: java.security.spec.KeySpec a> = $r8;

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKeyFactory d>;

        $r3 = r0.<com.baidu.autoupdatesdk.obf.ab: java.security.spec.KeySpec a>;

     label5:
        $r4 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

     label6:
        r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c> = $r4;

        return;

     label7:
        $r5 := @caughtexception;

        $r9 = (java.security.InvalidKeyException) $r5;

        virtualinvoke $r9.<java.security.InvalidKeyException: void printStackTrace()>();

        return;

     label8:
        $r6 := @caughtexception;

        $r10 = (java.security.spec.InvalidKeySpecException) $r6;

        virtualinvoke $r10.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        return;

     label9:
        $r7 := @caughtexception;

        $r11 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke $r11.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.InvalidKeyException from label5 to label6 with label7;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label8;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label8;
        catch java.security.spec.InvalidKeySpecException from label5 to label6 with label8;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label9;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label9;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label9;
    }

    private byte[] e(byte[])
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r2 := @parameter0: byte[];

        $i0 = lengthof $r2;

        $i1 = lengthof $r2;

        if $i1 >= 24 goto label3;

        $r3 = newarray (byte)[24];

        $i1 = 24 - $i0;

        $r1 = newarray (byte)[$i1];

        $i2 = 0;

     label1:
        $i1 = 24 - $i0;

        if $i2 >= $i1 goto label2;

        $r1[$i2] = 0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

        $i1 = 24 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, $i0, $i1);

        return $r3;

     label3:
        return $r2;
    }

    private static javax.crypto.spec.IvParameterSpec f(byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.IvParameterSpec $r2;

        $r0 := @parameter0: byte[];

        $r1 = newarray (byte)[8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, 8);

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        return $r2;
    }

    public byte[] a()
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1;
        javax.crypto.SecretKey $r2;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c>;

        $r1 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r1;
    }

    public byte[] a(java.lang.String) throws java.security.InvalidKeyException, javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException, java.lang.Exception
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r3;
        java.lang.String $r1, $r2;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<com.baidu.autoupdatesdk.obf.ab: byte[] a(byte[])>($r3);

        return $r3;
    }

    public byte[] a(byte[]) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException, java.lang.Exception
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1, $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.SecretKey $r2;
        java.lang.String $r5;
        javax.crypto.Cipher $r6;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: byte[];

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c>;

        $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r4 = staticinvoke <com.baidu.autoupdatesdk.obf.ab: javax.crypto.spec.IvParameterSpec f(byte[])>($r3);

        $r5 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String b>;

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5);

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c>;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r2, $r4);

        $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public java.lang.String b()
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        java.lang.String r1;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        r1 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e>;

        return r1;
    }

    public void b(java.lang.String)
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        java.lang.String $r1;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: java.lang.String;

        r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e> = $r1;

        return;
    }

    public byte[] b(byte[]) throws java.lang.Exception
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1, $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.SecretKey $r2;
        java.lang.String $r5;
        javax.crypto.Cipher $r6;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: byte[];

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c>;

        $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r4 = staticinvoke <com.baidu.autoupdatesdk.obf.ab: javax.crypto.spec.IvParameterSpec f(byte[])>($r3);

        $r5 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String b>;

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5);

        $r2 = r0.<com.baidu.autoupdatesdk.obf.ab: javax.crypto.SecretKey c>;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r2, $r4);

        $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public java.lang.String c(byte[]) throws java.lang.Exception
    {
        com.baidu.autoupdatesdk.obf.ab r0;
        byte[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.baidu.autoupdatesdk.obf.ab;

        $r1 := @parameter0: byte[];

        $r1 = virtualinvoke r0.<com.baidu.autoupdatesdk.obf.ab: byte[] b(byte[])>($r1);

        $r2 = new java.lang.String;

        $r3 = r0.<com.baidu.autoupdatesdk.obf.ab: java.lang.String e>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, $r3);

        return $r2;
    }
}
