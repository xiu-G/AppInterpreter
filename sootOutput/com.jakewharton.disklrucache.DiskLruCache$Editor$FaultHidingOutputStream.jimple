class com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream extends java.io.FilterOutputStream
{
    final com.jakewharton.disklrucache.DiskLruCache$Editor this$1;

    private void <init>(com.jakewharton.disklrucache.DiskLruCache$Editor, java.io.OutputStream)
    {
        java.io.OutputStream $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r1;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Editor;

        $r2 := @parameter1: java.io.OutputStream;

        r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1> = $r1;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r2);

        return;
    }

    void <init>(com.jakewharton.disklrucache.DiskLruCache$Editor, java.io.OutputStream, com.jakewharton.disklrucache.DiskLruCache$1)
    {
        java.io.OutputStream $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r1;
        com.jakewharton.disklrucache.DiskLruCache$1 $r3;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache$Editor;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 := @parameter2: com.jakewharton.disklrucache.DiskLruCache$1;

        specialinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.jakewharton.disklrucache.DiskLruCache$Editor,java.io.OutputStream)>($r1, $r2);

        return;
    }

    public void close()
    {
        java.lang.Throwable r1;
        java.io.OutputStream $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r3;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r3 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1>;

        staticinvoke <com.jakewharton.disklrucache.DiskLruCache$Editor: boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)>($r3, 1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void flush()
    {
        java.lang.Throwable r1;
        java.io.OutputStream $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r3;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void flush()>();

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r3 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1>;

        staticinvoke <com.jakewharton.disklrucache.DiskLruCache$Editor: boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)>($r3, 1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(int)
    {
        java.lang.Throwable r1;
        java.io.OutputStream $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r3;
        int $i0;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $i0 := @parameter0: int;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i0);

     label2:
        return;

     label3:
        r1 := @caughtexception;

        $r3 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1>;

        staticinvoke <com.jakewharton.disklrucache.DiskLruCache$Editor: boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)>($r3, 1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(byte[], int, int)
    {
        java.lang.Throwable r2;
        java.io.OutputStream $r3;
        byte[] $r1;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r4;
        int $i0, $i1;
        com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream r0;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: java.io.OutputStream out>;

     label1:
        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

     label2:
        return;

     label3:
        r2 := @caughtexception;

        $r4 = r0.<com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1>;

        staticinvoke <com.jakewharton.disklrucache.DiskLruCache$Editor: boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)>($r4, 1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
