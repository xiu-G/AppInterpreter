public final class com.a.a.a.bf extends java.lang.Object
{

    public void <init>()
    {
        com.a.a.a.bf r0;

        r0 := @this: com.a.a.a.bf;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.concurrent.ExecutorService a(java.lang.String)
    {
        java.lang.String $r0;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.a.a.a.bf: java.util.concurrent.ThreadFactory c(java.lang.String)>("Crashlytics Exception Handler");

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r1);

        staticinvoke <com.a.a.a.bf: void a(java.lang.String,java.util.concurrent.ExecutorService)>("Crashlytics Exception Handler", $r2);

        return $r2;
    }

    private static void a(java.lang.String, java.util.concurrent.ExecutorService)
    {
        java.util.concurrent.TimeUnit $r3;
        com.a.a.a.bl $r2;
        java.lang.Thread $r4;
        java.lang.Runtime $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r0;
        java.util.concurrent.ExecutorService $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.concurrent.ExecutorService;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r4 = new java.lang.Thread;

        $r2 = new com.a.a.a.bl;

        specialinvoke $r2.<com.a.a.a.bl: void <init>(java.lang.String,java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit)>($r0, $r1, 2L, $r3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Crashlytics Shutdown Hook for ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r2, $r0);

        virtualinvoke $r5.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r4);

        return;
    }

    public static java.util.concurrent.ScheduledExecutorService b(java.lang.String)
    {
        java.util.concurrent.ScheduledExecutorService $r2;
        java.lang.String $r0;
        java.util.concurrent.ThreadFactory $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.a.a.a.bf: java.util.concurrent.ThreadFactory c(java.lang.String)>($r0);

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)>($r1);

        staticinvoke <com.a.a.a.bf: void a(java.lang.String,java.util.concurrent.ExecutorService)>($r0, $r2);

        return $r2;
    }

    private static java.util.concurrent.ThreadFactory c(java.lang.String)
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        java.lang.String $r0;
        com.a.a.a.bj $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L);

        $r2 = new com.a.a.a.bj;

        specialinvoke $r2.<com.a.a.a.bj: void <init>(java.lang.String,java.util.concurrent.atomic.AtomicLong)>($r0, $r1);

        return $r2;
    }
}
