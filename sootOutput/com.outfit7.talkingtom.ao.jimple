final class com.outfit7.talkingtom.ao extends java.lang.Thread
{
    private com.outfit7.talkingtom.an a;
    private boolean b;
    private com.outfit7.talkingtom.Engine c;

    void <init>(com.outfit7.talkingtom.Engine, boolean)
    {
        com.outfit7.talkingtom.Engine $r1;
        com.outfit7.talkingtom.ao r0;
        boolean $z0;

        r0 := @this: com.outfit7.talkingtom.ao;

        $r1 := @parameter0: com.outfit7.talkingtom.Engine;

        $z0 := @parameter1: boolean;

        r0.<com.outfit7.talkingtom.ao: com.outfit7.talkingtom.Engine c> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<com.outfit7.talkingtom.ao: boolean b> = $z0;

        return;
    }

    final com.outfit7.talkingtom.an a()
    {
        com.outfit7.talkingtom.an r1;
        com.outfit7.talkingtom.ao r0;

        r0 := @this: com.outfit7.talkingtom.ao;

        r1 = r0.<com.outfit7.talkingtom.ao: com.outfit7.talkingtom.an a>;

        return r1;
    }

    public final void run()
    {
        com.outfit7.talkingtom.Engine $r1;
        java.lang.Throwable $r3;
        com.outfit7.talkingtom.an $r2;
        com.outfit7.talkingtom.ao r0;
        boolean $z0;

        r0 := @this: com.outfit7.talkingtom.ao;

        staticinvoke <android.os.Looper: void prepare()>();

        $r2 = new com.outfit7.talkingtom.an;

        $r1 = r0.<com.outfit7.talkingtom.ao: com.outfit7.talkingtom.Engine c>;

        specialinvoke $r2.<com.outfit7.talkingtom.an: void <init>(com.outfit7.talkingtom.Engine)>($r1);

        r0.<com.outfit7.talkingtom.ao: com.outfit7.talkingtom.an a> = $r2;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notify()>();

        exitmonitor r0;

     label2:
        $z0 = r0.<com.outfit7.talkingtom.ao: boolean b>;

        if $z0 == 0 goto label3;

        $r1 = r0.<com.outfit7.talkingtom.ao: com.outfit7.talkingtom.Engine c>;

        virtualinvoke $r1.<com.outfit7.talkingtom.Engine: void c()>();

     label3:
        staticinvoke <android.os.Looper: void loop()>();

        return;

     label4:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
