public class proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor extends proguard.classfile.util.SimplifiedVisitor implements proguard.classfile.attribute.visitor.AttributeVisitor
{
    private final proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor;

    public void <init>(proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)
    {
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r1;
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor;

        specialinvoke r0.<proguard.classfile.util.SimplifiedVisitor: void <init>()>();

        r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor> = $r1;

        return;
    }

    public void visitAnyAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.Attribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.Attribute $r2;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.Attribute;

        return;
    }

    public void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r4;
        proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute $r3;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.ParameterAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r4;
        proguard.classfile.Field $r2;
        proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute $r3;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r4;
        proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute $r3;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r3;
        proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute $r2;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute;

        $r3 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.RuntimeInvisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r3);

        return;
    }

    public void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Field, proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute $r3;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r4;
        proguard.classfile.Field $r2;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Field;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.Method, proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute $r3;
        proguard.classfile.Method $r2;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r4;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.Method;

        $r3 := @parameter2: proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute;

        $r4 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r3.<proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r2, $r4);

        return;
    }

    public void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz, proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute)
    {
        proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor r0;
        proguard.classfile.Clazz $r1;
        proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute $r2;
        proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor $r3;

        r0 := @this: proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor;

        $r1 := @parameter0: proguard.classfile.Clazz;

        $r2 := @parameter1: proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute;

        $r3 = r0.<proguard.classfile.attribute.'annotation'.visitor.AllAnnotationVisitor: proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor annotationVisitor>;

        virtualinvoke $r2.<proguard.classfile.attribute.'annotation'.RuntimeVisibleAnnotationsAttribute: void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.'annotation'.visitor.AnnotationVisitor)>($r1, $r3);

        return;
    }
}
