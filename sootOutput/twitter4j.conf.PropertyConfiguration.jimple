class twitter4j.conf.PropertyConfiguration extends twitter4j.conf.ConfigurationBase implements java.io.Serializable
{
    public static final java.lang.String ASYNC_NUM_THREADS;
    public static final java.lang.String CLIENT_URL;
    public static final java.lang.String CLIENT_VERSION;
    public static final java.lang.String DEBUG;
    public static final java.lang.String HTTP_CONNECTION_TIMEOUT;
    public static final java.lang.String HTTP_PROXY_HOST;
    public static final java.lang.String HTTP_PROXY_HOST_FALLBACK;
    public static final java.lang.String HTTP_PROXY_PASSWORD;
    public static final java.lang.String HTTP_PROXY_PORT;
    public static final java.lang.String HTTP_PROXY_PORT_FALLBACK;
    public static final java.lang.String HTTP_PROXY_USER;
    public static final java.lang.String HTTP_READ_TIMEOUT;
    public static final java.lang.String HTTP_RETRY_COUNT;
    public static final java.lang.String HTTP_RETRY_INTERVAL_SECS;
    public static final java.lang.String HTTP_STREAMING_READ_TIMEOUT;
    public static final java.lang.String HTTP_USER_AGENT;
    public static final java.lang.String HTTP_USE_SSL;
    public static final java.lang.String OAUTH_ACCESS_TOKEN;
    public static final java.lang.String OAUTH_ACCESS_TOKEN_SECRET;
    public static final java.lang.String OAUTH_ACCESS_TOKEN_URL;
    public static final java.lang.String OAUTH_AUTHENTICATION_URL;
    public static final java.lang.String OAUTH_AUTHORIZATION_URL;
    public static final java.lang.String OAUTH_CONSUMER_KEY;
    public static final java.lang.String OAUTH_CONSUMER_SECRET;
    public static final java.lang.String OAUTH_REQUEST_TOKEN_URL;
    public static final java.lang.String PASSWORD;
    public static final java.lang.String REST_BASE_URL;
    public static final java.lang.String SEARCH_BASE_URL;
    public static final java.lang.String SOURCE;
    public static final java.lang.String STREAM_BASE_URL;
    public static final java.lang.String USER;
    static java.lang.Class class$twitter4j$conf$Configuration;
    private static final long serialVersionUID;

    void <init>()
    {
        twitter4j.conf.PropertyConfiguration r0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void <init>(java.lang.String)>("/");

        return;
    }

    void <init>(java.lang.String)
    {
        java.lang.Throwable r2;
        java.util.Properties r3, r5;
        char $c0;
        twitter4j.conf.PropertyConfiguration r0;
        java.lang.StringBuffer $r6;
        java.lang.Object $r4;
        java.lang.Class $r8, $r9;
        java.lang.String $r1, $r7;
        java.io.InputStream $r10;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<twitter4j.conf.ConfigurationBase: void <init>()>();

        r3 = new java.util.Properties;

        specialinvoke r3.<java.util.Properties: void <init>()>();

     label1:
        r3 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        $r4 = virtualinvoke r3.<java.util.Properties: java.lang.Object clone()>();

     label2:
        r3 = (java.util.Properties) $r4;

        r5 = r3;

     label3:
        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>(r3);

     label4:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $c0 = <java.io.File: char separatorChar>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("twitter4j.properties");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.lang.String)>(r5, $r7);

        $r8 = <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration>;

        if $r8 != null goto label8;

        $r8 = staticinvoke <twitter4j.conf.PropertyConfiguration: java.lang.Class class$(java.lang.String)>("twitter4j.conf.Configuration");

        $r9 = $r8;

        <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration> = $r8;

     label5:
        $r10 = virtualinvoke $r9.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/twitter4j.properties");

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>(r5, $r10);

        $r8 = <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration>;

        if $r8 != null goto label9;

        $r8 = staticinvoke <twitter4j.conf.PropertyConfiguration: java.lang.Class class$(java.lang.String)>("twitter4j.conf.Configuration");

        $r9 = $r8;

        <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration> = $r8;

     label6:
        $r10 = virtualinvoke $r9.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/WEB-INF/twitter4j.properties");

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean loadProperties(java.util.Properties,java.io.InputStream)>(r5, $r10);

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithTreePath(java.util.Properties,java.lang.String)>(r5, "/");

        return;

     label7:
        r2 := @caughtexception;

        r5 = new java.util.Properties;

        specialinvoke r5.<java.util.Properties: void <init>()>();

        goto label4;

     label8:
        $r9 = <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration>;

        goto label5;

     label9:
        $r9 = <twitter4j.conf.PropertyConfiguration: java.lang.Class class$twitter4j$conf$Configuration>;

        goto label6;

        catch java.security.AccessControlException from label1 to label2 with label7;
        catch java.security.AccessControlException from label3 to label4 with label7;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("twitter4j.conf.Configuration");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private boolean loadProperties(java.util.Properties, java.io.InputStream)
    {
        java.util.Properties $r1;
        twitter4j.conf.PropertyConfiguration r0;
        java.lang.Exception $r3;
        java.io.InputStream $r2;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.io.InputStream;

     label1:
        virtualinvoke $r1.<java.util.Properties: void load(java.io.InputStream)>($r2);

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>($r1);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean loadProperties(java.util.Properties, java.lang.String)
    {
        java.lang.Throwable $r7, $r8, $r9, $r10;
        java.util.Properties $r1;
        java.io.FileInputStream r4, r5;
        twitter4j.conf.PropertyConfiguration r0;
        java.io.File r3;
        java.lang.Exception $r6, $r11;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        r5 = null;

     label01:
        r3 = new java.io.File;

     label02:
        specialinvoke r3.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label03:
        if $z0 == 0 goto label13;

     label04:
        $z0 = virtualinvoke r3.<java.io.File: boolean isFile()>();

     label05:
        if $z0 == 0 goto label13;

     label06:
        r4 = new java.io.FileInputStream;

     label07:
        specialinvoke r4.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label08:
        r5 = new java.io.FileInputStream;

     label09:
        specialinvoke r5.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        virtualinvoke $r1.<java.util.Properties: void load(java.io.InputStream)>(r5);

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void normalize(java.util.Properties)>($r1);

     label10:
        if r4 == null goto label12;

     label11:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label12:
        return 1;

     label13:
        return 0;

     label14:
        $r6 := @caughtexception;

     label15:
        if r5 == null goto label13;

     label16:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label17:
        goto label13;

     label18:
        $r7 := @caughtexception;

        goto label13;

     label19:
        $r8 := @caughtexception;

     label20:
        if r5 == null goto label22;

     label21:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label22:
        throw $r8;

     label23:
        $r9 := @caughtexception;

        goto label12;

     label24:
        $r10 := @caughtexception;

        goto label22;

     label25:
        $r8 := @caughtexception;

        r5 = r4;

        goto label20;

     label26:
        $r11 := @caughtexception;

        r5 = r4;

        goto label15;

        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label01 to label03 with label19;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Throwable from label08 to label10 with label25;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label21 to label22 with label24;
    }

    private void normalize(java.util.Properties)
    {
        java.util.Properties $r1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        twitter4j.conf.PropertyConfiguration r0;
        java.util.ArrayList r2, $r10;
        java.lang.StringBuffer $r8, $r11;
        int $i0;
        java.lang.Object $r5;
        java.lang.String r6, r7, $r9;
        boolean $z0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r3 = virtualinvoke $r1.<java.util.Properties: java.util.Set keySet()>();

        $r10 = new java.util.ArrayList;

        r2 = $r10;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(10);

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $i0 = virtualinvoke r6.<java.lang.String: int indexOf(java.lang.String)>("twitter4j.");

        if -1 == $i0 goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r5;

        r6 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r7);

        $i0 = virtualinvoke r7.<java.lang.String: int indexOf(java.lang.String)>("twitter4j.");

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r8 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $i0 = $i0 + 10;

        r7 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        r7 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r7, r6);

        goto label3;

     label4:
        return;
    }

    private boolean notNull(java.util.Properties, java.lang.String, java.lang.String)
    {
        java.util.Properties $r1;
        java.lang.StringBuffer $r4;
        java.lang.String $r2, $r3;
        twitter4j.conf.PropertyConfiguration r0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setFieldsWithPrefix(java.util.Properties, java.lang.String)
    {
        java.util.Properties $r1;
        int $i0;
        java.lang.String $r2, $r3;
        twitter4j.conf.PropertyConfiguration r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "debug");

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "debug");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setDebug(boolean)>($z0);

     label01:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "source");

        if $z0 == 0 goto label02;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "source");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setSource(java.lang.String)>($r3);

     label02:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "user");

        if $z0 == 0 goto label03;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "user");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setUser(java.lang.String)>($r3);

     label03:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "password");

        if $z0 == 0 goto label04;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "password");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setPassword(java.lang.String)>($r3);

     label04:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.useSSL");

        if $z0 == 0 goto label29;

        $z0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean getBoolean(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.useSSL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setUseSSL(boolean)>($z0);

     label05:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        if $z0 == 0 goto label30;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyHost(java.lang.String)>($r3);

     label06:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyUser");

        if $z0 == 0 goto label07;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyUser");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyUser(java.lang.String)>($r3);

     label07:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPassword");

        if $z0 == 0 goto label08;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPassword");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPassword(java.lang.String)>($r3);

     label08:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        if $z0 == 0 goto label31;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPort(int)>($i0);

     label09:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.connectionTimeout");

        if $z0 == 0 goto label10;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.connectionTimeout");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpConnectionTimeout(int)>($i0);

     label10:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.readTimeout");

        if $z0 == 0 goto label11;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.readTimeout");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpReadTimeout(int)>($i0);

     label11:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.streamingReadTimeout");

        if $z0 == 0 goto label12;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.streamingReadTimeout");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpStreamingReadTimeout(int)>($i0);

     label12:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryCount");

        if $z0 == 0 goto label13;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryCount");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpRetryCount(int)>($i0);

     label13:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryIntervalSecs");

        if $z0 == 0 goto label14;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.retryIntervalSecs");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpRetryIntervalSecs(int)>($i0);

     label14:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerKey");

        if $z0 == 0 goto label15;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerKey");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthConsumerKey(java.lang.String)>($r3);

     label15:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerSecret");

        if $z0 == 0 goto label16;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.consumerSecret");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthConsumerSecret(java.lang.String)>($r3);

     label16:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessToken");

        if $z0 == 0 goto label17;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessToken");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessToken(java.lang.String)>($r3);

     label17:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenSecret");

        if $z0 == 0 goto label18;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenSecret");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessTokenSecret(java.lang.String)>($r3);

     label18:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.numThreads");

        if $z0 == 0 goto label19;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "async.numThreads");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setAsyncNumThreads(int)>($i0);

     label19:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientVersion");

        if $z0 == 0 goto label20;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientVersion");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setClientVersion(java.lang.String)>($r3);

     label20:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientURL");

        if $z0 == 0 goto label21;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "clientURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setClientURL(java.lang.String)>($r3);

     label21:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.userAgent");

        if $z0 == 0 goto label22;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.userAgent");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setUserAgent(java.lang.String)>($r3);

     label22:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.requestTokenURL");

        if $z0 == 0 goto label23;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.requestTokenURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthRequestTokenURL(java.lang.String)>($r3);

     label23:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authorizationURL");

        if $z0 == 0 goto label24;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authorizationURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAuthorizationURL(java.lang.String)>($r3);

     label24:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenURL");

        if $z0 == 0 goto label25;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.accessTokenURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAccessTokenURL(java.lang.String)>($r3);

     label25:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authenticationURL");

        if $z0 == 0 goto label26;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "oauth.authenticationURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setOAuthAuthenticationURL(java.lang.String)>($r3);

     label26:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "restBaseURL");

        if $z0 == 0 goto label27;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "restBaseURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setRestBaseURL(java.lang.String)>($r3);

     label27:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "searchBaseURL");

        if $z0 == 0 goto label28;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "searchBaseURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setSearchBaseURL(java.lang.String)>($r3);

     label28:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "streamBaseURL");

        if $z0 == 0 goto label32;

        $r2 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "streamBaseURL");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setStreamBaseURL(java.lang.String)>($r2);

        return;

     label29:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "user");

        if $z0 == 0 goto label05;

        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "password");

        if $z0 == 0 goto label05;

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setUseSSL(boolean)>(1);

        goto label05;

     label30:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        if $z0 == 0 goto label06;

        $r3 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: java.lang.String getString(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyHost");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyHost(java.lang.String)>($r3);

        goto label06;

     label31:
        $z0 = specialinvoke r0.<twitter4j.conf.PropertyConfiguration: boolean notNull(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        if $z0 == 0 goto label09;

        $i0 = virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: int getIntProperty(java.util.Properties,java.lang.String,java.lang.String)>($r1, $r2, "http.proxyPort");

        virtualinvoke r0.<twitter4j.conf.PropertyConfiguration: void setHttpProxyPort(int)>($i0);

        goto label09;

     label32:
        return;
    }

    private void setFieldsWithTreePath(java.util.Properties, java.lang.String)
    {
        java.util.Properties $r1;
        java.lang.String[] $r3;
        twitter4j.conf.PropertyConfiguration r0;
        java.lang.StringBuffer $r6;
        int i0, i1;
        java.lang.String $r2, r4, $r5;
        boolean $z0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithPrefix(java.util.Properties,java.lang.String)>($r1, "");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");

        r4 = null;

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r2 = $r3[i1];

        $r5 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        if r4 != null goto label4;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        specialinvoke r0.<twitter4j.conf.PropertyConfiguration: void setFieldsWithPrefix(java.util.Properties,java.lang.String)>($r1, r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        r4 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label2;

     label5:
        return;
    }

    protected boolean getBoolean(java.util.Properties, java.lang.String, java.lang.String)
    {
        java.util.Properties $r1;
        java.lang.StringBuffer $r4;
        java.lang.Boolean $r5;
        java.lang.String $r2, $r3;
        twitter4j.conf.PropertyConfiguration r0;
        boolean $z0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    protected int getIntProperty(java.util.Properties, java.lang.String, java.lang.String)
    {
        java.lang.Throwable r4;
        java.util.Properties $r1;
        twitter4j.conf.PropertyConfiguration r0;
        java.lang.StringBuffer $r5, $r6;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label2:
        return $i0;

     label3:
        r4 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected java.lang.String getString(java.util.Properties, java.lang.String, java.lang.String)
    {
        java.util.Properties $r1;
        java.lang.StringBuffer $r4;
        java.lang.String $r2, $r3;
        twitter4j.conf.PropertyConfiguration r0;

        r0 := @this: twitter4j.conf.PropertyConfiguration;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r2);

        return $r2;
    }

    public static void <clinit>()
    {
        <twitter4j.conf.PropertyConfiguration: long serialVersionUID> = 6458764415636588373L;

        <twitter4j.conf.PropertyConfiguration: java.lang.String USER> = "user";

        <twitter4j.conf.PropertyConfiguration: java.lang.String STREAM_BASE_URL> = "streamBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String SOURCE> = "source";

        <twitter4j.conf.PropertyConfiguration: java.lang.String SEARCH_BASE_URL> = "searchBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String REST_BASE_URL> = "restBaseURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String PASSWORD> = "password";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_REQUEST_TOKEN_URL> = "oauth.requestTokenURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_CONSUMER_SECRET> = "oauth.consumerSecret";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_CONSUMER_KEY> = "oauth.consumerKey";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_AUTHORIZATION_URL> = "oauth.authorizationURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_AUTHENTICATION_URL> = "oauth.authenticationURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN_URL> = "oauth.accessTokenURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN_SECRET> = "oauth.accessTokenSecret";

        <twitter4j.conf.PropertyConfiguration: java.lang.String OAUTH_ACCESS_TOKEN> = "oauth.accessToken";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_USE_SSL> = "http.useSSL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_USER_AGENT> = "http.userAgent";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_STREAMING_READ_TIMEOUT> = "http.streamingReadTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_RETRY_INTERVAL_SECS> = "http.retryIntervalSecs";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_RETRY_COUNT> = "http.retryCount";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_READ_TIMEOUT> = "http.readTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_USER> = "http.proxyUser";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PORT_FALLBACK> = "http.proxyPort";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PORT> = "http.proxyPort";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_PASSWORD> = "http.proxyPassword";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_HOST_FALLBACK> = "http.proxyHost";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_PROXY_HOST> = "http.proxyHost";

        <twitter4j.conf.PropertyConfiguration: java.lang.String HTTP_CONNECTION_TIMEOUT> = "http.connectionTimeout";

        <twitter4j.conf.PropertyConfiguration: java.lang.String DEBUG> = "debug";

        <twitter4j.conf.PropertyConfiguration: java.lang.String CLIENT_VERSION> = "clientVersion";

        <twitter4j.conf.PropertyConfiguration: java.lang.String CLIENT_URL> = "clientURL";

        <twitter4j.conf.PropertyConfiguration: java.lang.String ASYNC_NUM_THREADS> = "async.numThreads";

        return;
    }
}
