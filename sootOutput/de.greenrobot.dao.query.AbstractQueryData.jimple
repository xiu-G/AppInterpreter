abstract class de.greenrobot.dao.query.AbstractQueryData extends java.lang.Object
{
    final de.greenrobot.dao.AbstractDao dao;
    final java.lang.String[] initialValues;
    final android.util.SparseArray queriesForThreads;
    final java.lang.String sql;

    void <init>(de.greenrobot.dao.AbstractDao, java.lang.String, java.lang.String[])
    {
        android.util.SparseArray $r4;
        de.greenrobot.dao.query.AbstractQueryData r0;
        de.greenrobot.dao.AbstractDao $r1;
        java.lang.String[] $r3;
        java.lang.String $r2;

        r0 := @this: de.greenrobot.dao.query.AbstractQueryData;

        $r1 := @parameter0: de.greenrobot.dao.AbstractDao;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.greenrobot.dao.query.AbstractQueryData: de.greenrobot.dao.AbstractDao dao> = $r1;

        r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String sql> = $r2;

        r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String[] initialValues> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads> = $r4;

        return;
    }

    protected abstract de.greenrobot.dao.query.AbstractQuery createQuery();

    de.greenrobot.dao.query.AbstractQuery forCurrentThread()
    {
        java.lang.Throwable $r10;
        java.lang.String[] $r7, $r8, $r9;
        de.greenrobot.dao.query.AbstractQuery $r5, $r6;
        android.util.SparseArray $r1, $r2;
        de.greenrobot.dao.query.AbstractQueryData r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;

        r0 := @this: de.greenrobot.dao.query.AbstractQueryData;

        $i0 = staticinvoke <android.os.Process: int myTid()>();

        $r1 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        entermonitor $r1;

     label1:
        $r2 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.ref.WeakReference) $r3;

        if $r4 == null goto label5;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r5 = (de.greenrobot.dao.query.AbstractQuery) $r3;

     label2:
        if $r5 != null goto label6;

        virtualinvoke r0.<de.greenrobot.dao.query.AbstractQueryData: void gc()>();

        $r6 = virtualinvoke r0.<de.greenrobot.dao.query.AbstractQueryData: de.greenrobot.dao.query.AbstractQuery createQuery()>();

        $r5 = $r6;

        $r2 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r6);

        virtualinvoke $r2.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r4);

     label3:
        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r5 = null;

        goto label2;

     label6:
        $r7 = r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String[] initialValues>;

        $r8 = $r5.<de.greenrobot.dao.query.AbstractQuery: java.lang.String[] parameters>;

        $r9 = r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String[] initialValues>;

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r8, 0, $i0);

     label7:
        goto label3;

     label8:
        $r10 := @caughtexception;

        exitmonitor $r1;

        throw $r10;

        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }

    de.greenrobot.dao.query.AbstractQuery forCurrentThread(de.greenrobot.dao.query.AbstractQuery)
    {
        java.lang.String[] $r4, $r5, $r6;
        de.greenrobot.dao.query.AbstractQuery $r1;
        de.greenrobot.dao.query.AbstractQueryData r0;
        java.lang.Thread $r2, $r3;
        int $i0;

        r0 := @this: de.greenrobot.dao.query.AbstractQueryData;

        $r1 := @parameter0: de.greenrobot.dao.query.AbstractQuery;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = $r1.<de.greenrobot.dao.query.AbstractQuery: java.lang.Thread ownerThread>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String[] initialValues>;

        $r5 = $r1.<de.greenrobot.dao.query.AbstractQuery: java.lang.String[] parameters>;

        $r6 = r0.<de.greenrobot.dao.query.AbstractQueryData: java.lang.String[] initialValues>;

        $i0 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i0);

        return $r1;

     label1:
        $r1 = virtualinvoke r0.<de.greenrobot.dao.query.AbstractQueryData: de.greenrobot.dao.query.AbstractQuery forCurrentThread()>();

        return $r1;
    }

    void gc()
    {
        java.lang.Throwable $r6;
        android.util.SparseArray $r1, $r2, $r5;
        de.greenrobot.dao.query.AbstractQueryData r0;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.ref.WeakReference $r4;

        r0 := @this: de.greenrobot.dao.query.AbstractQueryData;

        $r1 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        entermonitor $r1;

     label1:
        $r2 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label4;

        $r2 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r3 != null goto label3;

        $r2 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $r5 = r0.<de.greenrobot.dao.query.AbstractQueryData: android.util.SparseArray queriesForThreads>;

        $i1 = virtualinvoke $r5.<android.util.SparseArray: int keyAt(int)>($i0);

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>($i1);

     label3:
        $i0 = $i0 + -1;

        goto label2;

     label4:
        exitmonitor $r1;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

        throw $r6;

        catch java.lang.Throwable from label1 to label5 with label6;
    }
}
