public class cn.ffcs.lib.JazzyViewPager.OutlineContainer extends android.widget.FrameLayout implements android.graphics.drawable.Animatable
{
    private static final long ANIMATION_DURATION;
    private static final long FRAME_DURATION;
    private float mAlpha;
    private final android.view.animation.Interpolator mInterpolator;
    private boolean mIsRunning;
    private android.graphics.Paint mOutlinePaint;
    private long mStartTime;
    private final java.lang.Runnable mUpdater;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$2 $r3;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$1 $r2;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>($r1);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning> = 0;

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha> = 1.0F;

        $r2 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$1;

        specialinvoke $r2.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$1: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.view.animation.Interpolator mInterpolator> = $r2;

        $r3 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$2;

        specialinvoke $r3.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$2: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: java.lang.Runnable mUpdater> = $r3;

        specialinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$2 $r4;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$1 $r3;
        android.util.AttributeSet $r2;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning> = 0;

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha> = 1.0F;

        $r3 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$1;

        specialinvoke $r3.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$1: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.view.animation.Interpolator mInterpolator> = $r3;

        $r4 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$2;

        specialinvoke $r4.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$2: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: java.lang.Runnable mUpdater> = $r4;

        specialinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$2 $r4;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer$1 $r3;
        android.util.AttributeSet $r2;
        int $i0;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning> = 0;

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha> = 1.0F;

        $r3 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$1;

        specialinvoke $r3.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$1: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.view.animation.Interpolator mInterpolator> = $r3;

        $r4 = new cn.ffcs.lib.JazzyViewPager.OutlineContainer$2;

        specialinvoke $r4.<cn.ffcs.lib.JazzyViewPager.OutlineContainer$2: void <init>(cn.ffcs.lib.JazzyViewPager.OutlineContainer)>(r0);

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: java.lang.Runnable mUpdater> = $r4;

        specialinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: void init()>();

        return;
    }

    static long access$000(cn.ffcs.lib.JazzyViewPager.OutlineContainer)
    {
        long l0;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer $r0;

        $r0 := @parameter0: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        l0 = $r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: long mStartTime>;

        return l0;
    }

    static float access$102(cn.ffcs.lib.JazzyViewPager.OutlineContainer, float)
    {
        float $f0;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer $r0;

        $r0 := @parameter0: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $f0 := @parameter1: float;

        $r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha> = $f0;

        return $f0;
    }

    static android.view.animation.Interpolator access$200(cn.ffcs.lib.JazzyViewPager.OutlineContainer)
    {
        cn.ffcs.lib.JazzyViewPager.OutlineContainer $r0;
        android.view.animation.Interpolator r1;

        $r0 := @parameter0: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        r1 = $r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.view.animation.Interpolator mInterpolator>;

        return r1;
    }

    static java.lang.Runnable access$300(cn.ffcs.lib.JazzyViewPager.OutlineContainer)
    {
        cn.ffcs.lib.JazzyViewPager.OutlineContainer $r0;
        java.lang.Runnable r1;

        $r0 := @parameter0: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        r1 = $r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: java.lang.Runnable mUpdater>;

        return r1;
    }

    private void init()
    {
        android.graphics.Paint$Style $r3;
        int $i0;
        float $f0;
        android.graphics.Paint $r1;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;
        android.content.res.Resources $r2;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint> = $r1;

        $r1 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r1 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $r2 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <cn.ffcs.lib.JazzyViewPager.Util: int dpToPx(android.content.res.Resources,int)>($r2, 2);

        $f0 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r1 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $r2 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getColor(int)>(2131099687);

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        $r1 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $r3 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r1.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r3);

        $r2 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <cn.ffcs.lib.JazzyViewPager.Util: int dpToPx(android.content.res.Resources,int)>($r2, 10);

        virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: void setPadding(int,int,int,int)>($i0, $i0, $i0, $i0);

        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.graphics.Rect r2;
        int $i0, $i1, $i2;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r4;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;
        android.content.res.Resources $r3;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void dispatchDraw(android.graphics.Canvas)>($r1);

        $r3 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <cn.ffcs.lib.JazzyViewPager.Util: int dpToPx(android.content.res.Resources,int)>($r3, 5);

        $r4 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $i1 = virtualinvoke $r4.<android.graphics.Paint: int getColor()>();

        $i2 = <cn.ffcs.lib.JazzyViewPager.JazzyViewPager: int sOutlineColor>;

        if $i1 == $i2 goto label1;

        $r4 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $i1 = <cn.ffcs.lib.JazzyViewPager.JazzyViewPager: int sOutlineColor>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i1);

     label1:
        $r4 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        $f0 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha>;

        $f0 = $f0 * 255.0F;

        $i1 = (int) $f0;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>($i1);

        r2 = new android.graphics.Rect;

        $i1 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: int getMeasuredWidth()>();

        $i1 = $i1 - $i0;

        $i2 = virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: int getMeasuredHeight()>();

        $i2 = $i2 - $i0;

        specialinvoke r2.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i0, $i1, $i2);

        $r4 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: android.graphics.Paint mOutlinePaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>(r2, $r4);

        return;
    }

    public boolean isRunning()
    {
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;
        boolean z0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        z0 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning>;

        return z0;
    }

    public void setOutlineAlpha(float)
    {
        float $f0;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $f0 := @parameter0: float;

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: float mAlpha> = 1.0F;

        return;
    }

    public void start()
    {
        long $l0;
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;
        java.lang.Runnable $r1;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $z0 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning> = 1;

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: long mStartTime> = $l0;

        $r1 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: java.lang.Runnable mUpdater>;

        virtualinvoke r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void stop()
    {
        cn.ffcs.lib.JazzyViewPager.OutlineContainer r0;
        boolean $z0;

        r0 := @this: cn.ffcs.lib.JazzyViewPager.OutlineContainer;

        $z0 = r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<cn.ffcs.lib.JazzyViewPager.OutlineContainer: boolean mIsRunning> = 0;

        return;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.JazzyViewPager.OutlineContainer: long FRAME_DURATION> = 16L;

        <cn.ffcs.lib.JazzyViewPager.OutlineContainer: long ANIMATION_DURATION> = 500L;

        return;
    }
}
