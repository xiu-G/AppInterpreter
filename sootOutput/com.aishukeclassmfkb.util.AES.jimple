public class com.aishukeclassmfkb.util.AES extends java.lang.Object
{
    private static final java.lang.String CipherMode;

    public void <init>()
    {
        com.aishukeclassmfkb.util.AES r0;

        r0 := @this: com.aishukeclassmfkb.util.AES;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String byte2hex(byte[])
    {
        byte[] $r0;
        short $s3;
        byte $b2;
        java.lang.StringBuffer $r1, $r3;
        int $i0, $i1;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuffer;

        $r1 = $r3;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i1 = (int) $s3;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r2;
    }

    private static javax.crypto.spec.SecretKeySpec createKey(java.lang.String)
    {
        java.lang.Throwable $r4;
        byte[] $r1, $r3;
        javax.crypto.spec.SecretKeySpec $r6;
        java.lang.StringBuffer $r2, $r5;
        int $i0;
        java.lang.String $r0;
        java.io.UnsupportedEncodingException $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        $r5 = new java.lang.StringBuffer;

        $r2 = $r5;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(32);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 >= 32 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 <= 32 goto label4;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(32);

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label5:
        $r1 = $r3;

     label6:
        $r6 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, "AES");

        return $r6;

     label7:
        $r4 := @caughtexception;

        $r7 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke $r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label6;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }

    public static java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r4;
        byte[] $r2;
        java.lang.String $r0, $r1;
        java.io.UnsupportedEncodingException $r5;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.aishukeclassmfkb.util.AES: byte[] hex2byte(java.lang.String)>($r0);

     label2:
        $r2 = staticinvoke <com.aishukeclassmfkb.util.AES: byte[] decrypt(byte[],java.lang.String)>($r2, $r1);

        if $r2 != null goto label4;

        return null;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        $r2 = null;

        goto label2;

     label4:
        $r1 = new java.lang.String;

     label5:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

     label6:
        return $r1;

     label7:
        $r4 := @caughtexception;

        $r5 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke $r5.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    public static byte[] decrypt(byte[], java.lang.String)
    {
        byte[] $r0;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r1;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.aishukeclassmfkb.util.AES: javax.crypto.spec.SecretKeySpec createKey(java.lang.String)>($r1);

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        byte[] $r2, $r3;
        java.lang.String $r0, $r1;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $r2 = $r3;

     label3:
        $r2 = staticinvoke <com.aishukeclassmfkb.util.AES: byte[] encrypt(byte[],java.lang.String)>($r2, $r1);

        $r0 = staticinvoke <com.aishukeclassmfkb.util.AES: java.lang.String byte2hex(byte[])>($r2);

        return $r0;

     label4:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static byte[] encrypt(byte[], java.lang.String)
    {
        byte[] $r0;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r1;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.aishukeclassmfkb.util.AES: javax.crypto.spec.SecretKeySpec createKey(java.lang.String)>($r1);

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] hex2byte(java.lang.String)
    {
        byte[] $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r2;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

     label1:
        $r1 = newarray (byte)[0];

        return $r1;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $i2 = $i2 & 255;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public static void <clinit>()
    {
        <com.aishukeclassmfkb.util.AES: java.lang.String CipherMode> = "AES/ECB/PKCS5Padding";

        return;
    }
}
