public class io.vov.vitamio.ThumbnailUtils extends java.lang.Object
{
    public static final int MICRO_KIND;
    public static final int MINI_KIND;
    private static final int OPTIONS_NONE;
    public static final int OPTIONS_RECYCLE_INPUT;
    private static final int OPTIONS_SCALE_UP;
    public static final int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT;
    public static final int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH;
    public static final int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT;
    public static final int TARGET_SIZE_MINI_THUMBNAIL_WIDTH;

    public void <init>()
    {
        io.vov.vitamio.ThumbnailUtils r0;

        r0 := @this: io.vov.vitamio.ThumbnailUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap createVideoThumbnail(android.content.Context, java.lang.String, int)
    {
        java.lang.Throwable $r7;
        android.content.Context $r0;
        io.vov.vitamio.MediaMetadataRetriever r2;
        java.lang.RuntimeException $r6, $r8, $r9;
        java.lang.Exception $r5;
        android.graphics.Bitmap r3, $r4;
        int $i0, $i1;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        r3 = null;

        r2 = new io.vov.vitamio.MediaMetadataRetriever;

        specialinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: void <init>(android.content.Context)>($r0);

     label01:
        virtualinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: void setDataSource(java.lang.String)>($r1);

        $r4 = virtualinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>(-1L);

     label02:
        r3 = $r4;

     label03:
        virtualinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: void release()>();

     label04:
        if r3 == null goto label15;

        if $i0 != 3 goto label12;

        $i0 = staticinvoke <io.vov.vitamio.ThumbnailUtils: int dipToPX(android.content.Context,int)>($r0, 106);

        $i1 = staticinvoke <io.vov.vitamio.ThumbnailUtils: int dipToPX(android.content.Context,int)>($r0, 80);

        r3 = staticinvoke <io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r3, $i0, $i1, 2);

        return r3;

     label05:
        $r5 := @caughtexception;

     label06:
        virtualinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: void release()>();

     label07:
        goto label04;

     label08:
        $r6 := @caughtexception;

        goto label04;

     label09:
        $r7 := @caughtexception;

     label10:
        virtualinvoke r2.<io.vov.vitamio.MediaMetadataRetriever: void release()>();

     label11:
        throw $r7;

     label12:
        if $i0 != 1 goto label15;

        r3 = staticinvoke <io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>(r3, 426, 320, 2);

        return r3;

     label13:
        $r8 := @caughtexception;

        goto label11;

     label14:
        $r9 := @caughtexception;

        goto label04;

     label15:
        return r3;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.RuntimeException from label03 to label04 with label14;
        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label10 to label11 with label13;
    }

    private static int dipToPX(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float f0;
        android.util.DisplayMetrics $r2;
        android.content.res.Resources $r1;
        double $d0, $d1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        $d0 = (double) $i0;

        $d0 = $d0 / 1.5;

        $d1 = (double) f0;

        $d0 = $d0 * $d1;

        $d0 = $d0 + 0.5;

        $i0 = (int) $d0;

        return $i0;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int)
    {
        int $i0, $i1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0 = staticinvoke <io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>($r0, $i0, $i1, 0);

        return $r0;
    }

    public static android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1;
        android.graphics.Matrix r1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $r0 != null goto label1;

        return null;

     label1:
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i3 >= $i4 goto label3;

        $f0 = (float) $i0;

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

     label2:
        r1 = new android.graphics.Matrix;

        specialinvoke r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke r1.<android.graphics.Matrix: void setScale(float,float)>($f0, $f0);

        $i2 = $i2 | 1;

        $r0 = staticinvoke <io.vov.vitamio.ThumbnailUtils: android.graphics.Bitmap transform(android.graphics.Matrix,android.graphics.Bitmap,int,int,int)>(r1, $r0, $i0, $i1, $i2);

        return $r0;

     label3:
        $f0 = (float) $i1;

        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        goto label2;
    }

    private static android.graphics.Bitmap transform(android.graphics.Matrix, android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Rect r1, r2, $r8;
        android.graphics.Bitmap$Config $r4;
        byte $b6;
        int $i0, $i1, $i2, i3, $i4, $i5;
        android.graphics.Canvas $r7;
        android.graphics.Matrix $r3;
        boolean z0, z1;
        android.graphics.Bitmap $r0, $r5, $r6;
        float f0, f1, f2, f3, $f4;

        $r3 := @parameter0: android.graphics.Matrix;

        $r0 := @parameter1: android.graphics.Bitmap;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        i3 = $i2 & 1;

        if i3 == 0 goto label04;

        z0 = 1;

     label01:
        $i2 = $i2 & 2;

        if $i2 == 0 goto label05;

        z1 = 1;

     label02:
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = $i2 - $i0;

        i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        i3 = i3 - $i1;

        if z0 != 0 goto label06;

        if $i2 < 0 goto label03;

        if i3 >= 0 goto label06;

     label03:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r4);

        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r5);

        $i2 = $i2 / 2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        i3 = i3 / 2;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i3);

        r1 = new android.graphics.Rect;

        r2 = r1;

        $i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i4);

        $i4 = $i4 + $i2;

        $i5 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i5);

        $i5 = $i5 + i3;

        specialinvoke r1.<android.graphics.Rect: void <init>(int,int,int,int)>($i2, i3, $i4, $i5);

        $i2 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i2 = $i0 - $i2;

        $i2 = $i2 / 2;

        i3 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        i3 = $i1 - i3;

        i3 = i3 / 2;

        $r8 = new android.graphics.Rect;

        $i0 = $i0 - $i2;

        $i1 = $i1 - i3;

        specialinvoke $r8.<android.graphics.Rect: void <init>(int,int,int,int)>($i2, i3, $i0, $i1);

        virtualinvoke $r7.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, r2, $r8, null);

        if z1 == 0 goto label16;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

        return $r5;

     label04:
        z0 = 0;

        goto label01;

     label05:
        z1 = 0;

        goto label02;

     label06:
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        f2 = (float) $i2;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        f1 = (float) $i2;

        f0 = f2 / f1;

        f3 = (float) $i0;

        $f4 = (float) $i1;

        f3 = f3 / $f4;

        $b6 = f0 cmpl f3;

        $i2 = (int) $b6;

        if $i2 <= 0 goto label13;

        f2 = (float) $i1;

        f1 = f2 / f1;

     label07:
        $b6 = f1 cmpg 0.9F;

        $i2 = (int) $b6;

        if $i2 < 0 goto label08;

        $b6 = f1 cmpl 1.0F;

        $i2 = (int) $b6;

        if $i2 <= 0 goto label14;

     label08:
        virtualinvoke $r3.<android.graphics.Matrix: void setScale(float,float)>(f1, f1);

     label09:
        if $r3 == null goto label15;

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, 0, $i2, i3, $r3, 1);

     label10:
        if z1 == 0 goto label11;

        if $r5 == $r0 goto label11;

        virtualinvoke $r0.<android.graphics.Bitmap: void recycle()>();

     label11:
        $i2 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $i2 = $i2 - $i0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        i3 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        i3 = i3 - $i1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i3);

        $i2 = $i2 / 2;

        i3 = i3 / 2;

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>($r5, $i2, i3, $i0, $i1);

        if $r6 == $r5 goto label17;

        if z1 != 0 goto label12;

        if $r5 == $r0 goto label17;

     label12:
        virtualinvoke $r5.<android.graphics.Bitmap: void recycle()>();

        return $r6;

     label13:
        f1 = (float) $i0;

        f1 = f1 / f2;

        goto label07;

     label14:
        $r3 = null;

        goto label09;

     label15:
        $r5 = $r0;

        goto label10;

     label16:
        return $r5;

     label17:
        return $r6;
    }

    public static void <clinit>()
    {
        <io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MINI_THUMBNAIL_WIDTH> = 426;

        <io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MINI_THUMBNAIL_HEIGHT> = 320;

        <io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL_WIDTH> = 106;

        <io.vov.vitamio.ThumbnailUtils: int TARGET_SIZE_MICRO_THUMBNAIL_HEIGHT> = 80;

        <io.vov.vitamio.ThumbnailUtils: int OPTIONS_SCALE_UP> = 1;

        <io.vov.vitamio.ThumbnailUtils: int OPTIONS_RECYCLE_INPUT> = 2;

        <io.vov.vitamio.ThumbnailUtils: int OPTIONS_NONE> = 0;

        <io.vov.vitamio.ThumbnailUtils: int MINI_KIND> = 1;

        <io.vov.vitamio.ThumbnailUtils: int MICRO_KIND> = 3;

        return;
    }
}
