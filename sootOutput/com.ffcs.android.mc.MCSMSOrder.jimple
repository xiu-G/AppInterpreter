public class com.ffcs.android.mc.MCSMSOrder extends java.lang.Object
{

    public void <init>()
    {
        com.ffcs.android.mc.MCSMSOrder r0;

        r0 := @this: com.ffcs.android.mc.MCSMSOrder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.os.Bundle sendOrderMessage(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r1;
        com.ffcs.android.mc.MCSMSOrder r0;
        android.os.Bundle $r7;
        java.lang.Exception r4;
        com.ffcs.android.mc.ISMSOrder $r6;
        com.ffcs.android.mc.BusinessFunction $r5;
        java.lang.String $r2, $r3;

        r0 := @this: com.ffcs.android.mc.MCSMSOrder;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

     label1:
        $r5 = staticinvoke <com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.BusinessFunction getInstance(android.content.Context)>($r1);

        $r6 = virtualinvoke $r5.<com.ffcs.android.mc.BusinessFunction: com.ffcs.android.mc.ISMSOrder getSmsOrder()>();

        $r7 = interfaceinvoke $r6.<com.ffcs.android.mc.ISMSOrder: android.os.Bundle sendOrderMessage(android.content.Context,java.lang.String,java.lang.String)>($r1, $r2, $r3);

     label2:
        return $r7;

     label3:
        r4 := @caughtexception;

        $r2 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.ffcs.android.mc.util.McExceptionUtil: void put(java.lang.String)>($r2);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
