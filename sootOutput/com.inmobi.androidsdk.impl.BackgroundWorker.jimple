class com.inmobi.androidsdk.impl.BackgroundWorker extends java.lang.Object
{
    private android.os.Looper looper;
    private android.os.Handler messageHandler;

    void <init>()
    {
        com.inmobi.androidsdk.impl.BackgroundWorker r0;

        r0 := @this: com.inmobi.androidsdk.impl.BackgroundWorker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$0(com.inmobi.androidsdk.impl.BackgroundWorker, android.os.Handler)
    {
        com.inmobi.androidsdk.impl.BackgroundWorker $r0;
        android.os.Handler $r1;

        $r0 := @parameter0: com.inmobi.androidsdk.impl.BackgroundWorker;

        $r1 := @parameter1: android.os.Handler;

        $r0.<com.inmobi.androidsdk.impl.BackgroundWorker: android.os.Handler messageHandler> = $r1;

        return;
    }

    android.os.Handler getMessageHandler()
    {
        com.inmobi.androidsdk.impl.BackgroundWorker r0;
        android.os.Handler r1;

        r0 := @this: com.inmobi.androidsdk.impl.BackgroundWorker;

        r1 = r0.<com.inmobi.androidsdk.impl.BackgroundWorker: android.os.Handler messageHandler>;

        return r1;
    }

    void shutdown()
    {
        com.inmobi.androidsdk.impl.BackgroundWorker r0;
        android.os.Looper $r1;

        r0 := @this: com.inmobi.androidsdk.impl.BackgroundWorker;

        $r1 = r0.<com.inmobi.androidsdk.impl.BackgroundWorker: android.os.Looper looper>;

        virtualinvoke $r1.<android.os.Looper: void quit()>();

        return;
    }

    void start()
    {
        com.inmobi.androidsdk.impl.BackgroundWorker r0;
        com.inmobi.androidsdk.impl.BackgroundWorker$1 $r2;
        java.lang.Thread r1;

        r0 := @this: com.inmobi.androidsdk.impl.BackgroundWorker;

        r1 = new java.lang.Thread;

        $r2 = new com.inmobi.androidsdk.impl.BackgroundWorker$1;

        specialinvoke $r2.<com.inmobi.androidsdk.impl.BackgroundWorker$1: void <init>(com.inmobi.androidsdk.impl.BackgroundWorker)>(r0);

        specialinvoke r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }
}
