public final class c.a.c.a extends java.lang.Object implements java.io.Serializable, java.util.Map
{
    private java.util.TreeMap a;

    public void <init>()
    {
        c.a.c.a r0;
        java.util.TreeMap $r1;

        r0 := @this: c.a.c.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<c.a.c.a: java.util.TreeMap a> = $r1;

        return;
    }

    private java.util.SortedSet d(java.lang.Object)
    {
        java.util.TreeMap $r2;
        java.util.SortedSet $r3;
        java.lang.Object $r1;
        c.a.c.a r0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.SortedSet) $r1;

        return $r3;
    }

    public final java.lang.String a(java.lang.Object)
    {
        java.util.TreeMap $r2;
        java.util.SortedSet $r3;
        java.lang.Object $r1;
        c.a.c.a r0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.util.SortedSet) $r1;

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<java.util.SortedSet: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = interfaceinvoke $r3.<java.util.SortedSet: java.lang.Object first()>();

        $r4 = (java.lang.String) $r1;

        return $r4;
    }

    public final java.lang.String a(java.lang.String)
    {
        java.lang.StringBuilder $r3;
        c.a.c.a r0;
        java.lang.String $r1, $r2;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<c.a.c.a: java.lang.String a(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public final java.lang.String a(java.lang.String, java.lang.String)
    {
        c.a.c.a r0;
        java.lang.String $r1, $r2;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<c.a.c.a: java.lang.String a(java.lang.String,java.lang.String,boolean)>($r1, $r2, 0);

        return $r1;
    }

    public final java.lang.String a(java.lang.String, java.lang.String, boolean)
    {
        java.util.SortedSet $r6;
        c.a.c.a r0;
        java.util.TreeSet $r5;
        java.util.TreeMap $r1;
        java.lang.Object $r4;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r4 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.util.SortedSet) $r4;

        if $r4 != null goto label2;

        $r5 = new java.util.TreeSet;

        $r4 = $r5;

        specialinvoke $r5.<java.util.TreeSet: void <init>()>();

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <c.a.c: java.lang.String a(java.lang.String)>($r2);

     label1:
        virtualinvoke $r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

     label2:
        if $r3 == null goto label4;

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <c.a.c: java.lang.String a(java.lang.String)>($r3);

     label3:
        $r6 = (java.util.SortedSet) $r4;

        interfaceinvoke $r6.<java.util.SortedSet: boolean add(java.lang.Object)>($r3);

     label4:
        return $r3;
    }

    public final void a(java.util.Map, boolean)
    {
        java.util.Iterator $r3, $r7;
        java.util.SortedSet $r6;
        java.util.Set $r2;
        c.a.c.a r0;
        java.util.TreeMap $r9;
        java.util.Map $r1;
        java.lang.Object $r4;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.util.Map;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r6 = (java.util.SortedSet) $r4;

        virtualinvoke r0.<c.a.c.a: java.util.SortedSet c(java.lang.Object)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r4;

        virtualinvoke r0.<c.a.c.a: java.lang.String a(java.lang.String,java.lang.String,boolean)>($r5, $r8, 1);

        goto label2;

     label3:
        specialinvoke r0.<c.a.c.a: java.util.SortedSet d(java.lang.Object)>($r5);

        goto label1;

     label4:
        $r9 = r0.<c.a.c.a: java.util.TreeMap a>;

        virtualinvoke $r9.<java.util.TreeMap: void putAll(java.util.Map)>($r1);

     label5:
        return;
    }

    public final java.lang.String b(java.lang.Object)
    {
        java.util.Iterator $r6;
        java.util.Set $r5;
        c.a.c.a r0;
        java.util.TreeMap $r4;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r3, $r8;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = (java.lang.String) $r1;

        $r3 = staticinvoke <c.a.c: java.lang.String a(java.lang.String)>($r3);

        $r4 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (java.util.Set) $r1;

        if $r5 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r1 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.String) $r1;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        goto label2;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public final java.util.SortedSet c(java.lang.Object)
    {
        java.util.TreeMap $r2;
        java.util.SortedSet $r3;
        java.lang.Object $r1;
        c.a.c.a r0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r3 = (java.util.SortedSet) $r1;

        return $r3;
    }

    public final void clear()
    {
        c.a.c.a r0;
        java.util.TreeMap $r1;

        r0 := @this: c.a.c.a;

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        virtualinvoke $r1.<java.util.TreeMap: void clear()>();

        return;
    }

    public final boolean containsKey(java.lang.Object)
    {
        java.util.TreeMap $r2;
        java.lang.Object $r1;
        c.a.c.a r0;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $z0 = virtualinvoke $r2.<java.util.TreeMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public final boolean containsValue(java.lang.Object)
    {
        java.util.Iterator $r4;
        java.util.SortedSet $r6;
        java.util.Collection $r3;
        c.a.c.a r0;
        java.util.TreeMap $r2;
        java.lang.Object $r1, $r5;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.SortedSet) $r5;

        $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public final java.util.Set entrySet()
    {
        java.util.Set $r1;
        c.a.c.a r0;
        java.util.TreeMap $r2;

        r0 := @this: c.a.c.a;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Set entrySet()>();

        return $r1;
    }

    public final java.lang.Object get(java.lang.Object)
    {
        java.lang.Object $r1;
        c.a.c.a r0;
        java.util.SortedSet $r2;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<c.a.c.a: java.util.SortedSet d(java.lang.Object)>($r1);

        return $r2;
    }

    public final boolean isEmpty()
    {
        c.a.c.a r0;
        java.util.TreeMap $r1;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        $z0 = virtualinvoke $r1.<java.util.TreeMap: boolean isEmpty()>();

        return $z0;
    }

    public final java.util.Set keySet()
    {
        java.util.Set $r1;
        c.a.c.a r0;
        java.util.TreeMap $r2;

        r0 := @this: c.a.c.a;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Set keySet()>();

        return $r1;
    }

    public final volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.SortedSet $r4;
        java.util.TreeMap $r5;
        java.lang.Object $r1, $r2;
        c.a.c.a r0;
        java.lang.String $r3;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) $r1;

        $r4 = (java.util.SortedSet) $r2;

        $r5 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r5.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r4 = (java.util.SortedSet) $r1;

        return $r4;
    }

    public final void putAll(java.util.Map)
    {
        c.a.c.a r0;
        java.util.TreeMap $r2;
        java.util.Map $r1;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.util.Map;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        virtualinvoke $r2.<java.util.TreeMap: void putAll(java.util.Map)>($r1);

        return;
    }

    public final java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object $r1;
        c.a.c.a r0;
        java.util.SortedSet $r2;

        r0 := @this: c.a.c.a;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<c.a.c.a: java.util.SortedSet c(java.lang.Object)>($r1);

        return $r2;
    }

    public final int size()
    {
        java.util.Iterator $r3;
        java.util.SortedSet $r6;
        java.util.Set $r2;
        c.a.c.a r0;
        java.util.TreeMap $r1;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: c.a.c.a;

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $i0 = 0;

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r1 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r4 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r5);

        $r6 = (java.util.SortedSet) $r4;

        $i1 = interfaceinvoke $r6.<java.util.SortedSet: int size()>();

        $i0 = $i1 + $i0;

        goto label1;

     label2:
        return $i0;
    }

    public final java.util.Collection values()
    {
        c.a.c.a r0;
        java.util.TreeMap $r2;
        java.util.Collection $r1;

        r0 := @this: c.a.c.a;

        $r2 = r0.<c.a.c.a: java.util.TreeMap a>;

        $r1 = virtualinvoke $r2.<java.util.TreeMap: java.util.Collection values()>();

        return $r1;
    }
}
