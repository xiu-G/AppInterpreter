public class org.htmlparser.util.CharacterReference extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, lm
{
    protected int a;
    protected java.lang.String b;

    public void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r1;
        org.htmlparser.util.CharacterReference r0;

        r0 := @this: org.htmlparser.util.CharacterReference;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.htmlparser.util.CharacterReference: java.lang.String b> = $r1;

        r0.<org.htmlparser.util.CharacterReference: int a> = $i0;

        $r1 = r0.<org.htmlparser.util.CharacterReference: java.lang.String b>;

        if $r1 != null goto label1;

        r0.<org.htmlparser.util.CharacterReference: java.lang.String b> = "";

     label1:
        return;
    }

    public int compare(java.lang.Object)
    {
        org.htmlparser.util.CharacterReference r0, $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r3, $r4;

        r0 := @this: org.htmlparser.util.CharacterReference;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.htmlparser.util.CharacterReference) $r1;

        $r3 = virtualinvoke r0.<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>();

        $r4 = virtualinvoke $r2.<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    public int getCharacter()
    {
        int i0;
        org.htmlparser.util.CharacterReference r0;

        r0 := @this: org.htmlparser.util.CharacterReference;

        i0 = r0.<org.htmlparser.util.CharacterReference: int a>;

        return i0;
    }

    public java.lang.String getKernel()
    {
        java.lang.String r1;
        org.htmlparser.util.CharacterReference r0;

        r0 := @this: org.htmlparser.util.CharacterReference;

        r1 = r0.<org.htmlparser.util.CharacterReference: java.lang.String b>;

        return r1;
    }

    public java.lang.String toString()
    {
        org.htmlparser.util.CharacterReference r0;
        java.lang.StringBuffer $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.htmlparser.util.CharacterReference;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(16);

        $i0 = virtualinvoke r0.<org.htmlparser.util.CharacterReference: int getCharacter()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label1:
        if $i0 >= 4 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $i0 = $i0 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r2 = virtualinvoke r0.<org.htmlparser.util.CharacterReference: java.lang.String getKernel()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
