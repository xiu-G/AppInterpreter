public class com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable extends android.graphics.drawable.Drawable
{
    protected final android.graphics.BitmapShader bitmapShader;
    protected final float cornerRadius;
    protected final android.graphics.RectF mBitmapRect;
    protected final android.graphics.RectF mRect;
    protected final int margin;
    protected final android.graphics.Paint paint;

    public void <init>(android.graphics.Bitmap, int, int)
    {
        android.graphics.RectF $r2;
        android.graphics.BitmapShader $r3;
        android.graphics.Shader$TileMode $r4, $r5;
        android.graphics.Bitmap $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r6;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        $r1 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.RectF;

        specialinvoke $r2.<android.graphics.RectF: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mRect> = $r2;

        $f0 = (float) $i0;

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: float cornerRadius> = $f0;

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: int margin> = $i1;

        $r3 = new android.graphics.BitmapShader;

        $r4 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r3.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r1, $r4, $r5);

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.BitmapShader bitmapShader> = $r3;

        $r2 = new android.graphics.RectF;

        $f0 = (float) $i1;

        $f1 = (float) $i1;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $i0 = $i0 - $i1;

        $f2 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 - $i1;

        $f3 = (float) $i0;

        specialinvoke $r2.<android.graphics.RectF: void <init>(float,float,float,float)>($f0, $f1, $f2, $f3);

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mBitmapRect> = $r2;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint> = $r6;

        $r6 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint>;

        $r3 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.BitmapShader bitmapShader>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r3);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.RectF $r2;
        float $f0, $f1;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mRect>;

        $f0 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: float cornerRadius>;

        $f1 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: float cornerRadius>;

        $r3 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r3);

        return;
    }

    public int getOpacity()
    {
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        return -3;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.RectF $r2, $r4;
        android.graphics.Rect $r1;
        android.graphics.BitmapShader $r6;
        android.graphics.Matrix$ScaleToFit $r5;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r3;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        $r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        $r2 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mRect>;

        $i0 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: int margin>;

        $f0 = (float) $i0;

        $i0 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: int margin>;

        $f1 = (float) $i0;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i1 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: int margin>;

        $i0 = $i0 - $i1;

        $f2 = (float) $i0;

        $i1 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i0 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: int margin>;

        $i0 = $i1 - $i0;

        $f3 = (float) $i0;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>($f0, $f1, $f2, $f3);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        $r2 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mBitmapRect>;

        $r4 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.RectF mRect>;

        $r5 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r2, $r4, $r5);

        $r6 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.BitmapShader bitmapShader>;

        virtualinvoke $r6.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>($r3);

        return;
    }

    public void setAlpha(int)
    {
        int $i0;
        android.graphics.Paint $r1;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        $i0 := @parameter0: int;

        $r1 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable r0;

        r0 := @this: com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        return;
    }
}
