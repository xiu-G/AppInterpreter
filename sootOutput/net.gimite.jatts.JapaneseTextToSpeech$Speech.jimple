class net.gimite.jatts.JapaneseTextToSpeech$Speech extends java.lang.Thread
{
    private final java.lang.String TEMP_FILE_NAME;
    private int id;
    private java.io.FileOutputStream localFile;
    private java.lang.String localPath;
    private java.util.HashMap params;
    private java.lang.String text;
    final net.gimite.jatts.JapaneseTextToSpeech this$0;

    void <init>(net.gimite.jatts.JapaneseTextToSpeech, java.lang.String, java.util.HashMap, int, java.lang.String)
    {
        java.lang.Throwable $r9;
        android.content.Context $r6;
        java.io.FileOutputStream $r8;
        java.util.HashMap r3;
        java.lang.RuntimeException $r10;
        java.io.File $r7;
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        int $i0;
        net.gimite.jatts.JapaneseTextToSpeech $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r4;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r1 := @parameter0: net.gimite.jatts.JapaneseTextToSpeech;

        $r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.HashMap;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: net.gimite.jatts.JapaneseTextToSpeech this$0> = $r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.lang.String TEMP_FILE_NAME> = "jatts.temp.mp3";

        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.lang.String text> = $r2;

        if r3 == null goto label6;

     label1:
        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.util.HashMap params> = r3;

        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: int id> = $i0;

        $r5 = new java.lang.StringBuilder;

     label2:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: android.content.Context access$6(net.gimite.jatts.JapaneseTextToSpeech)>($r1);

        $r7 = virtualinvoke $r6.<android.content.Context: java.io.File getFilesDir()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jatts.temp.mp3");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.lang.String localPath> = $r2;

     label4:
        $r6 = staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: android.content.Context access$6(net.gimite.jatts.JapaneseTextToSpeech)>($r1);

        virtualinvoke $r6.<android.content.Context: boolean deleteFile(java.lang.String)>("jatts.temp.mp3");

        $r6 = staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: android.content.Context access$6(net.gimite.jatts.JapaneseTextToSpeech)>($r1);

        $r8 = virtualinvoke $r6.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>("jatts.temp.mp3", 1);

     label5:
        r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.io.FileOutputStream localFile> = $r8;

        return;

     label6:
        r3 = new java.util.HashMap;

        specialinvoke r3.<java.util.HashMap: void <init>()>();

        goto label1;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.io.FileNotFoundException from label2 to label3 with label7;
        catch java.io.FileNotFoundException from label4 to label5 with label7;
    }

    static int access$0(net.gimite.jatts.JapaneseTextToSpeech$Speech)
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech $r0;
        int i0;

        $r0 := @parameter0: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        i0 = $r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: int id>;

        return i0;
    }

    static java.lang.String access$1(net.gimite.jatts.JapaneseTextToSpeech$Speech)
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech $r0;
        java.lang.String r1;

        $r0 := @parameter0: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        r1 = $r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.lang.String localPath>;

        return r1;
    }

    static int access$2(net.gimite.jatts.JapaneseTextToSpeech$Speech)
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech $r0;
        int $i0;

        $r0 := @parameter0: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $i0 = specialinvoke $r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: int getStreamType()>();

        return $i0;
    }

    static net.gimite.jatts.JapaneseTextToSpeech access$3(net.gimite.jatts.JapaneseTextToSpeech$Speech)
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech $r0;
        net.gimite.jatts.JapaneseTextToSpeech r1;

        $r0 := @parameter0: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        r1 = $r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: net.gimite.jatts.JapaneseTextToSpeech this$0>;

        return r1;
    }

    private int getStreamType()
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        int $i0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String r3;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r1 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.util.HashMap params>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("streamType");

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        return $i0;

     label1:
        return 3;
    }

    private java.net.URL getUrl()
    {
        java.lang.Throwable $r9;
        java.util.Map$Entry r8;
        java.util.Iterator $r5;
        java.net.URL $r6;
        java.util.Set $r4;
        java.util.HashMap $r3;
        java.lang.RuntimeException $r10;
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        java.lang.StringBuilder $r1;
        java.lang.Object $r7;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://gimite.net/speech?format=mp3&text=");

        $r2 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.lang.String text>;

        $r2 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.util.HashMap params>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r6 = new java.net.URL;

     label2:
        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r2);

     label3:
        return $r6;

     label4:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r2 = (java.lang.String) $r7;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r2 = (java.lang.String) $r7;

        $r2 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.net.MalformedURLException from label2 to label3 with label5;
    }

    private void play()
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech$1 $r1;
        android.os.Handler $r2;
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        net.gimite.jatts.JapaneseTextToSpeech $r3;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r3 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: net.gimite.jatts.JapaneseTextToSpeech this$0>;

        $r2 = staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: android.os.Handler access$8(net.gimite.jatts.JapaneseTextToSpeech)>($r3);

        $r1 = new net.gimite.jatts.JapaneseTextToSpeech$Speech$1;

        specialinvoke $r1.<net.gimite.jatts.JapaneseTextToSpeech$Speech$1: void <init>(net.gimite.jatts.JapaneseTextToSpeech$Speech)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void download() throws java.io.IOException, java.lang.InterruptedException
    {
        java.net.HttpURLConnection r6;
        byte[] r1;
        java.lang.Object[] $r8;
        java.net.URL $r2;
        java.io.FileOutputStream $r11;
        java.lang.RuntimeException $r7;
        java.lang.Integer $r9;
        java.net.URLConnection $r5;
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.io.InputStream $r10;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r2 = specialinvoke r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.net.URL getUrl()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("connecting to ");

        $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: void access$0(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        r6 = (java.net.HttpURLConnection) $r5;

        virtualinvoke r6.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke r6.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(1);

        virtualinvoke r6.<java.net.HttpURLConnection: void connect()>();

        $i0 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 < 200 goto label1;

        $i0 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 < 300 goto label2;

     label1:
        $r7 = new java.lang.RuntimeException;

        $r8 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8[0] = $r9;

        $r4 = virtualinvoke r6.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r8[1] = $r4;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%03d %s", $r8);

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r7;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("loading ");

        $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: void access$0(java.lang.String)>($r4);

        $r10 = virtualinvoke r6.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        r1 = newarray (byte)[4096];

     label3:
        $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>(r1);

        if $i0 > 0 goto label4;

        $r11 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.io.FileOutputStream localFile>;

        virtualinvoke $r11.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r10.<java.io.InputStream: void close()>();

        virtualinvoke r6.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label4:
        $r11 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.io.FileOutputStream localFile>;

        virtualinvoke $r11.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        goto label3;
    }

    public java.util.HashMap params()
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        java.util.HashMap r1;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        r1 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: java.util.HashMap params>;

        return r1;
    }

    public void run()
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        net.gimite.jatts.JapaneseTextToSpeech $r2;
        java.lang.Exception $r1;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

     label1:
        virtualinvoke r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: void download()>();

        specialinvoke r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: void play()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: net.gimite.jatts.JapaneseTextToSpeech this$0>;

        staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: void access$7(net.gimite.jatts.JapaneseTextToSpeech,java.lang.Exception,net.gimite.jatts.JapaneseTextToSpeech$Speech)>($r2, $r1, r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void start()
    {
        net.gimite.jatts.JapaneseTextToSpeech$Speech r0;
        net.gimite.jatts.JapaneseTextToSpeech $r1;
        net.gimite.jatts.JapaneseTextToSpeech$State $r2;

        r0 := @this: net.gimite.jatts.JapaneseTextToSpeech$Speech;

        $r1 = r0.<net.gimite.jatts.JapaneseTextToSpeech$Speech: net.gimite.jatts.JapaneseTextToSpeech this$0>;

        $r2 = <net.gimite.jatts.JapaneseTextToSpeech$State: net.gimite.jatts.JapaneseTextToSpeech$State LOADING>;

        staticinvoke <net.gimite.jatts.JapaneseTextToSpeech: void access$3(net.gimite.jatts.JapaneseTextToSpeech,net.gimite.jatts.JapaneseTextToSpeech$State,net.gimite.jatts.JapaneseTextToSpeech$Speech)>($r1, $r2, r0);

        specialinvoke r0.<java.lang.Thread: void start()>();

        return;
    }
}
