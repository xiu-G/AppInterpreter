public class org.json.HTTP extends java.lang.Object
{
    public static final java.lang.String CRLF;

    public void <init>()
    {
        org.json.HTTP r0;

        r0 := @this: org.json.HTTP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.json.JSONObject toJSONObject(java.lang.String) throws org.json.JSONException
    {
        org.json.HTTPTokener $r2;
        org.json.JSONObject $r1;
        java.lang.String $r0, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = new org.json.HTTPTokener;

        specialinvoke $r2.<org.json.HTTPTokener: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextToken()>();

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("HTTP");

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("HTTP-Version", $r0);

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextToken()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Status-Code", $r0);

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextTo(char)>(0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Reason-Phrase", $r0);

        virtualinvoke $r2.<org.json.HTTPTokener: char next()>();

     label1:
        $z0 = virtualinvoke $r2.<org.json.HTTPTokener: boolean more()>();

        if $z0 == 0 goto label3;

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextTo(char)>(58);

        virtualinvoke $r2.<org.json.HTTPTokener: char next(char)>(58);

        $r3 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextTo(char)>(0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r0, $r3);

        virtualinvoke $r2.<org.json.HTTPTokener: char next()>();

        goto label1;

     label2:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Method", $r0);

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextToken()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Request-URI", $r0);

        $r0 = virtualinvoke $r2.<org.json.HTTPTokener: java.lang.String nextToken()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("HTTP-Version", $r0);

        goto label1;

     label3:
        return $r1;
    }

    public static java.lang.String toString(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONException $r5;
        org.json.JSONObject $r0;
        java.util.Iterator $r1;
        java.lang.StringBuffer $r2;
        java.lang.Object $r4;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Status-Code");

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Reason-Phrase");

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("HTTP-Version");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Status-Code");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Reason-Phrase");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label1:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("HTTP-Version");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Status-Code");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Reason-Phrase");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Method");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Request-URI");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean isNull(java.lang.String)>($r3);

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        goto label2;

     label3:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Method");

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Request-URI");

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Method");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Request-URI");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("HTTP-Version");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        goto label1;

     label4:
        $r5 = new org.json.JSONException;

        specialinvoke $r5.<org.json.JSONException: void <init>(java.lang.String)>("Not enough material for an HTTP header.");

        throw $r5;

     label5:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <org.json.HTTP: java.lang.String CRLF> = "\r\n";

        return;
    }
}
