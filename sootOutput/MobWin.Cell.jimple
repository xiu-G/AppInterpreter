public final class MobWin.Cell extends com.qq.taf.jce.JceStruct
{
    static final boolean $assertionsDisabled;
    public int iCellId;
    public int iLac;
    public short shMcc;
    public short shMnc;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = class "LMobWin/Cell;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <MobWin.Cell: boolean $assertionsDisabled> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        int $i1;
        MobWin.Cell r0;
        short $s0;

        r0 := @this: MobWin.Cell;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        $s0 = (short) -1;

        r0.<MobWin.Cell: short shMcc> = $s0;

        $s0 = (short) -1;

        r0.<MobWin.Cell: short shMnc> = $s0;

        r0.<MobWin.Cell: int iLac> = -1;

        r0.<MobWin.Cell: int iCellId> = -1;

        $s0 = r0.<MobWin.Cell: short shMcc>;

        virtualinvoke r0.<MobWin.Cell: void setShMcc(short)>($s0);

        $s0 = r0.<MobWin.Cell: short shMnc>;

        virtualinvoke r0.<MobWin.Cell: void setShMnc(short)>($s0);

        $i1 = r0.<MobWin.Cell: int iLac>;

        virtualinvoke r0.<MobWin.Cell: void setILac(int)>($i1);

        $i1 = r0.<MobWin.Cell: int iCellId>;

        virtualinvoke r0.<MobWin.Cell: void setICellId(int)>($i1);

        return;
    }

    public void <init>(short, short, int, int)
    {
        MobWin.Cell r0;
        short $s0, $s1, $s4;
        int $i2, $i3, $i5;

        r0 := @this: MobWin.Cell;

        $s0 := @parameter0: short;

        $s1 := @parameter1: short;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke r0.<com.qq.taf.jce.JceStruct: void <init>()>();

        $s4 = (short) -1;

        r0.<MobWin.Cell: short shMcc> = $s4;

        $s4 = (short) -1;

        r0.<MobWin.Cell: short shMnc> = $s4;

        $i5 = -1;

        r0.<MobWin.Cell: int iLac> = $i5;

        $i5 = -1;

        r0.<MobWin.Cell: int iCellId> = $i5;

        virtualinvoke r0.<MobWin.Cell: void setShMcc(short)>($s0);

        virtualinvoke r0.<MobWin.Cell: void setShMnc(short)>($s1);

        virtualinvoke r0.<MobWin.Cell: void setILac(int)>($i2);

        virtualinvoke r0.<MobWin.Cell: void setICellId(int)>($i3);

        return;
    }

    public java.lang.String className()
    {
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        return "MobWin.Cell";
    }

    public java.lang.Object clone()
    {
        java.lang.Throwable r1;
        MobWin.Cell r0;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: MobWin.Cell;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $z0 = <MobWin.Cell: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void display(java.lang.StringBuilder, int)
    {
        MobWin.Cell r0;
        short $s1;
        int $i0;
        com.qq.taf.jce.JceDisplayer r2;
        java.lang.StringBuilder $r1;

        r0 := @this: MobWin.Cell;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 := @parameter1: int;

        r2 = new com.qq.taf.jce.JceDisplayer;

        specialinvoke r2.<com.qq.taf.jce.JceDisplayer: void <init>(java.lang.StringBuilder,int)>($r1, $i0);

        $s1 = r0.<MobWin.Cell: short shMcc>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(short,java.lang.String)>($s1, "shMcc");

        $s1 = r0.<MobWin.Cell: short shMnc>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(short,java.lang.String)>($s1, "shMnc");

        $i0 = r0.<MobWin.Cell: int iLac>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(int,java.lang.String)>($i0, "iLac");

        $i0 = r0.<MobWin.Cell: int iCellId>;

        virtualinvoke r2.<com.qq.taf.jce.JceDisplayer: com.qq.taf.jce.JceDisplayer display(int,java.lang.String)>($i0, "iCellId");

        return;
    }

    public boolean equals(java.lang.Object)
    {
        MobWin.Cell r0, r2;
        short $s0, $s1;
        int $i2, $i3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: MobWin.Cell;

        $r1 := @parameter0: java.lang.Object;

        r2 = (MobWin.Cell) $r1;

        $s0 = r0.<MobWin.Cell: short shMcc>;

        $s1 = r2.<MobWin.Cell: short shMcc>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(short,short)>($s0, $s1);

        if $z0 == 0 goto label1;

        $s0 = r0.<MobWin.Cell: short shMnc>;

        $s1 = r2.<MobWin.Cell: short shMnc>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(short,short)>($s0, $s1);

        if $z0 == 0 goto label1;

        $i2 = r0.<MobWin.Cell: int iLac>;

        $i3 = r2.<MobWin.Cell: int iLac>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(int,int)>($i2, $i3);

        if $z0 == 0 goto label1;

        $i2 = r0.<MobWin.Cell: int iCellId>;

        $i3 = r2.<MobWin.Cell: int iCellId>;

        $z0 = staticinvoke <com.qq.taf.jce.JceUtil: boolean equals(int,int)>($i2, $i3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String fullClassName()
    {
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        return "MobWin.Cell";
    }

    public int getICellId()
    {
        int i0;
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        i0 = r0.<MobWin.Cell: int iCellId>;

        return i0;
    }

    public int getILac()
    {
        int i0;
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        i0 = r0.<MobWin.Cell: int iLac>;

        return i0;
    }

    public short getShMcc()
    {
        MobWin.Cell r0;
        short s0;

        r0 := @this: MobWin.Cell;

        s0 = r0.<MobWin.Cell: short shMcc>;

        return s0;
    }

    public short getShMnc()
    {
        MobWin.Cell r0;
        short s0;

        r0 := @this: MobWin.Cell;

        s0 = r0.<MobWin.Cell: short shMnc>;

        return s0;
    }

    public void readFrom(com.qq.taf.jce.JceInputStream)
    {
        com.qq.taf.jce.JceInputStream $r1;
        MobWin.Cell r0;
        short $s0;
        int $i1;

        r0 := @this: MobWin.Cell;

        $r1 := @parameter0: com.qq.taf.jce.JceInputStream;

        $s0 = r0.<MobWin.Cell: short shMcc>;

        $s0 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: short read(short,int,boolean)>($s0, 0, 1);

        virtualinvoke r0.<MobWin.Cell: void setShMcc(short)>($s0);

        $s0 = r0.<MobWin.Cell: short shMnc>;

        $s0 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: short read(short,int,boolean)>($s0, 1, 1);

        virtualinvoke r0.<MobWin.Cell: void setShMnc(short)>($s0);

        $i1 = r0.<MobWin.Cell: int iLac>;

        $i1 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: int read(int,int,boolean)>($i1, 2, 1);

        virtualinvoke r0.<MobWin.Cell: void setILac(int)>($i1);

        $i1 = r0.<MobWin.Cell: int iCellId>;

        $i1 = virtualinvoke $r1.<com.qq.taf.jce.JceInputStream: int read(int,int,boolean)>($i1, 3, 1);

        virtualinvoke r0.<MobWin.Cell: void setICellId(int)>($i1);

        return;
    }

    public void setICellId(int)
    {
        int $i0;
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        $i0 := @parameter0: int;

        r0.<MobWin.Cell: int iCellId> = $i0;

        return;
    }

    public void setILac(int)
    {
        int $i0;
        MobWin.Cell r0;

        r0 := @this: MobWin.Cell;

        $i0 := @parameter0: int;

        r0.<MobWin.Cell: int iLac> = $i0;

        return;
    }

    public void setShMcc(short)
    {
        MobWin.Cell r0;
        short $s0;

        r0 := @this: MobWin.Cell;

        $s0 := @parameter0: short;

        r0.<MobWin.Cell: short shMcc> = $s0;

        return;
    }

    public void setShMnc(short)
    {
        MobWin.Cell r0;
        short $s0;

        r0 := @this: MobWin.Cell;

        $s0 := @parameter0: short;

        r0.<MobWin.Cell: short shMnc> = $s0;

        return;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream)
    {
        MobWin.Cell r0;
        short $s0;
        int $i1;
        com.qq.taf.jce.JceOutputStream $r1;

        r0 := @this: MobWin.Cell;

        $r1 := @parameter0: com.qq.taf.jce.JceOutputStream;

        $s0 = r0.<MobWin.Cell: short shMcc>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(short,int)>($s0, 0);

        $s0 = r0.<MobWin.Cell: short shMnc>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(short,int)>($s0, 1);

        $i1 = r0.<MobWin.Cell: int iLac>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i1, 2);

        $i1 = r0.<MobWin.Cell: int iCellId>;

        virtualinvoke $r1.<com.qq.taf.jce.JceOutputStream: void write(int,int)>($i1, 3);

        return;
    }
}
