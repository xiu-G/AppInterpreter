class com.google.tagmanager.ContainerOpener$ContainerFutureImpl extends java.lang.Object implements com.google.tagmanager.ContainerOpener$ContainerFuture
{
    private volatile com.google.tagmanager.Container mContainer;
    private java.util.concurrent.Semaphore mContainerIsReady;
    private volatile boolean mHaveGotten;

    private void <init>()
    {
        com.google.tagmanager.ContainerOpener$ContainerFutureImpl r0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: com.google.tagmanager.ContainerOpener$ContainerFutureImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.Semaphore;

        specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0);

        r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: java.util.concurrent.Semaphore mContainerIsReady> = $r1;

        return;
    }

    void <init>(com.google.tagmanager.ContainerOpener$1)
    {
        com.google.tagmanager.ContainerOpener$ContainerFutureImpl r0;
        com.google.tagmanager.ContainerOpener$1 $r1;

        r0 := @this: com.google.tagmanager.ContainerOpener$ContainerFutureImpl;

        $r1 := @parameter0: com.google.tagmanager.ContainerOpener$1;

        specialinvoke r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: void <init>()>();

        return;
    }

    public com.google.tagmanager.Container get()
    {
        com.google.tagmanager.ContainerOpener$ContainerFutureImpl r0;
        java.lang.Throwable $r2;
        java.util.concurrent.Semaphore $r1;
        com.google.tagmanager.Container r3;
        boolean $z0;

        r0 := @this: com.google.tagmanager.ContainerOpener$ContainerFutureImpl;

        $z0 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: boolean mHaveGotten>;

        if $z0 == 0 goto label1;

        r3 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: com.google.tagmanager.Container mContainer>;

        return r3;

     label1:
        $r1 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: java.util.concurrent.Semaphore mContainerIsReady>;

     label2:
        virtualinvoke $r1.<java.util.concurrent.Semaphore: void acquire()>();

     label3:
        r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: boolean mHaveGotten> = 1;

        r3 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: com.google.tagmanager.Container mContainer>;

        return r3;

     label4:
        $r2 := @caughtexception;

        goto label3;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public boolean isDone()
    {
        com.google.tagmanager.ContainerOpener$ContainerFutureImpl r0;
        java.util.concurrent.Semaphore $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.tagmanager.ContainerOpener$ContainerFutureImpl;

        $z0 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: boolean mHaveGotten>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: java.util.concurrent.Semaphore mContainerIsReady>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.Semaphore: int availablePermits()>();

        if $i0 <= 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void setContainer(com.google.tagmanager.Container)
    {
        com.google.tagmanager.ContainerOpener$ContainerFutureImpl r0;
        com.google.tagmanager.Container $r1;
        java.util.concurrent.Semaphore $r2;

        r0 := @this: com.google.tagmanager.ContainerOpener$ContainerFutureImpl;

        $r1 := @parameter0: com.google.tagmanager.Container;

        r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: com.google.tagmanager.Container mContainer> = $r1;

        $r2 = r0.<com.google.tagmanager.ContainerOpener$ContainerFutureImpl: java.util.concurrent.Semaphore mContainerIsReady>;

        virtualinvoke $r2.<java.util.concurrent.Semaphore: void release()>();

        return;
    }
}
