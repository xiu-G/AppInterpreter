public class com.ffcs.android.mc.util.McExceptionUtil extends java.lang.Object
{

    public void <init>()
    {
        com.ffcs.android.mc.util.McExceptionUtil r0;

        r0 := @this: com.ffcs.android.mc.util.McExceptionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void put(java.lang.String)
    {
        java.lang.Throwable r2;
        byte[] r1;
        java.util.Date $r12, $r15;
        java.text.SimpleDateFormat r5, $r14;
        long $l0;
        byte $b1;
        int $i2;
        java.lang.String $r0, $r9, $r11;
        boolean $z0;
        java.io.FileWriter r8, $r16;
        java.io.FileOutputStream r7, $r19;
        java.io.IOException $r20;
        java.io.FileInputStream r6, $r18;
        java.io.File r3, r4, $r17;
        java.lang.StringBuilder $r10, $r13;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label33;

        $z0 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: boolean checkSdCardStatus()>();

        if $z0 == 0 goto label33;

        $r9 = staticinvoke <com.ffcs.android.mc.util.UpdateUtil: java.lang.String getSdCardRootPath()>();

        r4 = new java.io.File;

        r3 = r4;

        $r13 = new java.lang.StringBuilder;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String)>($r11);

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        virtualinvoke r3.<java.io.File: boolean mkdir()>();

     label01:
        r4 = new java.io.File;

        r3 = r4;

        $r13 = new java.lang.StringBuilder;

        $r10 = $r13;

     label02:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r11, "mc_excep.txt");

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label14;

     label04:
        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

     label05:
        $r14 = new java.text.SimpleDateFormat;

        r5 = $r14;

     label06:
        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

     label07:
        $r15 = new java.util.Date;

        $r12 = $r15;

     label08:
        specialinvoke $r15.<java.util.Date: void <init>()>();

        $r9 = virtualinvoke r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);

     label09:
        $r16 = new java.io.FileWriter;

        r8 = $r16;

     label10:
        specialinvoke $r16.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r3, 1);

     label11:
        $r13 = new java.lang.StringBuilder;

        $r10 = $r13;

     label12:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r8.<java.io.FileWriter: void write(java.lang.String)>($r0);

        virtualinvoke r8.<java.io.FileWriter: void close()>();

     label13:
        return;

     label14:
        $l0 = virtualinvoke r3.<java.io.File: long length()>();

     label15:
        $b1 = $l0 cmp 102400L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label05;

        $r17 = new java.io.File;

        r4 = $r17;

        $r13 = new java.lang.StringBuilder;

        $r10 = $r13;

     label16:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/data");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r9, "mc_excep_bak.txt");

        $z0 = virtualinvoke r4.<java.io.File: boolean exists()>();

     label17:
        if $z0 != 0 goto label29;

     label18:
        virtualinvoke r4.<java.io.File: boolean createNewFile()>();

     label19:
        $r18 = new java.io.FileInputStream;

        r6 = $r18;

     label20:
        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

     label21:
        $r19 = new java.io.FileOutputStream;

        r7 = $r19;

     label22:
        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

     label23:
        r1 = newarray (byte)[1024];

     label24:
        $i2 = virtualinvoke r6.<java.io.FileInputStream: int read(byte[])>(r1);

     label25:
        if $i2 != -1 goto label31;

     label26:
        virtualinvoke r6.<java.io.FileInputStream: void close()>();

        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

        virtualinvoke r3.<java.io.File: boolean delete()>();

        virtualinvoke r3.<java.io.File: boolean createNewFile()>();

     label27:
        goto label05;

     label28:
        r2 := @caughtexception;

        $r20 = (java.io.IOException) r2;

        $r0 = virtualinvoke $r20.<java.io.IOException: java.lang.String getMessage()>();

        staticinvoke <com.ffcs.android.mc.util.McLog: void e(java.lang.String)>($r0);

        return;

     label29:
        virtualinvoke r4.<java.io.File: boolean delete()>();

        virtualinvoke r4.<java.io.File: boolean createNewFile()>();

     label30:
        goto label19;

     label31:
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, 0, $i2);

     label32:
        goto label24;

     label33:
        return;

        catch java.io.IOException from label02 to label03 with label28;
        catch java.io.IOException from label04 to label05 with label28;
        catch java.io.IOException from label06 to label07 with label28;
        catch java.io.IOException from label08 to label09 with label28;
        catch java.io.IOException from label10 to label11 with label28;
        catch java.io.IOException from label12 to label13 with label28;
        catch java.io.IOException from label14 to label15 with label28;
        catch java.io.IOException from label16 to label17 with label28;
        catch java.io.IOException from label18 to label19 with label28;
        catch java.io.IOException from label20 to label21 with label28;
        catch java.io.IOException from label22 to label23 with label28;
        catch java.io.IOException from label24 to label25 with label28;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label29 to label30 with label28;
        catch java.io.IOException from label31 to label32 with label28;
    }
}
