public final class com.ccit.mmwlan.b.c extends java.lang.Object
{

    public void <init>()
    {
        com.ccit.mmwlan.b.c r0;

        r0 := @this: com.ccit.mmwlan.b.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Object a(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Throwable $r6;
        java.lang.Object[] $r3;
        java.lang.NoSuchMethodException $r8;
        java.lang.Class[] $r2;
        java.lang.Exception $r7;
        java.lang.Class $r0;
        java.lang.Object $r5;
        java.lang.String $r1;
        java.lang.reflect.Method $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

        $r3 := @parameter3: java.lang.Object[];

     label1:
        $r4 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r3);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r8 = (java.lang.NoSuchMethodException) $r6;

        $r1 = virtualinvoke $r8.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ReflectHelper", $r1);

        return null;

     label4:
        $r7 := @caughtexception;

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ReflectHelper", $r1);

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.Object a(java.lang.Object, java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Throwable $r6;
        java.lang.Object[] $r3;
        java.lang.NoSuchMethodException $r8;
        java.lang.Class[] $r2;
        java.lang.Exception $r7;
        java.lang.Object $r0;
        java.lang.Class $r4;
        java.lang.String $r1;
        java.lang.reflect.Method $r5;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

        $r3 := @parameter3: java.lang.Object[];

        $r4 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

        $r0 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label2:
        return $r0;

     label3:
        $r6 := @caughtexception;

        $r8 = (java.lang.NoSuchMethodException) $r6;

        $r1 = virtualinvoke $r8.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ReflectHelper", $r1);

        return null;

     label4:
        $r7 := @caughtexception;

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ReflectHelper", $r1);

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.Object a(java.lang.String, java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object[] $r3;
        java.lang.Class[] $r2;
        java.lang.Class $r4;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

        $r3 := @parameter3: java.lang.Object[];

     label1:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $r5 = staticinvoke <com.ccit.mmwlan.b.c: java.lang.Object a(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[])>($r4, $r1, $r2, $r3);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r0 = virtualinvoke $r6.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ReflectHelper", $r0);

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
