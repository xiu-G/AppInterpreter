final class com.google.mygson.TreeTypeAdapter extends com.google.mygson.TypeAdapter
{
    private com.google.mygson.TypeAdapter delegate;
    private final com.google.mygson.JsonDeserializer deserializer;
    private final com.google.mygson.Gson gson;
    private final com.google.mygson.JsonSerializer serializer;
    private final com.google.mygson.TypeAdapterFactory skipPast;
    private final com.google.mygson.reflect.TypeToken typeToken;

    private void <init>(com.google.mygson.JsonSerializer, com.google.mygson.JsonDeserializer, com.google.mygson.Gson, com.google.mygson.reflect.TypeToken, com.google.mygson.TypeAdapterFactory)
    {
        com.google.mygson.JsonSerializer r1;
        com.google.mygson.reflect.TypeToken r4;
        com.google.mygson.TypeAdapterFactory $r5;
        com.google.mygson.JsonDeserializer r2;
        com.google.mygson.TreeTypeAdapter r0;
        com.google.mygson.Gson $r3;

        r0 := @this: com.google.mygson.TreeTypeAdapter;

        r1 := @parameter0: com.google.mygson.JsonSerializer;

        r2 := @parameter1: com.google.mygson.JsonDeserializer;

        $r3 := @parameter2: com.google.mygson.Gson;

        r4 := @parameter3: com.google.mygson.reflect.TypeToken;

        $r5 := @parameter4: com.google.mygson.TypeAdapterFactory;

        specialinvoke r0.<com.google.mygson.TypeAdapter: void <init>()>();

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonSerializer serializer> = r1;

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonDeserializer deserializer> = r2;

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.Gson gson> = $r3;

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.reflect.TypeToken typeToken> = r4;

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory skipPast> = $r5;

        return;
    }

    void <init>(com.google.mygson.JsonSerializer, com.google.mygson.JsonDeserializer, com.google.mygson.Gson, com.google.mygson.reflect.TypeToken, com.google.mygson.TypeAdapterFactory, com.google.mygson.TreeTypeAdapter$1)
    {
        com.google.mygson.JsonSerializer $r1;
        com.google.mygson.reflect.TypeToken $r4;
        com.google.mygson.TypeAdapterFactory $r5;
        com.google.mygson.JsonDeserializer $r2;
        com.google.mygson.TreeTypeAdapter r0;
        com.google.mygson.TreeTypeAdapter$1 $r6;
        com.google.mygson.Gson $r3;

        r0 := @this: com.google.mygson.TreeTypeAdapter;

        $r1 := @parameter0: com.google.mygson.JsonSerializer;

        $r2 := @parameter1: com.google.mygson.JsonDeserializer;

        $r3 := @parameter2: com.google.mygson.Gson;

        $r4 := @parameter3: com.google.mygson.reflect.TypeToken;

        $r5 := @parameter4: com.google.mygson.TypeAdapterFactory;

        $r6 := @parameter5: com.google.mygson.TreeTypeAdapter$1;

        specialinvoke r0.<com.google.mygson.TreeTypeAdapter: void <init>(com.google.mygson.JsonSerializer,com.google.mygson.JsonDeserializer,com.google.mygson.Gson,com.google.mygson.reflect.TypeToken,com.google.mygson.TypeAdapterFactory)>($r1, $r2, $r3, $r4, $r5);

        return;
    }

    private com.google.mygson.TypeAdapter delegate()
    {
        com.google.mygson.internal.GsonInternalAccess $r1;
        com.google.mygson.reflect.TypeToken $r4;
        com.google.mygson.TypeAdapterFactory $r3;
        com.google.mygson.TreeTypeAdapter r0;
        com.google.mygson.Gson $r2;
        com.google.mygson.TypeAdapter $r5;

        r0 := @this: com.google.mygson.TreeTypeAdapter;

        $r5 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapter delegate>;

        if $r5 == null goto label1;

        return $r5;

     label1:
        $r1 = <com.google.mygson.internal.GsonInternalAccess: com.google.mygson.internal.GsonInternalAccess INSTANCE>;

        $r2 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.Gson gson>;

        $r3 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapterFactory skipPast>;

        $r4 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.reflect.TypeToken typeToken>;

        $r5 = virtualinvoke $r1.<com.google.mygson.internal.GsonInternalAccess: com.google.mygson.TypeAdapter getNextAdapter(com.google.mygson.Gson,com.google.mygson.TypeAdapterFactory,com.google.mygson.reflect.TypeToken)>($r2, $r3, $r4);

        r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapter delegate> = $r5;

        return $r5;
    }

    public static com.google.mygson.TypeAdapterFactory newFactory(com.google.mygson.reflect.TypeToken, java.lang.Object)
    {
        java.lang.Object $r1;
        com.google.mygson.reflect.TypeToken r0;
        com.google.mygson.TreeTypeAdapter$SingleTypeFactory $r2;

        r0 := @parameter0: com.google.mygson.reflect.TypeToken;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.mygson.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r2.<com.google.mygson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.mygson.reflect.TypeToken,boolean,java.lang.Class,com.google.mygson.TreeTypeAdapter$1)>($r1, r0, 0, null, null);

        return $r2;
    }

    public static com.google.mygson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.mygson.reflect.TypeToken, java.lang.Object)
    {
        com.google.mygson.reflect.TypeToken r0;
        java.lang.reflect.Type $r2;
        java.lang.Object $r1;
        java.lang.Class $r3;
        com.google.mygson.TreeTypeAdapter$SingleTypeFactory $r4;
        boolean z0;

        r0 := @parameter0: com.google.mygson.reflect.TypeToken;

        $r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r3 = virtualinvoke r0.<com.google.mygson.reflect.TypeToken: java.lang.Class getRawType()>();

        if $r2 != $r3 goto label2;

        z0 = 1;

     label1:
        $r4 = new com.google.mygson.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r4.<com.google.mygson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.mygson.reflect.TypeToken,boolean,java.lang.Class,com.google.mygson.TreeTypeAdapter$1)>($r1, r0, z0, null, null);

        return $r4;

     label2:
        z0 = 0;

        goto label1;
    }

    public static com.google.mygson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class, java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object $r1;
        com.google.mygson.TreeTypeAdapter$SingleTypeFactory $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new com.google.mygson.TreeTypeAdapter$SingleTypeFactory;

        specialinvoke $r2.<com.google.mygson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.mygson.reflect.TypeToken,boolean,java.lang.Class,com.google.mygson.TreeTypeAdapter$1)>($r1, null, 0, r0, null);

        return $r2;
    }

    public java.lang.Object read(com.google.mygson.stream.JsonReader) throws java.io.IOException
    {
        com.google.mygson.stream.JsonReader $r1;
        com.google.mygson.Gson $r8;
        com.google.mygson.reflect.TypeToken $r6;
        com.google.mygson.JsonElement $r5;
        java.lang.reflect.Type $r7;
        com.google.mygson.JsonDeserializationContext $r9;
        com.google.mygson.JsonDeserializer $r2;
        com.google.mygson.TreeTypeAdapter r0;
        java.lang.Object $r4;
        com.google.mygson.TypeAdapter $r3;
        boolean $z0;

        r0 := @this: com.google.mygson.TreeTypeAdapter;

        $r1 := @parameter0: com.google.mygson.stream.JsonReader;

        $r2 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonDeserializer deserializer>;

        if $r2 != null goto label1;

        $r3 = specialinvoke r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapter delegate()>();

        $r4 = virtualinvoke $r3.<com.google.mygson.TypeAdapter: java.lang.Object read(com.google.mygson.stream.JsonReader)>($r1);

        return $r4;

     label1:
        $r5 = staticinvoke <com.google.mygson.internal.Streams: com.google.mygson.JsonElement parse(com.google.mygson.stream.JsonReader)>($r1);

        $z0 = virtualinvoke $r5.<com.google.mygson.JsonElement: boolean isJsonNull()>();

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r2 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonDeserializer deserializer>;

        $r6 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.reflect.TypeToken typeToken>;

        $r7 = virtualinvoke $r6.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r8 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.Gson gson>;

        $r9 = $r8.<com.google.mygson.Gson: com.google.mygson.JsonDeserializationContext deserializationContext>;

        $r4 = interfaceinvoke $r2.<com.google.mygson.JsonDeserializer: java.lang.Object deserialize(com.google.mygson.JsonElement,java.lang.reflect.Type,com.google.mygson.JsonDeserializationContext)>($r5, $r7, $r9);

        return $r4;
    }

    public void write(com.google.mygson.stream.JsonWriter, java.lang.Object) throws java.io.IOException
    {
        com.google.mygson.JsonSerializer $r3;
        com.google.mygson.JsonSerializationContext $r8;
        com.google.mygson.Gson $r7;
        com.google.mygson.stream.JsonWriter $r1;
        com.google.mygson.reflect.TypeToken $r5;
        java.lang.reflect.Type $r6;
        com.google.mygson.JsonElement $r9;
        com.google.mygson.TreeTypeAdapter r0;
        java.lang.Object r2;
        com.google.mygson.TypeAdapter $r4;

        r0 := @this: com.google.mygson.TreeTypeAdapter;

        $r1 := @parameter0: com.google.mygson.stream.JsonWriter;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonSerializer serializer>;

        if $r3 != null goto label1;

        $r4 = specialinvoke r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.TypeAdapter delegate()>();

        virtualinvoke $r4.<com.google.mygson.TypeAdapter: void write(com.google.mygson.stream.JsonWriter,java.lang.Object)>($r1, r2);

        return;

     label1:
        if r2 != null goto label2;

        virtualinvoke $r1.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter nullValue()>();

        return;

     label2:
        $r3 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.JsonSerializer serializer>;

        $r5 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.reflect.TypeToken typeToken>;

        $r6 = virtualinvoke $r5.<com.google.mygson.reflect.TypeToken: java.lang.reflect.Type getType()>();

        $r7 = r0.<com.google.mygson.TreeTypeAdapter: com.google.mygson.Gson gson>;

        $r8 = $r7.<com.google.mygson.Gson: com.google.mygson.JsonSerializationContext serializationContext>;

        $r9 = interfaceinvoke $r3.<com.google.mygson.JsonSerializer: com.google.mygson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.mygson.JsonSerializationContext)>(r2, $r6, $r8);

        staticinvoke <com.google.mygson.internal.Streams: void write(com.google.mygson.JsonElement,com.google.mygson.stream.JsonWriter)>($r9, $r1);

        return;
    }
}
