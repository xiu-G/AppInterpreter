public abstract class wabao.ETAppLock.db.d extends java.lang.Object
{
    private static final java.lang.String a;
    private final android.content.Context b;
    private final java.lang.String c;
    private final android.database.sqlite.SQLiteDatabase$CursorFactory d;
    private final int e;
    private android.database.sqlite.SQLiteDatabase f;
    private boolean g;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Lwabao/ETAppLock/db/d;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <wabao.ETAppLock.db.d: java.lang.String a> = $r0;

        return;
    }

    public void <init>(android.content.Context, java.lang.String, int)
    {
        android.content.Context $r1;
        wabao.ETAppLock.db.d r0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: wabao.ETAppLock.db.d;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f> = null;

        r0.<wabao.ETAppLock.db.d: boolean g> = 0;

        if $i0 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Version must be >= 1, was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        r0.<wabao.ETAppLock.db.d: android.content.Context b> = $r1;

        r0.<wabao.ETAppLock.db.d: java.lang.String c> = $r2;

        r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase$CursorFactory d> = null;

        r0.<wabao.ETAppLock.db.d: int e> = $i0;

        return;
    }

    private static java.lang.String a(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <wabao.ETAppLock.util.f: java.lang.String c()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label1:
        return null;
    }

    public final android.database.sqlite.SQLiteDatabase a()
    {
        java.lang.Throwable $r5, $r8, $r9, $r10;
        java.lang.IllegalStateException $r4;
        android.content.Context $r7;
        wabao.ETAppLock.db.d r0;
        java.lang.Exception $r11;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r1;
        android.database.sqlite.SQLiteDatabase $r2, $r3;
        int $i0, $i1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: wabao.ETAppLock.db.d;

        $r2 = null;

        entermonitor r0;

     label01:
        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        if $r3 == null goto label03;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>();

        if $z0 != 0 goto label03;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

     label02:
        exitmonitor r0;

        return $r3;

     label03:
        $z0 = r0.<wabao.ETAppLock.db.d: boolean g>;

        if $z0 == 0 goto label05;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getWritableDatabase called recursively");

        throw $r4;

     label04:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label05:
        r0.<wabao.ETAppLock.db.d: boolean g> = 1;

        $r6 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        if $r6 != null goto label16;

        $r3 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory)>(null);

     label06:
        $i0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = r0.<wabao.ETAppLock.db.d: int e>;

        if $i0 == $i1 goto label11;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label07:
        if $i0 != 0 goto label20;

     label08:
        virtualinvoke r0.<wabao.ETAppLock.db.d: void a(android.database.sqlite.SQLiteDatabase)>($r3);

     label09:
        $i0 = r0.<wabao.ETAppLock.db.d: int e>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void setVersion(int)>($i0);

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label10:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label11:
        r0.<wabao.ETAppLock.db.d: boolean g> = 0;

        $r2 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

     label12:
        if $r2 == null goto label14;

     label13:
        $r2 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label14:
        r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f> = $r3;

     label15:
        goto label02;

     label16:
        $r6 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r6 = staticinvoke <wabao.ETAppLock.db.d: java.lang.String a(java.lang.String)>($r6);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label17;

        if $r6 != null goto label18;

     label17:
        $r7 = r0.<wabao.ETAppLock.db.d: android.content.Context b>;

        $r6 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r1 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase$CursorFactory d>;

        $r3 = virtualinvoke $r7.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r6, 0, $r1);

        goto label06;

     label18:
        $r1 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase$CursorFactory d>;

        $r3 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r6, $r1);

     label19:
        goto label06;

     label20:
        $i1 = r0.<wabao.ETAppLock.db.d: int e>;

        virtualinvoke r0.<wabao.ETAppLock.db.d: void a(android.database.sqlite.SQLiteDatabase,int,int)>($r3, $i0, $i1);

     label21:
        goto label09;

     label22:
        $r8 := @caughtexception;

     label23:
        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw $r8;

     label24:
        $r9 := @caughtexception;

        $r2 = $r3;

        $r10 = $r9;

     label25:
        r0.<wabao.ETAppLock.db.d: boolean g> = 0;

        if $r2 == null goto label26;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label26:
        throw $r10;

     label27:
        $r10 := @caughtexception;

        goto label25;

     label28:
        $r11 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label27;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label10 with label22;
        catch java.lang.Throwable from label10 to label11 with label24;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Exception from label13 to label14 with label28;
        catch java.lang.Throwable from label13 to label14 with label04;
        catch java.lang.Throwable from label14 to label15 with label04;
        catch java.lang.Throwable from label16 to label19 with label27;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.lang.Throwable from label25 to label27 with label04;
    }

    public abstract void a(android.database.sqlite.SQLiteDatabase);

    public abstract void a(android.database.sqlite.SQLiteDatabase, int, int);

    public final android.database.sqlite.SQLiteDatabase b()
    {
        java.lang.Throwable $r5, $r6, $r12;
        java.lang.IllegalStateException $r4;
        android.content.Context $r10;
        android.database.sqlite.SQLiteDatabase $r2, $r3, $r13;
        android.database.sqlite.SQLiteException $r11;
        int $i0, $i1;
        java.lang.String $r7, $r9;
        boolean $z0;
        wabao.ETAppLock.db.d r0;
        android.database.sqlite.SQLiteDatabase$CursorFactory $r1;
        java.lang.StringBuilder $r8;

        r0 := @this: wabao.ETAppLock.db.d;

        entermonitor r0;

     label01:
        $r2 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        if $r2 == null goto label03;

        $r2 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        $z0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label03;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

     label02:
        exitmonitor r0;

        return $r3;

     label03:
        $z0 = r0.<wabao.ETAppLock.db.d: boolean g>;

        if $z0 == 0 goto label05;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getReadableDatabase called recursively");

        throw $r4;

     label04:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

     label05:
        $r2 = virtualinvoke r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase a()>();

     label06:
        $r3 = $r2;

        goto label02;

     label07:
        $r6 := @caughtexception;

     label08:
        $r7 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        if $r7 != null goto label09;

        throw $r6;

     label09:
        $r7 = <wabao.ETAppLock.db.d: java.lang.String a>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t open ");

        $r9 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for writing (will try read-only):");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, $r9, $r6);

     label10:
        $r2 = null;

     label11:
        r0.<wabao.ETAppLock.db.d: boolean g> = 1;

        $r7 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r7 = staticinvoke <wabao.ETAppLock.db.d: java.lang.String a(java.lang.String)>($r7);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label12;

        if $r7 != null goto label17;

     label12:
        $r10 = r0.<wabao.ETAppLock.db.d: android.content.Context b>;

        $r9 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r1 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase$CursorFactory d>;

        $r2 = virtualinvoke $r10.<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)>($r9, 0, $r1);

     label13:
        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $i1 = r0.<wabao.ETAppLock.db.d: int e>;

        if $i0 == $i1 goto label18;

        $r11 = new android.database.sqlite.SQLiteException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Can\'t upgrade read-only database from version ");

        $i0 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int getVersion()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i0 = r0.<wabao.ETAppLock.db.d: int e>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>($r7);

        throw $r11;

     label14:
        $r12 := @caughtexception;

     label15:
        r0.<wabao.ETAppLock.db.d: boolean g> = 0;

        if $r2 == null goto label16;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        if $r2 == $r3 goto label16;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label16:
        throw $r12;

     label17:
        $r1 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase$CursorFactory d>;

        $r2 = staticinvoke <android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r7, $r1, 0);

        goto label13;

     label18:
        $r7 = <wabao.ETAppLock.db.d: java.lang.String a>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Opened ");

        $r9 = r0.<wabao.ETAppLock.db.d: java.lang.String c>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in read-only mode");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r9);

        r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f> = $r2;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

     label19:
        r0.<wabao.ETAppLock.db.d: boolean g> = 0;

        if $r2 == null goto label02;

        $r13 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        if $r2 == $r13 goto label02;

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: void close()>();

     label20:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch android.database.sqlite.SQLiteException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label10 with label04;
        catch java.lang.Throwable from label11 to label14 with label14;
        catch java.lang.Throwable from label15 to label17 with label04;
        catch java.lang.Throwable from label17 to label19 with label14;
        catch java.lang.Throwable from label19 to label20 with label04;
    }

    public final void c()
    {
        java.lang.Throwable $r2;
        java.lang.IllegalStateException $r1;
        android.database.sqlite.SQLiteDatabase $r3;
        wabao.ETAppLock.db.d r0;
        boolean $z0;

        r0 := @this: wabao.ETAppLock.db.d;

        entermonitor r0;

     label1:
        $z0 = r0.<wabao.ETAppLock.db.d: boolean g>;

        if $z0 == 0 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Closed during initialization");

        throw $r1;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        if $r3 == null goto label4;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        $z0 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        r0.<wabao.ETAppLock.db.d: android.database.sqlite.SQLiteDatabase f> = null;

     label4:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }
}
