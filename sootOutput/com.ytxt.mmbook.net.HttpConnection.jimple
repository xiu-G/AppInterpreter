public class com.ytxt.mmbook.net.HttpConnection extends java.lang.Object
{
    public static final java.lang.Integer DEFAULT_GET_REQUEST_TIMEOUT;
    public static final java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT;
    public static final int HTTP_TIMEOUT;
    private static final int MAX_BYTE;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.Integer $r0;

        <com.ytxt.mmbook.net.HttpConnection: java.lang.String TAG> = "HttpConnection";

        <com.ytxt.mmbook.net.HttpConnection: int MAX_BYTE> = 10240;

        <com.ytxt.mmbook.net.HttpConnection: int HTTP_TIMEOUT> = 20000;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20000);

        <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_GET_REQUEST_TIMEOUT> = $r0;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(30000);

        <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT> = $r0;

        return;
    }

    public void <init>()
    {
        com.ytxt.mmbook.net.HttpConnection r0;

        r0 := @this: com.ytxt.mmbook.net.HttpConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static byte[] ImageInputStream(org.apache.http.HttpEntity)
    {
        java.lang.Throwable $r4, $r5, $r7;
        byte[] $r3;
        java.io.ByteArrayOutputStream $r1, $r9;
        org.apache.http.HttpEntity $r0;
        java.io.IOException $r10;
        java.lang.Exception $r6, $r8;
        int $i0;
        java.io.InputStream $r2;

        $r0 := @parameter0: org.apache.http.HttpEntity;

     label01:
        $r2 = interfaceinvoke $r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label02:
        $r9 = new java.io.ByteArrayOutputStream;

     label03:
        $r1 = $r9;

     label04:
        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        $r3 = newarray (byte)[10240];

     label06:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r3);

     label07:
        if $i0 == -1 goto label13;

     label08:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i0);

     label09:
        goto label06;

     label10:
        $r4 := @caughtexception;

        $r3 = null;

     label11:
        $r10 = (java.io.IOException) $r4;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label12:
        return $r3;

     label13:
        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label14:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label15:
        return $r3;

     label16:
        $r5 := @caughtexception;

        $r4 = $r5;

        goto label11;

     label17:
        $r6 := @caughtexception;

        $r3 = null;

     label18:
        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label19:
        return $r3;

     label20:
        $r7 := @caughtexception;

        throw $r7;

     label21:
        $r8 := @caughtexception;

        $r6 = $r8;

        goto label18;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Throwable from label01 to label03 with label20;
        catch java.lang.Throwable from label04 to label05 with label20;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label08 to label09 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.io.IOException from label13 to label14 with label10;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Throwable from label14 to label15 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    public static byte[] getImageResource(org.apache.http.client.methods.HttpGet) throws java.lang.IllegalStateException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r3;
        java.lang.Throwable $r9, $r10;
        byte[] $r8;
        org.apache.http.params.BasicHttpParams $r2;
        org.apache.http.HttpEntity $r7;
        java.lang.Integer $r5;
        org.apache.http.client.methods.HttpGet $r0;
        org.apache.http.params.HttpParams $r4;
        int $i0;
        org.apache.http.HttpResponse $r6;
        java.lang.String $r1;

        $r0 := @parameter0: org.apache.http.client.methods.HttpGet;

     label01:
        $r1 = <com.ytxt.ebook11552.base.Constant: java.lang.String UA>;

     label02:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("UA", $r1);

     label03:
        $r2 = new org.apache.http.params.BasicHttpParams;

     label04:
        specialinvoke $r2.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r2, 20000);

     label05:
        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        $r2 = new org.apache.http.params.BasicHttpParams;

     label06:
        specialinvoke $r2.<org.apache.http.params.BasicHttpParams: void <init>()>();

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r2);

        $r4 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label07:
        $r5 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label08:
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i0);

        $r4 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label09:
        $r5 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label10:
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i0);

        $r6 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r0);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = staticinvoke <com.ytxt.mmbook.net.HttpConnection: byte[] ImageInputStream(org.apache.http.HttpEntity)>($r7);

     label11:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $r8;

     label12:
        $r9 := @caughtexception;

     label13:
        throw $r9;

     label14:
        $r10 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        throw $r10;

        catch java.net.SocketTimeoutException from label02 to label03 with label12;
        catch java.net.SocketTimeoutException from label04 to label05 with label12;
        catch java.net.SocketTimeoutException from label06 to label07 with label12;
        catch java.net.SocketTimeoutException from label08 to label09 with label12;
        catch java.net.SocketTimeoutException from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label11 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
    }

    public static com.ytxt.mmbook.net.HttpData getRequest(org.apache.http.client.methods.HttpGet) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r2, $r16;
        java.lang.Throwable $r11, $r12, $r13;
        byte[] $r8;
        org.apache.http.params.BasicHttpParams $r3, $r15;
        com.ytxt.mmbook.net.HttpData $r1, $r14;
        java.lang.Integer $r5;
        java.net.SocketException $r20;
        java.net.SocketTimeoutException $r19;
        int $i0;
        java.lang.String $r9, $r18;
        org.apache.http.HttpEntity $r7;
        org.apache.http.client.methods.HttpGet $r0;
        org.apache.http.params.HttpParams $r4;
        org.apache.http.HttpResponse $r6;
        java.lang.StringBuilder $r10, $r17;

        $r0 := @parameter0: org.apache.http.client.methods.HttpGet;

        $r14 = new com.ytxt.mmbook.net.HttpData;

        $r1 = $r14;

        specialinvoke $r14.<com.ytxt.mmbook.net.HttpData: void <init>()>();

     label01:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "text/xml; charset=utf-8");

     label02:
        $r16 = new org.apache.http.impl.client.DefaultHttpClient;

     label03:
        $r2 = $r16;

     label04:
        $r15 = new org.apache.http.params.BasicHttpParams;

     label05:
        $r3 = $r15;

     label06:
        specialinvoke $r15.<org.apache.http.params.BasicHttpParams: void <init>()>();

        specialinvoke $r16.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r3);

        $r4 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label07:
        $r5 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_GET_REQUEST_TIMEOUT>;

     label08:
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i0);

        $r4 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label09:
        $r5 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_GET_REQUEST_TIMEOUT>;

     label10:
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i0);

        $r6 = interfaceinvoke $r2.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r0);

        staticinvoke <com.ytxt.mmbook.net.HttpConnection: void printResponseHeader(org.apache.http.HttpResponse,com.ytxt.mmbook.net.HttpData)>($r6, $r1);

        virtualinvoke $r1.<com.ytxt.mmbook.net.HttpData: void setStatusCode(java.lang.String)>(null);

        $r7 = interfaceinvoke $r6.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = staticinvoke <com.ytxt.mmbook.net.HttpConnection: byte[] retrieveInputStream(org.apache.http.HttpEntity)>($r7);

     label11:
        if $r8 == null goto label14;

     label12:
        $i0 = lengthof $r8;

     label13:
        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r1.<com.ytxt.mmbook.net.HttpData: void setHttplength(java.lang.String)>($r9);

     label14:
        virtualinvoke $r1.<com.ytxt.mmbook.net.HttpData: void setByteArray(byte[])>($r8);

     label15:
        if $r8 == null goto label23;

     label16:
        $r17 = new java.lang.StringBuilder;

     label17:
        $r10 = $r17;

     label18:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--------Response Data ");

     label19:
        $r18 = new java.lang.String;

     label20:
        $r9 = $r18;

     label21:
        specialinvoke $r18.<java.lang.String: void <init>(byte[],java.lang.String)>($r8, "utf-8");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnection", $r9);

     label22:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $r1;

     label23:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnection", "--------Response Data");

     label24:
        goto label22;

     label25:
        $r11 := @caughtexception;

     label26:
        $r19 = (java.net.SocketTimeoutException) $r11;

        virtualinvoke $r19.<java.net.SocketTimeoutException: void printStackTrace()>();

     label27:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $r1;

     label28:
        $r12 := @caughtexception;

     label29:
        $r20 = (java.net.SocketException) $r12;

        virtualinvoke $r20.<java.net.SocketException: void printStackTrace()>();

     label30:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $r1;

     label31:
        $r13 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        throw $r13;

        catch java.net.SocketTimeoutException from label01 to label02 with label25;
        catch java.net.SocketTimeoutException from label06 to label07 with label25;
        catch java.net.SocketTimeoutException from label08 to label09 with label25;
        catch java.net.SocketTimeoutException from label10 to label11 with label25;
        catch java.net.SocketTimeoutException from label13 to label15 with label25;
        catch java.net.SocketTimeoutException from label18 to label19 with label25;
        catch java.net.SocketTimeoutException from label21 to label22 with label25;
        catch java.net.SocketException from label01 to label02 with label28;
        catch java.net.SocketException from label06 to label07 with label28;
        catch java.net.SocketException from label08 to label09 with label28;
        catch java.net.SocketException from label10 to label11 with label28;
        catch java.net.SocketException from label13 to label15 with label28;
        catch java.net.SocketException from label18 to label19 with label28;
        catch java.net.SocketException from label21 to label22 with label28;
        catch java.lang.Throwable from label01 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.lang.Throwable from label06 to label11 with label31;
        catch java.lang.Throwable from label12 to label15 with label31;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label18 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.net.SocketTimeoutException from label23 to label24 with label25;
        catch java.net.SocketException from label23 to label24 with label28;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label26 to label27 with label31;
        catch java.lang.Throwable from label29 to label30 with label31;
    }

    protected static byte[] gzipInputStream(org.apache.http.HttpEntity)
    {
        java.lang.Throwable $r10, $r12;
        byte[] $r13;
        org.apache.http.HeaderElement[] $r3;
        java.util.zip.GZIPInputStream $r6, $r14;
        org.apache.http.Header $r2;
        java.lang.StringBuffer $r9, $r17;
        int $i0, $i1;
        java.lang.String $r5;
        boolean $z0;
        org.apache.http.HttpEntity $r0;
        java.io.IOException $r18;
        org.apache.http.HeaderElement $r4;
        java.io.InputStreamReader $r7, $r15;
        java.lang.Exception $r11;
        java.io.BufferedReader $r8, $r16;
        java.io.InputStream $r1;

        $r0 := @parameter0: org.apache.http.HttpEntity;

     label01:
        $r1 = interfaceinvoke $r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = interfaceinvoke $r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

     label02:
        if $r2 == null goto label44;

     label03:
        $r3 = interfaceinvoke $r2.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

     label06:
        if $i0 >= $i1 goto label44;

     label07:
        $r4 = $r3[$i0];

     label08:
        $r5 = interfaceinvoke $r4.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");

     label09:
        if $z0 == 0 goto label30;

     label10:
        $r14 = new java.util.zip.GZIPInputStream;

     label11:
        $r6 = $r14;

     label12:
        specialinvoke $r14.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r1);

     label13:
        if $r6 == null goto label31;

     label14:
        $r15 = new java.io.InputStreamReader;

     label15:
        $r7 = $r15;

     label16:
        specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

     label17:
        $r16 = new java.io.BufferedReader;

     label18:
        $r8 = $r16;

     label19:
        specialinvoke $r16.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label20:
        $r17 = new java.lang.StringBuffer;

     label21:
        $r9 = $r17;

     label22:
        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

     label23:
        $r5 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label24:
        if $r5 == null goto label39;

     label25:
        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label26:
        goto label23;

     label27:
        $r10 := @caughtexception;

     label28:
        $r18 = (java.io.IOException) $r10;

        virtualinvoke $r18.<java.io.IOException: void printStackTrace()>();

     label29:
        return null;

     label30:
        $i0 = $i0 + 1;

        goto label05;

     label31:
        $r15 = new java.io.InputStreamReader;

     label32:
        $r7 = $r15;

     label33:
        specialinvoke $r15.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

     label34:
        goto label17;

     label35:
        $r11 := @caughtexception;

     label36:
        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label37:
        goto label29;

     label38:
        $r12 := @caughtexception;

        throw $r12;

     label39:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        virtualinvoke $r7.<java.io.InputStreamReader: void close()>();

     label40:
        if $r6 == null goto label42;

     label41:
        virtualinvoke $r6.<java.util.zip.GZIPInputStream: void close()>();

     label42:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

     label43:
        return $r13;

     label44:
        $r6 = null;

        goto label13;

        catch java.io.IOException from label01 to label02 with label27;
        catch java.io.IOException from label03 to label04 with label27;
        catch java.io.IOException from label08 to label09 with label27;
        catch java.io.IOException from label12 to label13 with label27;
        catch java.io.IOException from label16 to label17 with label27;
        catch java.io.IOException from label19 to label20 with label27;
        catch java.io.IOException from label22 to label24 with label27;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Exception from label01 to label02 with label35;
        catch java.lang.Exception from label03 to label04 with label35;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label09 with label35;
        catch java.lang.Exception from label12 to label13 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label19 to label20 with label35;
        catch java.lang.Exception from label22 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label08 to label09 with label38;
        catch java.lang.Throwable from label10 to label11 with label38;
        catch java.lang.Throwable from label12 to label13 with label38;
        catch java.lang.Throwable from label14 to label15 with label38;
        catch java.lang.Throwable from label16 to label18 with label38;
        catch java.lang.Throwable from label19 to label21 with label38;
        catch java.lang.Throwable from label22 to label24 with label38;
        catch java.lang.Throwable from label25 to label26 with label38;
        catch java.lang.Throwable from label28 to label29 with label38;
        catch java.io.IOException from label33 to label34 with label27;
        catch java.lang.Exception from label33 to label34 with label35;
        catch java.lang.Throwable from label31 to label32 with label38;
        catch java.lang.Throwable from label33 to label34 with label38;
        catch java.lang.Throwable from label36 to label37 with label38;
        catch java.io.IOException from label39 to label40 with label27;
        catch java.io.IOException from label41 to label43 with label27;
        catch java.lang.Exception from label39 to label40 with label35;
        catch java.lang.Exception from label41 to label43 with label35;
        catch java.lang.Throwable from label39 to label40 with label38;
        catch java.lang.Throwable from label41 to label43 with label38;
    }

    public static int omsNetPing() throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r1, $r11;
        java.lang.Throwable $r6, $r7, $r8;
        org.apache.http.params.BasicHttpParams $r2, $r10;
        org.apache.http.StatusLine $r5;
        java.net.SocketException $r13;
        org.apache.http.client.methods.HttpGet $r0, $r9;
        org.apache.http.params.HttpParams $r3;
        java.net.SocketTimeoutException $r12;
        int $i0;
        org.apache.http.HttpResponse $r4;

        $r9 = new org.apache.http.client.methods.HttpGet;

        $r0 = $r9;

        specialinvoke $r9.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>("http://120.197.26.185/hatcher_issue/content");

     label01:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "text/xml; charset=utf-8");

     label02:
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

     label03:
        $r1 = $r11;

     label04:
        $r10 = new org.apache.http.params.BasicHttpParams;

     label05:
        $r2 = $r10;

     label06:
        specialinvoke $r10.<org.apache.http.params.BasicHttpParams: void <init>()>();

        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r2);

        $r3 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r3.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", 3000);

        $r3 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        interfaceinvoke $r3.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", 2000);

        $r4 = interfaceinvoke $r1.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r0);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r5.<org.apache.http.StatusLine: int getStatusCode()>();

     label07:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        return $i0;

     label08:
        $r6 := @caughtexception;

     label09:
        $r12 = (java.net.SocketTimeoutException) $r6;

        virtualinvoke $r12.<java.net.SocketTimeoutException: void printStackTrace()>();

     label10:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        $i0 = -1;

        return $i0;

     label11:
        $r7 := @caughtexception;

     label12:
        $r13 = (java.net.SocketException) $r7;

        virtualinvoke $r13.<java.net.SocketException: void printStackTrace()>();

     label13:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        $i0 = -1;

        return $i0;

     label14:
        $r8 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: void abort()>();

        throw $r8;

        catch java.net.SocketTimeoutException from label01 to label02 with label08;
        catch java.net.SocketTimeoutException from label06 to label07 with label08;
        catch java.net.SocketException from label01 to label02 with label11;
        catch java.net.SocketException from label06 to label07 with label11;
        catch java.lang.Throwable from label01 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    public static boolean parseStatusCode(com.ytxt.mmbook.net.HttpData, java.lang.String)
    {
        java.lang.String $r1, $r2;
        com.ytxt.mmbook.net.HttpData $r0;
        boolean $z0;

        $r0 := @parameter0: com.ytxt.mmbook.net.HttpData;

        $r1 := @parameter1: java.lang.String;

        $r2 = "0000";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.ytxt.mmbook.net.HttpData: void setStatusCode(java.lang.String)>($r1);

        return 1;

     label1:
        return 0;
    }

    public static com.ytxt.mmbook.net.HttpData postRequest(org.apache.http.client.methods.HttpPost, java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r5, $r24;
        java.lang.Throwable $r10, $r12, $r20;
        org.apache.http.client.methods.HttpPost $r0;
        byte[] $r18;
        org.apache.http.params.BasicHttpParams $r4, $r23;
        com.ytxt.mmbook.net.HttpData $r2, $r21;
        java.lang.Integer $r7;
        org.apache.http.Header $r15;
        org.apache.http.StatusLine $r16;
        java.net.SocketException $r11, $r26;
        java.net.SocketTimeoutException $r9, $r25;
        int $i0;
        java.lang.String $r1;
        org.apache.http.Header[] $r13;
        java.io.PrintStream $r14;
        org.apache.http.HttpEntity $r17;
        org.apache.http.entity.StringEntity $r3, $r22;
        org.apache.http.params.HttpParams $r6;
        org.apache.http.HttpResponse $r8;
        java.lang.StringBuilder $r19, $r27;

        $r0 := @parameter0: org.apache.http.client.methods.HttpPost;

        $r1 := @parameter1: java.lang.String;

        $r21 = new com.ytxt.mmbook.net.HttpData;

        $r2 = $r21;

        specialinvoke $r21.<com.ytxt.mmbook.net.HttpData: void <init>()>();

     label01:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "text/xml; charset=utf-8");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "Openwave");

     label02:
        $r22 = new org.apache.http.entity.StringEntity;

     label03:
        $r3 = $r22;

     label04:
        specialinvoke $r22.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r3);

     label05:
        $r23 = new org.apache.http.params.BasicHttpParams;

     label06:
        $r4 = $r23;

     label07:
        specialinvoke $r23.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r4, 20000);

     label08:
        $r24 = new org.apache.http.impl.client.DefaultHttpClient;

     label09:
        $r5 = $r24;

     label10:
        specialinvoke $r24.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r4);

        $r6 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label11:
        $r7 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label12:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r6.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i0);

        $r6 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label13:
        $r7 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label14:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r6.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i0);

        $r8 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r0);

     label15:
        if $r8 != null goto label25;

     label16:
        $r25 = new java.net.SocketTimeoutException;

     label17:
        $r9 = $r25;

     label18:
        specialinvoke $r25.<java.net.SocketTimeoutException: void <init>()>();

     label19:
        throw $r9;

     label20:
        $r10 := @caughtexception;

     label21:
        $r11 = (java.net.SocketException) $r10;

        virtualinvoke $r11.<java.net.SocketException: void printStackTrace()>();

        $r26 = new java.net.SocketException;

     label22:
        $r11 = $r26;

     label23:
        specialinvoke $r26.<java.net.SocketException: void <init>()>();

        throw $r11;

     label24:
        $r12 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void abort()>();

        throw $r12;

     label25:
        $r13 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("StatusCode");

     label26:
        $i0 = lengthof $r13;

     label27:
        if $i0 <= 0 goto label30;

     label28:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r15 = $r13[0];

     label29:
        $r1 = interfaceinvoke $r15.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label30:
        $r16 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r16.<org.apache.http.StatusLine: int getStatusCode()>();

     label31:
        if $i0 != 200 goto label34;

     label32:
        $r17 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r18 = staticinvoke <com.ytxt.mmbook.net.HttpConnection: byte[] ImageInputStream(org.apache.http.HttpEntity)>($r17);

        virtualinvoke $r2.<com.ytxt.mmbook.net.HttpData: void setByteArray(byte[])>($r18);

     label33:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void abort()>();

        return $r2;

     label34:
        $r27 = new java.lang.StringBuilder;

     label35:
        $r19 = $r27;

     label36:
        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r16 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r16.<org.apache.http.StatusLine: int getStatusCode()>();

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.ytxt.mmbook.net.HttpData: void setStatusCode(java.lang.String)>($r1);

     label37:
        goto label33;

     label38:
        $r20 := @caughtexception;

     label39:
        $r9 = (java.net.SocketTimeoutException) $r20;

        virtualinvoke $r9.<java.net.SocketTimeoutException: void printStackTrace()>();

        $r25 = new java.net.SocketTimeoutException;

     label40:
        $r9 = $r25;

     label41:
        specialinvoke $r25.<java.net.SocketTimeoutException: void <init>()>();

        throw $r9;

     label42:
        nop;

        catch java.net.SocketException from label01 to label02 with label20;
        catch java.net.SocketException from label04 to label05 with label20;
        catch java.net.SocketException from label07 to label08 with label20;
        catch java.net.SocketException from label10 to label11 with label20;
        catch java.net.SocketException from label12 to label13 with label20;
        catch java.net.SocketException from label14 to label15 with label20;
        catch java.net.SocketException from label18 to label19 with label20;
        catch java.net.SocketTimeoutException from label01 to label02 with label38;
        catch java.net.SocketTimeoutException from label04 to label05 with label38;
        catch java.net.SocketTimeoutException from label07 to label08 with label38;
        catch java.net.SocketTimeoutException from label10 to label11 with label38;
        catch java.net.SocketTimeoutException from label12 to label13 with label38;
        catch java.net.SocketTimeoutException from label14 to label15 with label38;
        catch java.net.SocketTimeoutException from label18 to label20 with label38;
        catch java.lang.Throwable from label01 to label03 with label24;
        catch java.lang.Throwable from label04 to label06 with label24;
        catch java.lang.Throwable from label07 to label09 with label24;
        catch java.lang.Throwable from label10 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.net.SocketException from label25 to label26 with label20;
        catch java.net.SocketException from label29 to label31 with label20;
        catch java.net.SocketException from label32 to label33 with label20;
        catch java.net.SocketTimeoutException from label25 to label26 with label38;
        catch java.net.SocketTimeoutException from label29 to label31 with label38;
        catch java.net.SocketTimeoutException from label32 to label33 with label38;
        catch java.lang.Throwable from label25 to label27 with label24;
        catch java.lang.Throwable from label28 to label31 with label24;
        catch java.lang.Throwable from label32 to label33 with label24;
        catch java.net.SocketException from label36 to label37 with label20;
        catch java.net.SocketTimeoutException from label36 to label37 with label38;
        catch java.lang.Throwable from label34 to label35 with label24;
        catch java.lang.Throwable from label36 to label37 with label24;
        catch java.lang.Throwable from label39 to label40 with label24;
        catch java.lang.Throwable from label41 to label42 with label24;
    }

    public static com.ytxt.mmbook.net.HttpData postRequestCommon(org.apache.http.client.methods.HttpPost, java.lang.String) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultHttpClient $r5, $r21;
        java.lang.Throwable $r10, $r12, $r17;
        org.apache.http.client.methods.HttpPost $r0;
        byte[] $r15;
        org.apache.http.params.BasicHttpParams $r4, $r20;
        com.ytxt.mmbook.net.HttpData $r2, $r18;
        java.lang.Integer $r7;
        org.apache.http.StatusLine $r13;
        java.net.SocketException $r11, $r23;
        java.net.SocketTimeoutException $r9, $r22;
        int $i0;
        java.lang.String $r1;
        org.apache.http.HttpEntity $r14;
        org.apache.http.entity.StringEntity $r3, $r19;
        org.apache.http.params.HttpParams $r6;
        org.apache.http.HttpResponse $r8;
        java.lang.StringBuilder $r16, $r24;

        $r0 := @parameter0: org.apache.http.client.methods.HttpPost;

        $r1 := @parameter1: java.lang.String;

        $r18 = new com.ytxt.mmbook.net.HttpData;

        $r2 = $r18;

        specialinvoke $r18.<com.ytxt.mmbook.net.HttpData: void <init>()>();

     label01:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Content-Type", "text/xml; charset=utf-8");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>("User-Agent", "Openwave");

     label02:
        $r19 = new org.apache.http.entity.StringEntity;

     label03:
        $r3 = $r19;

     label04:
        specialinvoke $r19.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r3);

     label05:
        $r20 = new org.apache.http.params.BasicHttpParams;

     label06:
        $r4 = $r20;

     label07:
        specialinvoke $r20.<org.apache.http.params.BasicHttpParams: void <init>()>();

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r4, 20000);

     label08:
        $r21 = new org.apache.http.impl.client.DefaultHttpClient;

     label09:
        $r5 = $r21;

     label10:
        specialinvoke $r21.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r4);

        $r6 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label11:
        $r7 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label12:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r6.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", $i0);

        $r6 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

     label13:
        $r7 = <com.ytxt.mmbook.net.HttpConnection: java.lang.Integer DEFAULT_POST_REQUEST_TIMEOUT>;

     label14:
        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r6.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", $i0);

        $r8 = interfaceinvoke $r5.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r0);

     label15:
        if $r8 != null goto label25;

     label16:
        $r22 = new java.net.SocketTimeoutException;

     label17:
        $r9 = $r22;

     label18:
        specialinvoke $r22.<java.net.SocketTimeoutException: void <init>()>();

     label19:
        throw $r9;

     label20:
        $r10 := @caughtexception;

     label21:
        $r11 = (java.net.SocketException) $r10;

        virtualinvoke $r11.<java.net.SocketException: void printStackTrace()>();

        $r23 = new java.net.SocketException;

     label22:
        $r11 = $r23;

     label23:
        specialinvoke $r23.<java.net.SocketException: void <init>()>();

        throw $r11;

     label24:
        $r12 := @caughtexception;

        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void abort()>();

        throw $r12;

     label25:
        $r13 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r13.<org.apache.http.StatusLine: int getStatusCode()>();

     label26:
        if $i0 != 200 goto label30;

     label27:
        $r14 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r15 = staticinvoke <com.ytxt.mmbook.net.HttpConnection: byte[] ImageInputStream(org.apache.http.HttpEntity)>($r14);

        virtualinvoke $r2.<com.ytxt.mmbook.net.HttpData: void setByteArray(byte[])>($r15);

     label28:
        if $r15 == null goto label29;

     label29:
        virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: void abort()>();

        return $r2;

     label30:
        $r24 = new java.lang.StringBuilder;

     label31:
        $r16 = $r24;

     label32:
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke $r8.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r13.<org.apache.http.StatusLine: int getStatusCode()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.ytxt.mmbook.net.HttpData: void setStatusCode(java.lang.String)>($r1);

     label33:
        goto label29;

     label34:
        $r17 := @caughtexception;

     label35:
        $r9 = (java.net.SocketTimeoutException) $r17;

        virtualinvoke $r9.<java.net.SocketTimeoutException: void printStackTrace()>();

        $r22 = new java.net.SocketTimeoutException;

     label36:
        $r9 = $r22;

     label37:
        specialinvoke $r22.<java.net.SocketTimeoutException: void <init>()>();

        throw $r9;

     label38:
        nop;

        catch java.net.SocketException from label01 to label02 with label20;
        catch java.net.SocketException from label04 to label05 with label20;
        catch java.net.SocketException from label07 to label08 with label20;
        catch java.net.SocketException from label10 to label11 with label20;
        catch java.net.SocketException from label12 to label13 with label20;
        catch java.net.SocketException from label14 to label15 with label20;
        catch java.net.SocketException from label18 to label19 with label20;
        catch java.net.SocketTimeoutException from label01 to label02 with label34;
        catch java.net.SocketTimeoutException from label04 to label05 with label34;
        catch java.net.SocketTimeoutException from label07 to label08 with label34;
        catch java.net.SocketTimeoutException from label10 to label11 with label34;
        catch java.net.SocketTimeoutException from label12 to label13 with label34;
        catch java.net.SocketTimeoutException from label14 to label15 with label34;
        catch java.net.SocketTimeoutException from label18 to label20 with label34;
        catch java.lang.Throwable from label01 to label03 with label24;
        catch java.lang.Throwable from label04 to label06 with label24;
        catch java.lang.Throwable from label07 to label09 with label24;
        catch java.lang.Throwable from label10 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label23 to label24 with label24;
        catch java.net.SocketException from label25 to label26 with label20;
        catch java.net.SocketException from label27 to label28 with label20;
        catch java.net.SocketTimeoutException from label25 to label26 with label34;
        catch java.net.SocketTimeoutException from label27 to label28 with label34;
        catch java.lang.Throwable from label25 to label26 with label24;
        catch java.lang.Throwable from label27 to label28 with label24;
        catch java.net.SocketException from label32 to label33 with label20;
        catch java.net.SocketTimeoutException from label32 to label33 with label34;
        catch java.lang.Throwable from label30 to label31 with label24;
        catch java.lang.Throwable from label32 to label33 with label24;
        catch java.lang.Throwable from label35 to label36 with label24;
        catch java.lang.Throwable from label37 to label38 with label24;
    }

    public static void printGetRequestHeader(org.apache.http.client.methods.HttpGet)
    {
        org.apache.http.Header[] $r4;
        org.apache.http.Header $r5;
        org.apache.http.client.methods.HttpGet $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.net.URI $r1;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.client.methods.HttpGet;

        $r1 = virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: java.net.URI getURI()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnetion", $r3);

        $r4 = virtualinvoke $r0.<org.apache.http.client.methods.HttpGet: org.apache.http.Header[] getAllHeaders()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r4[$i0];

        $r3 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :  ");

        $r5 = $r4[$i0];

        $r3 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getValue()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnection Get Request", $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void printPostRequestHeader(org.apache.http.client.methods.HttpPost)
    {
        org.apache.http.Header[] $r4;
        org.apache.http.client.methods.HttpPost $r0;
        org.apache.http.Header $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.net.URI $r1;
        java.lang.String $r3;

        $r0 := @parameter0: org.apache.http.client.methods.HttpPost;

        $r1 = virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: java.net.URI getURI()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnetion", $r3);

        $r4 = virtualinvoke $r0.<org.apache.http.client.methods.HttpPost: org.apache.http.Header[] getAllHeaders()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r4[$i0];

        $r3 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :  ");

        $r5 = $r4[$i0];

        $r3 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getValue()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("HttpConnection Post Request", $r3);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void printResponseHeader(org.apache.http.HttpResponse, com.ytxt.mmbook.net.HttpData)
    {
        org.apache.http.Header[] $r2;
        com.ytxt.mmbook.net.HttpData $r1;
        org.apache.http.Header $r3;
        int $i0, $i1;
        org.apache.http.HttpResponse $r0;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;

        $r0 := @parameter0: org.apache.http.HttpResponse;

        $r1 := @parameter1: com.ytxt.mmbook.net.HttpData;

        $r2 = interfaceinvoke $r0.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label4;

        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getName()>();

        $r3 = $r2[$i0];

        $r5 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

        $r6 = "DCMP-content-length";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<com.ytxt.mmbook.net.HttpData: void set_dcmpContentLength(java.lang.String)>($r5);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r6 = "Text-content-length";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<com.ytxt.mmbook.net.HttpData: void set_textContentLength(java.lang.String)>($r5);

        goto label2;

     label4:
        return;
    }

    public static byte[] retrieveInputStream(org.apache.http.HttpEntity)
    {
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8, $r9;
        byte[] $r3;
        java.io.ByteArrayOutputStream $r2, $r10;
        org.apache.http.HttpEntity $r0;
        long $l0;
        int $i1, $i2;
        java.io.InputStream $r1;

        $r0 := @parameter0: org.apache.http.HttpEntity;

     label01:
        $r1 = interfaceinvoke $r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $l0 = interfaceinvoke $r0.<org.apache.http.HttpEntity: long getContentLength()>();

     label02:
        $i1 = (int) $l0;

        if $i1 != 0 goto label03;

        return null;

     label03:
        $r10 = new java.io.ByteArrayOutputStream;

        $r2 = $r10;

     label04:
        specialinvoke $r10.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        $r3 = newarray (byte)[1024];

     label06:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

     label07:
        $i2 = -1;

        if $i1 == $i2 goto label11;

     label08:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, 0, $i1);

     label09:
        goto label06;

     label10:
        $r4 := @caughtexception;

        return null;

     label11:
        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label12:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label13:
        return $r3;

     label14:
        $r5 := @caughtexception;

        return null;

     label15:
        $r6 := @caughtexception;

        return $r3;

     label16:
        $r7 := @caughtexception;

        return null;

     label17:
        $r8 := @caughtexception;

        return $r3;

     label18:
        $r9 := @caughtexception;

        return $r3;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label10;
        catch java.lang.IllegalStateException from label01 to label02 with label16;
        catch java.lang.IllegalStateException from label04 to label05 with label16;
        catch java.lang.IllegalStateException from label06 to label07 with label16;
        catch java.lang.IllegalStateException from label08 to label09 with label16;
        catch java.lang.IllegalStateException from label11 to label12 with label16;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label11 to label12 with label14;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label18;
        catch java.lang.IllegalStateException from label12 to label13 with label17;
        catch java.io.IOException from label12 to label13 with label15;
    }
}
