public class com.google.mygson.stream.JsonWriter extends java.lang.Object implements java.io.Closeable
{
    private java.lang.String deferredName;
    private boolean htmlSafe;
    private java.lang.String indent;
    private boolean lenient;
    private final java.io.Writer out;
    private java.lang.String separator;
    private boolean serializeNulls;
    private final java.util.List stack;

    public void <init>(java.io.Writer)
    {
        java.util.List $r3;
        com.google.mygson.stream.JsonScope $r4;
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r1;
        java.lang.NullPointerException $r5;
        java.util.ArrayList $r2;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.google.mygson.stream.JsonWriter: java.util.List stack> = $r2;

        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r4 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_DOCUMENT>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        r0.<com.google.mygson.stream.JsonWriter: java.lang.String separator> = ":";

        r0.<com.google.mygson.stream.JsonWriter: boolean serializeNulls> = 1;

        if $r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r5;

     label1:
        r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out> = $r1;

        return;
    }

    private void beforeName() throws java.io.IOException
    {
        java.lang.IllegalStateException $r4;
        java.util.List $r6;
        com.google.mygson.stream.JsonScope $r1, $r2;
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r3;
        java.lang.StringBuilder $r5;
        java.lang.String $r7;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonScope peek()>();

        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_OBJECT>;

        if $r1 != $r2 goto label2;

        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r3.<java.io.Writer: void write(int)>(44);

     label1:
        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void newline()>();

        $r1 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope DANGLING_NAME>;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void replaceTop(com.google.mygson.stream.JsonScope)>($r1);

        return;

     label2:
        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_OBJECT>;

        if $r1 == $r2 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r6 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    private void beforeValue(boolean) throws java.io.IOException
    {
        java.lang.IllegalStateException $r3;
        java.util.List $r5;
        com.google.mygson.stream.JsonScope $r2;
        com.google.mygson.stream.JsonWriter r0;
        int[] $r1;
        int $i0;
        java.io.Writer $r7;
        java.lang.StringBuilder $r4;
        java.lang.String $r6;
        boolean $z0, $z1;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        $r1 = <com.google.mygson.stream.JsonWriter$1: int[] $SwitchMap$com$google$gson$stream$JsonScope>;

        $r2 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonScope peek()>();

        $i0 = virtualinvoke $r2.<com.google.mygson.stream.JsonScope: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r5 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label2:
        $z1 = r0.<com.google.mygson.stream.JsonWriter: boolean lenient>;

        if $z1 != 0 goto label3;

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JSON must start with an array or an object.");

        throw $r3;

     label3:
        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_DOCUMENT>;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void replaceTop(com.google.mygson.stream.JsonScope)>($r2);

        return;

     label4:
        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_ARRAY>;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void replaceTop(com.google.mygson.stream.JsonScope)>($r2);

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void newline()>();

        return;

     label5:
        $r7 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r7.<java.io.Writer: java.io.Writer append(char)>(44);

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void newline()>();

        return;

     label6:
        $r7 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r6 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String separator>;

        virtualinvoke $r7.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r6);

        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_OBJECT>;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void replaceTop(com.google.mygson.stream.JsonScope)>($r2);

        return;

     label7:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JSON must have only one top-level value.");

        throw $r3;
    }

    private com.google.mygson.stream.JsonWriter close(com.google.mygson.stream.JsonScope, com.google.mygson.stream.JsonScope, java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r11;
        java.util.List $r6, $r8;
        com.google.mygson.stream.JsonScope $r1, $r2, $r4;
        com.google.mygson.stream.JsonWriter r0;
        int $i0;
        java.io.Writer $r9;
        java.lang.StringBuilder $r5, $r10;
        java.lang.String $r3, $r7;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: com.google.mygson.stream.JsonScope;

        $r2 := @parameter1: com.google.mygson.stream.JsonScope;

        $r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonScope peek()>();

        if $r4 == $r2 goto label1;

        if $r4 == $r1 goto label1;

        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nesting problem: ");

        $r6 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label1:
        $r7 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        if $r7 == null goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dangling name: ");

        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r11;

     label2:
        $r6 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r8 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>($i0);

        if $r4 != $r2 goto label3;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void newline()>();

     label3:
        $r9 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r9.<java.io.Writer: void write(java.lang.String)>($r3);

        return r0;
    }

    private void newline() throws java.io.IOException
    {
        java.util.List $r3;
        com.google.mygson.stream.JsonWriter r0;
        int $i0, i1;
        java.io.Writer $r2;
        java.lang.String $r1;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String indent>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");

        i1 = 1;

     label2:
        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String indent>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private com.google.mygson.stream.JsonWriter open(com.google.mygson.stream.JsonScope, java.lang.String) throws java.io.IOException
    {
        java.util.List $r3;
        com.google.mygson.stream.JsonScope $r1;
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r4;
        java.lang.String $r2;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: com.google.mygson.stream.JsonScope;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(1);

        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r4 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r2);

        return r0;
    }

    private com.google.mygson.stream.JsonScope peek()
    {
        java.util.List $r1, $r2;
        com.google.mygson.stream.JsonScope $r4;
        com.google.mygson.stream.JsonWriter r0;
        int $i0;
        java.lang.Object $r3;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.google.mygson.stream.JsonScope) $r3;

        return $r4;
    }

    private void replaceTop(com.google.mygson.stream.JsonScope)
    {
        java.util.List $r2, $r3;
        com.google.mygson.stream.JsonScope $r1;
        com.google.mygson.stream.JsonWriter r0;
        int $i0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: com.google.mygson.stream.JsonScope;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.util.List stack>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i0 = $i0 + -1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        return;
    }

    private void string(java.lang.String) throws java.io.IOException
    {
        java.lang.Object[] $r3;
        char $c2;
        java.lang.Integer $r4;
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r2;
        int i0, $i1, $i3;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\"");

        i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label01:
        if i0 >= $i1 goto label14;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        $i3 = (int) $c2;

        lookupswitch($i3)
        {
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label07;
            case 12: goto label09;
            case 13: goto label08;
            case 34: goto label04;
            case 38: goto label10;
            case 39: goto label10;
            case 60: goto label10;
            case 61: goto label10;
            case 62: goto label10;
            case 92: goto label04;
            case 8232: goto label12;
            case 8233: goto label12;
            default: goto label02;
        };

     label02:
        $i3 = (int) $c2;

        if $i3 > 31 goto label13;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r3 = newarray (java.lang.Object)[1];

        $i3 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", $r3);

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);

     label03:
        i0 = i0 + 1;

        goto label01;

     label04:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(92);

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $i3 = (int) $c2;

        virtualinvoke $r2.<java.io.Writer: void write(int)>($i3);

        goto label03;

     label05:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\\t");

        goto label03;

     label06:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\\b");

        goto label03;

     label07:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\\n");

        goto label03;

     label08:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\\r");

        goto label03;

     label09:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\\f");

        goto label03;

     label10:
        $z0 = r0.<com.google.mygson.stream.JsonWriter: boolean htmlSafe>;

        if $z0 == 0 goto label11;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r3 = newarray (java.lang.Object)[1];

        $i3 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", $r3);

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);

        goto label03;

     label11:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $i3 = (int) $c2;

        virtualinvoke $r2.<java.io.Writer: void write(int)>($i3);

        goto label03;

     label12:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r3 = newarray (java.lang.Object)[1];

        $i3 = (int) $c2;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04x", $r3);

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);

        goto label03;

     label13:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $i3 = (int) $c2;

        virtualinvoke $r2.<java.io.Writer: void write(int)>($i3);

        goto label03;

     label14:
        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\"");

        return;
    }

    private void writeDeferredName() throws java.io.IOException
    {
        java.lang.String $r1;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeName()>();

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void string(java.lang.String)>($r1);

        r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName> = null;

     label1:
        return;
    }

    public com.google.mygson.stream.JsonWriter beginArray() throws java.io.IOException
    {
        com.google.mygson.stream.JsonScope $r1;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        $r1 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_ARRAY>;

        r0 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter open(com.google.mygson.stream.JsonScope,java.lang.String)>($r1, "[");

        return r0;
    }

    public com.google.mygson.stream.JsonWriter beginObject() throws java.io.IOException
    {
        com.google.mygson.stream.JsonScope $r1;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        $r1 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_OBJECT>;

        r0 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter open(com.google.mygson.stream.JsonScope,java.lang.String)>($r1, "{");

        return r0;
    }

    public void close() throws java.io.IOException
    {
        com.google.mygson.stream.JsonScope $r1, $r3;
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r2;
        java.io.IOException $r4;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void close()>();

        $r1 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonScope peek()>();

        $r3 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_DOCUMENT>;

        if $r1 == $r3 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Incomplete document");

        throw $r4;

     label1:
        return;
    }

    public com.google.mygson.stream.JsonWriter endArray() throws java.io.IOException
    {
        com.google.mygson.stream.JsonScope $r1, $r2;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_ARRAY>;

        $r1 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_ARRAY>;

        r0 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter close(com.google.mygson.stream.JsonScope,com.google.mygson.stream.JsonScope,java.lang.String)>($r2, $r1, "]");

        return r0;
    }

    public com.google.mygson.stream.JsonWriter endObject() throws java.io.IOException
    {
        com.google.mygson.stream.JsonScope $r1, $r2;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r2 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope EMPTY_OBJECT>;

        $r1 = <com.google.mygson.stream.JsonScope: com.google.mygson.stream.JsonScope NONEMPTY_OBJECT>;

        r0 = specialinvoke r0.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter close(com.google.mygson.stream.JsonScope,com.google.mygson.stream.JsonScope,java.lang.String)>($r2, $r1, "}");

        return r0;
    }

    public void flush() throws java.io.IOException
    {
        java.io.Writer $r1;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public final boolean getSerializeNulls()
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        z0 = r0.<com.google.mygson.stream.JsonWriter: boolean serializeNulls>;

        return z0;
    }

    public final boolean isHtmlSafe()
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        z0 = r0.<com.google.mygson.stream.JsonWriter: boolean htmlSafe>;

        return z0;
    }

    public boolean isLenient()
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        z0 = r0.<com.google.mygson.stream.JsonWriter: boolean lenient>;

        return z0;
    }

    public com.google.mygson.stream.JsonWriter name(java.lang.String) throws java.io.IOException
    {
        java.lang.IllegalStateException $r4;
        com.google.mygson.stream.JsonWriter r0;
        java.lang.String $r1, $r3;
        java.lang.NullPointerException $r2;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r2;

     label1:
        $r3 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        if $r3 == null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label2:
        r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName> = $r1;

        return r0;
    }

    public com.google.mygson.stream.JsonWriter nullValue() throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName>;

        if $r1 == null goto label1;

        $z0 = r0.<com.google.mygson.stream.JsonWriter: boolean serializeNulls>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

     label1:
        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("null");

        return r0;

     label2:
        r0.<com.google.mygson.stream.JsonWriter: java.lang.String deferredName> = null;

        return r0;
    }

    public final void setHtmlSafe(boolean)
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.mygson.stream.JsonWriter: boolean htmlSafe> = $z0;

        return;
    }

    public final void setIndent(java.lang.String)
    {
        int $i0;
        java.lang.String $r1;
        com.google.mygson.stream.JsonWriter r0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r0.<com.google.mygson.stream.JsonWriter: java.lang.String indent> = null;

        r0.<com.google.mygson.stream.JsonWriter: java.lang.String separator> = ":";

        return;

     label1:
        r0.<com.google.mygson.stream.JsonWriter: java.lang.String indent> = $r1;

        r0.<com.google.mygson.stream.JsonWriter: java.lang.String separator> = ": ";

        return;
    }

    public final void setLenient(boolean)
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.mygson.stream.JsonWriter: boolean lenient> = $z0;

        return;
    }

    public final void setSerializeNulls(boolean)
    {
        com.google.mygson.stream.JsonWriter r0;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        r0.<com.google.mygson.stream.JsonWriter: boolean serializeNulls> = $z0;

        return;
    }

    public com.google.mygson.stream.JsonWriter value(double) throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r4;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;
        double $d0;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $d0 := @parameter0: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        $r4 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r3 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r4.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r3);

        return r0;
    }

    public com.google.mygson.stream.JsonWriter value(long) throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r2;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $l0 := @parameter0: long;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        $r2 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r1);

        return r0;
    }

    public com.google.mygson.stream.JsonWriter value(java.lang.Number) throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r1;
        java.io.Writer $r5;
        java.lang.StringBuilder $r4;
        java.lang.String $r2;
        java.lang.Number $r0;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r1 := @this: com.google.mygson.stream.JsonWriter;

        $r0 := @parameter0: java.lang.Number;

        if $r0 != null goto label1;

        r1 = virtualinvoke r1.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter nullValue()>();

        return r1;

     label1:
        specialinvoke r1.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $z0 = r1.<com.google.mygson.stream.JsonWriter: boolean lenient>;

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-Infinity");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Infinity");

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("NaN");

        if $z0 == 0 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Numeric values must be finite, but was ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label3:
        specialinvoke r1.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        $r5 = r1.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        virtualinvoke $r5.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r2);

        return r1;
    }

    public com.google.mygson.stream.JsonWriter value(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        com.google.mygson.stream.JsonWriter $r1;

        $r1 := @this: com.google.mygson.stream.JsonWriter;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r1 = virtualinvoke $r1.<com.google.mygson.stream.JsonWriter: com.google.mygson.stream.JsonWriter nullValue()>();

        return $r1;

     label1:
        specialinvoke $r1.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke $r1.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        specialinvoke $r1.<com.google.mygson.stream.JsonWriter: void string(java.lang.String)>($r0);

        return $r1;
    }

    public com.google.mygson.stream.JsonWriter value(boolean) throws java.io.IOException
    {
        com.google.mygson.stream.JsonWriter r0;
        java.io.Writer $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.google.mygson.stream.JsonWriter;

        $z0 := @parameter0: boolean;

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void writeDeferredName()>();

        specialinvoke r0.<com.google.mygson.stream.JsonWriter: void beforeValue(boolean)>(0);

        $r1 = r0.<com.google.mygson.stream.JsonWriter: java.io.Writer out>;

        if $z0 == 0 goto label2;

        $r2 = "true";

     label1:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r2);

        return r0;

     label2:
        $r2 = "false";

        goto label1;
    }
}
