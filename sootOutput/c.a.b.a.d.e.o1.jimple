final class c.a.b.a.d.e.o1 extends java.lang.Object
{
    private final java.util.Map a;

    void <init>(java.util.Map)
    {
        c.a.b.a.d.e.o1 r0;
        java.util.Map $r1;

        r0 := @this: c.a.b.a.d.e.o1;

        $r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<c.a.b.a.d.e.o1: java.util.Map a> = $r1;

        return;
    }

    static c.a.b.a.d.e.o1 a()
    {
        c.a.b.a.d.e.o1 $r0;

        $r0 = new c.a.b.a.d.e.o1;

        specialinvoke $r0.<c.a.b.a.d.e.o1: void <init>(java.util.Map)>(null);

        return $r0;
    }

    final java.lang.String b(android.net.Uri, java.lang.String, java.lang.String, java.lang.String)
    {
        android.net.Uri $r2;
        c.a.b.a.d.e.o1 r0;
        java.util.Map $r1;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: c.a.b.a.d.e.o1;

        $r2 := @parameter0: android.net.Uri;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        $r5 := @parameter3: java.lang.String;

        $r1 = r0.<c.a.b.a.d.e.o1: java.util.Map a>;

        if $r1 != null goto label1;

        return null;

     label1:
        if $r2 == null goto label6;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        goto label2;

     label2:
        $r1 = r0.<c.a.b.a.d.e.o1: java.util.Map a>;

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (java.util.Map) $r6;

        if $r1 != null goto label3;

        return null;

     label3:
        if $r4 == null goto label5;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String concat(java.lang.String)>($r4);

        goto label5;

     label4:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(java.lang.String)>($r3);

     label5:
        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r3 = (java.lang.String) $r6;

        return $r3;

     label6:
        return null;
    }
}
