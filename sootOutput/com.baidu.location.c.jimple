public class com.baidu.location.c extends java.lang.Object
{
    private static char[] a;
    private static char[] b;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;

        $r1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/.";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.baidu.location.c: char[] a> = $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.baidu.location.c: char[] b> = $r0;

        return;
    }

    public void <init>()
    {
        com.baidu.location.c r0;

        r0 := @this: com.baidu.location.c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(java.lang.String)
    {
        byte[] $r1, $r2;
        short $s10;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i11;
        java.lang.String $r0, $r4;
        char $c5;
        java.lang.Exception $r6;
        char[] $r5;
        java.lang.StringBuilder $r3, $r7;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label01:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("webgis");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = staticinvoke <com.baidu.location.c: char[] a(byte[])>($r1);

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i2 = lengthof $r2;

     label02:
        $i2 = $i2 + 2;

     label03:
        $r1 = newarray (byte)[$i2];

     label04:
        $i2 = 0;

     label05:
        $i3 = lengthof $r2;

     label06:
        if $i2 < $i3 goto label35;

     label07:
        $i2 = lengthof $r2;

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r5, 10, 2);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

     label08:
        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

     label09:
        $r1[$i2] = $b4;

        $i2 = lengthof $r2;

     label10:
        $i2 = $i2 + 1;

     label11:
        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r5, 20, 2);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

     label12:
        $i3 = $i3 & 255;

        $b4 = (byte) $i3;

     label13:
        $r1[$i2] = $b4;

     label14:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label15:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r5, 6, 2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

     label16:
        $i2 = $i2 & 255;

        $c5 = (char) $i2;

     label17:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label19:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r5, 16, 2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

     label20:
        $i2 = $i2 & 255;

        $c5 = (char) $i2;

     label21:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label23:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r5, 26, 2);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r0, 16);

     label24:
        $i2 = $i2 & 255;

        $c5 = (char) $i2;

     label25:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label26:
        $r7 = new java.lang.StringBuilder;

        $r3 = $r7;

     label27:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("webgis");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("iso-8859-1");

        $r5 = staticinvoke <com.baidu.location.c: char[] a(byte[])>($r2);

        $i2 = lengthof $r1;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

     label28:
        $i6 = $i2 + $i3;

     label29:
        $r2 = newarray (byte)[$i6];

     label30:
        $i6 = 0;

     label31:
        $i0 = $i2 + 31;

        $i0 = $i0 / 32;

        if $i6 < $i0 goto label37;

     label32:
        if $i1 < $i3 goto label47;

        $r4 = new java.lang.String;

     label33:
        $r5 = staticinvoke <com.baidu.location.c: char[] b(byte[])>($r2);

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r5);

     label34:
        return $r4;

     label35:
        $b4 = $r2[$i2];

        $r1[$i2] = $b4;

     label36:
        $i2 = $i2 + 1;

        goto label05;

     label37:
        $i0 = $i6 * 32;

        $i7 = 0;

     label38:
        if $i7 >= 32 goto label39;

        $i8 = $i0 + $i7;

        if $i8 < $i2 goto label40;

     label39:
        $i6 = $i6 + 1;

        goto label31;

     label40:
        $i8 = $i0 + $i7;

     label41:
        $c5 = $r5[$i7];

     label42:
        $c5 = $c5 & 255;

        $i9 = $i0 + $i7;

     label43:
        $b4 = $r1[$i9];

     label44:
        $s10 = (short) $b4;

        $s10 = $s10 & 255;

        $i9 = (int) $c5;

        $i11 = (int) $s10;

        $i9 = $i9 ^ $i11;

        $b4 = (byte) $i9;

     label45:
        $r2[$i8] = $b4;

     label46:
        $i7 = $i7 + 1;

        goto label38;

     label47:
        $i6 = $i2 + $i1;

     label48:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

     label49:
        $b4 = (byte) $c5;

     label50:
        $r2[$i6] = $b4;

     label51:
        $i1 = $i1 + 1;

        goto label32;

     label52:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return "UnsupportedEncodingException";

        catch java.lang.Exception from label01 to label02 with label52;
        catch java.lang.Exception from label03 to label04 with label52;
        catch java.lang.Exception from label05 to label06 with label52;
        catch java.lang.Exception from label07 to label08 with label52;
        catch java.lang.Exception from label09 to label10 with label52;
        catch java.lang.Exception from label11 to label12 with label52;
        catch java.lang.Exception from label13 to label14 with label52;
        catch java.lang.Exception from label15 to label16 with label52;
        catch java.lang.Exception from label17 to label18 with label52;
        catch java.lang.Exception from label19 to label20 with label52;
        catch java.lang.Exception from label21 to label22 with label52;
        catch java.lang.Exception from label23 to label24 with label52;
        catch java.lang.Exception from label25 to label26 with label52;
        catch java.lang.Exception from label27 to label28 with label52;
        catch java.lang.Exception from label29 to label30 with label52;
        catch java.lang.Exception from label33 to label34 with label52;
        catch java.lang.Exception from label35 to label36 with label52;
        catch java.lang.Exception from label41 to label42 with label52;
        catch java.lang.Exception from label43 to label44 with label52;
        catch java.lang.Exception from label45 to label46 with label52;
        catch java.lang.Exception from label48 to label49 with label52;
        catch java.lang.Exception from label50 to label51 with label52;
    }

    private static char[] a(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r2;
        char $c5;
        java.lang.Exception $r4;
        byte $b3;
        int $i0, $i1, $i2, $i4;
        char[] $r1, $r3;

        $r0 := @parameter0: byte[];

        $i1 = 0;

        $r1 = newarray (char)[32];

     label01:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $i2 = 0;

     label03:
        if $i1 < 16 goto label04;

        return $r1;

     label04:
        $b3 = $r0[$i1];

     label05:
        $i0 = $i2 + 1;

        $r3 = <com.baidu.location.c: char[] b>;

        $i4 = (int) $b3;

        $i4 = $i4 >>> 4;

        $i4 = $i4 & 15;

     label06:
        $c5 = $r3[$i4];

        $r1[$i2] = $c5;

     label07:
        $i2 = $i0 + 1;

        $r3 = <com.baidu.location.c: char[] b>;

        $b3 = $b3 & 15;

        $i4 = (int) $b3;

     label08:
        $c5 = $r3[$i4];

        $r1[$i0] = $c5;

     label09:
        $i1 = $i1 + 1;

        goto label03;

     label10:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return $r1;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static char[] b(byte[])
    {
        byte[] $r0;
        char $c7;
        short $s4;
        byte $b3;
        int $i0, $i1, $i2, $i5, $i6;
        char[] $r1, $r2;
        boolean $z0, $z1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i0 = $i0 + 2;

        $i0 = $i0 / 3;

        $i0 = $i0 * 4;

        $r1 = newarray (char)[$i0];

        $i0 = 0;

        $i1 = 0;

     label01:
        $i2 = lengthof $r0;

        if $i1 < $i2 goto label02;

        return $r1;

     label02:
        $b3 = $r0[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i2 = (int) $s4;

        $i2 = $i2 << 8;

        $i5 = $i1 + 1;

        $i6 = lengthof $r0;

        if $i5 >= $i6 goto label10;

        $i5 = $i1 + 1;

        $b3 = $r0[$i5];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i5 = (int) $s4;

        $i2 = $i2 | $i5;

        $z0 = 1;

     label03:
        $i2 = $i2 << 8;

        $i5 = $i1 + 2;

        $i6 = lengthof $r0;

        if $i5 >= $i6 goto label09;

        $i5 = $i1 + 2;

        $b3 = $r0[$i5];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i5 = (int) $s4;

        $i2 = $i2 | $i5;

        $z1 = 1;

     label04:
        $i5 = $i0 + 3;

        $r2 = <com.baidu.location.c: char[] a>;

        if $z1 == 0 goto label07;

        $i6 = $i2 & 63;

        $i6 = 63 - $i6;

     label05:
        $c7 = $r2[$i6];

        $r1[$i5] = $c7;

        $i2 = $i2 >> 6;

        $i5 = $i0 + 2;

        $r2 = <com.baidu.location.c: char[] a>;

        if $z0 == 0 goto label08;

        $i6 = $i2 & 63;

        $i6 = 63 - $i6;

     label06:
        $c7 = $r2[$i6];

        $r1[$i5] = $c7;

        $i2 = $i2 >> 6;

        $i5 = $i0 + 1;

        $r2 = <com.baidu.location.c: char[] a>;

        $i6 = $i2 & 63;

        $i6 = 63 - $i6;

        $c7 = $r2[$i6];

        $r1[$i5] = $c7;

        $i5 = $i2 >> 6;

        $i2 = $i0;

        $r2 = <com.baidu.location.c: char[] a>;

        $i5 = $i5 & 63;

        $i5 = 63 - $i5;

        $c7 = $r2[$i5];

        $r1[$i2] = $c7;

        $i1 = $i1 + 3;

        $i0 = $i0 + 4;

        goto label01;

     label07:
        $i6 = 64;

        goto label05;

     label08:
        $i6 = 64;

        goto label06;

     label09:
        $z1 = 0;

        goto label04;

     label10:
        $z0 = 0;

        goto label03;
    }
}
