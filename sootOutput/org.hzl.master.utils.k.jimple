public final class org.hzl.master.utils.k extends java.lang.Object
{
    private static org.hzl.master.utils.k a;

    static void <clinit>()
    {
        <org.hzl.master.utils.k: org.hzl.master.utils.k a> = null;

        return;
    }

    private void <init>()
    {
        org.hzl.master.utils.k r0;

        r0 := @this: org.hzl.master.utils.k;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.hzl.master.utils.k a()
    {
        org.hzl.master.utils.k $r0;

        $r0 = <org.hzl.master.utils.k: org.hzl.master.utils.k a>;

        if $r0 != null goto label1;

        $r0 = new org.hzl.master.utils.k;

        specialinvoke $r0.<org.hzl.master.utils.k: void <init>()>();

        <org.hzl.master.utils.k: org.hzl.master.utils.k a> = $r0;

     label1:
        $r0 = <org.hzl.master.utils.k: org.hzl.master.utils.k a>;

        return $r0;
    }

    public static byte[] a(byte[])
    {
        byte[] $r0, $r1, $r2;
        java.io.ByteArrayOutputStream $r3, $r7;
        short $s8, $s9;
        java.io.DataOutputStream $r4, $r8;
        byte $b7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        double $d0;
        java.lang.Exception $r5, $r6;

        $r0 := @parameter0: byte[];

        $i0 = 0;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 15.0;

        $i1 = (int) $d0;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 12.0;

        $i2 = (int) $d0;

        $i2 = $i2 + 3;

        $r2 = newarray (byte)[$i2];

        $i3 = 0;

     label01:
        if $i3 < $i2 goto label11;

        $i3 = $i1 << 4;

        $i2 = $i3 | $i2;

        $i3 = lengthof $r0;

        $i4 = lengthof $r2;

        $r1 = newarray (byte)[$i3];

        $i5 = 0;

        $i6 = 0;

     label02:
        if $i6 < $i3 goto label12;

        $i3 = lengthof $r2;

        $r0 = newarray (byte)[$i3];

     label03:
        if $i0 < $i3 goto label14;

        $r7 = new java.io.ByteArrayOutputStream;

        $r3 = $r7;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = new java.io.DataOutputStream;

        $r4 = $r8;

        specialinvoke $r8.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r3);

     label04:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeByte(int)>($i2);

     label05:
        if $i1 <= 0 goto label07;

     label06:
        $r2 = newarray (byte)[$i1];

        $r2[0] = 8;

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r2);

     label07:
        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r0);

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r1);

        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        $r1 = $r0;

     label09:
        virtualinvoke $r4.<java.io.DataOutputStream: void close()>();

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label10:
        return $r0;

     label11:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 255.0;

        $i4 = (int) $d0;

        $b7 = (byte) $i4;

        $r2[$i3] = $b7;

        $i3 = $i3 + 1;

        goto label01;

     label12:
        $b7 = $r0[$i6];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $b7 = $r2[$i5];

        $s9 = (short) $b7;

        $s9 = $s9 & 255;

        $s8 = $s8 ^ $s9;

        $b7 = (byte) $s8;

        $r1[$i6] = $b7;

        $i5 = $i5 + 1;

        if $i5 != $i4 goto label13;

        $i5 = 0;

     label13:
        $i6 = $i6 + 1;

        goto label02;

     label14:
        $b7 = $r2[$i0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i4 = (int) $s8;

        $i4 = $i4 >> 5;

        $b7 = $r2[$i0];

        $s8 = (short) $b7;

        $s8 = $s8 & 255;

        $i5 = (int) $s8;

        $i5 = $i5 << 3;

        $i4 = $i4 | $i5;

        $b7 = (byte) $i4;

        $r0[$i0] = $b7;

        $i0 = $i0 + 1;

        goto label03;

     label15:
        $r5 := @caughtexception;

        $r6 = $r5;

        $r1 = null;

     label16:
        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return $r1;

     label17:
        $r6 := @caughtexception;

        goto label16;

        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label17;
    }

    public static byte[] b(byte[])
    {
        byte[] $r0, $r1, $r2;
        short $s1, $s6;
        byte $b0;
        int $i2, $i3, $i4, $i5;

        $r0 := @parameter0: byte[];

        $b0 = $r0[0];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        $i2 = $i2 >> 4;

        $s1 = $s1 & 15;

        $i2 = $i2 + 1;

        $i3 = (int) $s1;

        $r2 = newarray (byte)[$i3];

        $i3 = (int) $s1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i2, $r2, 0, $i3);

        $i3 = (int) $s1;

        $i2 = $i3 + $i2;

        $i3 = lengthof $r0;

        $i3 = $i3 - $i2;

        $r1 = newarray (byte)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i2, $r1, 0, $i3);

        $i2 = lengthof $r2;

        $r0 = newarray (byte)[$i2];

        $i3 = 0;

     label1:
        if $i3 < $i2 goto label3;

        $i2 = lengthof $r1;

        $i3 = lengthof $r0;

        $r2 = newarray (byte)[$i2];

        $i4 = 0;

        $i5 = 0;

     label2:
        if $i5 < $i2 goto label4;

        return $r2;

     label3:
        $b0 = $r2[$i3];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 >> 3;

        $b0 = $r2[$i3];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i5 = (int) $s1;

        $i5 = $i5 << 5;

        $i4 = $i4 | $i5;

        $b0 = (byte) $i4;

        $r0[$i3] = $b0;

        $i3 = $i3 + 1;

        goto label1;

     label4:
        $b0 = $r1[$i5];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $b0 = $r0[$i4];

        $s6 = (short) $b0;

        $s6 = $s6 & 255;

        $s1 = $s1 ^ $s6;

        $b0 = (byte) $s1;

        $r2[$i5] = $b0;

        $i4 = $i4 + 1;

        if $i4 != $i3 goto label5;

        $i4 = 0;

     label5:
        $i5 = $i5 + 1;

        goto label2;
    }
}
