public class com.hp.hpl.sparta.Document extends com.hp.hpl.sparta.Node
{
    private static final boolean DEBUG;
    static final java.util.Enumeration EMPTY;
    private static final java.lang.Integer ONE;
    private final java.util.Hashtable indexible_;
    private com.hp.hpl.sparta.Sparta$Cache indices_;
    private java.util.Vector observers_;
    private com.hp.hpl.sparta.Element rootElement_;
    private java.lang.String systemId_;

    static void <clinit>()
    {
        java.lang.Integer $r0;
        com.hp.hpl.sparta.EmptyEnumeration $r1;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(1);

        <com.hp.hpl.sparta.Document: java.lang.Integer ONE> = $r0;

        $r1 = new com.hp.hpl.sparta.EmptyEnumeration;

        specialinvoke $r1.<com.hp.hpl.sparta.EmptyEnumeration: void <init>()>();

        <com.hp.hpl.sparta.Document: java.util.Enumeration EMPTY> = $r1;

        return;
    }

    public void <init>()
    {
        java.util.Vector $r2;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Sparta$Cache $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();

        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = null;

        $r1 = staticinvoke <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>();

        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_> = $r2;

        r0.<com.hp.hpl.sparta.Document: java.util.Hashtable indexible_> = null;

        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = "MEMORY";

        return;
    }

    void <init>(java.lang.String)
    {
        java.util.Vector $r3;
        com.hp.hpl.sparta.Document r0;
        java.lang.String $r1;
        com.hp.hpl.sparta.Sparta$Cache $r2;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.sparta.Node: void <init>()>();

        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = null;

        $r2 = staticinvoke <com.hp.hpl.sparta.Sparta: com.hp.hpl.sparta.Sparta$Cache newCache()>();

        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_> = $r2;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_> = $r3;

        r0.<com.hp.hpl.sparta.Document: java.util.Hashtable indexible_> = null;

        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = $r1;

        return;
    }

    private com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String, boolean) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.XPathVisitor $r4;
        char $c0;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r3;
        java.lang.StringBuffer $r2, $r5;
        int $i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 == 47 goto label1;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r3 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>($r3, $z0);

        return $r4;
    }

    public void addObserver(com.hp.hpl.sparta.Document$Observer)
    {
        java.util.Vector $r2;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Document$Observer $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: com.hp.hpl.sparta.Document$Observer;

        $r2 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r1);

        return;
    }

    public java.lang.Object clone()
    {
        com.hp.hpl.sparta.Element $r4;
        com.hp.hpl.sparta.Document r0, $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 = new com.hp.hpl.sparta.Document;

        $r3 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;

        specialinvoke $r1.<com.hp.hpl.sparta.Document: void <init>(java.lang.String)>($r3);

        $r4 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        $r2 = virtualinvoke $r4.<com.hp.hpl.sparta.Element: java.lang.Object clone()>();

        $r4 = (com.hp.hpl.sparta.Element) $r2;

        $r1.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = $r4;

        return $r1;
    }

    protected int computeHashCode()
    {
        int $i0;
        com.hp.hpl.sparta.Element $r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.sparta.Node: int hashCode()>();

        return $i0;
    }

    public void deleteObserver(com.hp.hpl.sparta.Document$Observer)
    {
        java.util.Vector $r2;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.Document$Observer $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: com.hp.hpl.sparta.Document$Observer;

        $r2 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>($r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.sparta.Element $r1, $r4;
        com.hp.hpl.sparta.Document r0, $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r2 := @parameter0: java.lang.Object;

        if r0 != $r2 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof com.hp.hpl.sparta.Document;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r3 = (com.hp.hpl.sparta.Document) $r2;

        $r4 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        $r1 = $r3.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        $z0 = virtualinvoke $r4.<com.hp.hpl.sparta.Element: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public com.hp.hpl.sparta.Element getDocumentElement()
    {
        com.hp.hpl.sparta.Element r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        r1 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        return r1;
    }

    public java.lang.String getSystemId()
    {
        java.lang.String r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        r1 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;

        return r1;
    }

    void monitor(com.hp.hpl.sparta.xpath.XPath) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: com.hp.hpl.sparta.xpath.XPath;

        return;
    }

    void notifyObservers()
    {
        java.util.Vector $r1;
        com.hp.hpl.sparta.Document r0;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        com.hp.hpl.sparta.Document$Observer $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 = r0.<com.hp.hpl.sparta.Document: java.util.Vector observers_>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (com.hp.hpl.sparta.Document$Observer) $r3;

        interfaceinvoke $r4.<com.hp.hpl.sparta.Document$Observer: void update(com.hp.hpl.sparta.Document)>(r0);

        goto label1;
    }

    public void setDocumentElement(com.hp.hpl.sparta.Element)
    {
        com.hp.hpl.sparta.Element $r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: com.hp.hpl.sparta.Element;

        r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_> = $r1;

        $r1 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        virtualinvoke $r1.<com.hp.hpl.sparta.Node: void setOwnerDocument(com.hp.hpl.sparta.Document)>(r0);

        virtualinvoke r0.<com.hp.hpl.sparta.Document: void notifyObservers()>();

        return;
    }

    public void setSystemId(java.lang.String)
    {
        java.lang.String $r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

        r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_> = $r1;

        virtualinvoke r0.<com.hp.hpl.sparta.Document: void notifyObservers()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String r1;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        r1 = r0.<com.hp.hpl.sparta.Document: java.lang.String systemId_>;

        return r1;
    }

    public void toString(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer $r1;
        com.hp.hpl.sparta.Element $r2;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.io.Writer;

        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void toString(java.io.Writer)>($r1);

        return;
    }

    public void toXml(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer $r1;
        com.hp.hpl.sparta.Element $r2;
        com.hp.hpl.sparta.Document r0;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.io.Writer;

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>("<?xml version=\"1.0\" ?>\n");

        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        virtualinvoke $r2.<com.hp.hpl.sparta.Element: void toXml(java.io.Writer)>($r1);

        return;
    }

    com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath, boolean) throws com.hp.hpl.sparta.xpath.XPathException
    {
        com.hp.hpl.sparta.xpath.XPathException $r2;
        com.hp.hpl.sparta.XPathVisitor $r5;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r1;
        java.lang.StringBuffer $r4;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: com.hp.hpl.sparta.xpath.XPath;

        $z0 := @parameter1: boolean;

        $z1 = virtualinvoke $r1.<com.hp.hpl.sparta.xpath.XPath: boolean isStringValue()>();

        if $z1 == $z0 goto label3;

        if $z0 == 0 goto label2;

        $r3 = "evaluates to element not string";

     label1:
        $r2 = new com.hp.hpl.sparta.xpath.XPathException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" evaluates to ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.sparta.xpath.XPathException: void <init>(com.hp.hpl.sparta.xpath.XPath,java.lang.String)>($r1, $r3);

        throw $r2;

     label2:
        $r3 = "evaluates to string not element";

        goto label1;

     label3:
        $r5 = new com.hp.hpl.sparta.XPathVisitor;

        specialinvoke $r5.<com.hp.hpl.sparta.XPathVisitor: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>(r0, $r1);

        return $r5;
    }

    public boolean xpathEnsure(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        java.util.Enumeration $r4;
        com.hp.hpl.sparta.xpath.XPathException $r11;
        com.hp.hpl.sparta.ParseException $r13;
        com.hp.hpl.sparta.Element $r2;
        java.lang.StringBuffer $r9, $r12;
        int $i0, $i1;
        java.lang.String $r1, $r10;
        com.hp.hpl.sparta.xpath.Step $r6, $r8;
        boolean $z0;
        com.hp.hpl.sparta.xpath.Step[] $r7;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r3;
        java.lang.Object $r5;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r2 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>($r1);

     label02:
        if $r2 == null goto label03;

        return 0;

     label03:
        $r3 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>();

     label04:
        $i0 = 0;

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

     label06:
        if $z0 != 0 goto label12;

     label07:
        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.xpath.XPath: java.util.Enumeration getSteps()>();

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

     label08:
        $r6 = (com.hp.hpl.sparta.xpath.Step) $r5;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r7 = newarray (com.hp.hpl.sparta.xpath.Step)[$i0];

        $i0 = 0;

     label09:
        $i1 = lengthof $r7;

        if $i0 < $i1 goto label14;

        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

        if $r2 != null goto label16;

     label10:
        $r2 = virtualinvoke r0.<com.hp.hpl.sparta.Node: com.hp.hpl.sparta.Element makeMatching(com.hp.hpl.sparta.Element,com.hp.hpl.sparta.xpath.Step,java.lang.String)>(null, $r6, $r1);

        virtualinvoke r0.<com.hp.hpl.sparta.Document: void setDocumentElement(com.hp.hpl.sparta.Element)>($r2);

     label11:
        $i0 = lengthof $r7;

        if $i0 != 0 goto label24;

        return 1;

     label12:
        interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

     label13:
        $i0 = $i0 + 1;

        goto label05;

     label14:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

     label15:
        $r8 = (com.hp.hpl.sparta.xpath.Step) $r5;

        $r7[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label09;

     label16:
        $r12 = new java.lang.StringBuffer;

        $r9 = $r12;

     label17:
        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String)>($r10);

     label18:
        if $r2 != null goto label11;

        $r13 = new com.hp.hpl.sparta.ParseException;

        $r12 = new java.lang.StringBuffer;

        $r9 = $r12;

     label19:
        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Existing root element <");

     label20:
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

     label21:
        $r10 = virtualinvoke $r2.<com.hp.hpl.sparta.Element: java.lang.String getTagName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...> does not match first step \"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" of \"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String)>($r10);

     label22:
        throw $r13;

     label23:
        $r11 := @caughtexception;

        $r13 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r13.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r11);

        throw $r13;

     label24:
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Element rootElement_>;

     label25:
        $r3 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(boolean,com.hp.hpl.sparta.xpath.Step[])>(0, $r7);

        $r10 = virtualinvoke $r3.<com.hp.hpl.sparta.xpath.XPath: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<com.hp.hpl.sparta.Element: boolean xpathEnsure(java.lang.String)>($r10);

     label26:
        return $z0;

        catch com.hp.hpl.sparta.xpath.XPathException from label01 to label02 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label03 to label04 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label05 to label06 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label07 to label08 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label10 to label11 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label12 to label13 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label14 to label15 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label17 to label18 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label19 to label20 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label21 to label22 with label23;
        catch com.hp.hpl.sparta.xpath.XPathException from label25 to label26 with label23;
    }

    public com.hp.hpl.sparta.Document$Index xpathGetIndex(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.xpath.XPathException $r6;
        com.hp.hpl.sparta.ParseException $r7;
        com.hp.hpl.sparta.Sparta$Cache $r2;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r5;
        com.hp.hpl.sparta.Document$Index $r4;
        java.lang.Object $r3;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;

     label01:
        $r3 = interfaceinvoke $r2.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>($r1);

     label02:
        $r4 = (com.hp.hpl.sparta.Document$Index) $r3;

        if $r4 != null goto label10;

     label03:
        $r5 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r1);

     label04:
        $r4 = new com.hp.hpl.sparta.Document$Index;

     label05:
        specialinvoke $r4.<com.hp.hpl.sparta.Document$Index: void <init>(com.hp.hpl.sparta.Document,com.hp.hpl.sparta.xpath.XPath)>(r0, $r5);

     label06:
        $r2 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;

     label07:
        interfaceinvoke $r2.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label08:
        return $r4;

     label09:
        $r6 := @caughtexception;

        $r7 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r7.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", $r6);

        throw $r7;

     label10:
        return $r4;

        catch com.hp.hpl.sparta.xpath.XPathException from label01 to label02 with label09;
        catch com.hp.hpl.sparta.xpath.XPathException from label03 to label04 with label09;
        catch com.hp.hpl.sparta.xpath.XPathException from label05 to label06 with label09;
        catch com.hp.hpl.sparta.xpath.XPathException from label07 to label08 with label09;
    }

    public boolean xpathHasIndex(java.lang.String)
    {
        com.hp.hpl.sparta.Document r0;
        java.lang.Object $r2;
        java.lang.String $r1;
        com.hp.hpl.sparta.Sparta$Cache $r3;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.Sparta$Cache indices_>;

        $r2 = interfaceinvoke $r3.<com.hp.hpl.sparta.Sparta$Cache: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public com.hp.hpl.sparta.Element xpathSelectElement(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.xpath.XPathException $r6;
        com.hp.hpl.sparta.XPathVisitor $r4;
        com.hp.hpl.sparta.ParseException $r8;
        char $c0;
        com.hp.hpl.sparta.Element $r5;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r3;
        java.lang.StringBuffer $r2, $r7;
        int $i1;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

     label1:
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

     label2:
        $i1 = (int) $c0;

        if $i1 == 47 goto label4;

        $r7 = new java.lang.StringBuffer;

        $r2 = $r7;

     label3:
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r3 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r1);

        virtualinvoke r0.<com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>($r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>($r3, 0);

        $r5 = virtualinvoke $r4.<com.hp.hpl.sparta.XPathVisitor: com.hp.hpl.sparta.Element getFirstResultElement()>();

     label5:
        return $r5;

     label6:
        $r6 := @caughtexception;

        $r8 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r8.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", $r6);

        throw $r8;

        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label6;
        catch com.hp.hpl.sparta.xpath.XPathException from label3 to label4 with label6;
        catch com.hp.hpl.sparta.xpath.XPathException from label4 to label5 with label6;
    }

    public java.util.Enumeration xpathSelectElements(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        java.util.Enumeration $r5;
        com.hp.hpl.sparta.xpath.XPathException $r6;
        com.hp.hpl.sparta.XPathVisitor $r4;
        com.hp.hpl.sparta.ParseException $r8;
        char $c0;
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPath $r3;
        java.lang.StringBuffer $r2, $r7;
        int $i1;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

     label1:
        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

     label2:
        $i1 = (int) $c0;

        if $i1 == 47 goto label4;

        $r7 = new java.lang.StringBuffer;

        $r2 = $r7;

     label3:
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r3 = staticinvoke <com.hp.hpl.sparta.xpath.XPath: com.hp.hpl.sparta.xpath.XPath get(java.lang.String)>($r1);

        virtualinvoke r0.<com.hp.hpl.sparta.Document: void monitor(com.hp.hpl.sparta.xpath.XPath)>($r3);

        $r4 = virtualinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(com.hp.hpl.sparta.xpath.XPath,boolean)>($r3, 0);

        $r5 = virtualinvoke $r4.<com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>();

     label5:
        return $r5;

     label6:
        $r6 := @caughtexception;

        $r8 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r8.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", $r6);

        throw $r8;

        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label6;
        catch com.hp.hpl.sparta.xpath.XPathException from label3 to label4 with label6;
        catch com.hp.hpl.sparta.xpath.XPathException from label4 to label5 with label6;
    }

    public java.lang.String xpathSelectString(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        com.hp.hpl.sparta.xpath.XPathException $r4;
        com.hp.hpl.sparta.XPathVisitor $r3;
        com.hp.hpl.sparta.ParseException $r2;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>($r1, 1);

        $r1 = virtualinvoke $r3.<com.hp.hpl.sparta.XPathVisitor: java.lang.String getFirstResultString()>();

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        $r2 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r2.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", $r4);

        throw $r2;

        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label3;
    }

    public java.util.Enumeration xpathSelectStrings(java.lang.String) throws com.hp.hpl.sparta.ParseException
    {
        com.hp.hpl.sparta.Document r0;
        java.util.Enumeration $r4;
        com.hp.hpl.sparta.xpath.XPathException $r5;
        com.hp.hpl.sparta.XPathVisitor $r3;
        com.hp.hpl.sparta.ParseException $r2;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.sparta.Document;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<com.hp.hpl.sparta.Document: com.hp.hpl.sparta.XPathVisitor visitor(java.lang.String,boolean)>($r1, 1);

        $r4 = virtualinvoke $r3.<com.hp.hpl.sparta.XPathVisitor: java.util.Enumeration getResultEnumeration()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r2 = new com.hp.hpl.sparta.ParseException;

        specialinvoke $r2.<com.hp.hpl.sparta.ParseException: void <init>(java.lang.String,java.lang.Throwable)>("XPath problem", $r5);

        throw $r2;

        catch com.hp.hpl.sparta.xpath.XPathException from label1 to label2 with label3;
    }
}
