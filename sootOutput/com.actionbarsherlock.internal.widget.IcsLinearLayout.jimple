public class com.actionbarsherlock.internal.widget.IcsLinearLayout extends com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout
{
    private static final int LinearLayout_divider;
    private static final int LinearLayout_dividerPadding;
    private static final int LinearLayout_showDividers;
    private static final int[] R_styleable_LinearLayout;
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_END;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_NONE;
    private android.graphics.drawable.Drawable mDivider;
    private int mDividerHeight;
    private int mDividerPadding;
    private int mDividerWidth;
    private int mShowDividers;

    static void <clinit>()
    {
        int[] $r0;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int SHOW_DIVIDER_MIDDLE> = 2;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int SHOW_DIVIDER_END> = 4;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int SHOW_DIVIDER_BEGINNING> = 1;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int LinearLayout_showDividers> = 1;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int LinearLayout_dividerPadding> = 2;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int LinearLayout_divider> = 0;

        $r0 = newarray (int)[3];

        $r0[0] = 16843049;

        $r0[1] = 16843561;

        $r0[2] = 16843562;

        <com.actionbarsherlock.internal.widget.IcsLinearLayout: int[] R_styleable_LinearLayout> = $r0;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r5;
        android.content.res.TypedArray $r4;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r3 = <com.actionbarsherlock.internal.widget.IcsLinearLayout: int[] R_styleable_LinearLayout>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r2, $r3);

        $r5 = virtualinvoke $r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>($r5);

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getInt(int,int)>(1, 0);

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers> = $i0;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, 0);

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding> = $i0;

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.view.ViewGroup$LayoutParams $r3;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.graphics.Canvas $r1;
        android.widget.LinearLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label3;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i0);

        if $z0 == 0 goto label6;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.view.View getChildAt(int)>($i0);

        if $r2 != null goto label5;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getWidth()>();

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingRight()>();

        $i0 = $i0 - $i1;

        $i1 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth>;

        $i0 = $i0 - $i1;

     label2:
        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i0);

        return;

     label3:
        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.view.View getChildAt(int)>($i1);

        if $r2 == null goto label4;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label4;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i3 = $r4.<android.widget.LinearLayout$LayoutParams: int leftMargin>;

        $i2 = $i2 - $i3;

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $i0 = virtualinvoke $r2.<android.view.View: int getRight()>();

        goto label2;

     label6:
        return;
    }

    void drawDividersVertical(android.graphics.Canvas)
    {
        android.view.ViewGroup$LayoutParams $r3;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.graphics.Canvas $r1;
        android.widget.LinearLayout$LayoutParams $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label3;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i0);

        if $z0 == 0 goto label6;

        $i1 = -1;

        $i0 = $i0 + $i1;

        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.view.View getChildAt(int)>($i0);

        if $r2 != null goto label5;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getHeight()>();

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingBottom()>();

        $i0 = $i0 - $i1;

        $i1 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight>;

        $i0 = $i0 - $i1;

     label2:
        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i0);

        return;

     label3:
        $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.view.View getChildAt(int)>($i1);

        if $r2 == null goto label4;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 == 8 goto label4;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i1);

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.widget.LinearLayout$LayoutParams) $r3;

        $i2 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i3 = $r4.<android.widget.LinearLayout$LayoutParams: int topMargin>;

        $i2 = $i2 - $i3;

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $i0 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        goto label2;

     label6:
        return;
    }

    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingLeft()>();

        $i2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getWidth()>();

        $i3 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingRight()>();

        $i2 = $i2 - $i3;

        $i3 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding>;

        $i2 = $i2 - $i3;

        $i3 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight>;

        $i3 = $i3 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i2, $i3);

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.graphics.drawable.Drawable $r2;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Canvas $r1;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingTop()>();

        $i2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding>;

        $i1 = $i1 + $i2;

        $i2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth>;

        $i2 = $i2 + $i0;

        $i3 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getHeight()>();

        $i4 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $i4 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding>;

        $i3 = $i3 - $i4;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return;
    }

    public int getDividerPadding()
    {
        int i0;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        i0 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding>;

        return i0;
    }

    public int getDividerWidth()
    {
        int i0;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        i0 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth>;

        return i0;
    }

    public int getShowDividers()
    {
        int i0;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        i0 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers>;

        return i0;
    }

    protected boolean hasDividerBeforeChildAt(int)
    {
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label2;

        $i0 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers>;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getChildCount()>();

        if $i0 != $i1 goto label3;

        $i0 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers>;

        $i0 = $i0 & 4;

        if $i0 != 0 goto label7;

        return 0;

     label3:
        $i1 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers>;

        $i1 = $i1 & 2;

        if $i1 == 0 goto label6;

        $i1 = -1;

        $i0 = $i0 + $i1;

     label4:
        if $i0 >= 0 goto label5;

        return 0;

     label5:
        $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.view.View getChildAt(int)>($i0);

        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i1 != 8 goto label7;

        $i1 = -1;

        $i0 = $i0 + $i1;

        goto label4;

     label6:
        return 0;

     label7:
        return 1;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r1;
        android.widget.LinearLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i5 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int indexOfChild(android.view.View)>($r1);

        $i6 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getOrientation()>();

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i5);

        if $z0 == 0 goto label1;

        if $i6 != 1 goto label3;

        $i7 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight>;

        $r3.<android.widget.LinearLayout$LayoutParams: int topMargin> = $i7;

     label1:
        $i7 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getChildCount()>();

        $i4 = -1;

        $i4 = $i7 + $i4;

        if $i5 != $i4 goto label2;

        $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i7);

        if $z0 == 0 goto label2;

        if $i6 != 1 goto label4;

        $i5 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight>;

        $r3.<android.widget.LinearLayout$LayoutParams: int bottomMargin> = $i5;

     label2:
        specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return;

     label3:
        $i7 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth>;

        $r3.<android.widget.LinearLayout$LayoutParams: int leftMargin> = $i7;

        goto label1;

     label4:
        $i5 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth>;

        $r3.<android.widget.LinearLayout$LayoutParams: int rightMargin> = $i5;

        goto label2;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getOrientation()>();

        if $i0 != 1 goto label2;

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)>($r1);

     label1:
        specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void onDraw(android.graphics.Canvas)>($r1);

        return;

     label2:
        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>($r1);

        goto label1;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.ColorDrawable $r3;
        android.graphics.drawable.Drawable $r2;
        com.actionbarsherlock.internal.widget.IcsColorDrawable $r4;
        boolean $z0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider>;

        if $r1 != $r2 goto label1;

        return;

     label1:
        $z0 = $r1 instanceof android.graphics.drawable.ColorDrawable;

        if $z0 == 0 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label2;

        $r4 = new com.actionbarsherlock.internal.widget.IcsColorDrawable;

        $r3 = (android.graphics.drawable.ColorDrawable) $r1;

        specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsColorDrawable: void <init>(android.graphics.drawable.ColorDrawable)>($r3);

        $r1 = $r4;

     label2:
        $r2 = (android.graphics.drawable.Drawable) $r1;

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: android.graphics.drawable.Drawable mDivider> = $r2;

        if $r1 == null goto label5;

        $r2 = (android.graphics.drawable.Drawable) $r1;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth> = $i0;

        $r2 = (android.graphics.drawable.Drawable) $r1;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight> = $i0;

     label3:
        if $r1 != null goto label6;

        $z0 = 1;

     label4:
        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setWillNotDraw(boolean)>($z0);

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void requestLayout()>();

        return;

     label5:
        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerWidth> = 0;

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerHeight> = 0;

        goto label3;

     label6:
        $z0 = 0;

        goto label4;
    }

    public void setDividerPadding(int)
    {
        int $i0;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $i0 := @parameter0: int;

        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mDividerPadding> = $i0;

        return;
    }

    public void setShowDividers(int)
    {
        int $i0, $i1;
        com.actionbarsherlock.internal.widget.IcsLinearLayout r0;

        r0 := @this: com.actionbarsherlock.internal.widget.IcsLinearLayout;

        $i0 := @parameter0: int;

        $i1 = r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers>;

        if $i0 == $i1 goto label1;

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void requestLayout()>();

        virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void invalidate()>();

     label1:
        r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: int mShowDividers> = $i0;

        return;
    }
}
