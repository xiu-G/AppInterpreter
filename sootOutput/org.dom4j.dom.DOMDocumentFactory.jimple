public class org.dom4j.dom.DOMDocumentFactory extends org.dom4j.DocumentFactory implements org.w3c.dom.DOMImplementation
{
    static java.lang.Class class$org$dom4j$dom$DOMDocumentFactory;
    private static org.dom4j.util.SingletonStrategy singleton;

    static void <clinit>()
    {
        org.dom4j.util.SingletonStrategy $r1;
        java.lang.Exception r0, $r6, $r7;
        java.lang.Class r2, $r4;
        java.lang.Object $r5;
        java.lang.String $r3;

        <org.dom4j.dom.DOMDocumentFactory: org.dom4j.util.SingletonStrategy singleton> = null;

        r2 = null;

     label01:
        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.dom4j.dom.DOMDocumentFactory.singleton.strategy", "org.dom4j.util.SimpleSingleton");

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

     label02:
        r2 = $r4;

     label03:
        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r1 = (org.dom4j.util.SingletonStrategy) $r5;

     label04:
        <org.dom4j.dom.DOMDocumentFactory: org.dom4j.util.SingletonStrategy singleton> = $r1;

        $r1 = <org.dom4j.dom.DOMDocumentFactory: org.dom4j.util.SingletonStrategy singleton>;

        r2 = <org.dom4j.dom.DOMDocumentFactory: java.lang.Class class$org$dom4j$dom$DOMDocumentFactory>;

        if r2 != null goto label12;

     label05:
        r2 = staticinvoke <org.dom4j.dom.DOMDocumentFactory: java.lang.Class class$(java.lang.String)>("org.dom4j.dom.DOMDocumentFactory");

     label06:
        $r4 = r2;

        <org.dom4j.dom.DOMDocumentFactory: java.lang.Class class$org$dom4j$dom$DOMDocumentFactory> = r2;

     label07:
        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r1.<org.dom4j.util.SingletonStrategy: void setSingletonClassName(java.lang.String)>($r3);

     label08:
        return;

     label09:
        r0 := @caughtexception;

     label10:
        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.dom4j.util.SimpleSingleton");

     label11:
        r2 = $r4;

        goto label03;

     label12:
        $r4 = <org.dom4j.dom.DOMDocumentFactory: java.lang.Class class$org$dom4j$dom$DOMDocumentFactory>;

        goto label07;

     label13:
        $r6 := @caughtexception;

        goto label03;

     label14:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label10 to label11 with label13;
    }

    public void <init>()
    {
        org.dom4j.dom.DOMDocumentFactory r0;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        specialinvoke r0.<org.dom4j.DocumentFactory: void <init>()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.ClassNotFoundException r1;
        java.lang.Class $r2;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.dom4j.dom.DOMDocumentFactory");

     label2:
        return $r2;

     label3:
        r1 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r0 = virtualinvoke r1.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r0);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static org.dom4j.DocumentFactory getInstance()
    {
        org.dom4j.dom.DOMDocumentFactory r2;
        java.lang.Object $r1;
        org.dom4j.util.SingletonStrategy $r0;

        $r0 = <org.dom4j.dom.DOMDocumentFactory: org.dom4j.util.SingletonStrategy singleton>;

        $r1 = interfaceinvoke $r0.<org.dom4j.util.SingletonStrategy: java.lang.Object instance()>();

        r2 = (org.dom4j.dom.DOMDocumentFactory) $r1;

        return r2;
    }

    protected org.dom4j.dom.DOMDocumentType asDocumentType(org.w3c.dom.DocumentType)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMDocumentType r2;
        java.lang.String $r3, $r4, $r5;
        org.w3c.dom.DocumentType r1;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        r1 := @parameter0: org.w3c.dom.DocumentType;

        $z0 = r1 instanceof org.dom4j.dom.DOMDocumentType;

        if $z0 == 0 goto label1;

        r2 = (org.dom4j.dom.DOMDocumentType) r1;

        return r2;

     label1:
        r2 = new org.dom4j.dom.DOMDocumentType;

        $r3 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getName()>();

        $r4 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        $r5 = interfaceinvoke r1.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        specialinvoke r2.<org.dom4j.dom.DOMDocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        return r2;
    }

    public org.dom4j.Attribute createAttribute(org.dom4j.Element, org.dom4j.QName, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMAttribute $r4;
        org.dom4j.Element $r1;
        org.dom4j.QName $r2;
        java.lang.String $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: org.dom4j.Element;

        $r2 := @parameter1: org.dom4j.QName;

        $r3 := @parameter2: java.lang.String;

        $r4 = new org.dom4j.dom.DOMAttribute;

        specialinvoke $r4.<org.dom4j.dom.DOMAttribute: void <init>(org.dom4j.QName,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public org.dom4j.CDATA createCDATA(java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMCDATA $r2;
        java.lang.String $r1;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.dom4j.dom.DOMCDATA;

        specialinvoke $r2.<org.dom4j.dom.DOMCDATA: void <init>(java.lang.String)>($r1);

        return $r2;
    }

    public org.dom4j.Comment createComment(java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        java.lang.String $r1;
        org.dom4j.dom.DOMComment $r2;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.dom4j.dom.DOMComment;

        specialinvoke $r2.<org.dom4j.dom.DOMComment: void <init>(java.lang.String)>($r1);

        return $r2;
    }

    public org.dom4j.DocumentType createDocType(java.lang.String, java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMDocumentType $r4;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new org.dom4j.dom.DOMDocumentType;

        specialinvoke $r4.<org.dom4j.dom.DOMDocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $r4;
    }

    public org.dom4j.Document createDocument()
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMDocument r1;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        r1 = new org.dom4j.dom.DOMDocument;

        specialinvoke r1.<org.dom4j.dom.DOMDocument: void <init>()>();

        virtualinvoke r1.<org.dom4j.dom.DOMDocument: void setDocumentFactory(org.dom4j.DocumentFactory)>(r0);

        return r1;
    }

    public org.w3c.dom.Document createDocument(java.lang.String, java.lang.String, org.w3c.dom.DocumentType) throws org.w3c.dom.DOMException
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMDocumentType $r4;
        org.dom4j.QName $r6;
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMDocument r5;
        org.w3c.dom.DocumentType $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.w3c.dom.DocumentType;

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<org.dom4j.dom.DOMDocumentFactory: org.dom4j.dom.DOMDocumentType asDocumentType(org.w3c.dom.DocumentType)>($r3);

        r5 = new org.dom4j.dom.DOMDocument;

        specialinvoke r5.<org.dom4j.dom.DOMDocument: void <init>(org.dom4j.dom.DOMDocumentType)>($r4);

     label1:
        $r6 = virtualinvoke r0.<org.dom4j.dom.DOMDocumentFactory: org.dom4j.QName createQName(java.lang.String,java.lang.String)>($r2, $r1);

        virtualinvoke r5.<org.dom4j.dom.DOMDocument: org.dom4j.Element addElement(org.dom4j.QName)>($r6);

        return r5;

     label2:
        r5 = new org.dom4j.dom.DOMDocument;

        specialinvoke r5.<org.dom4j.dom.DOMDocument: void <init>()>();

        goto label1;
    }

    public org.w3c.dom.DocumentType createDocumentType(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMDocumentType $r4;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new org.dom4j.dom.DOMDocumentType;

        specialinvoke $r4.<org.dom4j.dom.DOMDocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return $r4;
    }

    public org.dom4j.Element createElement(org.dom4j.QName)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.QName $r1;
        org.dom4j.dom.DOMElement $r2;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        $r2 = new org.dom4j.dom.DOMElement;

        specialinvoke $r2.<org.dom4j.dom.DOMElement: void <init>(org.dom4j.QName)>($r1);

        return $r2;
    }

    public org.dom4j.Element createElement(org.dom4j.QName, int)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        int $i0;
        org.dom4j.QName $r1;
        org.dom4j.dom.DOMElement $r2;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: org.dom4j.QName;

        $i0 := @parameter1: int;

        $r2 = new org.dom4j.dom.DOMElement;

        specialinvoke $r2.<org.dom4j.dom.DOMElement: void <init>(org.dom4j.QName,int)>($r1, $i0);

        return $r2;
    }

    public org.dom4j.Entity createEntity(java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        java.lang.String $r1;
        org.dom4j.dom.DOMEntityReference $r2;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.dom4j.dom.DOMEntityReference;

        specialinvoke $r2.<org.dom4j.dom.DOMEntityReference: void <init>(java.lang.String)>($r1);

        return $r2;
    }

    public org.dom4j.Entity createEntity(java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMEntityReference $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.dom4j.dom.DOMEntityReference;

        specialinvoke $r3.<org.dom4j.dom.DOMEntityReference: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public org.dom4j.Namespace createNamespace(java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMNamespace $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.dom4j.dom.DOMNamespace;

        specialinvoke $r3.<org.dom4j.dom.DOMNamespace: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        java.lang.String $r1, $r2;
        org.dom4j.dom.DOMProcessingInstruction $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new org.dom4j.dom.DOMProcessingInstruction;

        specialinvoke $r3.<org.dom4j.dom.DOMProcessingInstruction: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        return $r3;
    }

    public org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String, java.util.Map)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        java.util.Map $r2;
        java.lang.String $r1;
        org.dom4j.dom.DOMProcessingInstruction $r3;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 = new org.dom4j.dom.DOMProcessingInstruction;

        specialinvoke $r3.<org.dom4j.dom.DOMProcessingInstruction: void <init>(java.lang.String,java.util.Map)>($r1, $r2);

        return $r3;
    }

    public org.dom4j.Text createText(java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        org.dom4j.dom.DOMText $r2;
        java.lang.String $r1;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 = new org.dom4j.dom.DOMText;

        specialinvoke $r2.<org.dom4j.dom.DOMText: void <init>(java.lang.String)>($r1);

        return $r2;
    }

    public boolean hasFeature(java.lang.String, java.lang.String)
    {
        org.dom4j.dom.DOMDocumentFactory r0;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.dom4j.dom.DOMDocumentFactory;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = "XML";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r3 = "Core";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

     label1:
        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r1 = "1.0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r1 = "2.0";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }
}
