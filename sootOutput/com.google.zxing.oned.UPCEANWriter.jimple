public abstract class com.google.zxing.oned.UPCEANWriter extends java.lang.Object implements com.google.zxing.Writer
{

    public void <init>()
    {
        com.google.zxing.oned.UPCEANWriter r0;

        r0 := @this: com.google.zxing.oned.UPCEANWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static int appendPattern(byte[], int, int[], int)
    {
        byte[] $r0;
        java.lang.IllegalArgumentException $r2;
        byte $b2;
        int[] $r1;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i3, $i4, $i5;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $r1 := @parameter2: int[];

        $i0 := @parameter3: int;

        if $i0 == 0 goto label1;

        if $i0 == 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startColor must be either 0 or 1, but got: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i3 = 0;

        $b2 = (byte) $i0;

        $i0 = 0;

     label2:
        $i4 = lengthof $r1;

        if $i0 >= $i4 goto label5;

        $i4 = 0;

     label3:
        $i5 = $r1[$i0];

        if $i4 >= $i5 goto label4;

        $r0[$i1] = $b2;

        $i1 = $i1 + 1;

        $i4 = $i4 + 1;

        $i3 = $i3 + 1;

        goto label3;

     label4:
        $b2 = $b2 ^ 1;

        $i0 = $i0 + 1;

        goto label2;

     label5:
        return $i3;
    }

    private static com.google.zxing.common.BitMatrix renderResult(byte[], int, int)
    {
        byte[] $r0;
        byte $b4;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i5;
        com.google.zxing.common.BitMatrix $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = lengthof $r0;

        $r2 = <com.google.zxing.oned.UPCEANReader: int[] START_END_PATTERN>;

        $i3 = lengthof $r2;

        $i3 = $i3 << 1;

        $i3 = $i3 + $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i3);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i1);

        $i3 = $i0 / $i3;

        $i5 = $i2 * $i3;

        $i5 = $i0 - $i5;

        $i5 = $i5 / 2;

        $r1 = new com.google.zxing.common.BitMatrix;

        specialinvoke $r1.<com.google.zxing.common.BitMatrix: void <init>(int,int)>($i0, $i1);

        $i0 = 0;

     label1:
        if $i0 >= $i2 goto label3;

        $b4 = $r0[$i0];

        if $b4 != 1 goto label2;

        virtualinvoke $r1.<com.google.zxing.common.BitMatrix: void setRegion(int,int,int,int)>($i5, 0, $i3, $i1);

     label2:
        $i0 = $i0 + 1;

        $i5 = $i5 + $i3;

        goto label1;

     label3:
        return $r1;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int) throws com.google.zxing.WriterException
    {
        com.google.zxing.oned.UPCEANWriter r0;
        int $i0, $i1;
        com.google.zxing.common.BitMatrix $r3;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2;

        r0 := @this: com.google.zxing.oned.UPCEANWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke r0.<com.google.zxing.oned.UPCEANWriter: com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Hashtable)>($r1, $r2, $i0, $i1, null);

        return $r3;
    }

    public com.google.zxing.common.BitMatrix encode(java.lang.String, com.google.zxing.BarcodeFormat, int, int, java.util.Hashtable) throws com.google.zxing.WriterException
    {
        byte[] $r6;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuffer $r5;
        com.google.zxing.oned.UPCEANWriter r0;
        int $i0, $i1, $i2;
        com.google.zxing.common.BitMatrix $r7;
        java.lang.String $r1;
        com.google.zxing.BarcodeFormat $r2;
        java.util.Hashtable $r3;

        r0 := @this: com.google.zxing.oned.UPCEANWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.google.zxing.BarcodeFormat;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: java.util.Hashtable;

        if $r1 == null goto label1;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Found empty contents");

        throw $r4;

     label2:
        if $i0 < 0 goto label3;

        if $i1 >= 0 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Requested dimensions are too small: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(120);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r4;

     label4:
        $r6 = virtualinvoke r0.<com.google.zxing.oned.UPCEANWriter: byte[] encode(java.lang.String)>($r1);

        $r7 = staticinvoke <com.google.zxing.oned.UPCEANWriter: com.google.zxing.common.BitMatrix renderResult(byte[],int,int)>($r6, $i0, $i1);

        return $r7;
    }

    public abstract byte[] encode(java.lang.String);
}
