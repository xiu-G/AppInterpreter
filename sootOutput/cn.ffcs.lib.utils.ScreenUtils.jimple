public class cn.ffcs.lib.utils.ScreenUtils extends java.lang.Object
{
    public static final int SCREEN_TYPE_FWVGA;
    public static final int SCREEN_TYPE_HVGA;
    public static final int SCREEN_TYPE_OTHER;
    public static final int SCREEN_TYPE_QVGA;
    public static final int SCREEN_TYPE_VGA;
    public static final int SCREEN_TYPE_WQVGA;
    public static final int SCREEN_TYPE_WQVGA432;
    public static final int SCREEN_TYPE_WSVGA_Tablet;
    public static final int SCREEN_TYPE_WVGA;
    public static final int SCREEN_TYPE_WXGA_Tablet;

    public void <init>()
    {
        cn.ffcs.lib.utils.ScreenUtils r0;

        r0 := @this: cn.ffcs.lib.utils.ScreenUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Boolean fragmentsSupported()
    {
        java.lang.Boolean $r0;

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r0;
    }

    public static void fullScreen(android.app.Activity, boolean)
    {
        int $i0, $i1;
        android.app.Activity $r0;
        android.view.Window $r1;
        android.view.WindowManager$LayoutParams $r2;
        boolean $z0;

        $r0 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i0 = $i0 | 1024;

        $r2.<android.view.WindowManager$LayoutParams: int flags> = $i0;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>($r2);

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void addFlags(int)>(512);

        return;

     label1:
        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i1 = -1025;

        $i0 = $i0 & $i1;

        $r2.<android.view.WindowManager$LayoutParams: int flags> = $i0;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>($r2);

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void clearFlags(int)>(512);

        return;
    }

    public static android.util.DisplayMetrics getDisplayMetrics(android.app.Activity)
    {
        android.view.WindowManager $r2;
        android.view.Display $r3;
        android.app.Activity $r0;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        return r1;
    }

    public static android.util.DisplayMetrics getDisplayMetrics(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager r3;
        android.view.Display $r4;
        java.lang.Object $r2;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        return r1;
    }

    public static float getScreenDensity(android.app.Activity)
    {
        android.view.WindowManager $r2;
        android.view.Display $r3;
        float f0;
        android.app.Activity $r0;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        f0 = r1.<android.util.DisplayMetrics: float density>;

        return f0;
    }

    public static float getScreenDensity(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager r3;
        android.view.Display $r4;
        float f0;
        java.lang.Object $r2;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        f0 = r1.<android.util.DisplayMetrics: float density>;

        return f0;
    }

    public static int getScreenHeight(android.app.Activity)
    {
        android.view.WindowManager $r2;
        int i0;
        android.view.Display $r3;
        android.app.Activity $r0;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        i0 = r1.<android.util.DisplayMetrics: int heightPixels>;

        return i0;
    }

    public static int getScreenHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager r3;
        int i0;
        android.view.Display $r4;
        java.lang.Object $r2;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        i0 = r1.<android.util.DisplayMetrics: int heightPixels>;

        return i0;
    }

    public static int getScreenType(android.app.Activity)
    {
        android.view.WindowManager $r1;
        int $i0, $i1;
        android.view.Display $r2;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

        if $i0 <= $i1 goto label02;

        $i0 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

     label01:
        if $i0 != 640 goto label03;

        if $i1 != 480 goto label03;

        return 6;

     label02:
        $i1 = virtualinvoke $r2.<android.view.Display: int getWidth()>();

        $i0 = virtualinvoke $r2.<android.view.Display: int getHeight()>();

        goto label01;

     label03:
        if $i0 != 854 goto label04;

        if $i1 != 480 goto label04;

        return 5;

     label04:
        if $i0 != 800 goto label05;

        if $i1 != 480 goto label05;

        return 4;

     label05:
        if $i0 != 432 goto label06;

        if $i1 != 240 goto label06;

        return 3;

     label06:
        if $i0 != 400 goto label07;

        if $i1 != 240 goto label07;

        return 2;

     label07:
        if $i0 != 320 goto label08;

        if $i1 != 240 goto label08;

        return 1;

     label08:
        if $i0 != 480 goto label09;

        if $i1 != 320 goto label09;

        return 0;

     label09:
        if $i0 != 600 goto label10;

        if $i1 != 1024 goto label10;

        return 7;

     label10:
        if $i0 != 800 goto label11;

        if $i1 != 1280 goto label11;

        return 8;

     label11:
        $i0 = -1;

        return $i0;
    }

    public static float getScreenWidth(android.app.Activity)
    {
        android.view.WindowManager $r2;
        int $i0;
        android.view.Display $r3;
        float $f0;
        android.app.Activity $r0;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r3.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i0;

        return $f0;
    }

    public static float getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.view.WindowManager r3;
        int $i0;
        android.view.Display $r4;
        float $f0;
        java.lang.Object $r2;
        android.util.DisplayMetrics r1;

        $r0 := @parameter0: android.content.Context;

        r1 = new android.util.DisplayMetrics;

        specialinvoke r1.<android.util.DisplayMetrics: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r2;

        $r4 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i0;

        return $f0;
    }

    public static float getSizeOfDip(android.app.Activity, int)
    {
        int $i0;
        float $f0, $f1;
        android.app.Activity $r0;

        $r0 := @parameter0: android.app.Activity;

        $i0 := @parameter1: int;

        $f0 = staticinvoke <cn.ffcs.lib.utils.ScreenUtils: float getScreenDensity(android.app.Activity)>($r0);

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        return $f0;
    }

    public static float getSizeOfDip(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, $f1;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $f0 = staticinvoke <cn.ffcs.lib.utils.ScreenUtils: float getScreenDensity(android.content.Context)>($r0);

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        return $f0;
    }

    public static int getStatusbarHeight(android.app.Activity)
    {
        android.graphics.Rect r1;
        int i0;
        android.view.View $r3;
        android.app.Activity $r0;
        android.view.Window $r2;

        $r0 := @parameter0: android.app.Activity;

        r1 = new android.graphics.Rect;

        specialinvoke r1.<android.graphics.Rect: void <init>()>();

        $r2 = virtualinvoke $r0.<android.app.Activity: android.view.Window getWindow()>();

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.View getDecorView()>();

        virtualinvoke $r3.<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>(r1);

        i0 = r1.<android.graphics.Rect: int top>;

        return i0;
    }

    public static void <clinit>()
    {
        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_WXGA_Tablet> = 8;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_WVGA> = 4;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_WSVGA_Tablet> = 7;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_WQVGA432> = 3;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_WQVGA> = 2;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_VGA> = 6;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_QVGA> = 1;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_OTHER> = -1;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_HVGA> = 0;

        <cn.ffcs.lib.utils.ScreenUtils: int SCREEN_TYPE_FWVGA> = 5;

        return;
    }
}
