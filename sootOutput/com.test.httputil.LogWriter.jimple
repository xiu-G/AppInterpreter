public class com.test.httputil.LogWriter extends java.lang.Object
{
    public static boolean debug;
    private static java.lang.String logFileName;

    static void <clinit>()
    {
        <com.test.httputil.LogWriter: java.lang.String logFileName> = "_log.txt";

        <com.test.httputil.LogWriter: boolean debug> = 0;

        return;
    }

    public void <init>()
    {
        com.test.httputil.LogWriter r0;

        r0 := @this: com.test.httputil.LogWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void log(java.lang.String, java.lang.Class, java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r0, $r2, $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Class;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.test.httputil.LogWriter: void log(java.lang.String,java.lang.String)>($r0, $r2);

        return;
    }

    public static void log(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r12;
        java.util.Date $r9;
        java.text.SimpleDateFormat r2;
        java.lang.String $r0, $r3, $r7;
        boolean $z0;
        java.io.BufferedWriter r1, r4;
        java.io.FileWriter $r8;
        java.io.File $r6;
        java.lang.Exception r10, $r11, $r13, $r14;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $z0 = <com.test.httputil.LogWriter: boolean debug>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r4 = null;

     label02:
        $r5 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label04:
        $r7 = <java.io.File: java.lang.String separator>;

     label05:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httputil");

     label06:
        $r7 = <com.test.httputil.LogWriter: java.lang.String logFileName>;

     label07:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        r1 = new java.io.BufferedWriter;

        $r8 = new java.io.FileWriter;

     label09:
        specialinvoke $r8.<java.io.FileWriter: void <init>(java.lang.String,boolean)>($r7, 1);

        specialinvoke r1.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r8);

     label10:
        r2 = new java.text.SimpleDateFormat;

     label11:
        specialinvoke r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("[yy-MM-dd hh:mm:ss]: ");

     label12:
        $r5 = new java.lang.StringBuilder;

        $r9 = new java.util.Date;

     label13:
        specialinvoke $r9.<java.util.Date: void <init>()>();

        $r7 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r5 = new java.lang.StringBuilder;

     label15:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>($r7);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("httputil", $r3);

     label16:
        if r1 == null goto label33;

     label17:
        virtualinvoke r1.<java.io.BufferedWriter: void close()>();

     label18:
        return;

     label19:
        r10 := @caughtexception;

     label20:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\u65e5\u5fd7\u5199\u5165\u9519\u8bef,");

        $r3 = virtualinvoke r10.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("httputil", $r3);

     label21:
        if r4 == null goto label33;

     label22:
        virtualinvoke r4.<java.io.BufferedWriter: void close()>();

     label23:
        return;

     label24:
        $r11 := @caughtexception;

        return;

     label25:
        $r12 := @caughtexception;

     label26:
        if r4 == null goto label28;

     label27:
        virtualinvoke r4.<java.io.BufferedWriter: void close()>();

     label28:
        throw $r12;

     label29:
        $r13 := @caughtexception;

        return;

     label30:
        $r14 := @caughtexception;

        goto label28;

     label31:
        $r12 := @caughtexception;

        r4 = r1;

        goto label26;

     label32:
        r10 := @caughtexception;

        r4 = r1;

        goto label20;

     label33:
        return;

        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Throwable from label02 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label32;
        catch java.lang.Exception from label13 to label14 with label32;
        catch java.lang.Exception from label15 to label16 with label32;
        catch java.lang.Throwable from label10 to label16 with label31;
        catch java.lang.Exception from label17 to label18 with label29;
        catch java.lang.Throwable from label20 to label21 with label25;
        catch java.lang.Exception from label22 to label23 with label24;
        catch java.lang.Exception from label27 to label28 with label30;
    }
}
