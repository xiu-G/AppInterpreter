public class cs.utils.io.AppConfigService extends java.lang.Object
{
    android.content.Context context;
    cs.utils.io.DBUtil dbUtil;
    java.lang.String tableName;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        cs.utils.io.AppConfigService r0;
        cs.utils.io.DBUtil $r2;

        r0 := @this: cs.utils.io.AppConfigService;

        $r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<cs.utils.io.AppConfigService: java.lang.String tableName> = "AppConfig";

        r0.<cs.utils.io.AppConfigService: cs.utils.io.DBUtil dbUtil> = null;

        r0.<cs.utils.io.AppConfigService: android.content.Context context> = $r1;

        $r2 = new cs.utils.io.DBUtil;

        specialinvoke $r2.<cs.utils.io.DBUtil: void <init>(android.content.Context)>($r1);

        r0.<cs.utils.io.AppConfigService: cs.utils.io.DBUtil dbUtil> = $r2;

        return;
    }

    public void add(java.lang.String)
    {
        java.lang.Throwable $r7;
        cs.utils.io.AppConfigService r0;
        long $l0;
        android.database.sqlite.SQLiteDatabase r3, $r6;
        java.lang.Long $r4;
        cs.utils.io.DBUtil $r5;
        java.lang.String $r1;
        android.content.ContentValues r2;

        r0 := @this: cs.utils.io.AppConfigService;

        $r1 := @parameter0: java.lang.String;

        r3 = null;

     label1:
        r2 = new android.content.ContentValues;

        specialinvoke r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("jsonConfig", $r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("updatetime", $r4);

        $r5 = r0.<cs.utils.io.AppConfigService: cs.utils.io.DBUtil dbUtil>;

        $r6 = virtualinvoke $r5.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

     label2:
        r3 = $r6;

     label3:
        $r1 = r0.<cs.utils.io.AppConfigService: java.lang.String tableName>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r1, null, r2);

     label4:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r6, null);

        return;

     label5:
        $r7 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r3, null);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public cs.entity.AdInsertScreen getLastConfig()
    {
        cs.gson.GsonBuilder $r2;
        cs.network.result.InterfaceResult $r6;
        android.content.Context $r5;
        cs.request.App_getRequest $r4;
        cs.utils.io.AppConfigService r0;
        cs.entity.AdInsertScreen $r10;
        cs.network.result.AddDatas $r7;
        cs.gson.Gson $r3;
        java.lang.Object $r8;
        cs.entity.AppBasicInfo $r9;
        java.lang.String $r1;

        r0 := @this: cs.utils.io.AppConfigService;

        $r1 = virtualinvoke r0.<cs.utils.io.AppConfigService: java.lang.String getLastJsonConfig()>();

        $r2 = new cs.gson.GsonBuilder;

        specialinvoke $r2.<cs.gson.GsonBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<cs.gson.GsonBuilder: cs.gson.GsonBuilder setDateFormat(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r2 = virtualinvoke $r2.<cs.gson.GsonBuilder: cs.gson.GsonBuilder serializeNulls()>();

        $r2 = virtualinvoke $r2.<cs.gson.GsonBuilder: cs.gson.GsonBuilder enableComplexMapKeySerialization()>();

        $r3 = virtualinvoke $r2.<cs.gson.GsonBuilder: cs.gson.Gson create()>();

        $r4 = new cs.request.App_getRequest;

        $r5 = r0.<cs.utils.io.AppConfigService: android.content.Context context>;

        specialinvoke $r4.<cs.request.App_getRequest: void <init>(android.content.Context)>($r5);

        $r6 = virtualinvoke $r4.<cs.request.App_getRequest: cs.network.result.InterfaceResult parseInterfaceResult(cs.gson.Gson,java.lang.String)>($r3, $r1);

        $r7 = virtualinvoke $r6.<cs.network.result.InterfaceResult: cs.network.result.AddDatas getAddDatas()>();

        $r8 = virtualinvoke $r7.<cs.network.result.AddDatas: java.lang.Object getSingleResult()>();

        $r9 = (cs.entity.AppBasicInfo) $r8;

        $r10 = virtualinvoke $r9.<cs.entity.AppBasicInfo: cs.entity.AdInsertScreen getAdInsertScreen()>();

        return $r10;
    }

    public java.lang.String getLastJsonConfig()
    {
        java.lang.Throwable $r9;
        cs.utils.io.AppConfigService r0;
        java.lang.String[] $r7;
        android.database.sqlite.SQLiteDatabase r1, $r5;
        cs.utils.io.DBUtil $r4;
        int $i0;
        java.lang.String r3, $r6;
        android.database.Cursor r2, $r8;
        boolean $z0;

        r0 := @this: cs.utils.io.AppConfigService;

        r1 = null;

        r2 = null;

        r3 = null;

     label1:
        $r4 = r0.<cs.utils.io.AppConfigService: cs.utils.io.DBUtil dbUtil>;

        $r5 = virtualinvoke $r4.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r1 = $r5;

     label3:
        $r6 = r0.<cs.utils.io.AppConfigService: java.lang.String tableName>;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "jsonConfig";

        $r7[1] = "updatetime";

        $r8 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, null, null, null, null, "updatetime desc");

     label4:
        r2 = $r8;

     label5:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label6:
        if $z0 == 0 goto label8;

     label7:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("jsonConfig");

        r3 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label8:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r5, $r8);

        return r3;

     label9:
        $r9 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r1, r2);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public java.util.Date getLastupdatetime()
    {
        java.lang.Throwable $r9;
        cs.utils.io.AppConfigService r0;
        java.util.Date r3;
        java.lang.String[] $r7;
        long $l1;
        android.database.sqlite.SQLiteDatabase r1, $r5;
        cs.utils.io.DBUtil $r4;
        int $i0;
        java.lang.String $r6;
        android.database.Cursor r2, $r8;
        boolean $z0;

        r0 := @this: cs.utils.io.AppConfigService;

        r1 = null;

        r2 = null;

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>(long)>(0L);

     label1:
        $r4 = r0.<cs.utils.io.AppConfigService: cs.utils.io.DBUtil dbUtil>;

        $r5 = virtualinvoke $r4.<cs.utils.io.DBUtil: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

     label2:
        r1 = $r5;

     label3:
        $r6 = r0.<cs.utils.io.AppConfigService: java.lang.String tableName>;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "jsonConfig";

        $r7[1] = "updatetime";

        $r8 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, null, null, null, null, "updatetime desc");

     label4:
        r2 = $r8;

     label5:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

     label6:
        if $z0 == 0 goto label8;

     label7:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("updatetime");

        $l1 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i0);

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>(long)>($l1);

     label8:
        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>($r5, $r8);

        return r3;

     label9:
        $r9 := @caughtexception;

        staticinvoke <cs.utils.io.DBUtil: void close(android.database.sqlite.SQLiteDatabase,android.database.Cursor)>(r1, r2);

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
}
