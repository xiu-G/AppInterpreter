public abstract class com.parse.signpost.AbstractOAuthProvider extends java.lang.Object implements com.parse.signpost.OAuthProvider
{
    private static final long serialVersionUID;
    private java.lang.String accessTokenEndpointUrl;
    private java.lang.String authorizationWebsiteUrl;
    private java.util.Map defaultHeaders;
    private boolean isOAuth10a;
    private transient com.parse.signpost.OAuthProviderListener listener;
    private java.lang.String requestTokenEndpointUrl;
    private com.parse.signpost.http.HttpParameters responseParameters;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        com.parse.signpost.http.HttpParameters $r4;
        com.parse.signpost.AbstractOAuthProvider r0;
        java.util.HashMap $r5;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String requestTokenEndpointUrl> = $r1;

        r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String accessTokenEndpointUrl> = $r2;

        r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String authorizationWebsiteUrl> = $r3;

        $r4 = new com.parse.signpost.http.HttpParameters;

        specialinvoke $r4.<com.parse.signpost.http.HttpParameters: void <init>()>();

        r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.parse.signpost.AbstractOAuthProvider: java.util.Map defaultHeaders> = $r5;

        return;
    }

    protected void closeConnection(com.parse.signpost.http.HttpRequest, com.parse.signpost.http.HttpResponse)
    {
        com.parse.signpost.http.HttpResponse $r2;
        com.parse.signpost.AbstractOAuthProvider r0;
        com.parse.signpost.http.HttpRequest $r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.http.HttpRequest;

        $r2 := @parameter1: com.parse.signpost.http.HttpResponse;

        return;
    }

    protected abstract com.parse.signpost.http.HttpRequest createRequest(java.lang.String);

    public java.lang.String getAccessTokenEndpointUrl()
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.lang.String r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        r1 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String accessTokenEndpointUrl>;

        return r1;
    }

    public java.lang.String getAuthorizationWebsiteUrl()
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.lang.String r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        r1 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String authorizationWebsiteUrl>;

        return r1;
    }

    public java.util.Map getRequestHeaders()
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.util.Map r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        r1 = r0.<com.parse.signpost.AbstractOAuthProvider: java.util.Map defaultHeaders>;

        return r1;
    }

    public java.lang.String getRequestTokenEndpointUrl()
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.lang.String r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        r1 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String requestTokenEndpointUrl>;

        return r1;
    }

    protected java.lang.String getResponseParameter(java.lang.String)
    {
        com.parse.signpost.http.HttpParameters $r2;
        com.parse.signpost.AbstractOAuthProvider r0;
        java.lang.String $r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters>;

        $r1 = virtualinvoke $r2.<com.parse.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object)>($r1);

        return $r1;
    }

    public com.parse.signpost.http.HttpParameters getResponseParameters()
    {
        com.parse.signpost.http.HttpParameters r1;
        com.parse.signpost.AbstractOAuthProvider r0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        r1 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters>;

        return r1;
    }

    protected void handleUnexpectedResponse(int, com.parse.signpost.http.HttpResponse)
    {
        com.parse.signpost.http.HttpResponse $r1;
        com.parse.signpost.AbstractOAuthProvider r0;
        java.io.InputStreamReader $r3;
        com.parse.signpost.exception.OAuthNotAuthorizedException $r10;
        int $i0;
        com.parse.signpost.exception.OAuthCommunicationException $r7;
        java.lang.StringBuilder $r5, $r8;
        java.io.BufferedReader $r2;
        java.lang.String $r6, $r9;
        java.io.InputStream $r4;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.parse.signpost.http.HttpResponse;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        $r4 = interfaceinvoke $r1.<com.parse.signpost.http.HttpResponse: java.io.InputStream getContent()>();

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r4);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r3, 8192);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        if $r6 == null goto label3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label2;

     label3:
        lookupswitch($i0)
        {
            case 401: goto label5;
            default: goto label4;
        };

     label4:
        $r7 = new com.parse.signpost.exception.OAuthCommunicationException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Service provider responded in error: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r6 = interfaceinvoke $r1.<com.parse.signpost.http.HttpResponse: java.lang.String getReasonPhrase()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.parse.signpost.exception.OAuthCommunicationException: void <init>(java.lang.String,java.lang.String)>($r6, $r9);

        throw $r7;

     label5:
        $r10 = new com.parse.signpost.exception.OAuthNotAuthorizedException;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.parse.signpost.exception.OAuthNotAuthorizedException: void <init>(java.lang.String)>($r6);

        throw $r10;
    }

    public boolean isOAuth10a()
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        boolean z0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        z0 = r0.<com.parse.signpost.AbstractOAuthProvider: boolean isOAuth10a>;

        return z0;
    }

    public void removeListener(com.parse.signpost.OAuthProviderListener)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        com.parse.signpost.OAuthProviderListener $r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.OAuthProviderListener;

        r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener> = null;

        return;
    }

    public void retrieveAccessToken(com.parse.signpost.OAuthConsumer, java.lang.String)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        com.parse.signpost.OAuthConsumer $r1;
        java.lang.String[] $r5;
        java.lang.String $r2, $r3;
        com.parse.signpost.exception.OAuthExpectationFailedException $r4;
        boolean $z0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.OAuthConsumer;

        $r2 := @parameter1: java.lang.String;

        $r3 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getToken()>();

        if $r3 == null goto label1;

        $r3 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getTokenSecret()>();

        if $r3 != null goto label2;

     label1:
        $r4 = new com.parse.signpost.exception.OAuthExpectationFailedException;

        specialinvoke $r4.<com.parse.signpost.exception.OAuthExpectationFailedException: void <init>(java.lang.String)>("Authorized request token or token secret not set. Did you retrieve an authorized request token before?");

        throw $r4;

     label2:
        $z0 = r0.<com.parse.signpost.AbstractOAuthProvider: boolean isOAuth10a>;

        if $z0 == 0 goto label3;

        if $r2 == null goto label3;

        $r3 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String accessTokenEndpointUrl>;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "oauth_verifier";

        $r5[1] = $r2;

        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[])>($r1, $r3, $r5);

        return;

     label3:
        $r2 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String accessTokenEndpointUrl>;

        $r5 = newarray (java.lang.String)[0];

        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[])>($r1, $r2, $r5);

        return;
    }

    public java.lang.String retrieveRequestToken(com.parse.signpost.OAuthConsumer, java.lang.String)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.lang.String[] $r4;
        com.parse.signpost.http.HttpParameters $r5;
        com.parse.signpost.OAuthConsumer $r1;
        java.lang.Boolean $r6;
        java.lang.String $r2, $r3, $r7;
        boolean $z0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.OAuthConsumer;

        $r2 := @parameter1: java.lang.String;

        interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: void setTokenWithSecret(java.lang.String,java.lang.String)>(null, null);

        $r3 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String requestTokenEndpointUrl>;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "oauth_callback";

        $r4[1] = $r2;

        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void retrieveToken(com.parse.signpost.OAuthConsumer,java.lang.String,java.lang.String[])>($r1, $r3, $r4);

        $r5 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters>;

        $r3 = virtualinvoke $r5.<com.parse.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object)>("oauth_callback_confirmed");

        $r5 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters>;

        virtualinvoke $r5.<com.parse.signpost.http.HttpParameters: java.util.SortedSet remove(java.lang.Object)>("oauth_callback_confirmed");

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r7 = virtualinvoke $r6.<java.lang.Boolean: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        r0.<com.parse.signpost.AbstractOAuthProvider: boolean isOAuth10a> = $z0;

        $z0 = r0.<com.parse.signpost.AbstractOAuthProvider: boolean isOAuth10a>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String authorizationWebsiteUrl>;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "oauth_token";

        $r3 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getToken()>();

        $r4[1] = $r3;

        $r2 = staticinvoke <com.parse.signpost.OAuth: java.lang.String addQueryParameters(java.lang.String,java.lang.String[])>($r2, $r4);

        return $r2;

     label1:
        $r3 = r0.<com.parse.signpost.AbstractOAuthProvider: java.lang.String authorizationWebsiteUrl>;

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "oauth_token";

        $r7 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getToken()>();

        $r4[1] = $r7;

        $r4[2] = "oauth_callback";

        $r4[3] = $r2;

        $r2 = staticinvoke <com.parse.signpost.OAuth: java.lang.String addQueryParameters(java.lang.String,java.lang.String[])>($r3, $r4);

        return $r2;
    }

    protected transient void retrieveToken(com.parse.signpost.OAuthConsumer, java.lang.String, java.lang.String[])
    {
        java.lang.Throwable $r15;
        java.lang.String[] $r3;
        com.parse.signpost.http.HttpParameters $r16, $r27;
        com.parse.signpost.http.HttpRequest $r8;
        java.util.Map $r5;
        int $i0;
        com.parse.signpost.exception.OAuthCommunicationException $r20, $r28;
        java.lang.String $r2, $r6;
        boolean $z0;
        com.parse.signpost.http.HttpResponse $r14, $r18;
        com.parse.signpost.AbstractOAuthProvider r0;
        java.util.Iterator $r11;
        java.util.Set $r10;
        com.parse.signpost.exception.OAuthExpectationFailedException $r7, $r23, $r26;
        com.parse.signpost.exception.OAuthNotAuthorizedException $r13;
        java.lang.Exception $r19, $r22, $r24, $r25;
        com.parse.signpost.OAuthProviderListener $r17;
        com.parse.signpost.OAuthConsumer $r1;
        java.lang.Object $r4, $r9, $r12;
        java.io.InputStream $r21;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.OAuthConsumer;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String[];

        $r4 = null;

        $r5 = virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: java.util.Map getRequestHeaders()>();

        $r6 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getConsumerKey()>();

        if $r6 == null goto label01;

        $r6 = interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: java.lang.String getConsumerSecret()>();

        if $r6 != null goto label02;

     label01:
        $r26 = new com.parse.signpost.exception.OAuthExpectationFailedException;

        specialinvoke $r26.<com.parse.signpost.exception.OAuthExpectationFailedException: void <init>(java.lang.String)>("Consumer key or secret not set");

        throw $r26;

     label02:
        $r8 = virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpRequest createRequest(java.lang.String)>($r2);

     label03:
        $r9 = $r8;

     label04:
        $r10 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 == 0 goto label18;

     label07:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label08:
        $r2 = (java.lang.String) $r12;

     label09:
        $r12 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

     label10:
        $r6 = (java.lang.String) $r12;

     label11:
        interfaceinvoke $r8.<com.parse.signpost.http.HttpRequest: void setHeader(java.lang.String,java.lang.String)>($r2, $r6);

     label12:
        goto label05;

     label13:
        $r13 := @caughtexception;

        $r14 = null;

        $r4 = $r8;

     label14:
        throw $r13;

     label15:
        $r15 := @caughtexception;

        $r9 = $r4;

        $r4 = $r14;

     label16:
        $r8 = (com.parse.signpost.http.HttpRequest) $r9;

        $r14 = (com.parse.signpost.http.HttpResponse) $r4;

        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse)>($r8, $r14);

     label17:
        throw $r15;

     label18:
        if $r3 == null goto label22;

     label19:
        $r27 = new com.parse.signpost.http.HttpParameters;

     label20:
        $r16 = $r27;

     label21:
        specialinvoke $r27.<com.parse.signpost.http.HttpParameters: void <init>()>();

        virtualinvoke $r16.<com.parse.signpost.http.HttpParameters: void putAll(java.lang.String[],boolean)>($r3, 1);

        interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: void setAdditionalParameters(com.parse.signpost.http.HttpParameters)>($r16);

     label22:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label23:
        if $r17 == null goto label26;

     label24:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label25:
        interfaceinvoke $r17.<com.parse.signpost.OAuthProviderListener: void prepareRequest(com.parse.signpost.http.HttpRequest)>($r8);

     label26:
        interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: com.parse.signpost.http.HttpRequest sign(com.parse.signpost.http.HttpRequest)>($r8);

     label27:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label28:
        if $r17 == null goto label31;

     label29:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label30:
        interfaceinvoke $r17.<com.parse.signpost.OAuthProviderListener: void prepareSubmission(com.parse.signpost.http.HttpRequest)>($r8);

     label31:
        $r18 = virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest)>($r8);

     label32:
        $r14 = $r18;

     label33:
        $i0 = interfaceinvoke $r18.<com.parse.signpost.http.HttpResponse: int getStatusCode()>();

     label34:
        $z0 = 0;

     label35:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label36:
        if $r17 == null goto label39;

     label37:
        $r17 = r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener>;

     label38:
        $z0 = interfaceinvoke $r17.<com.parse.signpost.OAuthProviderListener: boolean onResponseReceived(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse)>($r8, $r18);

     label39:
        if $z0 == 0 goto label43;

     label40:
        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse)>($r8, $r18);

     label41:
        return;

     label42:
        $r19 := @caughtexception;

        $r28 = new com.parse.signpost.exception.OAuthCommunicationException;

        specialinvoke $r28.<com.parse.signpost.exception.OAuthCommunicationException: void <init>(java.lang.Exception)>($r19);

        throw $r28;

     label43:
        if $i0 < 300 goto label45;

     label44:
        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void handleUnexpectedResponse(int,com.parse.signpost.http.HttpResponse)>($i0, $r18);

     label45:
        $r21 = interfaceinvoke $r18.<com.parse.signpost.http.HttpResponse: java.io.InputStream getContent()>();

        $r16 = staticinvoke <com.parse.signpost.OAuth: com.parse.signpost.http.HttpParameters decodeForm(java.io.InputStream)>($r21);

        $r2 = virtualinvoke $r16.<com.parse.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object)>("oauth_token");

        $r6 = virtualinvoke $r16.<com.parse.signpost.http.HttpParameters: java.lang.String getFirst(java.lang.Object)>("oauth_token_secret");

        virtualinvoke $r16.<com.parse.signpost.http.HttpParameters: java.util.SortedSet remove(java.lang.Object)>("oauth_token");

        virtualinvoke $r16.<com.parse.signpost.http.HttpParameters: java.util.SortedSet remove(java.lang.Object)>("oauth_token_secret");

        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void setResponseParameters(com.parse.signpost.http.HttpParameters)>($r16);

     label46:
        if $r2 == null goto label47;

        if $r6 != null goto label52;

     label47:
        $r26 = new com.parse.signpost.exception.OAuthExpectationFailedException;

     label48:
        $r7 = $r26;

     label49:
        specialinvoke $r26.<com.parse.signpost.exception.OAuthExpectationFailedException: void <init>(java.lang.String)>("Request token or token secret not set in server reply. The service provider you use is probably buggy.");

     label50:
        throw $r7;

     label51:
        $r13 := @caughtexception;

        $r4 = $r8;

        goto label14;

     label52:
        interfaceinvoke $r1.<com.parse.signpost.OAuthConsumer: void setTokenWithSecret(java.lang.String,java.lang.String)>($r2, $r6);

     label53:
        virtualinvoke r0.<com.parse.signpost.AbstractOAuthProvider: void closeConnection(com.parse.signpost.http.HttpRequest,com.parse.signpost.http.HttpResponse)>($r8, $r18);

     label54:
        return;

     label55:
        $r22 := @caughtexception;

        $r28 = new com.parse.signpost.exception.OAuthCommunicationException;

        specialinvoke $r28.<com.parse.signpost.exception.OAuthCommunicationException: void <init>(java.lang.Exception)>($r22);

        throw $r28;

     label56:
        $r23 := @caughtexception;

        $r9 = null;

     label57:
        throw $r23;

     label58:
        $r15 := @caughtexception;

        goto label16;

     label59:
        $r24 := @caughtexception;

        $r9 = null;

     label60:
        $r28 = new com.parse.signpost.exception.OAuthCommunicationException;

     label61:
        $r20 = $r28;

     label62:
        specialinvoke $r28.<com.parse.signpost.exception.OAuthCommunicationException: void <init>(java.lang.Exception)>($r24);

        throw $r20;

     label63:
        $r25 := @caughtexception;

        $r28 = new com.parse.signpost.exception.OAuthCommunicationException;

        specialinvoke $r28.<com.parse.signpost.exception.OAuthCommunicationException: void <init>(java.lang.Exception)>($r25);

        throw $r28;

     label64:
        $r15 := @caughtexception;

        $r9 = null;

        goto label16;

     label65:
        $r15 := @caughtexception;

        $r4 = $r18;

        goto label16;

     label66:
        $r24 := @caughtexception;

        goto label60;

     label67:
        $r24 := @caughtexception;

        $r4 = $r18;

        goto label60;

     label68:
        $r23 := @caughtexception;

        goto label57;

     label69:
        $r23 := @caughtexception;

        $r4 = $r18;

        goto label57;

     label70:
        $r13 := @caughtexception;

        $r14 = null;

        goto label14;

        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label02 to label03 with label70;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label02 to label03 with label56;
        catch java.lang.Exception from label02 to label03 with label59;
        catch java.lang.Throwable from label02 to label03 with label64;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label04 to label06 with label13;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label07 to label08 with label13;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label09 to label10 with label13;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label11 to label12 with label13;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label04 to label06 with label68;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label07 to label08 with label68;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label09 to label10 with label68;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label11 to label12 with label68;
        catch java.lang.Exception from label04 to label06 with label66;
        catch java.lang.Exception from label07 to label12 with label66;
        catch java.lang.Throwable from label04 to label06 with label58;
        catch java.lang.Throwable from label07 to label12 with label58;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Exception from label16 to label17 with label63;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label21 to label22 with label13;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label25 to label27 with label13;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label30 to label32 with label13;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label21 to label22 with label68;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label25 to label27 with label68;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label30 to label32 with label68;
        catch java.lang.Exception from label21 to label23 with label66;
        catch java.lang.Exception from label24 to label28 with label66;
        catch java.lang.Exception from label29 to label32 with label66;
        catch java.lang.Throwable from label19 to label20 with label58;
        catch java.lang.Throwable from label21 to label23 with label58;
        catch java.lang.Throwable from label24 to label28 with label58;
        catch java.lang.Throwable from label29 to label32 with label58;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label33 to label34 with label51;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label38 to label39 with label51;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label33 to label34 with label69;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label38 to label39 with label69;
        catch java.lang.Exception from label33 to label34 with label67;
        catch java.lang.Exception from label35 to label36 with label67;
        catch java.lang.Exception from label37 to label39 with label67;
        catch java.lang.Throwable from label33 to label34 with label65;
        catch java.lang.Throwable from label35 to label36 with label65;
        catch java.lang.Throwable from label37 to label39 with label65;
        catch java.lang.Exception from label40 to label41 with label42;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label44 to label46 with label51;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label49 to label50 with label51;
        catch com.parse.signpost.exception.OAuthNotAuthorizedException from label52 to label53 with label51;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label44 to label46 with label69;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label49 to label51 with label69;
        catch com.parse.signpost.exception.OAuthExpectationFailedException from label52 to label53 with label69;
        catch java.lang.Exception from label44 to label46 with label67;
        catch java.lang.Exception from label49 to label51 with label67;
        catch java.lang.Exception from label52 to label53 with label67;
        catch java.lang.Throwable from label44 to label46 with label65;
        catch java.lang.Throwable from label47 to label48 with label65;
        catch java.lang.Throwable from label49 to label51 with label65;
        catch java.lang.Throwable from label52 to label53 with label65;
        catch java.lang.Exception from label53 to label54 with label55;
        catch java.lang.Throwable from label57 to label58 with label58;
        catch java.lang.Throwable from label60 to label61 with label58;
        catch java.lang.Throwable from label62 to label63 with label58;
    }

    protected abstract com.parse.signpost.http.HttpResponse sendRequest(com.parse.signpost.http.HttpRequest);

    public void setListener(com.parse.signpost.OAuthProviderListener)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        com.parse.signpost.OAuthProviderListener $r1;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.OAuthProviderListener;

        r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.OAuthProviderListener listener> = $r1;

        return;
    }

    public void setOAuth10a(boolean)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        boolean $z0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $z0 := @parameter0: boolean;

        r0.<com.parse.signpost.AbstractOAuthProvider: boolean isOAuth10a> = $z0;

        return;
    }

    public void setRequestHeader(java.lang.String, java.lang.String)
    {
        com.parse.signpost.AbstractOAuthProvider r0;
        java.util.Map $r3;
        java.lang.String $r1, $r2;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.parse.signpost.AbstractOAuthProvider: java.util.Map defaultHeaders>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void setResponseParameters(com.parse.signpost.http.HttpParameters)
    {
        com.parse.signpost.http.HttpParameters $r1;
        com.parse.signpost.AbstractOAuthProvider r0;

        r0 := @this: com.parse.signpost.AbstractOAuthProvider;

        $r1 := @parameter0: com.parse.signpost.http.HttpParameters;

        r0.<com.parse.signpost.AbstractOAuthProvider: com.parse.signpost.http.HttpParameters responseParameters> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <com.parse.signpost.AbstractOAuthProvider: long serialVersionUID> = 1L;

        return;
    }
}
