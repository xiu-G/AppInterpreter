public class twitter4j.Twitter extends twitter4j.TwitterOAuthSupportBase implements java.io.Serializable, twitter4j.api.SearchMethods, twitter4j.api.TimelineMethods, twitter4j.api.StatusMethods, twitter4j.api.UserMethods, twitter4j.api.ListMethods, twitter4j.api.ListMembersMethods, twitter4j.api.ListSubscribersMethods, twitter4j.api.DirectMessageMethods, twitter4j.api.FriendshipMethods, twitter4j.api.SocialGraphMethods, twitter4j.api.AccountMethods, twitter4j.api.FavoriteMethods, twitter4j.api.NotificationMethods, twitter4j.api.BlockMethods, twitter4j.api.SpamReportingMethods, twitter4j.api.SavedSearchesMethods, twitter4j.api.LocalTrendsMethods, twitter4j.api.HelpMethods
{
    private static final long serialVersionUID;
    protected java.lang.String screenName;

    public void <init>()
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void <init>(twitter4j.conf.Configuration)>($r1);

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        twitter4j.conf.Configuration $r3;
        java.lang.String $r1, $r2;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <twitter4j.conf.ConfigurationContext: twitter4j.conf.Configuration getInstance()>();

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

        return;
    }

    void <init>(twitter4j.conf.Configuration)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void <init>(twitter4j.conf.Configuration)>($r1);

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

        return;
    }

    void <init>(twitter4j.conf.Configuration, java.lang.String, java.lang.String)
    {
        twitter4j.conf.Configuration $r1;
        java.lang.String $r2, $r3;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

        return;
    }

    void <init>(twitter4j.conf.Configuration, twitter4j.http.Authorization)
    {
        twitter4j.conf.Configuration $r1;
        twitter4j.http.Authorization $r2;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.conf.Configuration;

        $r2 := @parameter1: twitter4j.http.Authorization;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void <init>(twitter4j.conf.Configuration,twitter4j.http.Authorization)>($r1, $r2);

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

        return;
    }

    private void addParameterToList(java.util.List, java.lang.String, java.lang.String)
    {
        java.util.List r1;
        java.lang.String $r2, $r3;
        twitter4j.http.HttpParameter $r4;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label1;

        $r4 = new twitter4j.http.HttpParameter;

        specialinvoke $r4.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

    private void checkFileValidity(java.io.File) throws twitter4j.TwitterException
    {
        java.io.IOException $r6;
        twitter4j.Twitter r0;
        java.io.File $r1;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuffer $r4;
        twitter4j.TwitterException $r2;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r2 = new twitter4j.TwitterException;

        $r3 = new java.io.FileNotFoundException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not found.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r5);

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r3);

        throw $r2;

     label1:
        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label2;

        $r2 = new twitter4j.TwitterException;

        $r6 = new java.io.IOException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a file.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r5);

        specialinvoke $r2.<twitter4j.TwitterException: void <init>(java.lang.Exception)>($r6);

        throw $r2;

     label2:
        return;
    }

    private twitter4j.http.OAuthSupport getOAuth()
    {
        twitter4j.http.Authorization $r1;
        java.lang.IllegalStateException $r2;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r3;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.OAuthSupport;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("OAuth consumer key/secret combination not supplied");

        throw $r2;

     label1:
        $r1 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r3 = (twitter4j.http.OAuthSupport) $r1;

        return $r3;
    }

    private twitter4j.http.HttpParameter[] mergeParameters(twitter4j.http.HttpParameter[], twitter4j.http.HttpParameter[])
    {
        twitter4j.http.HttpParameter[] $r1, $r2, r3;
        int $i0, $i1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.http.HttpParameter[];

        $r2 := @parameter1: twitter4j.http.HttpParameter[];

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        r3 = newarray (twitter4j.http.HttpParameter)[$i0];

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r3, 0, $i0);

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r3, $i0, $i1);

        return r3;

     label1:
        if $r1 != null goto label2;

        if $r2 != null goto label2;

        $r1 = newarray (twitter4j.http.HttpParameter)[0];

        return $r1;

     label2:
        if $r1 == null goto label3;

        return $r1;

     label3:
        return $r2;
    }

    private java.lang.String toDateStr(java.util.Date)
    {
        java.util.Date r3;
        java.text.SimpleDateFormat r1;
        java.lang.String $r2;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        r3 := @parameter0: java.util.Date;

        if r3 != null goto label1;

        r3 = new java.util.Date;

        specialinvoke r3.<java.util.Date: void <init>()>();

     label1:
        r1 = new java.text.SimpleDateFormat;

        specialinvoke r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        return $r2;
    }

    public twitter4j.UserList addUserListMember(int, int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0, $i1;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserListJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke r0.<twitter4j.Twitter: java.lang.String getScreenName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/members.json?id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User checkUserListMembership(java.lang.String, int, int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        int $i0, $i1;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/members/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.User checkUserListSubscription(java.lang.String, int, int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        int $i0, $i1;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/subscribers/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.User createBlock(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/create.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User createBlock(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/create.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.Status createFavorite(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.StatusJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites/create/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User createFriendship(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/create.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User createFriendship(int, boolean) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/create.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&follow=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User createFriendship(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/create.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.User createFriendship(java.lang.String, boolean) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/create.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&follow=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.SavedSearch createSavedSearch(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r3;
        twitter4j.Twitter r0;
        twitter4j.SavedSearchJSONImpl $r2;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r1, $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.SavedSearchJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("saved_searches/create.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("query", $r1);

        $r8[0] = $r3;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r9);

        specialinvoke $r2.<twitter4j.SavedSearchJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.UserList createUserList(java.lang.String, boolean, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r11;
        twitter4j.UserListJSONImpl $r6;
        twitter4j.http.HttpParameter $r5;
        twitter4j.Twitter r0;
        java.util.ArrayList r3;
        twitter4j.http.Authorization $r4;
        java.lang.StringBuffer $r8;
        twitter4j.http.HttpResponse $r12;
        twitter4j.conf.Configuration $r9;
        int $i0;
        twitter4j.http.HttpParameter[] $r10;
        java.lang.String $r1, $r2;
        twitter4j.http.HttpClientWrapper $r7;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        $r5 = new twitter4j.http.HttpParameter;

        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r5 = new twitter4j.http.HttpParameter;

        if $z0 == 0 goto label3;

        $r1 = "public";

     label1:
        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("mode", $r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        if $r2 == null goto label2;

        $r5 = new twitter4j.http.HttpParameter;

        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("description", $r2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $r6 = new twitter4j.UserListJSONImpl;

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.Twitter: java.lang.String getScreenName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists.json");

        $r1 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r10 = newarray (twitter4j.http.HttpParameter)[$i0];

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r10 = (twitter4j.http.HttpParameter[]) $r11;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r12 = virtualinvoke $r7.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r10, $r4);

        specialinvoke $r6.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r12);

        return $r6;

     label3:
        $r1 = "private";

        goto label1;
    }

    public twitter4j.UserList deleteUserListMember(int, int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0, $i1;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserListJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke r0.<twitter4j.Twitter: java.lang.String getScreenName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/members.json?id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse delete(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User destroyBlock(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/destroy.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User destroyBlock(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/destroy.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.DirectMessage destroyDirectMessage(int) throws twitter4j.TwitterException
    {
        twitter4j.DirectMessageJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.DirectMessageJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages/destroy/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.Status destroyFavorite(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.StatusJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites/destroy/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User destroyFriendship(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/destroy.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User destroyFriendship(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/destroy.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.SavedSearch destroySavedSearch(int) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.SavedSearchJSONImpl $r1;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.SavedSearchJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("saved_searches/destroy/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.SavedSearchJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.Status destroyStatus(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.StatusJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/destroy/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.UserList destroyUserList(int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserListJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke r0.<twitter4j.Twitter: java.lang.String getScreenName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse delete(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User disableNotification(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("notifications/leave.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User disableNotification(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("notifications/leave.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.User enableNotification(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("notifications/follow.json?userId=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User enableNotification(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("notifications/follow.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object $r1;
        twitter4j.Twitter r0;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean existsBlock(int) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3, $r8;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.TwitterException r1;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r8 = new java.lang.StringBuffer;

        $r3 = $r8;

     label1:
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

     label3:
        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/exists.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

     label5:
        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        $r5 = virtualinvoke $r7.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>("<error>You are not blocking this user.</error>");

     label6:
        if -1 != $i0 goto label8;

        return 1;

     label7:
        r1 := @caughtexception;

        $i0 = virtualinvoke r1.<twitter4j.TwitterException: int getStatusCode()>();

        if $i0 == 404 goto label8;

        throw r1;

     label8:
        return 0;

        catch twitter4j.TwitterException from label1 to label2 with label7;
        catch twitter4j.TwitterException from label3 to label4 with label7;
        catch twitter4j.TwitterException from label5 to label6 with label7;
    }

    public boolean existsBlock(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4, $r9;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        int $i0;
        twitter4j.TwitterException r2;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r9 = new java.lang.StringBuffer;

        $r4 = $r9;

     label1:
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

     label3:
        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/exists.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

     label5:
        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        $r1 = virtualinvoke $r8.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("<error>You are not blocking this user.</error>");

     label6:
        if -1 != $i0 goto label8;

        return 1;

     label7:
        r2 := @caughtexception;

        $i0 = virtualinvoke r2.<twitter4j.TwitterException: int getStatusCode()>();

        if $i0 == 404 goto label8;

        throw r2;

     label8:
        return 0;

        catch twitter4j.TwitterException from label1 to label2 with label7;
        catch twitter4j.TwitterException from label3 to label4 with label7;
        catch twitter4j.TwitterException from label5 to label6 with label7;
    }

    public boolean existsFriendship(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r8;
        java.lang.StringBuffer $r4, $r10;
        twitter4j.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        int $i0;
        java.lang.String $r1, $r2, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/exists.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <twitter4j.http.HttpParameter: twitter4j.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("user_a", $r1, "user_b", $r2);

        $r8 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r9 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r8);

        $r1 = virtualinvoke $r9.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("true");

        if -1 == $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public twitter4j.http.Authorization getAuthorization()
    {
        twitter4j.http.Authorization $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 = specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: twitter4j.http.Authorization getAuthorization()>();

        return $r1;
    }

    public twitter4j.ResponseList getBlockingUsers() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/blocking.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.ResponseList createUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getBlockingUsers(int) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        int $i0;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/blocking.json?page=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.ResponseList createUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getBlockingUsersIDs() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("blocks/blocking/ids.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getBlockIDs(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.Trends getCurrentTrends() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.Trends $r8;
        java.util.List $r6;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        java.lang.Object $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/current.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (twitter4j.Trends) $r7;

        return $r8;
    }

    public twitter4j.Trends getCurrentTrends(boolean) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.Trends $r8;
        java.util.List $r6;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        java.lang.Object $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $z0 := @parameter0: boolean;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/current.json");

        if $z0 == 0 goto label2;

        $r4 = "?exclude=hashtags";

     label1:
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (twitter4j.Trends) $r7;

        return $r8;

     label2:
        $r4 = "";

        goto label1;
    }

    public java.util.List getDailyTrends() throws twitter4j.TwitterException
    {
        java.util.List $r6;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.Twitter r0;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/daily.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r5);

        return $r6;
    }

    public java.util.List getDailyTrends(java.util.Date, boolean) throws twitter4j.TwitterException
    {
        java.util.Date $r1;
        twitter4j.Twitter r0;
        java.util.List $r7;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.util.Date;

        $z0 := @parameter1: boolean;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/daily.json?date=");

        $r5 = specialinvoke r0.<twitter4j.Twitter: java.lang.String toDateStr(java.util.Date)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r5 = "&exclude=hashtags";

     label1:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r5);

        $r7 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r6);

        return $r7;

     label2:
        $r5 = "";

        goto label1;
    }

    public twitter4j.ResponseList getDirectMessages() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.DirectMessageJSONImpl: twitter4j.ResponseList createDirectMessageList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getDirectMessages(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.DirectMessageJSONImpl: twitter4j.ResponseList createDirectMessageList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getFavorites() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getFavorites(int) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r8;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.http.HttpParameter[] $r6;
        twitter4j.ResponseList $r9;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = newarray (twitter4j.http.HttpParameter)[1];

        $r1 = new twitter4j.http.HttpParameter;

        specialinvoke $r1.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("page", $i0);

        $r6[0] = $r1;

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r5, $r6, $r7);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getFavorites(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        twitter4j.ResponseList $r8;
        java.lang.String $r1, $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getFavorites(java.lang.String, int) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        int $i0;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.ResponseList $r9;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("favorites/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <twitter4j.http.HttpParameter: twitter4j.http.HttpParameter[] getParameterArray(java.lang.String,int)>("page", $i0);

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.IDs getFollowersIDs() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.IDs $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFollowersIDs(long)>(-1L);

        return $r1;
    }

    public twitter4j.IDs getFollowersIDs(int) throws twitter4j.TwitterException
    {
        int $i0;
        twitter4j.Twitter r0;
        twitter4j.IDs $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFollowersIDs(int,long)>($i0, -1L);

        return $r1;
    }

    public twitter4j.IDs getFollowersIDs(int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        int $i0;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("followers/ids.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getFollowersIDs(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("followers/ids.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getFollowersIDs(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.IDs $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFollowersIDs(java.lang.String,long)>($r1, -1L);

        return $r2;
    }

    public twitter4j.IDs getFollowersIDs(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.http.HttpClientWrapper $r2;
        twitter4j.IDs $r8;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("followers/ids.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getFollowersStatuses() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFollowersStatuses(long)>(-1L);

        return $r1;
    }

    public twitter4j.PagableResponseList getFollowersStatuses(int) throws twitter4j.TwitterException
    {
        int $i0;
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFollowersStatuses(int,long)>($i0, -1L);

        return $r1;
    }

    public twitter4j.PagableResponseList getFollowersStatuses(int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        int $i0;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r7;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/followers.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFollowersStatuses(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r7;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/followers.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFollowersStatuses(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFollowersStatuses(java.lang.String,long)>($r1, -1L);

        return $r2;
    }

    public twitter4j.PagableResponseList getFollowersStatuses(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/followers.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.IDs getFriendsIDs() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.IDs $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFriendsIDs(long)>(-1L);

        return $r1;
    }

    public twitter4j.IDs getFriendsIDs(int) throws twitter4j.TwitterException
    {
        int $i0;
        twitter4j.Twitter r0;
        twitter4j.IDs $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFriendsIDs(int,long)>($i0, -1L);

        return $r1;
    }

    public twitter4j.IDs getFriendsIDs(int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        int $i0;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friends/ids.json?user_id=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getFriendsIDs(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;
        twitter4j.IDs $r7;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friends/ids.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.IDs getFriendsIDs(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.IDs $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.IDs getFriendsIDs(java.lang.String,long)>($r1, -1L);

        return $r2;
    }

    public twitter4j.IDs getFriendsIDs(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.http.HttpClientWrapper $r2;
        twitter4j.IDs $r8;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friends/ids.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.IDsJSONImpl: twitter4j.IDs getFriendsIDs(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getFriendsStatuses() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFriendsStatuses(long)>(-1L);

        return $r1;
    }

    public twitter4j.PagableResponseList getFriendsStatuses(int) throws twitter4j.TwitterException
    {
        int $i0;
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r1;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFriendsStatuses(int,long)>($i0, -1L);

        return $r1;
    }

    public twitter4j.PagableResponseList getFriendsStatuses(int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r1;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r6;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.PagableResponseList $r7;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/friends.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r5, null, $r1);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFriendsStatuses(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.PagableResponseList $r7;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/friends.json?cursor=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.PagableResponseList getFriendsStatuses(java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.PagableResponseList $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.PagableResponseList getFriendsStatuses(java.lang.String,long)>($r1, -1L);

        return $r2;
    }

    public twitter4j.PagableResponseList getFriendsStatuses(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/friends.json?screen_name=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getFriendsTimeline() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/friends_timeline.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getFriendsTimeline(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/friends_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getHomeTimeline() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/home_timeline.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getHomeTimeline(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/home_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getMentions() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/mentions.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getMentions(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/mentions.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken() throws twitter4j.TwitterException
    {
        twitter4j.http.AccessToken $r2;
        java.lang.String $r3;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r2 = interfaceinvoke $r1.<twitter4j.http.OAuthSupport: twitter4j.http.AccessToken getOAuthAccessToken()>();

        $r3 = virtualinvoke $r2.<twitter4j.http.AccessToken: java.lang.String getScreenName()>();

        r0.<twitter4j.Twitter: java.lang.String screenName> = $r3;

        return $r2;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.AccessToken $r3;
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r3 = interfaceinvoke $r2.<twitter4j.http.OAuthSupport: twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<twitter4j.http.AccessToken: java.lang.String getScreenName()>();

        r0.<twitter4j.Twitter: java.lang.String screenName> = $r1;

        return $r3;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Throwable $r6;
        twitter4j.http.AccessToken $r5;
        twitter4j.http.RequestToken $r3;
        java.lang.String $r1, $r2;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r3 = new twitter4j.http.RequestToken;

        specialinvoke $r3.<twitter4j.http.RequestToken: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r5 = interfaceinvoke $r4.<twitter4j.http.OAuthSupport: twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken)>($r3);

     label2:
        exitmonitor r0;

        return $r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(java.lang.String, java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Throwable $r6;
        twitter4j.http.AccessToken $r4;
        twitter4j.http.RequestToken $r5;
        java.lang.String $r1, $r2, $r3;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        entermonitor r0;

     label1:
        $r5 = new twitter4j.http.RequestToken;

        specialinvoke $r5.<twitter4j.http.RequestToken: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken,java.lang.String)>($r5, $r3);

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r6 := @caughtexception;

        exitmonitor r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken) throws twitter4j.TwitterException
    {
        java.lang.Throwable $r5;
        twitter4j.http.AccessToken $r3;
        twitter4j.http.RequestToken $r1;
        java.lang.String $r4;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.http.RequestToken;

        entermonitor r0;

     label1:
        $r2 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r3 = interfaceinvoke $r2.<twitter4j.http.OAuthSupport: twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken)>($r1);

        $r4 = virtualinvoke $r3.<twitter4j.http.AccessToken: java.lang.String getScreenName()>();

        r0.<twitter4j.Twitter: java.lang.String screenName> = $r4;

     label2:
        exitmonitor r0;

        return $r3;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Throwable $r5;
        twitter4j.http.AccessToken $r4;
        twitter4j.http.RequestToken $r1;
        java.lang.String $r2;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.http.RequestToken;

        $r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r4 = interfaceinvoke $r3.<twitter4j.http.OAuthSupport: twitter4j.http.AccessToken getOAuthAccessToken(twitter4j.http.RequestToken,java.lang.String)>($r1, $r2);

     label2:
        exitmonitor r0;

        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public twitter4j.http.RequestToken getOAuthRequestToken() throws twitter4j.TwitterException
    {
        twitter4j.http.RequestToken $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String)>(null);

        return $r1;
    }

    public twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.RequestToken $r3;
        java.lang.String $r1;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r3 = interfaceinvoke $r2.<twitter4j.http.OAuthSupport: twitter4j.http.RequestToken getOAuthRequestToken(java.lang.String)>($r1);

        return $r3;
    }

    public twitter4j.ResponseList getPublicTimeline() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/public_timeline.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.RateLimitStatus getRateLimitStatus() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.RateLimitStatus $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/rate_limit_status.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.RateLimitStatusJSONImpl: twitter4j.RateLimitStatus createFromJSONResponse(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getRetweetedByMe() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweeted_by_me.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getRetweetedByMe(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweeted_by_me.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getRetweetedToMe() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweeted_to_me.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getRetweetedToMe(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweeted_to_me.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.ResponseList getRetweets(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweets/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getRetweetsOfMe() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweets_of_me.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getRetweetsOfMe(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweets_of_me.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public java.util.List getSavedSearches() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("saved_searches.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.SavedSearchJSONImpl: twitter4j.ResponseList createSavedSearchList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    protected java.lang.String getScreenName() throws twitter4j.TwitterException, java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r5;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        twitter4j.http.BasicAuthorization $r3;
        int $i0, $i1;
        twitter4j.User $r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: java.lang.String screenName>;

        if $r1 == null goto label1;

        $r1 = r0.<twitter4j.Twitter: java.lang.String screenName>;

        return $r1;

     label1:
        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = interfaceinvoke $r2.<twitter4j.http.Authorization: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Neither user ID/password combination nor OAuth consumer key/secret combination supplied");

        throw $r5;

     label2:
        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r2 instanceof twitter4j.http.BasicAuthorization;

        if $z0 == 0 goto label3;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r3 = (twitter4j.http.BasicAuthorization) $r2;

        $r1 = virtualinvoke $r3.<twitter4j.http.BasicAuthorization: java.lang.String getUserId()>();

        r0.<twitter4j.Twitter: java.lang.String screenName> = $r1;

        $r1 = r0.<twitter4j.Twitter: java.lang.String screenName>;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("@");

        $i1 = -1;

        if $i1 == $i0 goto label3;

        r0.<twitter4j.Twitter: java.lang.String screenName> = null;

     label3:
        $r4 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.User verifyCredentials()>();

        $r1 = interfaceinvoke $r4.<twitter4j.User: java.lang.String getScreenName()>();

        r0.<twitter4j.Twitter: java.lang.String screenName> = $r1;

        return $r1;
    }

    public twitter4j.ResponseList getSentDirectMessages() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r5;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r3;
        twitter4j.ResponseList $r7;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages/sent.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r6 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r4, $r5);

        $r7 = staticinvoke <twitter4j.DirectMessageJSONImpl: twitter4j.ResponseList createDirectMessageList(twitter4j.http.HttpResponse)>($r6);

        return $r7;
    }

    public twitter4j.ResponseList getSentDirectMessages(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages/sent.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.DirectMessageJSONImpl: twitter4j.ResponseList createDirectMessageList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public twitter4j.Trends getTrends() throws twitter4j.TwitterException
    {
        twitter4j.Trends $r6;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.Twitter r0;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = staticinvoke <twitter4j.TrendsJSONImpl: twitter4j.Trends createTrends(twitter4j.http.HttpResponse)>($r5);

        return $r6;
    }

    public twitter4j.PagableResponseList getUserListMembers(java.lang.String, int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/members.json?cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getUserListMemberships(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/memberships.json?cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserListJSONImpl: twitter4j.PagableResponseList createUserListList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getUserListStatuses(java.lang.String, int, twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        int $i0;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r8;
        twitter4j.Paging $r2;
        char[] $r7;
        twitter4j.ResponseList $r11;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: twitter4j.Paging;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/statuses.json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = <twitter4j.Paging: char[] SMCP>;

        $r8 = virtualinvoke $r2.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray(char[],java.lang.String)>($r7, "per_page");

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r8, $r9);

        $r11 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.PagableResponseList getUserListSubscribers(java.lang.String, int, long) throws twitter4j.TwitterException
    {
        long $l1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/subscribers.json?cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.PagableResponseList createPagableUserList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getUserListSubscriptions(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/subscriptions.json?cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserListJSONImpl: twitter4j.PagableResponseList createUserListList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.PagableResponseList getUserLists(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r1, $r5;
        twitter4j.PagableResponseList $r8;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists.json?cursor=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r6);

        $r8 = staticinvoke <twitter4j.UserListJSONImpl: twitter4j.PagableResponseList createUserListList(twitter4j.http.HttpResponse)>($r7);

        return $r8;
    }

    public twitter4j.ResponseList getUserTimeline() throws twitter4j.TwitterException
    {
        twitter4j.Paging $r2;
        twitter4j.ResponseList $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r2 = new twitter4j.Paging;

        specialinvoke $r2.<twitter4j.Paging: void <init>()>();

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.ResponseList getUserTimeline(twitter4j.Paging)>($r2);

        return $r1;
    }

    public twitter4j.ResponseList getUserTimeline(int) throws twitter4j.TwitterException
    {
        int $i0;
        twitter4j.Paging $r2;
        twitter4j.ResponseList $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r2 = new twitter4j.Paging;

        specialinvoke $r2.<twitter4j.Paging: void <init>()>();

        $r1 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.ResponseList getUserTimeline(int,twitter4j.Paging)>($i0, $r2);

        return $r1;
    }

    public twitter4j.ResponseList getUserTimeline(int, twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        int $i0;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7, $r8;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r11;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: twitter4j.Paging;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/user_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[1];

        $r2 = new twitter4j.http.HttpParameter;

        specialinvoke $r2.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("user_id", $i0);

        $r7[0] = $r2;

        $r8 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r7 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.HttpParameter[] mergeParameters(twitter4j.http.HttpParameter[],twitter4j.http.HttpParameter[])>($r7, $r8);

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        $r11 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r10);

        return $r11;
    }

    public twitter4j.ResponseList getUserTimeline(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.Paging $r3;
        twitter4j.ResponseList $r2;
        java.lang.String $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r3 = new twitter4j.Paging;

        specialinvoke $r3.<twitter4j.Paging: void <init>()>();

        $r2 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.ResponseList getUserTimeline(java.lang.String,twitter4j.Paging)>($r1, $r3);

        return $r2;
    }

    public twitter4j.ResponseList getUserTimeline(java.lang.String, twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r3;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r10;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8, $r9;
        twitter4j.Paging $r2;
        twitter4j.ResponseList $r12;
        java.lang.String $r1, $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.Paging;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/user_timeline.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r8[0] = $r3;

        $r9 = virtualinvoke $r2.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r8 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.HttpParameter[] mergeParameters(twitter4j.http.HttpParameter[],twitter4j.http.HttpParameter[])>($r8, $r9);

        $r10 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r11 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r10);

        $r12 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r11);

        return $r12;
    }

    public twitter4j.ResponseList getUserTimeline(twitter4j.Paging) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        twitter4j.Paging $r1;
        twitter4j.ResponseList $r9;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Paging;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/user_timeline.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<twitter4j.Paging: twitter4j.http.HttpParameter[] asPostParameterArray()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r2);

        $r9 = staticinvoke <twitter4j.StatusJSONImpl: twitter4j.ResponseList createStatusList(twitter4j.http.HttpResponse)>($r8);

        return $r9;
    }

    public java.util.List getWeeklyTrends() throws twitter4j.TwitterException
    {
        java.util.List $r6;
        java.lang.StringBuffer $r2;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        java.lang.String $r4;
        twitter4j.Twitter r0;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/weekly.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r6 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r5);

        return $r6;
    }

    public java.util.List getWeeklyTrends(java.util.Date, boolean) throws twitter4j.TwitterException
    {
        java.util.Date $r1;
        twitter4j.Twitter r0;
        java.util.List $r7;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r6;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.util.Date;

        $z0 := @parameter1: boolean;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trends/weekly.json?date=");

        $r5 = specialinvoke r0.<twitter4j.Twitter: java.lang.String toDateStr(java.util.Date)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r5 = "&exclude=hashtags";

     label1:
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r5);

        $r7 = staticinvoke <twitter4j.TrendsJSONImpl: java.util.List createTrendsList(twitter4j.http.HttpResponse)>($r6);

        return $r7;

     label2:
        $r5 = "";

        goto label1;
    }

    public int hashCode()
    {
        int $i0;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $i0 = specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: int hashCode()>();

        return $i0;
    }

    public void httpResponseReceived(twitter4j.http.HttpResponseEvent)
    {
        twitter4j.http.HttpResponseEvent $r1;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.http.HttpResponseEvent;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void httpResponseReceived(twitter4j.http.HttpResponseEvent)>($r1);

        return;
    }

    public boolean isBasicAuthEnabled()
    {
        twitter4j.Twitter r0;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $z0 = specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: boolean isBasicAuthEnabled()>();

        return $z0;
    }

    public boolean isOAuthEnabled()
    {
        twitter4j.http.Authorization $r1;
        twitter4j.Twitter r0;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r1 instanceof twitter4j.http.OAuthAuthorization;

        if $z0 == 0 goto label1;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = interfaceinvoke $r1.<twitter4j.http.Authorization: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public twitter4j.User reportSpam(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("report_spam.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User reportSpam(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("report_spam.json?screenName=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.Status retweetStatus(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.http.HttpParameter $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        java.lang.String $r6, $r8;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.StatusJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/retweet/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[1];

        $r2 = new twitter4j.http.HttpParameter;

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r8 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getSource()>();

        specialinvoke $r2.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("source", $r8);

        $r7[0] = $r2;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r1;
    }

    public twitter4j.QueryResult search(twitter4j.Query) throws twitter4j.TwitterException
    {
        twitter4j.QueryResultJSONImpl $r3;
        twitter4j.Twitter r0;
        twitter4j.Query $r1;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r9;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        int $i0;
        twitter4j.TwitterException r2;
        java.lang.String $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Query;

        $r3 = new twitter4j.QueryResultJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

     label1:
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

     label2:
        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

     label3:
        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getSearchBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("search.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<twitter4j.Query: twitter4j.http.HttpParameter[] asPostParameters()>();

        $r9 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, null);

        specialinvoke $r3.<twitter4j.QueryResultJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r9);

     label4:
        return $r3;

     label5:
        r2 := @caughtexception;

        $i0 = virtualinvoke r2.<twitter4j.TwitterException: int getStatusCode()>();

        if 404 != $i0 goto label6;

        $r3 = new twitter4j.QueryResultJSONImpl;

        specialinvoke $r3.<twitter4j.QueryResultJSONImpl: void <init>(twitter4j.Query)>($r1);

        return $r3;

     label6:
        throw r2;

        catch twitter4j.TwitterException from label1 to label2 with label5;
        catch twitter4j.TwitterException from label3 to label4 with label5;
    }

    public twitter4j.ResponseList searchUsers(java.lang.String, int) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r7;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r8;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r9;
        int $i0;
        twitter4j.conf.Configuration $r4;
        twitter4j.http.HttpParameter[] $r6;
        twitter4j.ResponseList $r10;
        java.lang.String $r1, $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("users/search.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = newarray (twitter4j.http.HttpParameter)[3];

        $r7 = new twitter4j.http.HttpParameter;

        specialinvoke $r7.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("q", $r1);

        $r6[0] = $r7;

        $r7 = new twitter4j.http.HttpParameter;

        specialinvoke $r7.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("per_page", 20);

        $r6[1] = $r7;

        $r7 = new twitter4j.http.HttpParameter;

        specialinvoke $r7.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("page", $i0);

        $r6[2] = $r7;

        $r8 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r9 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r5, $r6, $r8);

        $r10 = staticinvoke <twitter4j.UserJSONImpl: twitter4j.ResponseList createUserList(twitter4j.http.HttpResponse)>($r9);

        return $r10;
    }

    public twitter4j.DirectMessage sendDirectMessage(int, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.DirectMessageJSONImpl $r2;
        twitter4j.http.HttpParameter $r8;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        int $i0;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.DirectMessageJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages/new.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[2];

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,int)>("user_id", $i0);

        $r7[0] = $r8;

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("text", $r1);

        $r7[1] = $r8;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        specialinvoke $r2.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.DirectMessage sendDirectMessage(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.DirectMessageJSONImpl $r3;
        twitter4j.http.HttpParameter $r9;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r10;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r1, $r2, $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = new twitter4j.DirectMessageJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("direct_messages/new.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[2];

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("screen_name", $r1);

        $r8[0] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("text", $r2);

        $r8[1] = $r9;

        $r10 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r11 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r10);

        specialinvoke $r3.<twitter4j.DirectMessageJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r11);

        return $r3;
    }

    public void setOAuthAccessToken(java.lang.String, java.lang.String)
    {
        twitter4j.http.AccessToken $r3;
        java.lang.String $r1, $r2;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        $r3 = new twitter4j.http.AccessToken;

        specialinvoke $r3.<twitter4j.http.AccessToken: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        interfaceinvoke $r4.<twitter4j.http.OAuthSupport: void setOAuthAccessToken(twitter4j.http.AccessToken)>($r3);

        return;
    }

    public void setOAuthAccessToken(twitter4j.http.AccessToken)
    {
        twitter4j.http.AccessToken $r1;
        twitter4j.Twitter r0;
        twitter4j.http.OAuthSupport $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.http.AccessToken;

        $r2 = specialinvoke r0.<twitter4j.Twitter: twitter4j.http.OAuthSupport getOAuth()>();

        interfaceinvoke $r2.<twitter4j.http.OAuthSupport: void setOAuthAccessToken(twitter4j.http.AccessToken)>($r1);

        return;
    }

    public void setOAuthConsumer(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r6;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r3;
        twitter4j.http.OAuthAuthorization $r4;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r3 instanceof twitter4j.http.NullAuthorization;

        if $z0 == 0 goto label3;

        $r4 = new twitter4j.http.OAuthAuthorization;

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        specialinvoke $r4.<twitter4j.http.OAuthAuthorization: void <init>(twitter4j.conf.Configuration,java.lang.String,java.lang.String)>($r5, $r1, $r2);

        r0.<twitter4j.Twitter: twitter4j.http.Authorization auth> = $r4;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r3 instanceof twitter4j.http.BasicAuthorization;

        if $z0 == 0 goto label5;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Basic authenticated instance.");

        throw $r6;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

     label5:
        $r3 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $z0 = $r3 instanceof twitter4j.http.OAuthAuthorization;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("consumer key/secret pair already set.");

        throw $r6;

     label6:
        nop;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setRateLimitStatusListener(twitter4j.RateLimitStatusListener)
    {
        twitter4j.Twitter r0;
        twitter4j.RateLimitStatusListener $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.RateLimitStatusListener;

        specialinvoke r0.<twitter4j.TwitterOAuthSupportBase: void setRateLimitStatusListener(twitter4j.RateLimitStatusListener)>($r1);

        return;
    }

    public twitter4j.Relationship showFriendship(int, int) throws twitter4j.TwitterException
    {
        twitter4j.RelationshipJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r8;
        int $i0, $i1;
        twitter4j.conf.Configuration $r4;
        twitter4j.http.HttpParameter[] $r6;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = new twitter4j.RelationshipJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/show.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = staticinvoke <twitter4j.http.HttpParameter: twitter4j.http.HttpParameter[] getParameterArray(java.lang.String,int,java.lang.String,int)>("source_id", $i0, "target_id", $i1);

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r5, $r6, $r7);

        specialinvoke $r1.<twitter4j.RelationshipJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r1;
    }

    public twitter4j.Relationship showFriendship(java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.RelationshipJSONImpl $r3;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r1, $r2, $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new twitter4j.RelationshipJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("friendships/show.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = staticinvoke <twitter4j.http.HttpParameter: twitter4j.http.HttpParameter[] getParameterArray(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("source_screen_name", $r1, "target_screen_name", $r2);

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r9);

        specialinvoke $r3.<twitter4j.RelationshipJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r3;
    }

    public twitter4j.SavedSearch showSavedSearch(int) throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        twitter4j.SavedSearchJSONImpl $r1;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r1 = new twitter4j.SavedSearchJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("saved_searches/show/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.SavedSearchJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.Status showStatus(long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.StatusJSONImpl $r1;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $l0 := @parameter0: long;

        $r1 = new twitter4j.StatusJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/show/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User showUser(int) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        int $i0;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("users/show.json?user_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public twitter4j.User showUser(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("users/show.json?screen_name=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.UserList showUserList(java.lang.String, int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        int $i0;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserListJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public twitter4j.UserList subscribeUserList(java.lang.String, int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r7;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r8;
        int $i0;
        twitter4j.conf.Configuration $r5;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserListJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/subscribers.json");

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r8 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.Authorization)>($r1, $r7);

        specialinvoke $r2.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r8);

        return $r2;
    }

    public boolean test() throws twitter4j.TwitterException
    {
        twitter4j.Twitter r0;
        java.lang.StringBuffer $r2, $r6;
        twitter4j.http.HttpResponse $r5;
        twitter4j.conf.Configuration $r3;
        int $i0;
        java.lang.String $r4;
        twitter4j.http.HttpClientWrapper $r1;

        r0 := @this: twitter4j.Twitter;

        $r1 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r4 = interfaceinvoke $r3.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("help/test.json");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<twitter4j.http.HttpResponse: java.lang.String asString()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("ok");

        if -1 == $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        twitter4j.http.Authorization $r2;
        java.lang.StringBuffer $r1;
        java.lang.String $r3;
        twitter4j.Twitter r0;

        r0 := @this: twitter4j.Twitter;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Twitter{auth=\'");

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public twitter4j.UserList unsubscribeUserList(java.lang.String, int) throws twitter4j.TwitterException
    {
        twitter4j.UserListJSONImpl $r2;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r8;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r9;
        int $i0;
        twitter4j.conf.Configuration $r5;
        twitter4j.User $r7;
        java.lang.String $r1, $r6;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserListJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/subscribers.json?id=");

        $r7 = virtualinvoke r0.<twitter4j.Twitter: twitter4j.User verifyCredentials()>();

        $i0 = interfaceinvoke $r7.<twitter4j.User: int getId()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r9 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse delete(java.lang.String,twitter4j.http.Authorization)>($r1, $r8);

        specialinvoke $r2.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r9);

        return $r2;
    }

    public twitter4j.User updateDeliveryDevice(twitter4j.Device) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.http.HttpParameter $r3;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r10;
        twitter4j.Device $r1;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r7, $r9;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: twitter4j.Device;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/update_delivery_device.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

        $r9 = virtualinvoke $r1.<twitter4j.Device: java.lang.String getName()>();

        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("device", $r9);

        $r8[0] = $r3;

        $r10 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r11 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r10);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r11);

        return $r2;
    }

    public twitter4j.User updateProfile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r13;
        twitter4j.UserJSONImpl $r7;
        java.util.ArrayList r6;
        java.lang.StringBuffer $r10;
        twitter4j.http.HttpResponse $r14;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        twitter4j.conf.Configuration $r11;
        twitter4j.http.HttpParameter[] $r12;
        twitter4j.http.HttpClientWrapper $r8;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>(5);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "name", $r1);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "email", $r2);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "url", $r3);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "location", $r4);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "description", $r5);

        $r7 = new twitter4j.UserJSONImpl;

        $r8 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r11.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/update_profile.json");

        $r1 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $r12 = newarray (twitter4j.http.HttpParameter)[$i0];

        $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r12 = (twitter4j.http.HttpParameter[]) $r13;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r14 = virtualinvoke $r8.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r12, $r9);

        specialinvoke $r7.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r14);

        return $r7;
    }

    public twitter4j.User updateProfileBackgroundImage(java.io.File, boolean) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.http.HttpParameter $r8;
        twitter4j.Twitter r0;
        java.io.File $r1;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        java.lang.String $r6;
        twitter4j.http.HttpClientWrapper $r3;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.io.File;

        $z0 := @parameter1: boolean;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        specialinvoke r0.<twitter4j.Twitter: void checkFileValidity(java.io.File)>($r1);

        $r2 = new twitter4j.UserJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/update_profile_background_image.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[2];

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("image", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,boolean)>("tile", $z0);

        $r7[1] = $r8;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.User updateProfileColors(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r13;
        twitter4j.UserJSONImpl $r7;
        java.util.ArrayList r6;
        java.lang.StringBuffer $r10;
        twitter4j.http.HttpResponse $r14;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        twitter4j.conf.Configuration $r11;
        twitter4j.http.HttpParameter[] $r12;
        twitter4j.http.HttpClientWrapper $r8;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        r6 = new java.util.ArrayList;

        specialinvoke r6.<java.util.ArrayList: void <init>(int)>(5);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "profile_background_color", $r1);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "profile_text_color", $r2);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "profile_link_color", $r3);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "profile_sidebar_fill_color", $r4);

        specialinvoke r0.<twitter4j.Twitter: void addParameterToList(java.util.List,java.lang.String,java.lang.String)>(r6, "profile_sidebar_border_color", $r5);

        $r7 = new twitter4j.UserJSONImpl;

        $r8 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r11.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/update_profile_colors.json");

        $r1 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = interfaceinvoke r6.<java.util.List: int size()>();

        $r12 = newarray (twitter4j.http.HttpParameter)[$i0];

        $r13 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r12 = (twitter4j.http.HttpParameter[]) $r13;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r14 = virtualinvoke $r8.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r12, $r9);

        specialinvoke $r7.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r14);

        return $r7;
    }

    public twitter4j.User updateProfileImage(java.io.File) throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r2;
        twitter4j.http.HttpParameter $r3;
        twitter4j.Twitter r0;
        java.io.File $r1;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r7;
        twitter4j.http.HttpClientWrapper $r4;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.io.File;

        specialinvoke r0.<twitter4j.Twitter: void checkFileValidity(java.io.File)>($r1);

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.UserJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/update_profile_image.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[1];

        $r3 = new twitter4j.http.HttpParameter;

        specialinvoke $r3.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.io.File)>("image", $r1);

        $r8[0] = $r3;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r9);

        specialinvoke $r2.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.Status updateStatus(java.lang.String) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r8;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        java.lang.String $r1, $r6;
        twitter4j.StatusJSONImpl $r2;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.StatusJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/update.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[2];

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("status", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.http.HttpParameter;

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getSource()>();

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("source", $r1);

        $r7[1] = $r8;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        specialinvoke $r2.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.Status updateStatus(java.lang.String, long) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.http.HttpParameter $r8;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r9;
        java.lang.StringBuffer $r4;
        twitter4j.http.HttpResponse $r10;
        twitter4j.conf.Configuration $r5;
        twitter4j.http.HttpParameter[] $r7;
        java.lang.String $r1, $r6;
        twitter4j.StatusJSONImpl $r2;
        twitter4j.http.HttpClientWrapper $r3;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r2 = new twitter4j.StatusJSONImpl;

        $r3 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r6 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/update.json");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (twitter4j.http.HttpParameter)[3];

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("status", $r1);

        $r7[0] = $r8;

        $r8 = new twitter4j.http.HttpParameter;

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,long)>("in_reply_to_status_id", $l0);

        $r7[1] = $r8;

        $r8 = new twitter4j.http.HttpParameter;

        $r5 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r5.<twitter4j.conf.Configuration: java.lang.String getSource()>();

        specialinvoke $r8.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("source", $r1);

        $r7[2] = $r8;

        $r9 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r10 = virtualinvoke $r3.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r6, $r7, $r9);

        specialinvoke $r2.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r10);

        return $r2;
    }

    public twitter4j.Status updateStatus(java.lang.String, long, twitter4j.GeoLocation) throws twitter4j.TwitterException
    {
        long $l0;
        twitter4j.http.HttpParameter $r9;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r10;
        twitter4j.GeoLocation $r2;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r1, $r7;
        twitter4j.StatusJSONImpl $r3;
        twitter4j.http.HttpClientWrapper $r4;
        double $d0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 := @parameter2: twitter4j.GeoLocation;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = new twitter4j.StatusJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/update.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[5];

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("status", $r1);

        $r8[0] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $d0 = virtualinvoke $r2.<twitter4j.GeoLocation: double getLatitude()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,double)>("lat", $d0);

        $r8[1] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $d0 = virtualinvoke $r2.<twitter4j.GeoLocation: double getLongitude()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,double)>("long", $d0);

        $r8[2] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,long)>("in_reply_to_status_id", $l0);

        $r8[3] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getSource()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("source", $r1);

        $r8[4] = $r9;

        $r10 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r11 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r10);

        specialinvoke $r3.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r11);

        return $r3;
    }

    public twitter4j.Status updateStatus(java.lang.String, twitter4j.GeoLocation) throws twitter4j.TwitterException
    {
        twitter4j.http.HttpParameter $r9;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r10;
        twitter4j.GeoLocation $r2;
        java.lang.StringBuffer $r5;
        twitter4j.http.HttpResponse $r11;
        twitter4j.conf.Configuration $r6;
        twitter4j.http.HttpParameter[] $r8;
        java.lang.String $r1, $r7;
        twitter4j.StatusJSONImpl $r3;
        twitter4j.http.HttpClientWrapper $r4;
        double $d0;

        r0 := @this: twitter4j.Twitter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: twitter4j.GeoLocation;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        $r3 = new twitter4j.StatusJSONImpl;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r7 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("statuses/update.json");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = newarray (twitter4j.http.HttpParameter)[4];

        $r9 = new twitter4j.http.HttpParameter;

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("status", $r1);

        $r8[0] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $d0 = virtualinvoke $r2.<twitter4j.GeoLocation: double getLatitude()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,double)>("lat", $d0);

        $r8[1] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $d0 = virtualinvoke $r2.<twitter4j.GeoLocation: double getLongitude()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,double)>("long", $d0);

        $r8[2] = $r9;

        $r9 = new twitter4j.http.HttpParameter;

        $r6 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r6.<twitter4j.conf.Configuration: java.lang.String getSource()>();

        specialinvoke $r9.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("source", $r1);

        $r8[3] = $r9;

        $r10 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r11 = virtualinvoke $r4.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r7, $r8, $r10);

        specialinvoke $r3.<twitter4j.StatusJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r11);

        return $r3;
    }

    public twitter4j.UserList updateUserList(int, java.lang.String, boolean, java.lang.String) throws twitter4j.TwitterException
    {
        java.lang.Object[] $r11;
        twitter4j.UserListJSONImpl $r6;
        twitter4j.http.HttpParameter $r5;
        twitter4j.Twitter r0;
        java.util.ArrayList r3;
        twitter4j.http.Authorization $r4;
        java.lang.StringBuffer $r8;
        twitter4j.http.HttpResponse $r12;
        int $i0;
        twitter4j.conf.Configuration $r9;
        twitter4j.http.HttpParameter[] $r10;
        java.lang.String $r1, $r2;
        twitter4j.http.HttpClientWrapper $r7;
        boolean $z0;

        r0 := @this: twitter4j.Twitter;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: java.lang.String;

        virtualinvoke r0.<twitter4j.Twitter: void ensureAuthorizationEnabled()>();

        r3 = new java.util.ArrayList;

        specialinvoke r3.<java.util.ArrayList: void <init>()>();

        if $r1 == null goto label1;

        $r5 = new twitter4j.http.HttpParameter;

        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("name", $r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label1:
        $r5 = new twitter4j.http.HttpParameter;

        if $z0 == 0 goto label4;

        $r1 = "public";

     label2:
        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("mode", $r1);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        if $r2 == null goto label3;

        $r5 = new twitter4j.http.HttpParameter;

        specialinvoke $r5.<twitter4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>("description", $r2);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        $r6 = new twitter4j.UserListJSONImpl;

        $r7 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r1 = interfaceinvoke $r9.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r1 = virtualinvoke r0.<twitter4j.Twitter: java.lang.String getScreenName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/lists/");

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".json");

        $r1 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        $r10 = newarray (twitter4j.http.HttpParameter)[$i0];

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r10 = (twitter4j.http.HttpParameter[]) $r11;

        $r4 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r12 = virtualinvoke $r7.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse post(java.lang.String,twitter4j.http.HttpParameter[],twitter4j.http.Authorization)>($r1, $r10, $r4);

        specialinvoke $r6.<twitter4j.UserListJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r12);

        return $r6;

     label4:
        $r1 = "private";

        goto label2;
    }

    public twitter4j.User verifyCredentials() throws twitter4j.TwitterException
    {
        twitter4j.UserJSONImpl $r1;
        twitter4j.Twitter r0;
        twitter4j.http.Authorization $r6;
        java.lang.StringBuffer $r3;
        twitter4j.http.HttpResponse $r7;
        twitter4j.conf.Configuration $r4;
        java.lang.String $r5;
        twitter4j.http.HttpClientWrapper $r2;

        r0 := @this: twitter4j.Twitter;

        $r1 = new twitter4j.UserJSONImpl;

        $r2 = r0.<twitter4j.Twitter: twitter4j.http.HttpClientWrapper http>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<twitter4j.Twitter: twitter4j.conf.Configuration conf>;

        $r5 = interfaceinvoke $r4.<twitter4j.conf.Configuration: java.lang.String getRestBaseURL()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("account/verify_credentials.json");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r0.<twitter4j.Twitter: twitter4j.http.Authorization auth>;

        $r7 = virtualinvoke $r2.<twitter4j.http.HttpClientWrapper: twitter4j.http.HttpResponse get(java.lang.String,twitter4j.http.Authorization)>($r5, $r6);

        specialinvoke $r1.<twitter4j.UserJSONImpl: void <init>(twitter4j.http.HttpResponse)>($r7);

        return $r1;
    }

    public static void <clinit>()
    {
        <twitter4j.Twitter: long serialVersionUID> = -1486360080128882436L;

        return;
    }
}
