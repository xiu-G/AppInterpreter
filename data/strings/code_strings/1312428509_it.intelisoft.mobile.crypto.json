{"\"D\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: int timestamp2ProgressivoAnno(java.sql.Timestamp)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"Database populate\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>"],"\"A\");     case 193: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"A\");     case 194: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"A\");     case 195: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"A\");     case 196: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"A\");     case 197: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"A\");     case 198: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"AE\");     case 199: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"C\");     case 200: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"E\");     case 201: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"E\");     case 202: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"E\");     case 203: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"E\");     case 204: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"I\");     case 205: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"I\");     case 206: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"I\");     case 207: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"I\");     case 208: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"D\");     case 209: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"N\");     case 210: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 211: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 212: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 213: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 214: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 216: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"O\");     case 217: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"U\");     case 218: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"U\");     case 219: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"U\");     case 220: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"U\");     case 221: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"Y\");     case 222: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"TH\");     case 223: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"ss\");     case 224: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 225: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 226: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 227: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 228: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 229: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"a\\'\");     case 230: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"ae\");     case 231: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"c\");     case 232: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"e\\'\");     case 233: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"e\\'\");     case 234: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"e\\'\");     case 235: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"e\\'\");     case 236: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"i\\'\");     case 237: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"i\\'\");     case 238: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"i\\'\");     case 239: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"i\\'\");     case 240: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"d\");     case 241: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"n\");     case 242: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 243: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 244: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 245: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 246: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 248: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"o\\'\");     case 249: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"u\\'\");     case 250: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"u\\'\");     case 251: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"u\\'\");     case 252: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"u\\'\");     case 253: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"y\");     case 254: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"th\");     case 255: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"y\");     case 338: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"OE\");     case 339: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"oe\");     case 376: goto virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"Y\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"LONG\"":["<it.intelisoft.mobile.crypto.Constants$XML_DATA_TYPES_PARAM: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.Long)>"],"\"E\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"method\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"  <PARAM NAME=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"Float\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"XML\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: java.lang.String getSystemData(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>"],"\"LOGIN\"":["<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>"],"\"ERROR! please send me the exeption file generated under \/sdcard\/crypto.log.errors\"":["<it.intelisoft.mobile.crypto.Widget: void onDisabled(android.content.Context)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>"],"\" AND key like \\'%\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"TODATE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\" data TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"description\", \"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"datatypedescr\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\" method TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"\/CRYPTO-EXPORT\/USER-DATA\/DATA\/PARAMS\/PARAM\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void endElement(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"SELECT typeid,key,data,occurs,description FROM userdata \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"WhereConditionCreator\", \"NULL position passed\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void addParam(java.lang.Integer,java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: void addParam(java.lang.Integer,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: void addParam(java.lang.Integer,java.lang.Long)>","<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: void addParam(java.lang.Integer,java.lang.String)>"],"\"\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void <init>(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String dumpValues(java.util.HashMap)>","<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void clear(java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: java.lang.String getPref(android.database.sqlite.SQLiteDatabase,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.Integer,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.Main: void <clinit>()>","<it.intelisoft.mobile.crypto.Main: void setFEstatus(java.lang.Integer)>","<it.intelisoft.mobile.crypto.Main: void updateControl(java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void clearFE()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int getLockStatus(boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: java.lang.String getWaitinTimeMsg2NextSequence(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdatatypes.UserdataTypesManagerBE: java.lang.String getUserdatatypeidDescr(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.MasterPwdFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.SequencePwdFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.CryptoUnlockerFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: void <init>(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: void <init>(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: java.lang.String bytes2Hex(byte[],boolean)>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void setFEstatus(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: java.lang.String getTagPath()>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String getTagPath()>","<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>","<it.intelisoft.mobile.crypto.Main$14: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void deleteData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void importData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void clearFE()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String Vector2String(java.util.Vector,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getUntilString(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String[] split(java.lang.String,char)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: int getMax(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void resetTable(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void <init>()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void clearFE()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.lang.Integer getCountLogsTypeInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.sql.Timestamp getLastPwdInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.Integer,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void clearFE()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getKeys(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void clearFE()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"Long\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"*1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"Lit\/intelisoft\/mobile\/crypto\/Widget;\"":["<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>"],"\"userdatakey\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto$IconicAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>","<it.intelisoft.mobile.crypto.business.activites.UserData: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: java.lang.String[] getKeys()>"],"\"java.lang.Boolean\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"yyyyMMddHHmmss\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>"],"\"<\/USER-DATA>\\n\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"\\n\\n\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void writeException(java.lang.Exception,boolean,java.lang.String)>"],"\"Database upgrade\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/help\/HelpHowToInstall;\"":["<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>"],"\"Valore del parametri boolean diverso da TRUE e da FALSE [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean getBooleanValue(java.lang.String)>"],"\"ERRORE NELLA CONVERSIONE DELLA DATA [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String convertDate(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>"],"\"] FROM:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String convertDate(java.lang.String,java.lang.String,java.lang.String)>"],"\" exception TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"H\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: int timestamp2HH(java.sql.Timestamp)>"],"\"\\\" IS-NULL=\\\"TRUE\\\">\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\" D:\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"Timestamp\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\" WHERE enddateval IS NULL AND typeid > 0\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"java.lang.Float\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"Key:\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto$2: void onTextChanged(java.lang.CharSequence,int,int,int)>"],"\" T:\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"Wrong number of passed params. WHERE CONDITION [\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void checkNumerberOfParams()>"],"\"o\\'\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"90\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\" AND enddateval IS NULL\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: java.lang.String getPref(android.database.sqlite.SQLiteDatabase,java.lang.Integer)>"],"\" enddateval DATETIME \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"I\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\" KEY:[\"":["<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>"],"\"Destination array with length %d cannot have offset of %d and still store three bytes.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>"],"\" <PARAMS>\\n\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"Error dropping table \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>"],"\" AND typeid > 0\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getKeys(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"java.lang.Double\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"sensor\"":["<it.intelisoft.mobile.crypto.business.utils.android.ShakerManager: void <init>(android.content.Context,double,it.intelisoft.mobile.crypto.business.utils.android.ShakerManager$Callback)>"],"\"WhereConditionCreator\", \"NULL where condition passed\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void <init>(java.lang.String)>"],"\"phone\"":["<it.intelisoft.mobile.crypto.Main: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>","<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>"],"\" value TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"\\\" DATE=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\")\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"Non troavato carattere \\'tappo\\' [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getUntilString(java.lang.String,java.lang.String)>"],"\" MSG: \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\" E:\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"Database drop\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>"],"\"L\\'oggetto non \\u00e8 covertibile in intero.  TYPE: [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>"],"\"DATA-TYPE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"\/CRYPTO-EXPORT\/USER-DATA\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"userdata\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\" insdateval DATETIME NOT NULL  \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"Error: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void error(org.xml.sax.SAXParseException)>"],"\"SELECT data,strftime(\\'%Y-%m-%d %H:%M:%S\\', startdateval) FROM \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>"],"\"]  nel file di con figurazione [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getPropertyValue(java.util.Properties,java.lang.String,java.lang.String)>"],"\"CRYTO ERROR\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"] FORMATO OUTPUT:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>"],"\"<![CDATA[\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"*\"":["<it.intelisoft.mobile.crypto.Main: void updateControl(java.lang.String)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"e\\'\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"TH\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"th\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"date\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.Logs: void RefreshList()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>"],"\"] per la chiave [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getUntilString(java.lang.String,java.lang.String)>"],"\"IT\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto$IconicAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>"],"\" description TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\" WHERE enddateval IS NULL and typeid = -1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>"],"\"Base64-encoded string must have at least four characters, but length specified was \"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(byte[],int,int,int)>"],"\"enddateval = ? AND typeid = -1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"XML-DATA-TYPE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/help\/HelpUpdates;\"":["<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>"],"\"RESET\"":["<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>"],"\"AE\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"ae\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"logtypeid\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"PIN2\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"\\\" IS-NULL=\\\"FALSE\\\">\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"BMATPIN1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"   Column number: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintError(org.xml.sax.SAXParseException)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintWarn(org.xml.sax.SAXParseException)>"],"\"UTF8\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"n\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"java.util.HashMap\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"STARTDATE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.util.HashMap getSystemDataDetails(android.database.sqlite.SQLiteDatabase)>"],"\"\\\\d+\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: boolean isNumeric(java.lang.String)>"],"\"] OFFSET:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>"],"\"XML-TYPE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"MM \/ yyyy\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE$2$1: void onDateSet(android.widget.DatePicker,int,int,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE$1$1: void onDateSet(android.widget.DatePicker,int,int,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"errortypeid\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\" WHERE ID = \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: java.lang.String getPref(android.database.sqlite.SQLiteDatabase,java.lang.Integer)>"],"\"en\"":["<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: void <init>()>"],"\"] errore: [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: java.io.FileReader apriFile(java.lang.String)>"],"\"Lit\/intelisoft\/mobile\/crypto\/Help;\"":["<it.intelisoft.mobile.crypto.Main: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>"],"\"abc\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"N\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"-\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>"],"\"<\/CRYPTO-EXPORT>\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"STRING\"":["<it.intelisoft.mobile.crypto.Constants$XML_DATA_TYPES_PARAM: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String)>"],"\"Input string was null.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(java.lang.String,int)>"],"\"java.util.Collection\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"INTEGER\"":["<it.intelisoft.mobile.crypto.Constants$XML_DATA_TYPES_PARAM: void <clinit>()>"],"\"flex.messaging.io.amf.ASObject\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"O\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"60\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"startdateval\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"String\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"Source array with length %d cannot have offset of %d and still process four bytes.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/Logs;\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.MainConf: void onCreate(android.os.Bundle)>"],"\"   System ID: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintError(org.xml.sax.SAXParseException)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintWarn(org.xml.sax.SAXParseException)>"],"\"data\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.UserData: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.activites.Crypto$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"\/DATA\/PARAMS\/PARAM\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void endElement(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/help\/HelpWhatIsIt;\"":["<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>"],"\"] KEY [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"Upgrading database, FROM \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>"],"\"\/\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: java.lang.String getTagPath()>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: java.lang.String getTagPath()>"],"\"DATAKEYCRIPTING\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewEraseAllDataAferTries(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewLockMode(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewSequencePwd(java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewUnlockSequence(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/MasterPwdConf;\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.MainConf: void onCreate(android.os.Bundle)>"],"\"Warning: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void warning(org.xml.sax.SAXParseException)>"],"\"java.sql.Timestamp\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"logerrors\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/ExportImportData;\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.MainConf: void onCreate(android.os.Bundle)>"],"\"key\", \"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"SELECT key FROM userdata \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getKeys(android.database.sqlite.SQLiteDatabase)>"],"\" startdateval DATETIME NOT NULL , \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"java.lang.String\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/SequenceConf;\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.MainConf: void onCreate(android.os.Bundle)>"],"\"0\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Main$3: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>"],"\"50\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"\", \"\\'\", \"`\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"] TYPE [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"flex.messaging.io.ArrayCollection\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean checkCollectionValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"ERASEDATAAFERTRIES\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean isEraseAllDataAferTriesEnabled(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewLockMode(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewSequencePwd(java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewUnlockSequence(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\" version.\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>"],"\" PATH: \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"File is too big for this convenience method (\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decodeFromFile(java.lang.String)>"],"\"MAX-TRIES\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int getLockStatus(boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: java.lang.String getWaitinTimeMsg2NextSequence(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewEraseAllDataAferTries(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewLockMode(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewUnlockSequence(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"CREATE TABLE \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/CryptoUnlocker;\"":["<it.intelisoft.mobile.crypto.Main: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>"],"\"] \"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void checkNumerberOfParams()>","<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String dumpValues(java.util.HashMap)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>","<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>"],"\"US-ASCII\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: void <clinit>()>","<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(java.lang.String,int)>","<it.intelisoft.mobile.crypto.business.utils.Base64: void decodeToFile(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>","<it.intelisoft.mobile.crypto.business.utils.Base64: void encodeFileToFile(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.Base64: java.lang.String encodeFromFile(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)>"],"\"USR\");     case 2: goto $r6 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(\"CCNO\");     case 3: goto $r6 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(\"BMATNO\");     case 4: goto $r6 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(\"PIN1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>"],"\"1\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$4: void onClick(android.view.View)>"],"\" (\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"OE\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"oe\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"PWD2\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"sequence\"":["<it.intelisoft.mobile.crypto.Main: void login()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>"],"\"UNLOCKSEQUENCE\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewEraseAllDataAferTries(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewLockMode(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewSequencePwd(java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"%Y-%m-%d %H:%M:%S\"":["<it.intelisoft.mobile.crypto.Constants: void <clinit>()>"],"\"PWD\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"SELECT insdateval,key,logtypeid FROM log \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>"],"\"Cannot decode null source array.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(byte[],int,int,int)>"],"\"java.lang.Collection\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean checkCollectionValue(java.lang.Object)>"],"\"[0x\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: java.lang.String bytes2Hex(byte[],boolean)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/utils\/Base64;\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: void <clinit>()>"],"\"java.lang.Long\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"2\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$5: void onClick(android.view.View)>"],"\"URL\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"Bad Base64 input character decimal %d in array position %d\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(byte[],int,int,int)>"],"\"crypto.db\"":["<it.intelisoft.mobile.crypto.Main: void getLockStatus()>","<it.intelisoft.mobile.crypto.Main: void login()>","<it.intelisoft.mobile.crypto.Main: void setFEstatus(java.lang.Integer)>","<it.intelisoft.mobile.crypto.Main: void showLockedMessage()>","<it.intelisoft.mobile.crypto.Main: void updateControl(java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void deleteData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void insertData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void updateData()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.MasterPwdFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.MasterPwdFE$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.SequencePwdFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.SequencePwdFE$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.CryptoUnlockerFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.CryptoUnlockerFE$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.Constants: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void setFEstatus(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.Widget: void showLockedMessage()>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void endElement(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void deleteData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void importData()>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.configuration.Logs: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void setMainStatusLogic(int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void deleteData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void deleteLogic(java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void insertData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void insertLogic(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.UserdataFE: void updateData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCheckedChanged(android.widget.RadioGroup,int)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Main$1: void run()>","<it.intelisoft.mobile.crypto.Widget$1: void run()>","<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: android.database.sqlite.SQLiteDatabase getDB(java.lang.String,int)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$2: void onTextChanged(java.lang.CharSequence,int,int,int)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void <init>(android.content.Context,java.lang.String,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void deleteData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void insertData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void updateData()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: java.lang.String getLockingType()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: boolean getOrderByMostUsed()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void deleteData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void insertData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void updateData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void deleteData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void insertData()>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void updateData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onActivityResult(int,int,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.Crypto: void onDestroy()>"],"\"Database upgrade\", \"NO UPGRADES\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>"],"\"Error creating table \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>"],"\" is null \"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String getWhere()>"],"\"DESCRIPTION\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\"PIN1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.PinFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/ApplicationsettingsConfFree;\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.MainConf: void onCreate(android.os.Bundle)>"],"\" COLLECTION ELEMENT [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"BMATPIN2\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"3\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$6: void onClick(android.view.View)>"],"\"US\"":["<it.intelisoft.mobile.crypto.business.datamanagers.DataShareManager: void <init>()>"],"\"Source array with length %d cannot have offset of %d and process %d bytes.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decode(byte[],int,int,int)>"],"\" ORDER BY insdateval DESC\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>"],"\"value\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"SELECT name FROM sqlite_master WHERE type=\\'table\\' AND name=\\'\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"Integer\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"FROMDATE\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"U\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"]]><\/PARAM>\\n\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"4\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$7: void onClick(android.view.View)>"],"\"SELECT COUNT(*) FROM userdata \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"yyyy-MM-dd HH:mm:ss\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Data: java.util.Calendar getParam2Calendar(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Calendar getSring2Calendar(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Date getSring2Date(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String timestamp2String(java.sql.Timestamp,java.lang.String)>","<it.intelisoft.mobile.crypto.Constants: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.sql.Timestamp getLastPwdInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.util.Calendar)>"],"\" WHERE logtypeid  = \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.lang.Integer getCountLogsTypeInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.sql.Timestamp getLastPwdInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"\\\" XML-DATA-TYPE=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"Error in Base64 code reading stream.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64$InputStream: int read()>"],"\"log\", \"WHERE logtypeid = -1\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.SequencePwdFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.sequencepwd.CryptoUnlockerFE$2: void onClick(android.content.DialogInterface,int)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>"],"\" FROM \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"200\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"description\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"\\'\", \"`\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"5\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$8: void onClick(android.view.View)>"],"\") FROM \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: int getMax(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"key=? AND enddateval = ? \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"SELECT value FROM preferences \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: java.lang.String getPref(android.database.sqlite.SQLiteDatabase,java.lang.Integer)>"],"\" occurs INTEGER, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\" AND  key = \\'\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"i\\'\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"BMATNAME\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\" WHERE logtypeid > 0\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>"],"\"<DATA NAME=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"\/CRYPTO-EXPORT\/USER-DATA\/DATA\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void endElement(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"[B\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"] TO:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String convertDate(java.lang.String,java.lang.String,java.lang.String)>"],"\"6\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>","<it.intelisoft.mobile.crypto.Main$9: void onClick(android.view.View)>"],"\"20\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"123\", $r3, \"abc\", \"0\", $r7, \"WAITING\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>"],"\"USR\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void setFEdata(java.lang.String,java.lang.String)>"],"\" K:\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"Hmm\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: int timestamp2HHmm(java.sql.Timestamp)>"],"\" errortypeid INTEGER NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"www.\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.WWWFE: void clearFE()>"],"\"] VALUE: [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>"],"\"] VALUE [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"SELECT MAX(\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: int getMax(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"y\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"7\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Main$10: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>"],"\"ss\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"<CRYPTO-EXPORT DATE=\\\"\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"DROP TABLE IF EXISTS \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>"],"\"ERRORE NELLA GET DATE [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSqlSysdate()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSqlTimestamp(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Calendar getSring2Calendar(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Date getSring2Date(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringSysdate(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: long getTimeInMillis()>"],"\"MAX-TRIES\", \"INTEGER\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.Integer)>"],"\"] TYPE:[\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String dumpValues(java.util.HashMap)>","<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>"],"\"NAME\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"Fattal error: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void fatalError(org.xml.sax.SAXParseException)>"],"\"Cannot have length offset: \"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>"],"\"\\\">\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"EXCEPTION: InvalidAlgorithmParameterException\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"EXCEPTION: InvalidKeySpecException\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"Y\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"8\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Main$11: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>"],"\"35\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"log\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>","<it.intelisoft.mobile.crypto.business.activites.configuration.Logs: void RefreshList()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>"],"\"10\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>"],"\"getStackTrace\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: java.lang.String getMethodName(java.lang.StackTraceElement[])>"],"\"java.util.Date\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\" bytes).\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] decodeFromFile(java.lang.String)>"],"\"SQL\", \"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"Base64 input not properly padded.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64$OutputStream: void flushBase64()>"],"\" ORDER BY key\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"123\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"] FORMATO:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSqlTimestamp(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Calendar getSring2Calendar(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Date getSring2Date(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringSysdate(java.lang.String)>"],"\"{\"":["<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: java.lang.String getMessage()>"],"\"\/sdcard\/crypto.exp\"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXml(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData$2: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.Constants: void <clinit>()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean esisteFile(java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void deleteData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void importData()>"],"\"Source array was null.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>"],"\"SELECT MAX(insdateval) FROM log \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.sql.Timestamp getLastPwdInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"Cannot have offset of %d and length of %d with array of length %d\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>"],"\"9\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.SequenceConf: void <init>()>","<it.intelisoft.mobile.crypto.Widget: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void attachIntents(android.content.Context,android.widget.RemoteViews,int)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Main$12: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.CryptoUnlocker: void <init>()>"],"\"DATE\"":["<it.intelisoft.mobile.crypto.Constants$XML_DATA_TYPES_PARAM: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.util.Calendar)>"],"\" WHERE enddateval IS NULL \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getKeys(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"Problemi nell\\'aprire il file test  [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: java.io.FileReader apriFile(java.lang.String)>"],"\"Data to encode was null.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: void encodeToFile(byte[],java.lang.String)>"],"\"\\'\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: int getCountKey(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"key\", \"*\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"insdateval\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"Destination array was null.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>"],"\"occurs\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"25\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"\\\">\\n\\n\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"EXCEPTION: InvalidKeyException\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"u\\'\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\" NAME:[\"":["<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>"],"\"id = ?\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"\/sdcard\/crypto.log.errors\"":["<it.intelisoft.mobile.crypto.Constants: void <clinit>()>","<it.intelisoft.mobile.crypto.Widget: void onDisabled(android.content.Context)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>"],"\"key\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.Logs: void RefreshList()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void addLogRecord(java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.util.Vector getLogsRecords(android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean addOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"yyyyMMdd\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: int getSqlDeltaGGDiff(java.sql.Timestamp,java.sql.Timestamp)>"],"\"\\\" DATA-TYPE=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\" M:\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageManagerBE: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\"XML PARSING ERRROR\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Data: void load(java.lang.String)>"],"\"CCNAME\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"Stub!\"":["<java.lang.Object: void <init>()>","<java.lang.Integer: java.lang.Integer valueOf(int)>","<java.lang.Integer: int intValue()>","<java.lang.String: java.lang.String valueOf(java.lang.Object)>","<java.lang.Exception: void <init>(java.lang.String)>","<java.lang.String: int length()>","<java.lang.String: char charAt(int)>","<java.lang.String: java.lang.String substring(int,int)>","<java.lang.Thread: java.lang.Thread currentThread()>","<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>","<java.lang.Throwable: java.lang.String getMessage()>","<java.lang.Integer: java.lang.String toString()>","<java.lang.String: boolean equals(java.lang.Object)>","<java.lang.Integer: int parseInt(java.lang.String)>","<java.lang.String: java.lang.String toUpperCase()>","<java.lang.String: java.lang.String toLowerCase()>","<java.lang.Exception: void <init>()>","<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>","<java.lang.Class: java.lang.String getName()>","<java.lang.Long: java.lang.String toString()>","<java.lang.Float: java.lang.String toString()>","<java.lang.Double: java.lang.String toString()>","<java.lang.Boolean: boolean booleanValue()>","<java.lang.String: int indexOf(java.lang.String)>","<java.lang.NullPointerException: void <init>(java.lang.String)>","<java.lang.String: byte[] getBytes(java.lang.String)>","<java.lang.String: byte[] getBytes()>","<java.lang.Throwable: void printStackTrace()>","<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>","<java.lang.AssertionError: void <init>()>","<java.lang.AssertionError: void <init>(java.lang.Object)>","<java.lang.String: void <init>(byte[],java.lang.String)>","<java.lang.String: void <init>(byte[])>","<java.lang.String: char[] toCharArray()>","<java.lang.StringBuffer: java.lang.String toString()>","<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>","<java.lang.StringBuffer: void <init>(int)>","<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>","<java.lang.String: int indexOf(java.lang.String,int)>","<java.lang.String: int compareTo(java.lang.String)>","<java.lang.String: void <init>(char[])>","<java.lang.String: void <init>()>","<java.lang.RuntimeException: void <init>(java.lang.String)>","<java.lang.Throwable: void <init>()>","<java.lang.RuntimeException: void <init>()>","<java.lang.Error: void <init>()>"],"\" typeid INTEGER  NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"SELECT \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"%\\'\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"}\"":["<it.intelisoft.mobile.crypto.business.utils.MessageParamManager: java.lang.String getMessage()>"],"\"KEY\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"   Line number: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintError(org.xml.sax.SAXParseException)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintWarn(org.xml.sax.SAXParseException)>"],"\"CCNO\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/UserData;\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>"],"\"tipo - \"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"Double\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"] xsd: [\"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXml(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>"],"\"120\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"]\"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXml(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXmlString(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean getBooleanValue(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String convertDate(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSqlSysdate()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSqlTimestamp(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Calendar getSring2Calendar(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.util.Date getSring2Date(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getSring2Timestamp(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringSysdate(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: long getTimeInMillis()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: java.lang.String bytes2Hex(byte[],boolean)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: java.io.FileReader apriFile(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getPropertyValue(java.util.Properties,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getUntilString(java.lang.String,java.lang.String)>"],"\"LOCKCODE\"":["<it.intelisoft.mobile.crypto.Main: void login()>","<it.intelisoft.mobile.crypto.Widget: void setLockingMode(java.lang.String)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Constants$LOCK_MODE: void <clinit>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCheckedChanged(android.widget.RadioGroup,int)>"],"\"<\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getTagValue(java.lang.String,java.lang.String)>"],"\"15\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\"NON esiste la chiave  [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getPropertyValue(java.util.Properties,java.lang.String,java.lang.String)>"],"\"EXCEPTION: NoSuchAlgorithmException\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"id\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"IS-NULL\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"ID\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>"],"\"   Message: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintError(org.xml.sax.SAXParseException)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintWarn(org.xml.sax.SAXParseException)>"],"\"<USER-DATA SIZE=\\\"\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>"],"\"sceppa\"":["<it.intelisoft.mobile.crypto.business.handlers.WidgetHander: void handleMessage(android.os.Message)>"],"\"] FORMATO INPUT:[\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>"],"\"Cannot serialize a null object.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)>"],"\". Descr: \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean populate()>"],"\"=\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean creaFileChiaveValore(java.lang.String,java.util.Hashtable)>"],"\"PBEWithMD5AndDES\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\" startdateval DATETIME NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"\/DATA\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"EXCEPTION: NoSuchPaddingException\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String decrypt(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$CRYPT_: java.lang.String encrypt(java.lang.String,java.lang.String)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/help\/HelpHowItWorks;\"":["<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>"],"\"   Public ID: \"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintError(org.xml.sax.SAXParseException)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlErrorHandler: void PrintWarn(org.xml.sax.SAXParseException)>"],"\" <\/PARAMS>\\n\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\" WHERE \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"SELECT occurs FROM  \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.lang.Integer getOccurs(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\">\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getTagValue(java.lang.String,java.lang.String)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/Crypto;\"":["<it.intelisoft.mobile.crypto.Main: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>"],"\"enddateval\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"org.xml.sax.driver\", \"org.xmlpull.v1.sax2.Driver\"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXmlString(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>"],"\"a\\'\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"setTextSize\"":["<it.intelisoft.mobile.crypto.Widget: void setFEstatus(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>"],"\"description\", \"*\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"unlocksequence\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"Cannot serialize a null array.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>"],"\"Could not completely read file \"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: byte[] getBytesFromFile(java.lang.String)>"],"\"exception\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean putLogError(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)>"],"\" -  NON \\u00e8 attualmente convertibile in stringa\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"userdata\", \"WHERE typeid >= 0\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isMasterPwdOk(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"setTextColor\"":["<it.intelisoft.mobile.crypto.Widget: void setFEstatus(android.content.Context,java.lang.Integer)>"],"\"preferences\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.prefsandlogs.PrefsLogsStorageDataMining: boolean savePref(android.database.sqlite.SQLiteDatabase,java.lang.Integer,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean drop()>"],"\" version TO \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.DBManager: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>"],"\"SELECT COUNT(*) FROM log \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: java.lang.Integer getCountLogsTypeInError(java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"mounted\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData$2: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData$3: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.Widget: void onDisabled(android.content.Context)>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void deleteData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void importData()>"],"\"  <\/PARAM>\\n\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"\\n\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$FILE_: boolean creaFileChiaveValore(java.lang.String,java.util.Hashtable)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void writeException(java.lang.Exception,boolean,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String inputStream2String(java.io.InputStream)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void addParam(java.lang.String,java.lang.String,java.lang.String)>"],"\"DELETE FROM \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void resetTable(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"Invalid character in Base64 data.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64$OutputStream: void write(int)>"],"\"@\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getType(java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getValue(java.lang.String)>"],"\"typeid\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto$IconicAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>","<it.intelisoft.mobile.crypto.business.activites.UserData: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>","<it.intelisoft.mobile.crypto.business.activites.Crypto$1: void onClick(android.view.View)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"suca\"":["<it.intelisoft.mobile.crypto.business.handlers.WidgetHander: void handleMessage(android.os.Message)>"],"\"BMATPWD\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\" key TEXT NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\" data TEXT  NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"Problemi nella lettura degli XML. xml: [\"":["<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXml(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>","<it.intelisoft.mobile.crypto.business.utils.xml.XmlManager: void parseXmlString(java.lang.String,java.lang.String,org.xml.sax.helpers.DefaultHandler)>"],"\"] DATA: [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String convertDate(java.lang.String,java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringDateOffest(java.lang.String,java.lang.String,int,java.lang.String)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.sql.Timestamp getTimestampOffest(java.lang.String,java.lang.String,int,java.lang.String)>"],"\"IOExceptions only come from GZipping, which is turned off: \"":["<it.intelisoft.mobile.crypto.business.utils.Base64: byte[] encodeBytesToBytes(byte[])>"],"\"LOCKMODE\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewEraseAllDataAferTries(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewSequencePwd(java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewUnlockSequence(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.CommonBusinessManagerBE: java.lang.String getLockingType()>"],"\"FALSE\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean getBooleanValue(java.lang.String)>"],"\" logtypeid INTEGER  NOT NULL , \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"A\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\" \"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: void checkNumerberOfParams()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void writeException(java.lang.Exception,boolean,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.commons.CommonDataMining: void resetTable(java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\" POSITION:[\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String dumpValues(java.util.HashMap)>"],"\"vibrator\"":["<it.intelisoft.mobile.crypto.Main: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>"],"\"yyyy_MM_dd HH:mm:ss\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: java.lang.String getStringSysdate(java.lang.String)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ExportImportData: void exportData()>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$VARIE_: void writeException(java.lang.Exception,boolean,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"L\\'oggetto non \\u00e8 covertibile nel tipo passato perch\\u00e8 non riconosciuto o complesso  TYPE: [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/help\/HelpAbout;\"":["<it.intelisoft.mobile.crypto.Help: void onCreate(android.os.Bundle)>"],"\"Improperly padded Base64 input.\"":["<it.intelisoft.mobile.crypto.business.utils.Base64$InputStream: int read()>"],"\"java.lang.Integer\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Double getDoubleValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Float getFloatValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Integer getIntValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Long getLongValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>"],"\"] NON gestito per il dump dei valori\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"TRUE\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: boolean getBooleanValue(java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Xml2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>","<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"<\/\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String getTagValue(java.lang.String,java.lang.String)>"],"\"] VALUE:[\"":["<it.intelisoft.mobile.crypto.business.utils.WhereConditionCreator: java.lang.String dumpValues(java.util.HashMap)>","<it.intelisoft.mobile.crypto.business.utils.DataDump: java.lang.String dumpValues()>"],"\"c\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"BMATNO\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.BancomatFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"150\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void <init>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConfFree: void <init>()>"],"\" key TEXT, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"WAITING\"":["<it.intelisoft.mobile.crypto.Main: void getLockStatus()>","<it.intelisoft.mobile.crypto.Main: void login()>","<it.intelisoft.mobile.crypto.Main: void setFEstatus(java.lang.Integer)>","<it.intelisoft.mobile.crypto.Main: void showLockedMessage()>","<it.intelisoft.mobile.crypto.Main: void updateControl(java.lang.String)>","<it.intelisoft.mobile.crypto.Widget: void setFEstatus(android.content.Context,java.lang.Integer)>","<it.intelisoft.mobile.crypto.Widget: void setLockingMode(java.lang.String)>","<it.intelisoft.mobile.crypto.Widget: void showLockedMessage()>","<it.intelisoft.mobile.crypto.Widget: void onReceive(android.content.Context,android.content.Intent)>","<it.intelisoft.mobile.crypto.Widget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>","<it.intelisoft.mobile.crypto.Constants$LOCK_MODE: void <clinit>()>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCheckedChanged(android.widget.RadioGroup,int)>","<it.intelisoft.mobile.crypto.business.activites.configuration.ApplicationsettingsConf: void onCreate(android.os.Bundle)>","<it.intelisoft.mobile.crypto.Main$1: void run()>","<it.intelisoft.mobile.crypto.Widget$1: void run()>"],"\"\\\" XML-TYPE=\\\"\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"d\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\"C\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$STRINGHE_: java.lang.String rimuoviAccenti(java.lang.String)>"],"\" ORDER BY occurs DESC\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: java.util.Vector getUserData(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>"],"\"Lit\/intelisoft\/mobile\/crypto\/business\/activites\/configuration\/MainConf;\"":["<it.intelisoft.mobile.crypto.business.activites.Crypto: void onCreate(android.os.Bundle)>"],"\"<\/DATA>\\n\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer,java.lang.Integer)>"],"\"Tipo di dato [\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String showCollectionParams(java.util.Collection)>"],"\"yyyy\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATE_: int timestamp2Anno(java.sql.Timestamp)>"],"\"SIZE\"":["<it.intelisoft.mobile.crypto.business.activites.configuration.objs.XmlExport2Schema: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>"],"\"SEQUENCE\"":["<it.intelisoft.mobile.crypto.Constants$XML_SYSTEM_FIELDS: void <clinit>()>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: int isSequenceOk(java.lang.String,boolean,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewEraseAllDataAferTries(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewLockMode(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginManagerBE: boolean putNewUnlockSequence(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.login.LoginDataMining: boolean putNewSystemData(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.crypt.objs.Data2Xml: void <init>(java.lang.String,java.lang.Integer)>"],"\" key TEXT  NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"CCV\"":["<it.intelisoft.mobile.crypto.business.datamanagers.frontend.submanagers.userdata.CCFE: void setFEdata(java.lang.String,java.lang.String)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataManagerBE: boolean putUserData(java.lang.String,java.lang.Integer,java.util.HashMap,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>"],"\"UTF-8\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.String getStringValue(java.lang.Object)>","<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$BYTE_: java.lang.String bytes2String(byte[],java.lang.String,boolean)>"],"\" (id INTEGER NOT NULL, \"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.db.upgrades.DBCreate: boolean create()>"],"\"key=? AND enddateval = ?\"":["<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteBmatUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteCCuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deletePinUserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean deleteWWWuserdata(java.lang.String,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putBmatUserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putCCuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Calendar,java.util.Calendar,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putPinUserdata(java.lang.String,java.lang.String,java.lang.Integer,android.database.sqlite.SQLiteDatabase)>","<it.intelisoft.mobile.crypto.business.datamanagers.backend.submanagers.userdata.UserdataDataMining: boolean putWWWuserdata(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,android.database.sqlite.SQLiteDatabase)>"],"\"Vector\"":["<it.intelisoft.mobile.crypto.business.utils.UtilitiesLite$DATATYPES_: java.lang.Object getDataTypeFromString(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>"]}