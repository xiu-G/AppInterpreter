----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: void setStreamMute(int,boolean)>    	['audio']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>    	['network']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: long length()>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.RandomAccessFile: void write(byte[],int,int)>    	['access', 'file']
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>    	['network']
----------------------------
<android.telephony.PhoneStateListener: void <init>()>    	['phone']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: void setStreamMute(int,boolean)>    	['audio']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat obtain()>    	['record']
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)>    	['record']
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)>    	['record']
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)>    	['record']
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)>    	['record']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.MotionEvent: void setLocation(float,float)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.RandomAccessFile: void write(byte[],int,int)>    	['access', 'file']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.Fragment: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>    	['calendar']
<java.util.Calendar: long getTimeInMillis()>    	['calendar']
----------------------------
----------------------------
<java.io.File: long lastModified()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.app.ActivityManager: int getMemoryClass()>    	['memory']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: boolean isExternalStorageRemovable()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean canWrite()>    	['file']
<java.io.File: long getUsableSpace()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.media.MediaPlayer: void seekTo(int)>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
----------------------------
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: boolean canRead()>    	['file']
<java.io.File: java.io.File getParentFile()>    	['file', 'file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void seekTo(int)>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: int getStreamVolume(int)>    	['audio', 'volume']
<android.media.AudioManager: void setStreamVolume(int,int,int)>    	['audio', 'volume']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileReader: void <init>(java.lang.String)>    	['file']
----------------------------
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.Fragment: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>    	['sound']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>    	['restore']
<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>    	['restore']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
<android.support.v4.app.FragmentActivity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: int getStreamMaxVolume(int)>    	['audio', 'volume']
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.lang.Runtime: long maxMemory()>    	['memory']
<java.io.File: boolean canWrite()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>    	['medium', 'player', 'video']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockCount()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.media.MediaPlayer: int getVideoWidth()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: int getVideoHeight()>    	['medium', 'player', 'video']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>    	['submit']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>    	['server']
<java.net.ServerSocket: int getLocalPort()>    	['server', 'port']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.net.ServerSocket: java.net.Socket accept()>    	['server']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.net.Socket: void connect(java.net.SocketAddress)>    	['connect']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>    	['network']
<android.net.NetworkInfo: java.lang.String getSubtypeName()>    	['network']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<java.lang.IllegalAccessException: void printStackTrace()>    	['access']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.com.ffcs.offprint.download: void <init>()>    	['download']
<android.addextras.url_list: void <init>()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File getCanonicalFile()>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long length()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.io.File: long length()>    	['file']
<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileWriter: void <init>(java.io.File,boolean)>    	['file']
<java.io.FileWriter: void write(java.lang.String)>    	['file']
<java.io.FileWriter: void close()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int read(byte[])>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: void setStreamMute(int,boolean)>    	['audio']
----------------------------
<android.graphics.Canvas: void restoreToCount(int)>    	['restore']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.FragmentActivity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileInputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
<android.media.AudioManager: int getStreamMaxVolume(int)>    	['audio', 'volume']
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.addextras.URL: void <init>()>    	['url']
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>    	['telephony']
<android.widget.RadioButton: void setOnClickListener(android.view.View$OnClickListener)>    	['radio']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>    	['file', 'file']
<android.addextras.url: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean mkdir()>    	['file']
----------------------------
----------------------------
<android.support.v4.app.Fragment: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.Fragment: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.SystemClock: long uptimeMillis()>    	['clock']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>    	['file', 'file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: void setStreamMute(int,boolean)>    	['audio']
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.SystemClock: long uptimeMillis()>    	['clock']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void seekTo(int)>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.media.AudioManager: int getStreamVolume(int)>    	['audio', 'volume']
<android.media.AudioManager: void setStreamVolume(int,int,int)>    	['audio', 'volume']
----------------------------
----------------------------
----------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>    	['shadow']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean renameTo(java.io.File)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String toString()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
