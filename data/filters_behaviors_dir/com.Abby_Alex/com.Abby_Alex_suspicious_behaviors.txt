<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	vedio.xml:['location']	app['location']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>	main.xml:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	main.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.net.Uri: android.net.Uri fromFile(java.io.File)>	app:['file']	app['file']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	main.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.addextras.ADVIEW: void <init>()>	main.xml:['ad']	app['ad']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	main.xml:['network']	app['network']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	main.xml:[]	app[]
<android.os.Environment: java.io.File getExternalStorageDirectory()>	main.xml:[]	app[]
<java.io.File: java.lang.String toString()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: long length()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	main.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	main.xml:[]	app[]
<android.os.Environment: java.io.File getExternalStorageDirectory()>	main.xml:[]	app[]
<java.io.File: java.lang.String toString()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void write(byte[])>	main.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	main.xml:[]	app[]
<android.os.Environment: java.io.File getExternalStorageDirectory()>	main.xml:[]	app[]
<java.io.File: java.lang.String toString()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isFile()>	main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean delete()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	main.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	main.xml:['country']	app['country']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	main.xml:['language']	app['language']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	main.xml:['telephony']	app['telephony']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>	main.xml:['telephony']	app['telephony']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	main.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	main.xml:['network']	app['network']	ui-unmatch
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	main.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>	main.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	main.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>	main.xml:['location']	app['location']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	main.xml:['network']	app['network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.addextras.DEVICE_ID: void <init>()>	main.xml:['device']	app['device']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	main.xml:[]	app[]
<android.os.Environment: java.io.File getExternalStorageDirectory()>	main.xml:[]	app[]
<java.io.File: java.lang.String toString()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.util.GregorianCalendar: void <init>(int,int,int)>	main.xml:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: long getTimeInMillis()>	main.xml:['calendar']	app['calendar']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	vedio.xml:['storage']	app[]	ui-unmatch
--------------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>	app:[]	app[]
<java.io.File: java.lang.String getAbsolutePath()>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	main.xml:['sensor']	app['sensor']	ui-unmatch
<android.app.Activity: void onPause()>	main.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	main.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	main.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String,java.lang.String)>	app:['file']	app['file']	ui-unmatch
<android.net.Uri: android.net.Uri fromFile(java.io.File)>	app:['file']	app['file']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String,java.lang.String)>	app:['file']	app['file']	ui-unmatch
<android.net.Uri: android.net.Uri fromFile(java.io.File)>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	app:[]	app[]
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	app:['file']	app['file']	ui-unmatch
--------------------------------
