<java.util.Calendar: java.util.Calendar getInstance()>	screen_history_based_on_day.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_history_based_on_day.xml:['calendar']	app[]	ui-unmatch
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	screen_history_based_on_day.xml:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	screen_add_new_expense.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_add_new_expense.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	screen_add_new_expense.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_add_new_expense.xml:['calendar']	app[]	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<android.view.View: void getLocationInWindow(int[])>	app:['location']	app['location']	ui-unmatch
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	app:['location']	app['location']	ui-unmatch
--------------------------------
<java.util.Locale: java.lang.String getLanguage()>	screen_go_pro.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	screen_go_pro.xml:['country']	app['country']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	screen_go_pro.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	screen_pin_input.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	screen_pin_input.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	screen_pin_input.xml:['country']	app['country']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	screen_pin_input.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isAvailable()>	screen_pin_input.xml:['network']	app['network']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	screen_stats.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_stats.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	screen_stats.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_stats.xml:['calendar']	app[]	ui-unmatch
--------------------------------
<android.os.SystemClock: long uptimeMillis()>	screen_history_based_on_day.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	screen_history_based_on_day.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	screen_history_based_on_day.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	screen_history_based_on_day.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	screen_history_based_on_day.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	screen_history_based_on_day.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	screen_history_based_on_day.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	screen_history_based_on_day.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	screen_history_based_on_day.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	screen_history_based_on_day.xml:['calendar']	app[]	ui-unmatch
<android.media.AudioManager: int getMode()>	screen_history_based_on_day.xml:['audio']	app['audio']	ui-unmatch
<android.media.AudioManager: boolean isMusicActive()>	screen_history_based_on_day.xml:['audio', 'music']	app['audio', 'music']	ui-unmatch
<android.media.AudioManager: boolean isSpeakerphoneOn()>	screen_history_based_on_day.xml:['audio', 'phone']	app['audio', 'phone']	ui-unmatch
<android.media.AudioManager: int getRingerMode()>	screen_history_based_on_day.xml:['audio']	app['audio']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	screen_history_based_on_day.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	screen_history_based_on_day.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	screen_history_based_on_day.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	screen_history_based_on_day.xml:['clock']	app['clock']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	screen_history_based_on_day.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean canRead()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: long length()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	screen_history_based_on_day.xml:['file', 'directory']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: long length()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	screen_history_based_on_day.xml:['file']	app['file']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	screen_history_based_on_day.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	screen_history_based_on_day.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	main.xml:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<android.view.View: void getLocationInWindow(int[])>	app:['location']	app['location']	ui-unmatch
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	app:['location']	app['location']	ui-unmatch
--------------------------------
<android.view.View: void getLocationInWindow(int[])>	app:['location']	app['location']	ui-unmatch
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	app:['location']	app['location']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	screen_graph_menu.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_graph_menu.xml:['calendar']	app[]	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	screen_stats.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	screen_stats.xml:['calendar']	app[]	ui-unmatch
--------------------------------
<android.widget.TabHost: void setup()>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>	main.xml:['host', 'indicator']	app['host', 'indicator']	ui-unmatch
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(int)>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>	main.xml:['host']	app['host']	ui-unmatch
<android.widget.TabHost: void setCurrentTab(int)>	main.xml:['host']	app['host']	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<android.view.View: void getLocationInWindow(int[])>	app:['location']	app['location']	ui-unmatch
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	app:['location']	app['location']	ui-unmatch
--------------------------------
