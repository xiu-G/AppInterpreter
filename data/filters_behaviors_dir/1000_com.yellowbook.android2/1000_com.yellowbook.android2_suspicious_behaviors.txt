<android.graphics.Canvas: void restore()>	app:['restore']	app['restore']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	mobile_voicesearchresultpage.xml:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: long getTimeInMillis()>	mobile_voicesearchresultpage.xml:['calendar']	app['calendar']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: java.util.List getSensorList(int)>	app:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	mobile_homepage.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	mobile_integrate_browser.xml:['script']	app['script']	ui-unmatch
<android.webkit.WebView: void loadUrl(java.lang.String)>	mobile_integrate_browser.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>	mobile_resultpage.xml:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	mobile_resultpage.xml:['sensor']	app['sensor']	ui-unmatch
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	mobile_resultpage.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.os.SystemClock: long uptimeMillis()>	app:['clock']	app['clock']	ui-unmatch
<android.location.Location: java.lang.String getProvider()>	app:[]	app[]
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.location.Location: void <init>(android.location.Location)>	app:[]	app[]
<android.location.Location: void set(android.location.Location)>	app:[]	app[]
--------------------------------
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>	app:[]	app[]
<android.location.Address: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Address: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.widget.RadioGroup: void <init>(android.content.Context)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioGroup: void setPadding(int,int,int,int)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void <init>(android.content.Context)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setText(java.lang.CharSequence)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setTextAppearance(android.content.Context,int)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setTextColor(int)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setTextSize(float)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setId(int)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioGroup: void addView(android.view.View)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioGroup: void check(int)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)>	mobile_resultpage.xml:['radio']	app['radio']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	mobile_voicesearchresultpage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_voicesearchresultpage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>	app:['url']	app['url']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	mobile_barcode_result.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_barcode_result.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.widget.RadioButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>	app:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setChecked(boolean)>	app:['radio']	app['radio']	ui-unmatch
--------------------------------
<android.widget.VideoView: void setVideoPath(java.lang.String)>	mobile_results_video.xml:[]	app[]
<android.widget.MediaController: void <init>(android.content.Context)>	mobile_results_video.xml:['medium']	app['medium']	ui-unmatch
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>	mobile_results_video.xml:['medium']	app['medium']	ui-unmatch
<android.widget.VideoView: boolean requestFocus()>	mobile_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>	mobile_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>	mobile_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>	mobile_results_video.xml:[]	app[]
--------------------------------
<android.hardware.Camera: android.hardware.Camera open()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: int getPreviewFormat()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void set(java.lang.String,int)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void set(java.lang.String,int)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void startPreview()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	app:['url']	app['url']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: android.hardware.Camera open()>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void release()>	app:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	mobile_barcode_result.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: int get(int)>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: void set(int,int)>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: long getTimeInMillis()>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Date: int getYear()>	app:['year']	app['year']	ui-unmatch
<java.util.Date: int getMonth()>	app:['month']	app['month']	ui-unmatch
<java.util.Date: int getHours()>	app:[]	app[]
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void <init>()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setAudioStreamType(int)>	mobile_barcode.xml:['medium', 'player', 'audio']	app['medium', 'player', 'audio']	ui-unmatch
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	mobile_barcode.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	mobile_barcode.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	mobile_barcode.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: void close()>	mobile_barcode.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setVolume(float,float)>	mobile_barcode.xml:['medium', 'player', 'volume']	app['medium', 'player', 'volume']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	app:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	mobile_barcode.xml:['pause']	app['pause']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void stopPreview()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void release()>	mobile_barcode.xml:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.widget.VideoView: void setVideoPath(java.lang.String)>	tablet_results_video.xml:[]	app[]
<android.widget.MediaController: void <init>(android.content.Context)>	tablet_results_video.xml:['medium']	app['medium']	ui-unmatch
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>	tablet_results_video.xml:['medium']	app['medium']	ui-unmatch
<android.widget.VideoView: boolean requestFocus()>	tablet_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>	tablet_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>	tablet_results_video.xml:[]	app[]
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>	tablet_results_video.xml:[]	app[]
--------------------------------
<java.util.Date: int getDay()>	mobile_movie_detail.xml:['day']	app[]	ui-unmatch
<java.util.Date: int getMonth()>	mobile_movie_detail.xml:['month']	app['month']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	mobile_homepage.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.hardware.SensorManager: java.util.List getSensorList(int)>	app:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	app:['sensor']	app['sensor']	ui-unmatch
<android.hardware.Camera: void startPreview()>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void stopPreview()>	app:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void startPreview()>	app:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.hardware.Camera: void stopPreview()>	app:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void release()>	app:['camera']	app['camera']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.location.Address: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Address: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>	app:[]	app[]
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>	app:[]	app[]
<android.location.Address: java.lang.String getLocality()>	app:[]	app[]
<android.location.Address: java.lang.String getPostalCode()>	app:[]	app[]
<android.location.Address: java.lang.String getAdminArea()>	app:[]	app[]
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	app:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: int getResponseCode()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	common_streetview.xml:['script']	app['script']	ui-unmatch
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	common_streetview.xml:['url']	app['url']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>	app:['picture']	app['picture']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: long getTimeInMillis()>	app:['calendar']	app['calendar']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	app:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: int get(int)>	app:['calendar']	app['calendar']	ui-unmatch
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>	app:['url']	app['url']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>	mobile_resultpage.xml:['submit']	app[]	ui-unmatch
--------------------------------
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	app:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void seekTo(int)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>	app:[]	app[]
<android.location.Address: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Address: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: java.util.List getSensorList(int)>	mobile_homepage.xml:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.hardware.Sensor: float getMaximumRange()>	mobile_homepage.xml:['sensor']	app['sensor']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	mobile_banner_expanded.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mobile_banner_expanded.xml:['location', 'location']	app[]	ui-unmatch
<android.location.Location: long getTime()>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void <init>(java.lang.String)>	mobile_banner_expanded.xml:['location']	app[]	ui-unmatch
<android.location.Location: void setLatitude(double)>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: void setLongitude(double)>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_banner_expanded.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_banner_expanded.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	mobile_homepage.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	mobile_homepage.xml:['pause']	app['pause']	ui-unmatch
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>	mobile_homepage.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<java.net.HttpURLConnection: void disconnect()>	app:['http', 'url', 'disconnect']	app['http', 'url', 'disconnect']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	mobile_resultpage.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
--------------------------------
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>	mobile_profilepage.xml:['camera']	app['camera']	ui-unmatch
<android.media.MediaPlayer: void start()>	mobile_barcode.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	mobile_profilepage.xml:['location', 'latitude']	app['latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	mobile_profilepage.xml:['location', 'longitude']	app['longitude']	ui-unmatch
--------------------------------
