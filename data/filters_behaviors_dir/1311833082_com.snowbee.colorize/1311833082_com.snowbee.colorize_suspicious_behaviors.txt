<android.app.Activity: void onPause()>	colorize.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	app:[]	app[]
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	app:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	app:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	app:[]	app[]
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.text.format.Time: int getJulianDay(long,long)>	menu_list.xml:['day']	app[]	ui-unmatch
<java.util.Date: int getHours()>	menu_list.xml:['hour']	app[]	ui-unmatch
<java.util.Date: void setHours(int)>	menu_list.xml:['hour']	app[]	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	menu_list.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	app:[]	app[]
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>	greader_login.xml:['account']	app['account']	ui-unmatch
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>	greader_login.xml:['account', 'account']	app['account', 'account']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	app:[]	app[]
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>	facebook_photoviewer.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	facebook_photoviewer.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	facebook_photoviewer.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	facebook_photoviewer.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	facebook_photoviewer.xml:['file']	app['file']	ui-unmatch
<java.net.URI: java.net.URL toURL()>	facebook_photoviewer.xml:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	facebook_photoviewer.xml:['url']	app['url']	ui-unmatch
<java.net.URLConnection: void connect()>	facebook_photoviewer.xml:['url', 'connect']	app['url', 'connect']	ui-unmatch
<java.net.URLConnection: java.io.InputStream getInputStream()>	facebook_photoviewer.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	verify.xml:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	verify.xml:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	verify.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	verify.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	verify.xml:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	verify.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void disconnect()>	verify.xml:['http', 'url', 'disconnect']	app['http', 'url', 'disconnect']	ui-unmatch
<java.net.MalformedURLException: void printStackTrace()>	verify.xml:['url']	app['url']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	app:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.lang.String)>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.lang.String)>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	subscriptions_list.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	greader.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	greader.xml:['file']	app['file']	ui-unmatch
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	greader.xml:['url']	app['url']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	facebook_login.xml:['call', 'permission']	app['permission']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	app:[]	app[]
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	verify.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<java.io.FileOutputStream: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	app:['file']	app['file']	ui-unmatch
<java.io.FileNotFoundException: void printStackTrace()>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	tweet.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void disconnect()>	app:['http', 'url', 'disconnect']	app['http', 'url', 'disconnect']	ui-unmatch
<java.net.MalformedURLException: void printStackTrace()>	app:['url']	app['url']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	subscriptions_list.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>	subscriptions_list.xml:['network', 'connect', 'connect']	app['network', 'connect', 'connect']	ui-unmatch
--------------------------------
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
--------------------------------
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>	app:['week']	app['week']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void setTime(java.util.Date)>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<java.util.Date: void setHours(int)>	app:[]	app[]
<java.util.Date: void setMonth(int)>	app:['month']	app['month']	ui-unmatch
<java.util.Date: int getYear()>	app:['year']	app['year']	ui-unmatch
<java.util.Date: void setYear(int)>	app:['year']	app['year']	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void setTime(java.util.Date)>	app:[]	app[]
<java.util.Calendar: void add(int,int)>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<android.text.format.Time: int getJulianDay(long,long)>	app:[]	app[]
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void setTime(java.util.Date)>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<java.util.Date: void setHours(int)>	app:[]	app[]
<java.util.Date: void setMonth(int)>	app:['month']	app['month']	ui-unmatch
<java.util.Date: int getYear()>	app:['year']	app['year']	ui-unmatch
<java.util.Date: void setYear(int)>	app:['year']	app['year']	ui-unmatch
<android.text.format.Time: int getJulianDay(long,long)>	app:[]	app[]
<android.text.format.Time: long setJulianDay(int)>	app:[]	app[]
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void set(int,int)>	app:[]	app[]
<java.util.Calendar: void add(int,int)>	app:[]	app[]
<java.util.Calendar: int getActualMaximum(int)>	app:[]	app[]
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void set(int,int)>	app:[]	app[]
<java.util.Calendar: void add(int,int)>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void set(int,int)>	app:[]	app[]
<java.util.Calendar: int getActualMaximum(int)>	app:[]	app[]
<java.util.Date: int getYear()>	app:['year']	app['year']	ui-unmatch
<java.util.Date: int getMonth()>	app:['month']	app['month']	ui-unmatch
<java.util.Date: int getYear()>	app:['year']	app['year']	ui-unmatch
<java.util.Date: int getMonth()>	app:['month']	app['month']	ui-unmatch
<android.text.format.Time: int getJulianDay(long,long)>	app:[]	app[]
--------------------------------
