----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>    	['sensor', 'sensor']
<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>    	['host']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>    	['host', 'indicator']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)>    	['host']
<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>    	['host']
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
<android.widget.TabHost: int getCurrentTab()>    	['host']
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>    	['host']
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>    	['host']
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>    	['host']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>    	['host', 'indicator']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<java.util.Locale: java.lang.String getCountry()>    	['country']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<android.addextras.com.android.contacts_data_phones: void <init>()>    	['contact', 'phone']
<android.addextras.com.android.contacts_data: void <init>()>    	['contact']
<android.addextras.com.android.contacts_data_emails: void <init>()>    	['contact', 'email']
<android.addextras.com.android.contacts_data: void <init>()>    	['contact']
<android.addextras.com.android.contacts_data: void <init>()>    	['contact']
<android.addextras.com.android.contacts_data: void <init>()>    	['contact']
<android.text.ClipboardManager: java.lang.CharSequence getText()>    	['clipboard']
<android.addextras.la.droid.qr.priva.titulo_url: void <init>()>    	['url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>    	['connectivity']
<android.net.NetworkInfo: int getType()>    	['network']
<android.net.NetworkInfo: int getSubtype()>    	['network']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<android.addextras.android.intent.action.MEDIA_MOUNTED: void <init>()>    	['medium']
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: java.lang.CharSequence getText()>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.android.launcher.action.INSTALL_SHORTCUT: void <init>()>    	['shortcut']
<android.addextras.android.intent.action.CREATE_SHORTCUT: void <init>()>    	['shortcut']
<android.text.ClipboardManager: java.lang.CharSequence getText()>    	['clipboard']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<android.location.Address: void <init>(java.util.Locale)>    	['address']
<android.location.Address: java.lang.String getSubLocality()>    	['address']
<android.location.Address: java.lang.String getLocality()>    	['address']
<android.location.Address: java.lang.String getSubAdminArea()>    	['address']
<android.location.Address: java.lang.String getAdminArea()>    	['address']
<android.location.Address: java.lang.String getCountryCode()>    	['address', 'country']
<android.location.Address: java.lang.String getCountryName()>    	['address', 'country']
<android.addextras.la.droid.qr.priva.sms: void <init>()>    	['sms']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<android.text.ClipboardManager: java.lang.CharSequence getText()>    	['clipboard']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void add(int,int)>    	['calendar']
<java.util.Calendar: void set(int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<android.addextras.la.droid.qr.priva.calendario_editar: void <init>()>    	['calendar']
----------------------------
----------------------------
<java.util.Calendar: void set(int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<java.util.Calendar: boolean before(java.lang.Object)>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<java.util.Calendar: void set(int,int)>    	['calendar']
<java.util.Calendar: java.lang.Object clone()>    	['calendar']
<java.util.Calendar: void add(int,int)>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: void set(int,int)>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<android.addextras.android.intent.action.MEDIA_MOUNTED: void <init>()>    	['medium']
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: int getCurrentTab()>    	['host']
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>    	['host']
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.util.Map getHeaderFields()>    	['http', 'url']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.FileInputStream: int available()>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
<java.util.Calendar: void set(int,int)>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<android.text.ClipboardManager: java.lang.CharSequence getText()>    	['clipboard']
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onLowMemory()>    	['memory']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.File: java.lang.String getCanonicalPath()>    	['file']
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: void set(int,int)>    	['calendar']
----------------------------
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>    	['http']
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>    	['http']
<android.net.http.AndroidHttpClient: void close()>    	['http']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.hardware.Camera: android.hardware.Camera open()>    	['camera']
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>    	['camera']
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>    	['camera']
<android.hardware.Camera$Parameters: int getPreviewFormat()>    	['camera']
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>    	['camera']
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>    	['camera']
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>    	['camera']
<android.hardware.Camera$Parameters: void set(java.lang.String,int)>    	['camera']
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)>    	['camera']
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>    	['camera']
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>    	['camera']
<android.hardware.Camera: void startPreview()>    	['camera']
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>    	['camera']
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>    	['camera']
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>    	['camera']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>    	['sensor']
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>    	['camera']
<android.hardware.Camera: void stopPreview()>    	['camera']
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>    	['camera']
<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)>    	['camera']
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>    	['camera']
<android.hardware.Camera$Parameters: java.lang.String getFlashMode()>    	['camera']
<android.hardware.Camera: void release()>    	['camera']
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>    	['sensor']
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean canWrite()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileInputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.Address: double getLatitude()>    	['address', 'latitude']
<android.location.Address: double getLongitude()>    	['address', 'longitude']
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
----------------------------
----------------------------
<android.addextras.browser_bookmarks: void <init>()>    	['bookmark']
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>    	['location']
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.android.contacts_contacts: void <init>()>    	['contact', 'contact']
----------------------------
----------------------------
