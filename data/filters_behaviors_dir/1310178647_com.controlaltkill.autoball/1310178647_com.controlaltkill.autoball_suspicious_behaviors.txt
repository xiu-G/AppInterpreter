<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>	tableau.xml:['telephony']	app['telephony']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(int)>	app:['address']	app['address']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	app:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	app:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	app:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void <init>()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URL: java.lang.Object getContent()>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<java.util.Date: int getDay()>	tableau.xml:['day']	app['day']	ui-unmatch
<java.util.Date: int getMonth()>	tableau.xml:['month']	app['month']	ui-unmatch
<java.util.Date: int getYear()>	tableau.xml:['year']	app['year']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>	tableau.xml:['telephony']	app['telephony']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(int)>	app:['address']	app['address']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	app:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	app:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	app:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>	tableau.xml:['telephony']	app['telephony']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>	app:['address']	app['address']	ui-unmatch
<java.net.InetSocketAddress: void <init>(int)>	app:['address']	app['address']	ui-unmatch
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	app:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	app:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	app:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<java.nio.channels.DatagramChannel: boolean isConnected()>	app:['connect']	app['connect']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.nio.channels.DatagramChannel: boolean isConnected()>	app:['connect']	app['connect']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void reset()>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>	tableau.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getStartOffset()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.content.res.AssetFileDescriptor: long getLength()>	tableau.xml:['file']	app['file']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>	tableau.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	tableau.xml:['language']	app['language']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	tableau.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	tableau.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.Location: double getLatitude()>	tableau.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	tableau.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<java.util.GregorianCalendar: int get(int)>	tableau.xml:[]	app[]
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	tableau.xml:['call', 'permission']	app['call', 'permission']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	tableau.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	tableau.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	tableau.xml:['clock']	app['clock']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	tableau.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
