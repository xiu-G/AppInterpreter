----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>    	['address']
<java.net.InetSocketAddress: void <init>(int)>    	['address']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.Object getContent()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<java.util.Date: int getDay()>    	['day']
<java.util.Date: int getMonth()>    	['month']
<java.util.Date: int getYear()>    	['year']
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>    	['address']
<java.net.InetSocketAddress: void <init>(int)>    	['address']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>    	['address']
<java.net.InetSocketAddress: void <init>(int)>    	['address']
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
<java.nio.channels.DatagramChannel: boolean isConnected()>    	['connect']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.nio.channels.DatagramChannel: boolean isConnected()>    	['connect']
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<java.util.GregorianCalendar: int get(int)>    	['calendar']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<android.os.SystemClock: long uptimeMillis()>    	['clock']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
