<android.app.Activity: void onPause()>	history_list.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	compass.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	compass.xml:['network']	app['network']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String toString()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: long length()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String toString()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	compass.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void write(byte[])>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	compass.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String toString()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isFile()>	compass.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean delete()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	compass.xml:['file', 'directory']	app['file', 'directory']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	compass.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	compass.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	compass.xml:['country']	app['country']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	compass.xml:['language']	app['language']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	compass.xml:['telephony']	app['telephony']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	compass.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	compass.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	compass.xml:['network']	app['network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	compass.xml:['network']	app['network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.addextras.DEVICE_ID: void <init>()>	compass.xml:['device']	app['device']	ui-unmatch
<android.addextras.ADVIEW: void <init>()>	compass.xml:['ad']	app[]	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	content_layout.xml:['script']	app['script']	ui-unmatch
<android.webkit.WebView: void loadUrl(java.lang.String)>	content_layout.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	app:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	app:['location']	app['location']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	hot.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	hot.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	hot.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	hot.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	app:['sensor']	app['sensor']	ui-unmatch
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	compass.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	compass.xml:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	main.xml:['sensor']	app['sensor']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void reset()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setLooping(boolean)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>	app:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus$Listener)>	app:['location']	app['location']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	content_layout.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	remove_ad_layout.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	help.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	about.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	app:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setLooping(boolean)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>	main.xml:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	main.xml:['sensor']	app['sensor']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	main.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	main.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	main.xml:['network']	app['network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.lang.String)>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void write(byte[])>	main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	main.xml:['file']	app['file']	ui-unmatch
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>	main.xml:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	main.xml:['location', 'location']	app['location', 'location']	ui-unmatch
--------------------------------
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>	compass.xml:['sensor', 'sensor']	app['sensor', 'sensor']	ui-unmatch
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>	compass.xml:['sensor']	app['sensor']	ui-unmatch
<android.os.SystemClock: long uptimeMillis()>	compass.xml:['clock']	app['clock']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	compass.xml:['permission']	app['permission']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	compass.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	compass.xml:['address']	app['address']	ui-unmatch
<android.location.Location: double getLatitude()>	compass.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	compass.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: float bearingTo(android.location.Location)>	compass.xml:['location']	app['location']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	compass.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	compass.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<android.content.Context: java.io.File getFilesDir()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String,java.lang.String)>	compass.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	compass.xml:['file']	app['file']	ui-unmatch
<android.location.Location: double getLatitude()>	main.xml:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.location.Location: double getLongitude()>	main.xml:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getAltitude()>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: java.lang.String convert(double,int)>	main.xml:['location']	app['location']	ui-unmatch
<android.location.Location: float getSpeed()>	main.xml:['location', 'speed']	app['location', 'speed']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void prepare()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.location.Location: float distanceTo(android.location.Location)>	main.xml:['location']	app['location']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player', 'play']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	main.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.hardware.Sensor: int getType()>	app:['sensor']	app['sensor']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>	app:['location']	app['location']	ui-unmatch
<android.location.GpsStatus: int getTimeToFirstFix()>	app:[]	app[]
<android.location.GpsStatus: java.lang.Iterable getSatellites()>	app:[]	app[]
<android.location.GpsSatellite: boolean usedInFix()>	app:[]	app[]
--------------------------------
