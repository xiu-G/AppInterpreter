----------------------------
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_EmailAddresses: void <init>()>    	['email', 'address']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ImContacts: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_PhoneNumbers: void <init>()>    	['phone']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<java.util.Locale: java.lang.String getCountry()>    	['country']
<android.addextras.state.tabsettingsactivity.password: void <init>()>    	['password']
<android.addextras.state.tabsettingsactivity.email: void <init>()>    	['email']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.state.settingspasswordactivity.password: void <init>()>    	['password']
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>    	['account', 'account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void reset()>    	['medium', 'player']
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>    	['file', 'file']
<android.content.res.AssetFileDescriptor: long getStartOffset()>    	['file']
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>    	['file']
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>    	['medium', 'player']
<android.media.MediaPlayer: void prepareAsync()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<android.telephony.TelephonyManager: int getDataState()>    	['telephony']
----------------------------
----------------------------
<android.addextras.state.confirmfriendactivity.contacts: void <init>()>    	['contact']
<android.addextras.extra.confirmfriendactivity.contacts: void <init>()>    	['contact']
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Locale: java.lang.String getCountry()>    	['country']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>    	['telephony', 'network']
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>    	['telephony', 'network', 'country']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>    	['telephony', 'network']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.choochee.messenger.createaccountactivity.PASSWORD: void <init>()>    	['password']
----------------------------
----------------------------
<android.addextras.extra.choocheesyncadapter.ACCOUNT_ID: void <init>()>    	['account']
<android.addextras.com.choochee.android.messenger.syncadapter.ACTION_CONTACT_SYNC_LISTENER: void <init>()>    	['contact']
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>    	['host']
<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>    	['host']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>    	['host', 'indicator']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)>    	['host']
<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>    	['host']
<android.widget.TabHost: android.view.View findViewById(int)>    	['host']
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.AccountAuthenticatorActivity: boolean onKeyDown(int,android.view.KeyEvent)>    	['account']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)>    	['radio']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void clearFormData()>    	['form']
<android.webkit.WebView: void clearHistory()>    	['history']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_Messages_ChooCheeContacts_Recipients: void <init>()>    	['contact']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>    	['phone']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.addextras.state.contactcard.contactid: void <init>()>    	['contact']
<android.addextras.extra.contactcard.contactid: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_PhoneNumbers: void <init>()>    	['phone']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_EmailAddresses: void <init>()>    	['email', 'address']
----------------------------
----------------------------
----------------------------
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>    	['account', 'account']
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>    	['account', 'password']
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: java.lang.String getTypeName()>    	['network']
<android.net.NetworkInfo: java.lang.String getReason()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>    	['alarm']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.addextras.noConnectivity: void <init>()>    	['connectivity']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.state.settingspasswordactivity.password: void <init>()>    	['password']
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.state.tabsettingsactivity.password: void <init>()>    	['password']
<android.addextras.state.tabsettingsactivity.email: void <init>()>    	['email']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void setTimeInMillis(long)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>    	['alarm']
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>    	['account']
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>    	['alarm']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>    	['account']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: long getTimeInMillis()>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.ListView: void setChoiceMode(int)>    	['choice']
----------------------------
<android.addextras.com.android.contacts_data_phones: void <init>()>    	['contact', 'phone']
<android.addextras.com.android.contacts_data_emails: void <init>()>    	['contact', 'email']
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.choochee.android.messenger.imservice.ADDCONTACT_JSONSTRING: void <init>()>    	['contact']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>    	['account', 'account']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>    	['account', 'account']
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>    	['account']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>    	['account', 'account']
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<android.addextras.state.messagecomposer.audio: void <init>()>    	['audio']
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.com.choochee.android.messenger.imservice.OLD_PASSWORD: void <init>()>    	['password']
<android.addextras.com.choochee.android.messenger.imservice.PASSWORD: void <init>()>    	['password']
----------------------------
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.addextras.state.tabcontactactivity.selectedcontacts: void <init>()>    	['contact']
<android.addextras.extra.tabcontactactivity.CONTACTS: void <init>()>    	['contact']
<android.addextras.extra.tabcontactactivity.SELECT_MULTIPLE_CONTACTS: void <init>()>    	['contact']
<android.widget.ListView: void setChoiceMode(int)>    	['choice']
----------------------------
----------------------------
----------------------------
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>    	['phone']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
<android.addextras.state.imaccounteditactivity.password: void <init>()>    	['password']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>    	['account']
<android.widget.RadioGroup: void check(int)>    	['radio']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.AccountAuthenticatorActivity: void onPause()>    	['account', 'pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.ACCOUNTCREDENTIAL: void <init>()>    	['account']
<android.addextras.PASSWORD: void <init>()>    	['password']
<android.addextras.EMAIL: void <init>()>    	['email']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Timer: void <init>(java.lang.String)>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.extra.confirmonefriendactivity.contacts: void <init>()>    	['contact']
<android.addextras.state.confirmonefriendactivity.contacts: void <init>()>    	['contact']
----------------------------
----------------------------
----------------------------
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>    	['telephony', 'network']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>    	['telephony', 'network']
<android.telephony.TelephonyManager: int getNetworkType()>    	['telephony', 'network']
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>    	['telephony', 'network', 'country']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>    	['telephony', 'country']
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>    	['telephony']
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>    	['telephony']
<android.telephony.TelephonyManager: int getDataState()>    	['telephony']
<android.addextras.com.choochee.messenger.createaccountactivity.PASSWORD: void <init>()>    	['password']
----------------------------
<android.accounts.AccountAuthenticatorActivity: void <init>()>    	['account']
----------------------------
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>    	['account']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
----------------------------
<android.accounts.AccountAuthenticatorActivity: void onPause()>    	['account', 'pause']
----------------------------
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>    	['host']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
----------------------------
----------------------------
----------------------------
<android.widget.TextView: void playSoundEffect(int)>    	['play', 'sound']
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: int getCurrentTab()>    	['host']
<android.widget.TabHost: java.lang.String getCurrentTabTag()>    	['host']
<android.widget.TabHost: android.os.IBinder getWindowToken()>    	['host']
----------------------------
<android.app.TabActivity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<java.util.Calendar: void set(int,int,int,int,int,int)>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<java.util.Calendar: boolean before(java.lang.Object)>    	['calendar']
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>    	['account', 'account']
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>    	['sms']
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>    	['sms']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>    	['choice']
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>    	['choice']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.SystemClock: long uptimeMillis()>    	['clock']
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.state.settingspasswordactivity.password: void <init>()>    	['password']
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
<java.util.Calendar: void set(int,int,int,int,int,int)>    	['calendar']
<java.util.Calendar: void setTime(java.util.Date)>    	['calendar']
<java.util.Calendar: boolean before(java.lang.Object)>    	['calendar']
<java.util.Calendar: void setTimeZone(java.util.TimeZone)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.state.settingspasswordactivity.password: void <init>()>    	['password']
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<android.addextras.state.settingspasswordactivity.password: void <init>()>    	['password']
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>    	['telephony']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
<android.accounts.AccountAuthenticatorActivity: void <init>()>    	['account']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>    	['account']
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>    	['account', 'password']
----------------------------
----------------------------
----------------------------
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>    	['phone']
<android.widget.TextView: void playSoundEffect(int)>    	['play', 'sound']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.addextras.com.choochee.android.messenger.cws.ChooCheeContentProvider_ChooCheeContacts: void <init>()>    	['contact']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.DatePicker: int getMonth()>    	['month']
<android.widget.DatePicker: int getDayOfMonth()>    	['day', 'month']
<android.widget.DatePicker: int getYear()>    	['year']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
----------------------------
----------------------------
----------------------------
<android.addextras.sms_inbox: void <init>()>    	['sms']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.io.File getAbsoluteFile()>    	['file', 'file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>    	['file']
<java.nio.channels.FileChannel: boolean isOpen()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
----------------------------
----------------------------
----------------------------
<java.util.TimerTask: boolean cancel()>    	['timer']
<java.util.Timer: int purge()>    	['timer']
<java.util.TimerTask: void <init>()>    	['timer']
<java.util.Timer: void schedule(java.util.TimerTask,java.util.Date)>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setAudioStreamType(int)>    	['medium', 'player', 'audio']
