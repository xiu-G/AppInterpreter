----------------------------
----------------------------
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void setConnectTimeout(int)>    	['url', 'connect']
<java.net.URLConnection: void setReadTimeout(int)>    	['url']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
----------------------------
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>    	['camera']
<android.hardware.Camera: void startPreview()>    	['camera']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>    	['camera']
<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>    	['camera']
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>    	['camera']
<android.hardware.Camera: void stopPreview()>    	['camera']
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>    	['medium', 'player']
<android.media.MediaPlayer: void setLooping(boolean)>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>    	['http', 'url']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileInputStream: int available()>    	['file']
<java.io.FileInputStream: int read(byte[],int,int)>    	['file']
<java.io.FileInputStream: void close()>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>    	['camera', 'picture']
----------------------------
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.addextras.search_word: void <init>()>    	['word']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>    	['restore']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void setConnectTimeout(int)>    	['url', 'connect']
<java.net.URLConnection: void setReadTimeout(int)>    	['url']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
<java.util.Date: int getHours()>    	['hour']
<java.util.Date: void setHours(int)>    	['hour']
<java.util.Date: int getHours()>    	['hour']
<java.util.Date: void setHours(int)>    	['hour']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URI toURI()>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.addextras.search_word: void <init>()>    	['word']
<android.addextras.LINK_URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
<android.addextras.android.speech.action.RECOGNIZE_SPEECH: void <init>()>    	['speech']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.hardware.Camera: void release()>    	['camera']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
<android.addextras.LINK_URL: void <init>()>    	['url']
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.content.ContextWrapper: java.lang.String[] fileList()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getQuery()>    	['url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getRef()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.io.InputStream openStream()>    	['url']
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
<android.hardware.Camera: android.hardware.Camera open()>    	['camera']
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>    	['camera']
<android.hardware.Camera: void release()>    	['camera']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<android.content.ContextWrapper: java.lang.String[] fileList()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.io.InputStream openStream()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>    	['camera']
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>    	['camera']
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>    	['camera']
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>    	['camera']
<android.hardware.Camera$Parameters: int getPreviewFormat()>    	['camera']
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>    	['camera']
<android.hardware.Camera: void startPreview()>    	['camera']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String)>    	['url']
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>    	['call', 'permission']
<android.addextras.access_token: void <init>()>    	['access']
<android.addextras.failing_url: void <init>()>    	['url']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.URLDecoder: java.lang.String decode(java.lang.String)>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>    	['http', 'url']
<android.addextras.access_token: void <init>()>    	['access']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileInputStream: void <init>(java.lang.String)>    	['file']
<java.util.Date: void setYear(int)>    	['year']
<java.util.Date: void setMonth(int)>    	['month']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void setConnectTimeout(int)>    	['url', 'connect']
<java.net.URLConnection: void setReadTimeout(int)>    	['url']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: int get(int)>    	['calendar']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>    	['url']
<java.net.URLConnection: void setConnectTimeout(int)>    	['url', 'connect']
<java.net.URLConnection: void setReadTimeout(int)>    	['url']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
----------------------------
----------------------------
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getPath()>    	['file']
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
