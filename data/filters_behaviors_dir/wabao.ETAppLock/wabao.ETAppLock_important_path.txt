----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>    	['file']
----------------------------
----------------------------
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>    	['alarm']
----------------------------
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: int getType()>    	['network']
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: int getPort()>    	['url', 'port']
<java.net.URL: java.lang.String getProtocol()>    	['url']
<java.net.URL: java.lang.String getHost()>    	['url', 'host']
<java.net.URL: java.lang.String getPath()>    	['url']
<java.net.URL: java.lang.String getQuery()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>    	['password']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.view.View: void getLocationOnScreen(int[])>    	['location']
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>    	['ring', 'ring']
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>    	['ring']
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>    	['device']
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>    	['ring']
----------------------------
----------------------------
<android.support.v4.app.FragmentActivity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void flush()>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: boolean delete()>    	['file']
----------------------------
<android.os.SystemClock: long elapsedRealtime()>    	['clock']
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: boolean canWrite()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
----------------------------
----------------------------
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: long length()>    	['access', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.os.SystemClock: long elapsedRealtime()>    	['clock']
<android.os.SystemClock: long elapsedRealtime()>    	['clock']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
----------------------------
<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>    	['shortcut']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>    	['password']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>    	['sms']
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>    	['sms']
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>    	['sms']
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>    	['sms']
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: int getPort()>    	['url', 'port']
<java.net.URL: java.lang.String getProtocol()>    	['url']
<java.net.URL: java.lang.String getHost()>    	['url', 'host']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
----------------------------
<android.telephony.TelephonyManager: int getPhoneType()>    	['telephony', 'phone']
----------------------------
----------------------------
----------------------------
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>    	['sms', 'address']
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>    	['sms']
<android.telephony.SmsMessage: long getTimestampMillis()>    	['sms']
<android.media.AudioManager: int getRingerMode()>    	['audio']
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>    	['sms']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.FragmentActivity: void onPause()>    	['pause']
----------------------------
----------------------------
<android.app.admin.DeviceAdminReceiver: void <init>()>    	['device']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.Environment: java.io.File getDataDirectory()>    	['directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>    	['file']
<java.io.File: long length()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>    	['clipboard']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.support.v4.app.FragmentActivity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.SystemClock: long elapsedRealtime()>    	['clock']
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.telephony.TelephonyManager: int getCallState()>    	['telephony', 'call']
<android.media.AudioManager: void setRingerMode(int)>    	['audio']
<android.media.AudioManager: int getRingerMode()>    	['audio']
<com.android.internal.telephony.PhoneUtils: boolean endCall(android.content.Context)>    	['phone', 'call']
<com.android.internal.telephony.ITelephony: boolean endCall()>    	['telephony', 'call']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.io.File getAbsoluteFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.io.File getAbsoluteFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: boolean delete()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>    	['password']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>    	['password']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>    	['contact', 'contact', 'contact', 'photo']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: long length()>    	['file']
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long lastModified()>    	['file']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long lastModified()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>    	['choice']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<android.os.Environment: java.io.File getExternalStorageDirectory()>    	['storage', 'directory']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>    	['password']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isFile()>    	['file', 'file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.Ringtone: void play()>    	['ring', 'play']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<com.android.internal.telephony.PhoneUtils: void cancelMissedCallsNotification(android.content.Context)>    	['phone', 'call']
<com.android.internal.telephony.ITelephony: void cancelMissedCallsNotification()>    	['telephony', 'call']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>    	['choice']
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>    	['contact', 'phone']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
