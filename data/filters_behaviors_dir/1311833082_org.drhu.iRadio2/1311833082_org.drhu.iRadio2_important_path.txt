----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void setVolume(float,float)>    	['medium', 'player', 'volume']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: java.lang.String getTypeName()>    	['network']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>    	['location', 'location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>    	['location', 'location']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>    	['telephony', 'network']
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>    	['telephony']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isAvailable()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void connect()>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>    	['alarm']
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>    	['alarm']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
----------------------------
<android.media.MediaPlayer: void stop()>    	['medium', 'player']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>    	['address']
<java.net.Socket: void connect(java.net.SocketAddress,int)>    	['connect']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.HttpURLConnection: void disconnect()>    	['http', 'url', 'disconnect']
----------------------------
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.media.MediaPlayer: void setVolume(float,float)>    	['medium', 'player', 'volume']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<android.media.AudioManager: int getStreamMaxVolume(int)>    	['audio', 'volume']
<android.media.AudioManager: int getStreamVolume(int)>    	['audio', 'volume']
<java.lang.OutOfMemoryError: java.lang.String toString()>    	['memory']
<android.telephony.PhoneStateListener: void <init>()>    	['phone']
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>    	['telephony']
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<java.util.Locale: java.lang.String getCountry()>    	['country']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
----------------------------
----------------------------
<android.media.MediaPlayer: void prepare()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>    	['phone', 'call']
<android.media.MediaPlayer: boolean isPlaying()>    	['medium', 'player', 'play']
<android.media.MediaPlayer: void pause()>    	['medium', 'player', 'pause']
----------------------------
<android.media.MediaPlayer: void <init>()>    	['medium', 'player']
<android.media.MediaPlayer: void setAudioStreamType(int)>    	['medium', 'player', 'audio']
<android.media.MediaPlayer: void setVolume(float,float)>    	['medium', 'player', 'volume']
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>    	['medium', 'player']
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>    	['medium', 'player']
<android.media.MediaPlayer: void release()>    	['medium', 'player']
<android.media.MediaPlayer: void start()>    	['medium', 'player']
----------------------------
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>    	['address']
<java.net.Socket: void connect(java.net.SocketAddress,int)>    	['connect']
----------------------------
----------------------------
----------------------------
----------------------------
