<android.media.MediaPlayer: void release()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: int getCurrentPosition()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void setVolume(float,float)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	app:['network']	app['network']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	app:['permission']	app['permission']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	app:['location', 'location']	app['location', 'location']	ui-unmatch
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>	app:['location', 'location']	app['location', 'location']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	app:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>	app:['telephony', 'network']	app['telephony', 'network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>	app:['telephony']	app['telephony']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isAvailable()>	app:['network']	app['network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnected()>	app:['network', 'connect']	app['network', 'connect']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	app:[]	app[]
<java.net.URL: java.net.URLConnection openConnection()>	app:[]	app[]
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	app:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: void setConnectTimeout(int)>	app:['http', 'connect']	app['http', 'connect']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'connect']	app['http', 'connect']	ui-unmatch
<java.net.HttpURLConnection: int getResponseCode()>	app:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	app:['http']	app['http']	ui-unmatch
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>	app:['alarm']	app['alarm']	ui-unmatch
<android.location.Location: double getLongitude()>	app:['location', 'longitude']	app['location', 'longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	app:['location', 'latitude']	app['location', 'latitude']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	app:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>	add.xml:['address']	app['address']	ui-unmatch
<java.net.Socket: void connect(java.net.SocketAddress,int)>	add.xml:['connect']	app['connect']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	add.xml:[]	app[]
<java.net.URL: java.net.URLConnection openConnection()>	add.xml:[]	app[]
<java.net.HttpURLConnection: int getResponseCode()>	add.xml:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	add.xml:['http']	app['http']	ui-unmatch
<java.net.HttpURLConnection: void disconnect()>	add.xml:['http', 'disconnect']	app['http', 'disconnect']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void release()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void setVolume(float,float)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	main.xml:['url']	app[]	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	main.xml:['url']	app[]	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	main.xml:['http', 'url']	app['http']	ui-unmatch
<android.media.AudioManager: int getStreamMaxVolume(int)>	main.xml:['audio']	app['audio']	ui-unmatch
<android.media.AudioManager: int getStreamVolume(int)>	main.xml:['audio']	app['audio']	ui-unmatch
<java.lang.OutOfMemoryError: java.lang.String toString()>	main.xml:['memory']	app['memory']	ui-unmatch
<android.telephony.PhoneStateListener: void <init>()>	main.xml:[]	app[]
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>	main.xml:['telephony']	app['telephony']	ui-unmatch
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>	main.xml:['permission']	app['permission']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	main.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	main.xml:['country']	app['country']	ui-unmatch
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	main.xml:['script']	app['script']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void prepare()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>	app:['call']	app['call']	ui-unmatch
<android.media.MediaPlayer: boolean isPlaying()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void pause()>	main.xml:['medium', 'player', 'pause']	app['medium', 'player', 'pause']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void <init>()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setAudioStreamType(int)>	main.xml:['medium', 'player', 'audio']	app['medium', 'player', 'audio']	ui-unmatch
<android.media.MediaPlayer: void setVolume(float,float)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	main.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>	change_bg.xml:['address']	app['address']	ui-unmatch
<java.net.Socket: void connect(java.net.SocketAddress,int)>	change_bg.xml:['connect']	app['connect']	ui-unmatch
--------------------------------
