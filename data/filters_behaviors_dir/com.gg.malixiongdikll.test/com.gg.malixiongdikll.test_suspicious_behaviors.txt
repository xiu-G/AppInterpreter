<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setLooping(boolean)>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.SoundPool: int play(int,float,float,int,int,float)>	app:['sound', 'play']	app['sound', 'play']	ui-unmatch
--------------------------------
<android.app.Activity: void onPause()>	game_view.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getParent()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: java.lang.String getName()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	activity_main.xml:['file', 'directory']	app['file', 'directory']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<java.io.File: java.lang.String getParent()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	activity_main.xml:['telephony']	app['telephony']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileNotFoundException: void printStackTrace()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	activity_main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	activity_main.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	activity_main.xml:['network']	app['network']	ui-unmatch
<java.lang.OutOfMemoryError: java.lang.String getMessage()>	activity_main.xml:['memory']	app['memory']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String toString()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.util.TimerTask: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getParent()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean isFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	activity_main.xml:['file', 'directory']	app['file', 'directory']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String toString()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.util.Timer: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.TimerTask: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.TimerTask: void <init>()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	activity_main.xml:['telephony']	app['telephony']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileNotFoundException: void printStackTrace()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	activity_main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	activity_main.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	activity_main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	activity_main.xml:['address']	app['address']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getAbsoluteFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: long length()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean equals(java.lang.Object)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<java.io.File: java.lang.String getParent()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	activity_main.xml:['telephony']	app['telephony']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileNotFoundException: void printStackTrace()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	activity_main.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>	activity_main.xml:['address']	app['address']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getExtraInfo()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	activity_main.xml:['network']	app['network']	ui-unmatch
<java.lang.OutOfMemoryError: java.lang.String getMessage()>	activity_main.xml:['memory']	app['memory']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<java.lang.IllegalAccessException: void printStackTrace()>	activity_main.xml:['access']	app['access']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String toString()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: int getType()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: java.lang.String getPath()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.StatFs: void <init>(java.lang.String)>	activity_main.xml:['stat']	app['stat']	ui-unmatch
<android.os.StatFs: int getBlockSize()>	activity_main.xml:['stat']	app['stat']	ui-unmatch
<android.os.StatFs: int getAvailableBlocks()>	activity_main.xml:['stat']	app['stat']	ui-unmatch
<java.util.Timer: void cancel()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void cancel()>	activity_main.xml:['timer']	app['timer']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	activity_main.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isAvailable()>	activity_main.xml:['network']	app['network']	ui-unmatch
<android.net.NetworkInfo: boolean isRoaming()>	activity_main.xml:['network']	app['network']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void stop()>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void release()>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<android.media.SoundPool: void <init>(int,int,int)>	game_view.xml:['sound']	app['sound']	ui-unmatch
<android.media.AudioManager: int getStreamVolume(int)>	game_view.xml:['audio', 'volume']	app['audio', 'volume']	ui-unmatch
<android.media.SoundPool: int load(android.content.Context,int,int)>	game_view.xml:['sound']	app['sound']	ui-unmatch
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setLooping(boolean)>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void pause()>	game_view.xml:['medium', 'player', 'pause']	app['medium', 'player', 'pause']	ui-unmatch
<android.media.MediaPlayer: void start()>	game_view.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getParent()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File[] listFiles()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean isFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: java.lang.String getName()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean isDirectory()>	activity_main.xml:['file', 'directory']	app['file', 'directory']	ui-unmatch
<java.io.File: boolean delete()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>	activity_main.xml:['telephony']	app['telephony']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	activity_main.xml:['storage']	app['storage']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	activity_main.xml:['storage', 'directory']	app['storage', 'directory']	ui-unmatch
<java.io.File: void <init>(java.io.File,java.lang.String)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.io.File getParentFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.File: boolean exists()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdirs()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	activity_main.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	activity_main.xml:['file']	app['file']	ui-unmatch
<java.io.FileNotFoundException: void printStackTrace()>	activity_main.xml:['file']	app['file']	ui-unmatch
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>	activity_main.xml:['alarm']	app['alarm']	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	activity_main.xml:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: void setTimeInMillis(long)>	activity_main.xml:['calendar']	app['calendar']	ui-unmatch
<java.util.Calendar: long getTimeInMillis()>	activity_main.xml:['calendar']	app['calendar']	ui-unmatch
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>	activity_main.xml:['alarm']	app['alarm']	ui-unmatch
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>	activity_main.xml:['alarm']	app['alarm']	ui-unmatch
--------------------------------
