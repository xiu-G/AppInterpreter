<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>	mainluckslot.xml:['file']	app['file']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	mainluckslot.xml:['clock']	app['clock']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	mainluckslot.xml:['language']	app['language']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	mainluckslot.xml:['country']	app['country']	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	mainluckslot.xml:['clock']	app['clock']	ui-unmatch
--------------------------------
<android.media.SoundPool: void <init>(int,int,int)>	mainfaceup.xml:['sound']	app[]	ui-unmatch
<android.media.SoundPool: int load(android.content.Context,int,int)>	mainfaceup.xml:['sound']	app[]	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainfaceup.xml:['location', 'location']	app[]	ui-unmatch
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>	mainfaceup.xml:['submit']	app['submit']	ui-unmatch
<android.location.Location: void <init>(android.location.Location)>	mainfaceup.xml:['location']	app[]	ui-unmatch
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>	mainfaceup.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: int read(byte[],int,int)>	mainfaceup.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: int available()>	mainfaceup.xml:['file']	app['file']	ui-unmatch
<java.io.FileInputStream: void close()>	mainfaceup.xml:['file']	app['file']	ui-unmatch
<android.content.Context: boolean deleteFile(java.lang.String)>	mainfaceup.xml:['file']	app['file']	ui-unmatch
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>	mainfaceup.xml:['url']	app['url']	ui-unmatch
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>	mainfaceup.xml:['installer']	app['installer']	ui-unmatch
--------------------------------
<android.media.AudioManager: int getStreamVolume(int)>	mainfaceup.xml:['audio', 'volume']	app['audio', 'volume']	ui-unmatch
<android.media.SoundPool: int play(int,float,float,int,int,float)>	mainfaceup.xml:['sound', 'play']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>	mainfaceup.xml:['location']	app[]	ui-unmatch
<android.os.SystemClock: long elapsedRealtime()>	mainfaceup.xml:['clock']	app['clock']	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<android.view.View: void getLocationOnScreen(int[])>	carrmain.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.widget.ImageView: void getLocationOnScreen(int[])>	mainreddog.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainbacc.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.media.AudioManager: int getStreamVolume(int)>	mainluckslot.xml:['audio', 'volume']	app['audio', 'volume']	ui-unmatch
<android.media.SoundPool: int play(int,float,float,int,int,float)>	mainluckslot.xml:['sound', 'play']	app[]	ui-unmatch
<android.media.SoundPool: void stop(int)>	mainluckslot.xml:['sound']	app[]	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	mainsportsparlay.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	mainsportsparlay.xml:['telephony']	app['telephony']	ui-unmatch
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>	mainsportsparlay.xml:['submit']	app['submit']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainsportsparlay.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainslotplus.xml:['location', 'location']	app[]	ui-unmatch
<android.media.SoundPool: void <init>(int,int,int)>	mainslotplus.xml:['sound']	app[]	ui-unmatch
<android.media.SoundPool: int load(android.content.Context,int,int)>	mainslotplus.xml:['sound']	app[]	ui-unmatch
--------------------------------
<android.media.AudioManager: int getStreamVolume(int)>	mainslotplus.xml:['audio', 'volume']	app['audio', 'volume']	ui-unmatch
<android.media.SoundPool: int play(int,float,float,int,int,float)>	mainslotplus.xml:['sound', 'play']	app[]	ui-unmatch
--------------------------------
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.util.Timer: void cancel()>	app:['timer']	app['timer']	ui-unmatch
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>	app:['call', 'permission']	app['call', 'permission']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: int getType()>	app:['network']	app['network']	ui-unmatch
<android.net.NetworkInfo: int getSubtype()>	app:['network']	app['network']	ui-unmatch
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	app:['script']	app['script']	ui-unmatch
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>	app:['medium']	app['medium']	ui-unmatch
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>	app:[]	app[]
<java.util.Timer: int purge()>	app:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void <init>()>	app:['timer']	app['timer']	ui-unmatch
<java.util.TimerTask: void <init>()>	app:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long)>	app:['timer']	app['timer']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	roulettemain.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	buylayout.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	buylayout.xml:['telephony']	app['telephony']	ui-unmatch
<java.util.Locale: java.lang.String getCountry()>	buylayout.xml:['country']	app['country']	ui-unmatch
<java.util.Locale: java.lang.String getLanguage()>	buylayout.xml:['language']	app['language']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	buylayout.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>	buylayout.xml:['telephony', 'network']	app['telephony', 'network']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>	buylayout.xml:['telephony', 'network', 'country']	app['telephony', 'network', 'country']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>	buylayout.xml:['telephony', 'network']	app['telephony', 'network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	buylayout.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: int getType()>	buylayout.xml:['network']	app['network']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainpair.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.media.AudioManager: int getStreamVolume(int)>	maincraps.xml:['audio', 'volume']	app['audio', 'volume']	ui-unmatch
<android.media.SoundPool: int play(int,float,float,int,int,float)>	maincraps.xml:['sound', 'play']	app[]	ui-unmatch
--------------------------------
<android.view.View: void getLocationOnScreen(int[])>	carrmain.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	roulettemain.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	carrmain.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	mainsportsplayer.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	mainsportsplayer.xml:['telephony']	app['telephony']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainreddog.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainsportsteaser.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	mainsportssingle.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	mainsportssingle.xml:['telephony']	app['telephony']	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainsportssingle.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>	app:['script']	app['script']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	mainsportsleader.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	mainsportsleader.xml:['telephony']	app['telephony']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainkeno.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.widget.ImageView: void getLocationOnScreen(int[])>	mainbacc.xml:['location']	app[]	ui-unmatch
<android.widget.ImageView: void getLocationOnScreen(int[])>	mainbacc.xml:['location']	app[]	ui-unmatch
<android.widget.ImageView: void getLocationOnScreen(int[])>	mainbacc.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	app:['url']	app['url']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	sporstbuy.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	sporstbuy.xml:['telephony']	app['telephony']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	maincraps.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	newpoker.xml:['location', 'location']	app[]	ui-unmatch
<android.media.SoundPool: void <init>(int,int,int)>	newpoker.xml:['sound']	app[]	ui-unmatch
<android.media.SoundPool: int load(android.content.Context,int,int)>	newpoker.xml:['sound']	app[]	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	newpoker.xml:['shadow']	app['shadow']	ui-unmatch
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	newpoker.xml:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainblackjack.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	maincount.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	mainsports.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>	mainsports.xml:['telephony']	app['telephony']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	maintexas.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<com.android.vending.billing.IInAppBillingService: android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String)>	sporstbuy.xml:['purchase']	app['purchase']	ui-unmatch
<com.android.vending.billing.IInAppBillingService: int consumePurchase(int,java.lang.String,java.lang.String)>	sporstbuy.xml:['purchase']	app['purchase']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	mainplus.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<com.android.vending.billing.IInAppBillingService: android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String)>	sporstbuy.xml:['purchase']	app['purchase']	ui-unmatch
<com.android.vending.billing.IInAppBillingService: int consumePurchase(int,java.lang.String,java.lang.String)>	sporstbuy.xml:['purchase']	app['purchase']	ui-unmatch
--------------------------------
<android.os.SystemClock: long elapsedRealtime()>	app:['clock']	app['clock']	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
--------------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	maincraps.xml:['location', 'location']	app[]	ui-unmatch
--------------------------------
<android.widget.TextView: void setShadowLayer(float,float,float,int)>	app:['shadow']	app['shadow']	ui-unmatch
--------------------------------
