----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.net.MalformedURLException: void printStackTrace()>    	['url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: long length()>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: int read()>    	['access', 'file']
<java.io.RandomAccessFile: void readFully(byte[])>    	['access', 'file']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void set(int,int)>    	['calendar']
<java.util.Calendar: java.util.Date getTime()>    	['calendar']
<java.io.RandomAccessFile: int skipBytes(int)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: void readFully(byte[])>    	['access', 'file']
<java.io.RandomAccessFile: int skipBytes(int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdirs()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: int read()>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.RandomAccessFile: int read(byte[])>    	['access', 'file']
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>    	['store']
<java.security.KeyStore: void load(java.io.InputStream,char[])>    	['store']
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>    	['store']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: long length()>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int skipBytes(int)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int skipBytes(int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: int getContentLength()>    	['http', 'url']
<java.net.HttpURLConnection: void disconnect()>    	['http', 'url', 'disconnect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: void write(byte[],int,int)>    	['access', 'file']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>    	['access', 'file']
<java.io.File: boolean delete()>    	['file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: long length()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.net.HttpURLConnection: void disconnect()>    	['http', 'url', 'disconnect']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<java.io.RandomAccessFile: void write(byte[],int,int)>    	['access', 'file']
<java.io.File: long length()>    	['file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<java.io.File: boolean renameTo(java.io.File)>    	['file']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.lang.String[] list()>    	['file']
<java.io.File: void <init>(java.io.File,java.lang.String)>    	['file']
<java.io.File: boolean delete()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: long length()>    	['file']
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.net.HttpURLConnection: void setConnectTimeout(int)>    	['http', 'url', 'connect']
<java.net.HttpURLConnection: void setReadTimeout(int)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: int getType()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
<java.io.File: long length()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: void disconnect()>    	['http', 'url', 'disconnect']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: int getType()>    	['network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: int getNetworkType()>    	['telephony', 'network']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.io.File: void <init>(java.lang.String,java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean createNewFile()>    	['file', 'file']
<java.io.FileOutputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: long length()>    	['file']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.lang.String getFile()>    	['url', 'file']
<java.net.URL: java.io.InputStream openStream()>    	['url']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[],int,int)>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
<android.content.ContextWrapper: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<android.os.Environment: java.lang.String getExternalStorageState()>    	['storage']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean mkdir()>    	['file']
<android.os.StatFs: void <init>(java.lang.String)>    	['stat']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String toString()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: boolean delete()>    	['file']
<android.os.StatFs: int getBlockSize()>    	['stat']
<android.os.StatFs: int getAvailableBlocks()>    	['stat']
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>    	['script']
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>    	['access', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: void seek(long)>    	['access', 'file']
<java.io.RandomAccessFile: long getFilePointer()>    	['access', 'file', 'file']
<java.io.RandomAccessFile: int read(byte[],int,int)>    	['access', 'file']
<java.io.RandomAccessFile: void close()>    	['access', 'file']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnected()>    	['network', 'connect']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>    	['http', 'url']
<java.net.HttpURLConnection: void setUseCaches(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoInput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: void setDoOutput(boolean)>    	['http', 'url']
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>    	['http', 'url']
<java.net.HttpURLConnection: int getResponseCode()>    	['http', 'url']
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>    	['http', 'url']
<java.io.FileNotFoundException: void printStackTrace()>    	['file']
<android.media.AudioTrack: void play()>    	['audio', 'play']
<android.media.AudioTrack: void pause()>    	['audio', 'pause']
<android.media.MediaRecorder: void stop()>    	['medium', 'recorder']
<android.media.MediaRecorder: void reset()>    	['medium', 'recorder']
<android.media.MediaRecorder: void release()>    	['medium', 'recorder']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.media.MediaPlayer: int getCurrentPosition()>    	['medium', 'player']
<android.media.MediaPlayer: int getDuration()>    	['medium', 'player']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
----------------------------
