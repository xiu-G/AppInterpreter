----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
----------------------------
----------------------------
<java.nio.channels.SocketChannel: boolean isConnected()>    	['connect']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>    	['sensor']
<android.media.AudioRecord: void stop()>    	['audio', 'record']
<android.media.AudioRecord: void release()>    	['audio', 'record']
<android.hardware.SensorManager: java.util.List getSensorList(int)>    	['sensor', 'sensor']
<android.hardware.SensorManager: java.util.List getSensorList(int)>    	['sensor', 'sensor']
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>    	['sensor']
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>    	['audio', 'record']
<android.media.AudioRecord: void <init>(int,int,int,int,int)>    	['audio', 'record']
<android.media.AudioRecord: void startRecording()>    	['audio', 'record', 'record']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<com.android.vending.licensing.LicenseChecker: void checkAccess(com.android.vending.licensing.LicenseCheckerCallback)>    	['access']
<com.android.vending.licensing.Policy: boolean allowAccess()>    	['access']
<com.android.vending.licensing.NullDeviceLimiter: void <init>()>    	['device']
<com.android.vending.licensing.Policy: void processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)>    	['server']
<com.android.vending.licensing.Policy: boolean allowAccess()>    	['access']
<com.android.vending.licensing.LicenseChecker: android.os.Handler access$2(com.android.vending.licensing.LicenseChecker)>    	['access']
<com.android.vending.licensing.Policy: void processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)>    	['server']
<com.android.vending.licensing.Policy: boolean allowAccess()>    	['access']
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>    	['file', 'file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
<java.io.File: java.lang.String getParent()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: java.lang.String getPath()>    	['file']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>    	['network', 'network']
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>    	['network', 'address']
<java.net.InetAddress: boolean isLoopbackAddress()>    	['address', 'address']
<java.net.InetAddress: java.lang.String getHostAddress()>    	['address', 'host', 'address']
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.InetAddress: java.lang.String getHostAddress()>    	['address', 'host', 'address']
----------------------------
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>    	['account', 'account']
<android.net.wifi.WifiInfo: int getNetworkId()>    	['network']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>    	['address']
<java.net.Socket: void connect(java.net.SocketAddress,int)>    	['connect']
<android.net.wifi.WifiInfo: int getNetworkId()>    	['network']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
<java.io.FileOutputStream: void write(byte[])>    	['file']
<java.io.FileOutputStream: void close()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
<android.net.Uri: android.net.Uri fromFile(java.io.File)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
----------------------------
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<java.net.InetAddress: java.lang.String getHostAddress()>    	['address', 'host', 'address']
<java.nio.channels.SocketChannel: boolean isConnected()>    	['connect']
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>    	['address']
<java.nio.channels.SocketChannel: boolean connect(java.net.SocketAddress)>    	['connect']
<java.nio.channels.SelectionKey: boolean isConnectable()>    	['connect']
<java.nio.channels.SocketChannel: boolean finishConnect()>    	['connect']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.net.wifi.WifiInfo: int getNetworkId()>    	['network']
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>    	['address']
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>    	['power']
<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>    	['power']
<android.os.PowerManager$WakeLock: void acquire()>    	['power']
----------------------------
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
----------------------------
<java.net.InetAddress: java.lang.String getHostAddress()>    	['address', 'host', 'address']
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>    	['account']
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>    	['account', 'account']
<android.addextras.SelectDeviceIndex: void <init>()>    	['device']
----------------------------
----------------------------
<android.os.PowerManager$WakeLock: void release()>    	['power']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>    	['address']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean canRead()>    	['file']
<java.io.File: boolean canWrite()>    	['file']
<android.content.Context: java.io.File getFilesDir()>    	['file']
<java.io.File: java.lang.String getAbsolutePath()>    	['file']
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>    	['file', 'file']
<java.io.File: java.lang.String getPath()>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
<java.io.File: java.lang.String getPath()>    	['file']
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: java.lang.String getName()>    	['file']
<java.io.File: boolean isDirectory()>    	['file', 'directory']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
<java.io.File: java.io.File[] listFiles()>    	['file', 'file']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<com.android.vending.licensing.ServerManagedPolicy: void <init>(android.content.Context,com.android.vending.licensing.Obfuscator)>    	['server']
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Application: void onLowMemory()>    	['memory']
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: boolean exists()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
<android.os.CountDownTimer: void <init>(long,long)>    	['timer']
<android.os.CountDownTimer: android.os.CountDownTimer start()>    	['timer']
<android.os.CountDownTimer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
<java.io.File: java.lang.String getName()>    	['file']
----------------------------
