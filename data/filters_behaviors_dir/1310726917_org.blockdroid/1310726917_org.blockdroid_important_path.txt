----------------------------
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>    	['location']
----------------------------
<android.location.Location: void distanceBetween(double,double,double,double,float[])>    	['location']
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: int getCurrentTab()>    	['host']
<java.util.Timer: void cancel()>    	['timer']
<java.util.Timer: void <init>()>    	['timer']
<java.util.TimerTask: void <init>()>    	['timer']
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>    	['timer', 'rate']
----------------------------
----------------------------
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
<android.widget.RadioButton: boolean isChecked()>    	['radio']
<android.widget.RadioButton: boolean isChecked()>    	['radio']
<java.util.Calendar: java.util.Calendar getInstance()>    	['calendar']
<java.util.Calendar: void add(int,int)>    	['calendar']
<java.util.Calendar: long getTimeInMillis()>    	['calendar']
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>    	['alarm']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
<java.util.Timer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>    	['permission']
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>    	['telephony', 'device']
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>    	['telephony', 'network']
<java.util.Locale: java.lang.String getLanguage()>    	['language']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>    	['url']
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
<android.widget.TabHost: void setCurrentTab(int)>    	['host']
<android.widget.RadioButton: void setChecked(boolean)>    	['radio']
----------------------------
----------------------------
<android.location.Location: void <init>(java.lang.String)>    	['location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>    	['location']
<android.location.Address: double getLatitude()>    	['address', 'latitude']
<android.location.Address: double getLongitude()>    	['address', 'longitude']
<android.location.Location: void setLatitude(double)>    	['location', 'latitude']
<android.location.Location: void setLongitude(double)>    	['location', 'longitude']
<android.location.Criteria: void setPowerRequirement(int)>    	['power']
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>    	['location']
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>    	['location', 'location']
<android.location.LocationManager: java.util.List getProviders(boolean)>    	['location']
<android.location.LocationManager: java.util.List getProviders(boolean)>    	['location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>    	['location', 'location']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>    	['host']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(android.view.View)>    	['host', 'indicator']
<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setContent(android.content.Intent)>    	['host']
<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>    	['host']
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void connect()>    	['url', 'connect']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.util.Timer: void cancel()>    	['timer']
<java.util.Timer: void <init>()>    	['timer']
<java.util.TimerTask: void <init>()>    	['timer']
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>    	['timer', 'rate']
----------------------------
----------------------------
<android.addextras.android.intent.action.CALL: void <init>()>    	['call']
----------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>    	['connectivity', 'network']
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>    	['network', 'connect', 'connect']
----------------------------
<android.app.Activity: void onPause()>    	['pause']
<java.util.Timer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>    	['host']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.os.SystemClock: long elapsedRealtime()>    	['clock']
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>    	['alarm']
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>    	['alarm']
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
----------------------------
<android.webkit.WebView: void loadUrl(java.lang.String)>    	['url']
----------------------------
----------------------------
----------------------------
<java.util.Timer: void cancel()>    	['timer']
<java.util.Timer: void <init>()>    	['timer']
<java.util.TimerTask: void <init>()>    	['timer']
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>    	['timer', 'rate']
<android.app.TabActivity: android.widget.TabHost getTabHost()>    	['host']
<android.widget.TabHost: int getCurrentTab()>    	['host']
<android.app.TabActivity: android.widget.TabHost getTabHost()>    	['host']
<android.widget.TabHost: int getCurrentTab()>    	['host']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.app.Activity: void onPause()>    	['pause']
<java.util.Timer: void cancel()>    	['timer']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>    	['access']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
<java.net.URL: void <init>(java.lang.String)>    	['url']
<java.net.URL: java.net.URLConnection openConnection()>    	['url']
<java.net.URLConnection: void connect()>    	['url', 'connect']
<java.net.URLConnection: java.io.InputStream getInputStream()>    	['url']
<java.util.Timer: void <init>()>    	['timer']
<java.util.TimerTask: void <init>()>    	['timer']
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,long,long)>    	['timer', 'rate']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<javax.mail.PasswordAuthentication: void <init>(java.lang.String,java.lang.String)>    	['password']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>    	['location', 'location']
<android.location.Location: double getLatitude()>    	['location', 'latitude']
<android.location.Location: double getLongitude()>    	['location', 'longitude']
<android.location.Location: void setLatitude(double)>    	['location', 'latitude']
<android.location.Location: void setLongitude(double)>    	['location', 'longitude']
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
----------------------------
<java.io.File: void <init>(java.lang.String)>    	['file']
<java.io.File: long length()>    	['file']
<java.io.FileInputStream: void <init>(java.io.File)>    	['file']
<java.io.FileOutputStream: void <init>(java.lang.String)>    	['file']
----------------------------
----------------------------
