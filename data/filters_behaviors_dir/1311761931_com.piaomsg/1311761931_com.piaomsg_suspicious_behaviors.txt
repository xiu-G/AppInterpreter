<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>	reply.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	reply.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	reply.xml:['storage', 'directory']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	reply.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	reply.xml:['storage', 'directory']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	reply.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	reply.xml:['file']	app['file']	ui-unmatch
<android.addextras.longitudeE6: void <init>()>	reply.xml:['longitude']	app['longitude']	ui-unmatch
<android.addextras.latitudeE6: void <init>()>	reply.xml:['latitude']	app['latitude']	ui-unmatch
--------------------------------
<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>	app:['submit']	app['submit']	ui-unmatch
--------------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>	circle_detail_info.xml:['storage', 'directory']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean mkdir()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	main_map_layout.xml:['location']	app[]	ui-unmatch
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	main_map_layout.xml:['location', 'location']	app[]	ui-unmatch
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	main_map_layout.xml:['location']	app[]	ui-unmatch
<android.location.Location: double getLongitude()>	main_map_layout.xml:['location', 'longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	main_map_layout.xml:['location', 'latitude']	app['latitude']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.widget.RadioButton: void setChecked(boolean)>	app:['radio']	app['radio']	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: void setTimeInMillis(long)>	app:[]	app[]
<java.util.Calendar: int get(int)>	app:[]	app[]
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	app:[]	app[]
--------------------------------
<android.widget.RadioButton: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>	ui_topframe.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setTextColor(int)>	ui_topframe.xml:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>	ui_topframe.xml:['radio']	app['radio']	ui-unmatch
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>	app:['host']	app['host']	ui-unmatch
<android.widget.RadioButton: void setBackgroundResource(int)>	app:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setTextColor(int)>	app:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>	app:['radio']	app['radio']	ui-unmatch
<android.widget.RadioButton: int getLeft()>	app:['radio']	app['radio']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: int getResponseCode()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void disconnect()>	app:['http', 'url', 'disconnect']	app['http', 'url', 'disconnect']	ui-unmatch
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
<java.util.Calendar: java.util.Calendar getInstance()>	app:[]	app[]
<java.util.Calendar: long getTimeInMillis()>	app:[]	app[]
--------------------------------
<android.app.Activity: void onPause()>	im_layout.xml:['pause']	app['pause']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	publish_piao.xml:['storage', 'directory']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.io.File getExternalStorageDirectory()>	publish_piao.xml:['storage', 'directory']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.addextras.longitudeE6: void <init>()>	publish_piao.xml:['longitude']	app['longitude']	ui-unmatch
<android.addextras.imageFilePath: void <init>()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.addextras.latitudeE6: void <init>()>	publish_piao.xml:['latitude']	app['latitude']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>	app:['address']	app['address']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setConnectTimeout(int)>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: void setReadTimeout(int)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.lang.String getContentEncoding()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: int getContentLength()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
--------------------------------
<java.util.Locale: java.lang.String getLanguage()>	ui_topframe.xml:['language']	app['language']	ui-unmatch
--------------------------------
<java.lang.IllegalAccessException: java.lang.String getMessage()>	app:['access']	app['access']	ui-unmatch
--------------------------------
<android.os.Environment: java.io.File getExternalStorageDirectory()>	app:[]	app[]
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	app:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	app:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	app:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.addextras.longitudeE6: void <init>()>	personal_setting.xml:['longitude']	app['longitude']	ui-unmatch
<android.addextras.latitudeE6: void <init>()>	personal_setting.xml:['latitude']	app['latitude']	ui-unmatch
--------------------------------
<java.util.Calendar: java.util.Calendar getInstance()>	user_detail_info.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: void setTimeInMillis(long)>	user_detail_info.xml:['calendar']	app[]	ui-unmatch
<java.util.Calendar: int get(int)>	user_detail_info.xml:['calendar']	app[]	ui-unmatch
--------------------------------
<android.addextras.password: void <init>()>	login.xml:['password']	app['password']	ui-unmatch
<android.addextras.email: void <init>()>	login.xml:['email']	app['email']	ui-unmatch
--------------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.InetSocketAddress: void <init>(java.lang.String,int)>	bind_wingletter.xml:['address']	app['address']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setConnectTimeout(int)>	bind_wingletter.xml:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: void setReadTimeout(int)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>	bind_wingletter.xml:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: int getResponseCode()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.lang.String getContentEncoding()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: int getResponseCode()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.util.Map getHeaderFields()>	bind_wingletter.xml:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void disconnect()>	bind_wingletter.xml:['http', 'url', 'disconnect']	app['http', 'url', 'disconnect']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnected()>	app:['network', 'connect']	app['network', 'connect']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	app:['network']	app['network']	ui-unmatch
--------------------------------
<android.widget.ZoomButton: void setZoomSpeed(long)>	app:['speed']	app['speed']	ui-unmatch
--------------------------------
<android.addextras.password: void <init>()>	bind_wingletter.xml:['password']	app['password']	ui-unmatch
<android.addextras.account: void <init>()>	bind_wingletter.xml:['account']	app[]	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	app:['network']	app['network']	ui-unmatch
--------------------------------
<android.graphics.Canvas: void restore()>	app:['restore']	app['restore']	ui-unmatch
--------------------------------
<android.location.Location: double getLongitude()>	app:['longitude']	app['longitude']	ui-unmatch
<android.location.Location: double getLatitude()>	app:['latitude']	app['latitude']	ui-unmatch
--------------------------------
<java.util.Locale: java.lang.String getLanguage()>	login.xml:['language']	app['language']	ui-unmatch
--------------------------------
<java.net.URL: void <init>(java.lang.String)>	app:['url']	app['url']	ui-unmatch
<java.net.URL: java.net.URLConnection openConnection()>	app:['url']	app['url']	ui-unmatch
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoOutput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void setDoInput(boolean)>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: void connect()>	app:['http', 'url', 'connect']	app['http', 'url', 'connect']	ui-unmatch
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
<java.net.HttpURLConnection: java.io.InputStream getInputStream()>	app:['http', 'url']	app['http', 'url']	ui-unmatch
--------------------------------
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	publish_piao.xml:['file']	app['file']	ui-unmatch
<android.addextras.longitudeE6: void <init>()>	publish_piao.xml:['longitude']	app['longitude']	ui-unmatch
<android.addextras.latitudeE6: void <init>()>	publish_piao.xml:['latitude']	app['latitude']	ui-unmatch
--------------------------------
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
--------------------------------
<android.location.Criteria: void setPowerRequirement(int)>	app:['power']	app['power']	ui-unmatch
<android.location.Criteria: void setSpeedRequired(boolean)>	app:['speed']	app['speed']	ui-unmatch
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	app:[]	app[]
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>	app:[]	app[]
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getPath()>	app:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String[] list()>	app:['file']	app['file']	ui-unmatch
<java.util.TimerTask: void <init>()>	app:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void <init>()>	app:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>	app:['timer']	app['timer']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	app:['file']	app['file']	ui-unmatch
<java.util.Timer: void cancel()>	app:['timer']	app['timer']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: void release()>	app:['medium', 'player']	app['medium', 'player']	ui-unmatch
--------------------------------
<java.io.File: java.lang.String getName()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getName()>	publish_piao.xml:['file']	app['file']	ui-unmatch
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>	publish_piao.xml:['url']	app['url']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>	reg.xml:['telephony', 'device']	app['telephony', 'device']	ui-unmatch
--------------------------------
<android.addextras.Url: void <init>()>	piaotu_preview.xml:['url']	app['url']	ui-unmatch
--------------------------------
<java.util.Timer: void cancel()>	app:['timer']	app['timer']	ui-unmatch
--------------------------------
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>	ui_topframe.xml:['location']	app[]	ui-unmatch
--------------------------------
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	app:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: boolean isConnected()>	app:['network', 'connect']	app['network', 'connect']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	app:['network']	app['network']	ui-unmatch
--------------------------------
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: java.lang.String getTypeName()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<android.addextras.telephony_carriers_preferapn: void <init>()>	circle_detail_info.xml:['telephony']	app['telephony']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>	circle_detail_info.xml:['connectivity', 'network']	app['connectivity', 'network']	ui-unmatch
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>	circle_detail_info.xml:['network']	app['network']	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: java.lang.String getAbsolutePath()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean setLastModified(long)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<android.os.Environment: java.lang.String getExternalStorageState()>	circle_detail_info.xml:['storage']	app[]	ui-unmatch
<java.io.File: boolean mkdirs()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.File: boolean createNewFile()>	circle_detail_info.xml:['file', 'file']	app['file', 'file']	ui-unmatch
<java.io.FileOutputStream: void <init>(java.io.File)>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void flush()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
<java.io.FileOutputStream: void close()>	circle_detail_info.xml:['file']	app['file']	ui-unmatch
--------------------------------
<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>	app:['shortcut']	app['shortcut']	ui-unmatch
--------------------------------
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>	app:['telephony']	app['telephony']	ui-unmatch
<android.telephony.gsm.GsmCellLocation: int getCid()>	app:[]	app[]
<android.telephony.gsm.GsmCellLocation: int getLac()>	app:[]	app[]
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>	app:['telephony', 'network']	app['telephony', 'network']	ui-unmatch
--------------------------------
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>	news_layout.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void start()>	news_layout.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>	news_layout.xml:['medium', 'player']	app['medium', 'player']	ui-unmatch
<android.widget.TabHost: java.lang.String getCurrentTabTag()>	news_layout.xml:['host']	app['host']	ui-unmatch
--------------------------------
<java.util.Timer: void cancel()>	login.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: int purge()>	login.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void <init>()>	login.xml:['timer']	app['timer']	ui-unmatch
<java.util.TimerTask: void <init>()>	login.xml:['timer']	app['timer']	ui-unmatch
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>	app:['timer']	app['timer']	ui-unmatch
<java.io.File: void <init>(java.lang.String)>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean exists()>	app:['file']	app['file']	ui-unmatch
<java.io.File: long lastModified()>	app:['file']	app['file']	ui-unmatch
<java.io.File: boolean delete()>	app:['file']	app['file']	ui-unmatch
<java.util.Timer: void cancel()>	app:['timer']	app['timer']	ui-unmatch
--------------------------------
